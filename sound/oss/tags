!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ABANDON	hex2hex.c	11;"	d	file:
AC97_AD1886_JACK_SENSE	ac97_codec.c	1151;"	d	file:
AC97_DBL_RATE	trident.h	/^	AC97_DBL_RATE = 0x00000010, SPDIF_EN  = 0x00000020,$/;"	e	enum:serial_intf_ctrl_bits
AC97_EXT_DACS	au1550_ac97.c	67;"	d	file:
AC97_REC_AUX	ac97_codec.c	/^	AC97_REC_AUX,$/;"	e	enum:ac97_recsettings	file:
AC97_REC_CD	ac97_codec.c	/^	AC97_REC_CD,$/;"	e	enum:ac97_recsettings	file:
AC97_REC_LINE	ac97_codec.c	/^	AC97_REC_LINE,$/;"	e	enum:ac97_recsettings	file:
AC97_REC_MIC	ac97_codec.c	/^	AC97_REC_MIC=0,$/;"	e	enum:ac97_recsettings	file:
AC97_REC_MONO	ac97_codec.c	/^	AC97_REC_MONO,	      \/*.. or the mono equivalent *\/$/;"	e	enum:ac97_recsettings	file:
AC97_REC_PHONE	ac97_codec.c	/^	AC97_REC_PHONE$/;"	e	enum:ac97_recsettings	file:
AC97_REC_STEREO	ac97_codec.c	/^	AC97_REC_STEREO, \/* combination of all enabled outputs..  *\/$/;"	e	enum:ac97_recsettings	file:
AC97_REC_VIDEO	ac97_codec.c	/^	AC97_REC_VIDEO,$/;"	e	enum:ac97_recsettings	file:
AC97_REG_ADDR	trident.h	220;"	d
AC97_SIGMATEL_ANALOG	ac97_codec.c	966;"	d	file:
AC97_SIGMATEL_BIAS1	ac97_codec.c	968;"	d	file:
AC97_SIGMATEL_BIAS2	ac97_codec.c	969;"	d	file:
AC97_SIGMATEL_CIC1	ac97_codec.c	971;"	d	file:
AC97_SIGMATEL_CIC2	ac97_codec.c	972;"	d	file:
AC97_SIGMATEL_DAC2INVERT	ac97_codec.c	967;"	d	file:
AC97_SIGMATEL_MULTICHN	ac97_codec.c	970;"	d	file:
AC97_WM9704_RPCM_VOL	ac97_codec.c	1061;"	d	file:
AC97_WM9711_OUT3VOL	ac97_codec.c	1062;"	d	file:
AC97_WM97XX_FMIXER_VOL	ac97_codec.c	1058;"	d	file:
AC97_WM97XX_RMIXER_VOL	ac97_codec.c	1059;"	d	file:
AC97_WM97XX_TEST	ac97_codec.c	1060;"	d	file:
ACGPIO_IRQ	trident.h	/^	ST_IRQ_EN       = 0x00800000, ACGPIO_IRQ      = 0x01000000$/;"	e	enum:miscint_bits
AD1848_MIXER_REROUTE	ad1848.h	8;"	d
AD1848_REROUTE	ad1848.h	10;"	d
AD1848_SET_XTAL	ad1848.h	7;"	d
ADC_MUX_AUX1	waveartist.h	76;"	d
ADC_MUX_AUX2	waveartist.h	75;"	d
ADC_MUX_LINE	waveartist.h	74;"	d
ADC_MUX_MIC	waveartist.h	77;"	d
ADC_MUX_MIXER	waveartist.h	73;"	d
ADC_MUX_NONE	waveartist.h	72;"	d
ADC_RUNNING	i810_audio.c	125;"	d	file:
ADC_RUNNING	trident.h	71;"	d
ADDRESS_IRQ	trident.h	/^	OPL3_IRQ        = 0x00000010, ADDRESS_IRQ     = 0x00000020,$/;"	e	enum:miscint_bits
AD_F_CS4231	ad1848.h	4;"	d
AD_F_CS4248	ad1848.h	5;"	d
AEDSP16_DEBUG	aedsp16.c	259;"	d	file:
AEDSP16_DEBUG_MORE	aedsp16.c	260;"	d	file:
AEDSP16_INFO	aedsp16.c	261;"	d	file:
AGND	msnd_classic.h	75;"	d
AGND	msnd_pinnacle.h	108;"	d
AIC_DEBUG_LEVEL	jz_i2s_dbg.h	20;"	d
AIC_DEBUG_LEVEL0	jz_i2s_dbg.h	32;"	d
AIC_DEBUG_LEVEL1	jz_i2s_dbg.h	28;"	d
AIC_DEBUG_LEVEL2	jz_i2s_dbg.h	24;"	d
ALIGN_PAGE_SIZE	jz_i2s.c	59;"	d	file:
ALI_5451	trident.c	/^	ALI_5451,$/;"	e	enum:__anon12	file:
ALI_5451_V02	trident.h	/^	ALI_5451_V02	= 0x02$/;"	e	enum:ali_revision
ALI_AC97_AUDIO_BUSY	trident.h	/^	ALI_AC97_AUDIO_BUSY = 0x4000, ALI_AC97_SECONDARY  = 0x0080,$/;"	e	enum:ali_ac97_bits
ALI_AC97_BUSY_READ	trident.h	/^	ALI_AC97_BUSY_WRITE = 0x8000, ALI_AC97_BUSY_READ = 0x8000,$/;"	e	enum:ali_ac97_bits
ALI_AC97_BUSY_WRITE	trident.h	/^	ALI_AC97_BUSY_WRITE = 0x8000, ALI_AC97_BUSY_READ = 0x8000,$/;"	e	enum:ali_ac97_bits
ALI_AC97_READ	trident.h	/^	ALI_AC97_WRITE       = 0x40, ALI_AC97_READ = 0x44$/;"	e	enum:ali_ac97_registers
ALI_AC97_READ_ACTION	trident.h	/^	ALI_AC97_WRITE_ACTION = 0x8000, ALI_AC97_READ_ACTION = 0x8000,$/;"	e	enum:ali_ac97_bits
ALI_AC97_READ_MIXER_REGISTER	trident.h	/^	ALI_AC97_READ_MIXER_REGISTER = 0xfeff,$/;"	e	enum:ali_ac97_bits
ALI_AC97_SECONDARY	trident.h	/^	ALI_AC97_AUDIO_BUSY = 0x4000, ALI_AC97_SECONDARY  = 0x0080,$/;"	e	enum:ali_ac97_bits
ALI_AC97_WRITE	trident.h	/^	ALI_AC97_WRITE       = 0x40, ALI_AC97_READ = 0x44$/;"	e	enum:ali_ac97_registers
ALI_AC97_WRITE_ACTION	trident.h	/^	ALI_AC97_WRITE_ACTION = 0x8000, ALI_AC97_READ_ACTION = 0x8000,$/;"	e	enum:ali_ac97_bits
ALI_AC97_WRITE_MIXER_REGISTER	trident.h	/^	ALI_AC97_WRITE_MIXER_REGISTER = 0x0100$/;"	e	enum:ali_ac97_bits
ALI_ADDRESS_INT_UPDATE	trident.h	/^	ALI_ADDRESS_INT_UPDATE	= 0x01$/;"	e	enum:ali_update_ptr_flags
ALI_CENTER_CHANNEL	trident.h	/^	ALI_CENTER_CHANNEL	= 24,$/;"	e	enum:ali_pcm_in_channel_num
ALI_CHANNELS	trident.h	/^	ALI_CHANNELS		= 32,$/;"	e	enum:ali_control_all
ALI_CHANNEL_REGS	trident.h	/^	ALI_CHANNEL_REGS	= 8,$/;"	e	enum:ali_registers_number
ALI_DISABLE_ALL_IRQ	trident.h	/^	ALI_DISABLE_ALL_IRQ	= 0,$/;"	e	enum:ali_control_all
ALI_DMA_MASK	trident.c	241;"	d	file:
ALI_EAPD_POWER_DOWN	trident.h	/^	ALI_EAPD_POWER_DOWN	= 0x8000$/;"	e	enum:ali_ac97_power_control_bit
ALI_EBUF1	trident.h	/^	ALI_EBUF1 = 0xf4,$/;"	e	enum:trident_op_registers
ALI_EBUF2	trident.h	/^	ALI_EBUF2 = 0xf8$/;"	e	enum:trident_op_registers
ALI_EMOD_DEC	trident.h	/^	ALI_EMOD_DEC	= 0x00000000,$/;"	e	enum:ali_EMOD_control_bit
ALI_EMOD_Delay	trident.h	/^	ALI_EMOD_Delay	= 0x20000000,$/;"	e	enum:ali_EMOD_control_bit
ALI_EMOD_INC	trident.h	/^	ALI_EMOD_INC	= 0x10000000,$/;"	e	enum:ali_EMOD_control_bit
ALI_EMOD_Still	trident.h	/^	ALI_EMOD_Still	= 0x30000000$/;"	e	enum:ali_EMOD_control_bit
ALI_GLOBAL_CONTROL	trident.h	/^	ALI_GLOBAL_CONTROL	= 0xd4,$/;"	e	enum:ali_op_registers
ALI_GLOBAL_REGS	trident.h	/^	ALI_GLOBAL_REGS		= 56,$/;"	e	enum:ali_registers_number
ALI_GPIO	trident.h	/^	ALI_MPUR2	= 0x22,	ALI_GPIO	= 0x7c,$/;"	e	enum:trident_op_registers
ALI_LEF_CHANNEL	trident.h	/^	ALI_LEF_CHANNEL		= 23,$/;"	e	enum:ali_pcm_in_channel_num
ALI_MIXER_REGS	trident.h	/^	ALI_MIXER_REGS		= 20$/;"	e	enum:ali_registers_number
ALI_MPUR2	trident.h	/^	ALI_MPUR2	= 0x22,	ALI_GPIO	= 0x7c,$/;"	e	enum:trident_op_registers
ALI_MULTI_CHANNELS_START_STOP	trident.h	/^	ALI_MULTI_CHANNELS_START_STOP	= 0x07800000$/;"	e	enum:ali_control_all
ALI_NORMAL_CHANNEL	trident.h	/^	ALI_NORMAL_CHANNEL	= 0,$/;"	e	enum:ali_pcm_in_channel_num
ALI_PCM_IN_CHANNEL	trident.h	/^	ALI_PCM_IN_CHANNEL	= 31$/;"	e	enum:ali_pcm_in_channel_num
ALI_PCM_IN_DISABLE	trident.h	/^	ALI_PCM_IN_DISABLE	= 0x7fffffff,$/;"	e	enum:ali_global_control_bit
ALI_PCM_IN_ENABLE	trident.h	/^	ALI_PCM_IN_ENABLE	= 0x80000000,$/;"	e	enum:ali_global_control_bit
ALI_PCM_OUT_CHANNEL_FIRST	trident.h	/^	ALI_PCM_OUT_CHANNEL_FIRST = 0,$/;"	e	enum:ali_pcm_out_channel_num
ALI_PCM_OUT_CHANNEL_LAST	trident.h	/^	ALI_PCM_OUT_CHANNEL_LAST = 31$/;"	e	enum:ali_pcm_out_channel_num
ALI_PCM_TO_SPDIF_OUT	trident.h	/^	ALI_PCM_TO_SPDIF_OUT		= 0,$/;"	e	enum:ali_spdif_out_control
ALI_SCTRL	trident.h	/^	ALI_SCTRL		= 0x48,$/;"	e	enum:ali_op_registers
ALI_SPDIF_CS	trident.h	/^	ALI_SPDIF_CS		= 0x70,$/;"	e	enum:ali_op_registers
ALI_SPDIF_CTRL	trident.h	/^	ALI_SPDIF_CTRL		= 0x74$/;"	e	enum:ali_op_registers
ALI_SPDIF_IN_CHANNEL	trident.h	/^	ALI_SPDIF_IN_CHANNEL    = 19,$/;"	e	enum:ali_pcm_in_channel_num
ALI_SPDIF_IN_CH_DISABLE	trident.h	/^	ALI_SPDIF_IN_CH_DISABLE	= 0xfff7ffff,$/;"	e	enum:ali_global_control_bit
ALI_SPDIF_IN_CH_ENABLE	trident.h	/^	ALI_SPDIF_IN_CH_ENABLE	= 0x00080000,$/;"	e	enum:ali_global_control_bit
ALI_SPDIF_IN_CH_STATUS	trident.h	/^	ALI_SPDIF_IN_CH_STATUS		= 0x40,$/;"	e	enum:ali_spdif_control_bit
ALI_SPDIF_IN_FUNC_ENABLE	trident.h	/^	ALI_SPDIF_IN_FUNC_ENABLE	= 0x02,$/;"	e	enum:ali_spdif_control_bit
ALI_SPDIF_IN_SUPPORT	trident.h	/^	ALI_SPDIF_IN_SUPPORT	= 0x00000800,$/;"	e	enum:ali_global_control_bit
ALI_SPDIF_OUT_CHANNEL	trident.h	/^	ALI_SPDIF_OUT_CHANNEL	= 15,$/;"	e	enum:ali_pcm_in_channel_num
ALI_SPDIF_OUT_CH_DISABLE	trident.h	/^	ALI_SPDIF_OUT_CH_DISABLE = 0xffff7fff,$/;"	e	enum:ali_global_control_bit
ALI_SPDIF_OUT_CH_ENABLE	trident.h	/^	ALI_SPDIF_OUT_CH_ENABLE	= 0x00008000,$/;"	e	enum:ali_global_control_bit
ALI_SPDIF_OUT_CH_STATUS	trident.h	/^	ALI_SPDIF_OUT_CH_STATUS		= 0xbf$/;"	e	enum:ali_spdif_control_bit
ALI_SPDIF_OUT_ENABLE	trident.h	/^	ALI_SPDIF_OUT_ENABLE	= 0x20$/;"	e	enum:ali_sctrl_control_bit
ALI_SPDIF_OUT_NON_PCM	trident.h	/^	ALI_SPDIF_OUT_NON_PCM		= 2$/;"	e	enum:ali_spdif_out_control
ALI_SPDIF_OUT_PCM	trident.h	/^	ALI_SPDIF_OUT_PCM		= 0,$/;"	e	enum:ali_spdif_out_control
ALI_SPDIF_OUT_SEL_PCM	trident.h	/^	ALI_SPDIF_OUT_SEL_PCM	= 0x00000400,$/;"	e	enum:ali_global_control_bit
ALI_SPDIF_OUT_SEL_SPDIF	trident.h	/^	ALI_SPDIF_OUT_SEL_SPDIF	= 0xfffffbff$/;"	e	enum:ali_global_control_bit
ALI_SPDIF_OUT_TO_SPDIF_OUT	trident.h	/^	ALI_SPDIF_OUT_TO_SPDIF_OUT	= 1,$/;"	e	enum:ali_spdif_out_control
ALI_STIMER	trident.h	/^	ALI_STIMER		= 0xc8,$/;"	e	enum:ali_op_registers
ALI_STOP_ALL_CHANNELS	trident.h	/^	ALI_STOP_ALL_CHANNELS	= 0xffffffff,$/;"	e	enum:ali_control_all
ALI_SURR_LEFT_CHANNEL	trident.h	/^	ALI_SURR_LEFT_CHANNEL	= 26,$/;"	e	enum:ali_pcm_in_channel_num
ALI_SURR_RIGHT_CHANNEL	trident.h	/^	ALI_SURR_RIGHT_CHANNEL	= 25,$/;"	e	enum:ali_pcm_in_channel_num
ALLOW_BUFFER_MAPPING	os.h	43;"	d
ALLOW_SELECT	os.h	1;"	d
ALS007_CD	sb_mixer.h	104;"	d
ALS007_LINE	sb_mixer.h	103;"	d
ALS007_MIC	sb_mixer.h	102;"	d
ALS007_MIXER_DEVICES	sb_mixer.c	59;"	d	file:
ALS007_OUTPUT_CTRL1	sb_mixer.h	84;"	d
ALS007_OUTPUT_CTRL2	sb_mixer.h	85;"	d
ALS007_RECORD_SRC	sb_mixer.h	83;"	d
ALS007_SYNTH	sb_mixer.h	105;"	d
AMD768	i810_audio.c	/^	AMD768,$/;"	e	enum:__anon9	file:
AMD8111	i810_audio.c	/^	AMD8111$/;"	e	enum:__anon9	file:
AMI_AUDIO_14	dmasound/dmasound_paula.c	59;"	d	file:
AMI_AUDIO_8	dmasound/dmasound_paula.c	58;"	d	file:
AMI_AUDIO_OFF	dmasound/dmasound_paula.c	57;"	d	file:
AMI_CT_ALAW	dmasound/dmasound_paula.c	230;"	d	file:
AMI_CT_S16BE	dmasound/dmasound_paula.c	289;"	d	file:
AMI_CT_S16LE	dmasound/dmasound_paula.c	291;"	d	file:
AMI_CT_U16BE	dmasound/dmasound_paula.c	290;"	d	file:
AMI_CT_U16LE	dmasound/dmasound_paula.c	292;"	d	file:
AMI_CT_U8	dmasound/dmasound_paula.c	231;"	d	file:
AMI_CT_ULAW	dmasound/dmasound_paula.c	229;"	d	file:
AMI_PLAY_LOADED	dmasound/dmasound_paula.c	459;"	d	file:
AMI_PLAY_MASK	dmasound/dmasound_paula.c	461;"	d	file:
AMI_PLAY_PLAYING	dmasound/dmasound_paula.c	460;"	d	file:
AM_NONE	dev_table.h	230;"	d
AM_READ	dev_table.h	232;"	d
AM_VIB	opl3_hw.h	87;"	d
AM_WRITE	dev_table.h	231;"	d
ASSERT	vwsnd.c	197;"	d	file:
ASSERT	vwsnd.c	212;"	d	file:
ATTACK_DECAY	opl3_hw.h	104;"	d
ATTACK_MASK	opl3_hw.h	105;"	d
AUDIOBUF_STATE_FREE	jz_i2s.c	49;"	d	file:
AUDIO_DRIVER_VERSION	dev_table.h	372;"	d
AUDIO_HEADPHONE	ad1848_mixer.h	251;"	d
AUDIO_LINE_OUT	ad1848_mixer.h	252;"	d
AUDIO_LOCK	jz_i2s.c	55;"	d	file:
AUDIO_SPEAKER	ad1848_mixer.h	250;"	d
AUDIO_UNLOCK	jz_i2s.c	56;"	d	file:
AWE_3DSE	sb_mixer.h	78;"	d
AmiAlloc	dmasound/dmasound_paula.c	/^static void *AmiAlloc(unsigned int size, gfp_t flags)$/;"	f	file:
AmiFree	dmasound/dmasound_paula.c	/^static void AmiFree(void *obj, unsigned int size)$/;"	f	file:
AmiInit	dmasound/dmasound_paula.c	/^static void AmiInit(void)$/;"	f	file:
AmiInterrupt	dmasound/dmasound_paula.c	/^static irqreturn_t AmiInterrupt(int irq, void *dummy)$/;"	f	file:
AmiIrqCleanUp	dmasound/dmasound_paula.c	/^static void AmiIrqCleanUp(void)$/;"	f	file:
AmiIrqInit	dmasound/dmasound_paula.c	/^static int __init AmiIrqInit(void)$/;"	f	file:
AmiMixerInit	dmasound/dmasound_paula.c	/^static void __init AmiMixerInit(void)$/;"	f	file:
AmiMixerIoctl	dmasound/dmasound_paula.c	/^static int AmiMixerIoctl(u_int cmd, u_long arg)$/;"	f	file:
AmiPlay	dmasound/dmasound_paula.c	/^static void AmiPlay(void)$/;"	f	file:
AmiPlayNextFrame	dmasound/dmasound_paula.c	/^static void AmiPlayNextFrame(int index)$/;"	f	file:
AmiSetFormat	dmasound/dmasound_paula.c	/^static int AmiSetFormat(int format)$/;"	f	file:
AmiSetTreble	dmasound/dmasound_paula.c	/^static int AmiSetTreble(int treble)$/;"	f	file:
AmiSetVolume	dmasound/dmasound_paula.c	/^static int AmiSetVolume(int volume)$/;"	f	file:
AmiSilence	dmasound/dmasound_paula.c	/^static void AmiSilence(void)$/;"	f	file:
AmiStateInfo	dmasound/dmasound_paula.c	/^static int AmiStateInfo(char *buffer, size_t space)$/;"	f	file:
AmiWriteSqSetup	dmasound/dmasound_paula.c	/^static int AmiWriteSqSetup(void)$/;"	f	file:
AtaAlloc	dmasound/dmasound_atari.c	/^static void *AtaAlloc(unsigned int size, gfp_t flags)$/;"	f	file:
AtaFree	dmasound/dmasound_atari.c	/^static void AtaFree(void *obj, unsigned int size)$/;"	f	file:
AtaInterrupt	dmasound/dmasound_atari.c	/^static irqreturn_t AtaInterrupt(int irq, void *dummy)$/;"	f	file:
AtaIrqCleanUp	dmasound/dmasound_atari.c	/^static void AtaIrqCleanUp(void)$/;"	f	file:
AtaIrqInit	dmasound/dmasound_atari.c	/^static int __init AtaIrqInit(void)$/;"	f	file:
AtaMixerIoctl	dmasound/dmasound_atari.c	/^static int AtaMixerIoctl(u_int cmd, u_long arg)$/;"	f	file:
AtaPlay	dmasound/dmasound_atari.c	/^static void AtaPlay(void)$/;"	f	file:
AtaPlayNextFrame	dmasound/dmasound_atari.c	/^static void AtaPlayNextFrame(int index)$/;"	f	file:
AtaSetBass	dmasound/dmasound_atari.c	/^static int AtaSetBass(int bass)$/;"	f	file:
AtaSetTreble	dmasound/dmasound_atari.c	/^static int AtaSetTreble(int treble)$/;"	f	file:
AtaSqOpen	dmasound/dmasound_atari.c	/^static int AtaSqOpen(mode_t mode)$/;"	f	file:
AtaWriteSqSetup	dmasound/dmasound_atari.c	/^static int AtaWriteSqSetup(void)$/;"	f	file:
BANK_A	trident.h	62;"	d
BANK_B	trident.h	63;"	d
BANK_B_EN	trident.h	/^	EDROP_IE    = 0x00008000, BANK_B_EN   = 0x00010000$/;"	e	enum:global_control_bits
BASE_OCTAVE	sequencer.c	1574;"	d	file:
BASSDRUM_ON	opl3_hw.h	75;"	d
BASS_LVL	sb_mixer.h	55;"	d
BDRUM	opl3.c	298;"	d	file:
BE_CONSERVATIVE	dmabuf.c	25;"	d	file:
BLDCDROM	aedsp16.c	394;"	d	file:
BLDCDROMADDR	aedsp16.c	399;"	d	file:
BLDIOBASE	aedsp16.c	359;"	d	file:
BLDJOY	aedsp16.c	364;"	d	file:
BLDMPUADDR	aedsp16.c	369;"	d	file:
BLDWSSADDR	aedsp16.c	389;"	d	file:
BLOCKNUM_MASK	opl3_hw.h	133;"	d
BS_VAL	dmasound/dmasound.h	254;"	d
BTA_OSPREY200	btaudio.c	889;"	d	file:
BUFFER_SIZE	sh_dac_audio.c	39;"	d	file:
BUFFSIZE	msnd_classic.h	81;"	d
BUFFSIZE	msnd_pinnacle.h	114;"	d
BUFF_DIRTY	dev_table.h	146;"	d
BUFF_EOF	dev_table.h	145;"	d
BUFTEST	mpu401.c	62;"	d	file:
BUF_DEBUG	jz_i2s_dbg.h	38;"	d
BUF_DEFAULT	btaudio.c	161;"	d	file:
BUF_MIN	btaudio.c	162;"	d	file:
BUSADDR_MASK	i810_audio.c	140;"	d	file:
BYTE	msnd.h	/^typedef u8			BYTE;$/;"	t
BYTES_TO_CHUNKS	vwsnd.c	432;"	d	file:
C930_MIXER_DEVICES	ad1848_mixer.h	48;"	d
CAP_20BIT_AUDIO_SUPPORT	i810_audio.c	271;"	d	file:
CAP_F_TIMER	ad1848.c	162;"	d	file:
CAP_MMIO	i810_audio.c	270;"	d	file:
CARDNAMELEN	aedsp16.c	336;"	d	file:
CARDVERLEN	aedsp16.c	337;"	d	file:
CAS	i810_audio.c	/^	CAS	 = 	0x34			\/* Codec Write Semaphore Register *\/$/;"	e	enum:__anon7	file:
CDROM	aedsp16.c	354;"	d	file:
CDROMADDR	aedsp16.c	355;"	d	file:
CD_VOL	sb_mixer.h	43;"	d
CENTEROUT	trident.h	/^	CENTEROUT   = 0x00040000, LFEOUT      = 0x00080000,$/;"	e	enum:serial_intf_ctrl_bits
CENTER_LFE	trident.h	/^	I2S_LR         = 0x1000, CENTER_LFE     = 0x1400,$/;"	e	enum:channel_attribute
CENTER_LFE_ON	i810_audio.c	134;"	d	file:
CHANNEL_16BITS	trident.h	/^	CHANNEL_STEREO = 0x00004000, CHANNEL_16BITS = 0x00008000,$/;"	e	enum:channel_control_bits
CHANNEL_LOOP	trident.h	/^	CHANNEL_LOOP   = 0x00001000, CHANNEL_SIGNED = 0x00002000,$/;"	e	enum:channel_control_bits
CHANNEL_PB	trident.h	/^	CHANNEL_PB     = 0x0000, CHANNEL_SPC_PB = 0x4000,$/;"	e	enum:channel_attribute
CHANNEL_REC	trident.h	/^	CHANNEL_REC    = 0x8000, CHANNEL_REC_PB = 0xc000,$/;"	e	enum:channel_attribute
CHANNEL_REC_PB	trident.h	/^	CHANNEL_REC    = 0x8000, CHANNEL_REC_PB = 0xc000,$/;"	e	enum:channel_attribute
CHANNEL_REGS	trident.h	59;"	d
CHANNEL_SIGNED	trident.h	/^	CHANNEL_LOOP   = 0x00001000, CHANNEL_SIGNED = 0x00002000,$/;"	e	enum:channel_control_bits
CHANNEL_SPC_PB	trident.h	/^	CHANNEL_PB     = 0x0000, CHANNEL_SPC_PB = 0x4000,$/;"	e	enum:channel_attribute
CHANNEL_START	trident.h	60;"	d
CHANNEL_STEREO	trident.h	/^	CHANNEL_STEREO = 0x00004000, CHANNEL_16BITS = 0x00008000,$/;"	e	enum:channel_control_bits
CHANNLE_IDX	trident.h	/^	CHANNLE_IDX = 0x0000003f, PB_RESET    = 0x00000100,$/;"	e	enum:global_control_bits
CHUNKS_TO_BYTES	vwsnd.c	433;"	d	file:
CH_DX_CSO_ALPHA_FMS	trident.h	/^	CH_DX_CSO_ALPHA_FMS = 0xe0, CH_DX_ESO_DELTA = 0xe8,$/;"	e	enum:channel_registers
CH_DX_ESO_DELTA	trident.h	/^	CH_DX_CSO_ALPHA_FMS = 0xe0, CH_DX_ESO_DELTA = 0xe8,$/;"	e	enum:channel_registers
CH_DX_FMC_RVOL_CVOL	trident.h	/^	CH_DX_FMC_RVOL_CVOL = 0xec,$/;"	e	enum:channel_registers
CH_GVSEL_PAN_VOL_CTRL_EC	trident.h	/^	CH_GVSEL_PAN_VOL_CTRL_EC      = 0xf0$/;"	e	enum:channel_registers
CH_LBA	trident.h	/^	CH_LBA              = 0xe4,$/;"	e	enum:channel_registers
CH_NX_ALPHA_FMS_FMC_RVOL_CVOL	trident.h	/^	CH_NX_ALPHA_FMS_FMC_RVOL_CVOL = 0xec,$/;"	e	enum:channel_registers
CH_NX_DELTA_CSO	trident.h	/^	CH_NX_DELTA_CSO     = 0xe0, CH_NX_DELTA_ESO = 0xe8,$/;"	e	enum:channel_registers
CH_NX_DELTA_ESO	trident.h	/^	CH_NX_DELTA_CSO     = 0xe0, CH_NX_DELTA_ESO = 0xe8,$/;"	e	enum:channel_registers
CIV_TO_LVI	i810_audio.c	486;"	d	file:
CMDR	waveartist.h	8;"	d
CMD_ACK	sscape.c	104;"	d	file:
CMD_GEN_HOST_ACK	sscape.c	90;"	d	file:
CMD_GEN_MPU_ACK	sscape.c	91;"	d	file:
CMD_GET_BOARD_TYPE	sscape.c	92;"	d	file:
CMD_GET_CONTROL	sscape.c	94;"	d	file:
CMD_GET_EXTMIDI	sscape.c	100;"	d	file:
CMD_GET_MT32	sscape.c	102;"	d	file:
CMD_RF	waveartist.h	17;"	d
CMD_RFIE	waveartist.h	28;"	d
CMD_SET_CONTROL	sscape.c	93;"	d	file:
CMD_SET_EXTMIDI	sscape.c	99;"	d	file:
CMD_SET_MT32	sscape.c	101;"	d	file:
CMD_WE	waveartist.h	16;"	d
CMD_WEIE	waveartist.h	27;"	d
CNV_MU_LAW	dev_table.h	237;"	d
CODEC_ANTI_POP	jz_codec.h	65;"	d
CODEC_CLEAR_DIRECT_MODE	jz_codec.h	50;"	d
CODEC_CLEAR_LINEIN2BTL	jz_codec.h	55;"	d
CODEC_CLEAR_LINEIN2HP	jz_codec.h	52;"	d
CODEC_CLEAR_MODE	jz_codec.h	35;"	d
CODEC_CLEAR_RECORD	jz_codec.h	12;"	d
CODEC_CLEAR_REPLAY	jz_codec.h	15;"	d
CODEC_DAC_MUTE	jz_codec.h	68;"	d
CODEC_DEBUG	jz_codec.h	77;"	d
CODEC_DEBUG	jz_i2s_dbg.h	43;"	d
CODEC_DEBUG_ROUTINE	jz_codec.h	72;"	d
CODEC_EACH_TIME_INIT	jz_codec.h	37;"	d
CODEC_GET_MIXER_INFO	jz_codec.h	43;"	d
CODEC_GET_MIXER_OLD_INFO	jz_codec.h	42;"	d
CODEC_I2S_RESUME	jz_codec.h	44;"	d
CODEC_I2S_SUSPEND	jz_codec.h	45;"	d
CODEC_ID_BUFSZ	ac97_codec.c	60;"	d	file:
CODEC_INIT	jz_codec.h	6;"	d
CODEC_MUTE_DEVICE	jz_codec.h	58;"	d
CODEC_PIN_INIT	jz_codec.h	46;"	d
CODEC_RESET	jz_codec.h	41;"	d
CODEC_RMODE	jz_codec.h	93;"	d
CODEC_SET_BASS	jz_codec.h	29;"	d
CODEC_SET_DEVICE	jz_codec.h	57;"	d
CODEC_SET_DIRECT_MODE	jz_codec.h	49;"	d
CODEC_SET_GPIO_PIN	jz_codec.h	28;"	d
CODEC_SET_LINE	jz_codec.h	32;"	d
CODEC_SET_LINEIN2BTL	jz_codec.h	54;"	d
CODEC_SET_LINEIN2HP	jz_codec.h	51;"	d
CODEC_SET_MIC	jz_codec.h	61;"	d
CODEC_SET_MIC_VOLUME	jz_codec.h	31;"	d
CODEC_SET_MODE	jz_codec.h	7;"	d
CODEC_SET_RECORD	jz_codec.h	11;"	d
CODEC_SET_RECORD_CHANNEL	jz_codec.h	25;"	d
CODEC_SET_RECORD_DATA_WIDTH	jz_codec.h	26;"	d
CODEC_SET_RECORD_RATE	jz_codec.h	20;"	d
CODEC_SET_RECORD_SPEED	jz_codec.h	60;"	d
CODEC_SET_REC_2_DAC	jz_codec.h	71;"	d
CODEC_SET_REPLAY	jz_codec.h	14;"	d
CODEC_SET_REPLAY_CHANNEL	jz_codec.h	22;"	d
CODEC_SET_REPLAY_DATA_WIDTH	jz_codec.h	23;"	d
CODEC_SET_REPLAY_HP_OR_SPKR	jz_codec.h	48;"	d
CODEC_SET_REPLAY_RATE	jz_codec.h	19;"	d
CODEC_SET_REPLAY_RECORD	jz_codec.h	17;"	d
CODEC_SET_REPLAY_SPEED	jz_codec.h	59;"	d
CODEC_SET_REPLAY_VOLUME	jz_codec.h	30;"	d
CODEC_SET_SOME_FUNC	jz_codec.h	33;"	d
CODEC_SET_SPEAKER_POWER	jz_codec.h	73;"	d
CODEC_SET_STANDBY	jz_codec.h	70;"	d
CODEC_SET_STARTUP_PARAM	jz_codec.h	8;"	d
CODEC_SET_VOLUME	jz_codec.h	62;"	d
CODEC_SET_VOLUME_TABLE	jz_codec.h	9;"	d
CODEC_TURN_OFF	jz_codec.h	39;"	d
CODEC_TURN_ON	jz_codec.h	38;"	d
CODEC_TURN_REPLAY	jz_codec.h	66;"	d
CODEC_WMODE	jz_codec.h	92;"	d
CODEC_WRMODE	jz_codec.h	94;"	d
COLD_RESET	trident.h	/^	WARM_REST   = 0x00000001, COLD_RESET  = 0x00000002,$/;"	e	enum:serial_intf_ctrl_bits
COMDPORT	mpu401.c	77;"	d	file:
COMDPORT	uart401.c	47;"	d	file:
COMDPORT	uart6850.c	39;"	d	file:
COMMAND_52	aedsp16.c	299;"	d	file:
COMMAND_5C	aedsp16.c	301;"	d	file:
COMMAND_60	aedsp16.c	302;"	d	file:
COMMAND_66	aedsp16.c	303;"	d	file:
COMMAND_6C	aedsp16.c	304;"	d	file:
COMMAND_6E	aedsp16.c	305;"	d	file:
COMMAND_88	aedsp16.c	306;"	d	file:
COMMAND_C5	aedsp16.c	308;"	d	file:
COMPOSITE_SINE_WAVE_MODE	opl3_hw.h	68;"	d
CONFIG_MSNDCLAS_INIT_FILE	msnd_classic.h	171;"	d
CONFIG_MSNDCLAS_PERM_FILE	msnd_classic.h	175;"	d
CONFIG_MSNDPIN_CFG	msnd_pinnacle.c	1647;"	d	file:
CONFIG_MSNDPIN_CFG	msnd_pinnacle.c	1651;"	d	file:
CONFIG_MSNDPIN_CFG	msnd_pinnacle.c	1653;"	d	file:
CONFIG_MSNDPIN_DIGITAL	msnd_pinnacle.c	1692;"	d	file:
CONFIG_MSNDPIN_IDE_IO0	msnd_pinnacle.c	1671;"	d	file:
CONFIG_MSNDPIN_IDE_IO1	msnd_pinnacle.c	1676;"	d	file:
CONFIG_MSNDPIN_IDE_IRQ	msnd_pinnacle.c	1681;"	d	file:
CONFIG_MSNDPIN_INIT_FILE	msnd_pinnacle.h	232;"	d
CONFIG_MSNDPIN_JOYSTICK_IO	msnd_pinnacle.c	1686;"	d	file:
CONFIG_MSNDPIN_MPU_IO	msnd_pinnacle.c	1661;"	d	file:
CONFIG_MSNDPIN_MPU_IRQ	msnd_pinnacle.c	1666;"	d	file:
CONFIG_MSNDPIN_PERM_FILE	msnd_pinnacle.h	236;"	d
CONFIG_MSND_CALSIGNAL	msnd_pinnacle.c	1704;"	d	file:
CONFIG_MSND_FIFOSIZE	msnd_pinnacle.c	1699;"	d	file:
CONFIG_MSND_WRITE_NDELAY	msnd_pinnacle.c	74;"	d	file:
CONFIG_PAS_BASE	sound_config.h	45;"	d
CONFIG_PM	jz_i2s.c	39;"	d	file:
CONF_CDROM	pss.c	87;"	d	file:
CONF_MIDI	pss.c	88;"	d	file:
CONF_PSS	pss.c	84;"	d	file:
CONF_SB	pss.c	86;"	d	file:
CONF_WSS	pss.c	85;"	d	file:
CONNECTION_BIT	opl3_hw.h	150;"	d
CONNECTION_SELECT_REGISTER	opl3_hw.h	55;"	d
CON_BUFLEN_MASK	i810_audio.c	144;"	d	file:
CON_BUFPAD	i810_audio.c	143;"	d	file:
CON_IOC	i810_audio.c	142;"	d	file:
COPR_CUSTOM	coproc.h	9;"	d
COPR_MIDI	coproc.h	10;"	d
COPR_PCM	coproc.h	11;"	d
COPR_SYNTH	coproc.h	12;"	d
COVOX_VOL	sb_mixer.h	53;"	d
CS4297a_MAGIC	swarm_cs4297a.c	104;"	d	file:
CSDEBUG	swarm_cs4297a.c	119;"	d	file:
CSDEBUG_INTERFACE	swarm_cs4297a.c	121;"	d	file:
CSDEBUG_INTERFACE	swarm_cs4297a.c	123;"	d	file:
CSN_NUM	cs4232.c	60;"	d	file:
CS_AC97	swarm_cs4297a.c	134;"	d	file:
CS_DBGOUT	swarm_cs4297a.c	149;"	d	file:
CS_DBGOUT	swarm_cs4297a.c	151;"	d	file:
CS_DESCR	swarm_cs4297a.c	135;"	d	file:
CS_ERROR	swarm_cs4297a.c	129;"	d	file:
CS_FALSE	swarm_cs4297a.c	161;"	d	file:
CS_FUNCTION	swarm_cs4297a.c	131;"	d	file:
CS_INIT	swarm_cs4297a.c	128;"	d	file:
CS_INTERRUPT	swarm_cs4297a.c	130;"	d	file:
CS_IOCTL	swarm_cs4297a.c	139;"	d	file:
CS_OPEN	swarm_cs4297a.c	136;"	d	file:
CS_OUT	cs4232.c	/^static void CS_OUT(unsigned char a)$/;"	f	file:
CS_OUT2	cs4232.c	71;"	d	file:
CS_OUT3	cs4232.c	72;"	d	file:
CS_PARMS	swarm_cs4297a.c	138;"	d	file:
CS_RELEASE	swarm_cs4297a.c	137;"	d	file:
CS_TMP	swarm_cs4297a.c	140;"	d	file:
CS_TRUE	swarm_cs4297a.c	160;"	d	file:
CS_TYPE_ADC	swarm_cs4297a.c	163;"	d	file:
CS_TYPE_DAC	swarm_cs4297a.c	164;"	d	file:
CS_WAVE_READ	swarm_cs4297a.c	133;"	d	file:
CS_WAVE_WRITE	swarm_cs4297a.c	132;"	d	file:
CTLR	waveartist.h	10;"	d
CTL_MASTER_VOL	sscape.c	95;"	d	file:
CTL_MIC_MODE	sscape.c	96;"	d	file:
CTL_SYNTH_VOL	sscape.c	97;"	d	file:
CTL_WAVE_VOL	sscape.c	98;"	d	file:
CYBER5050	trident.c	/^	CYBER5050$/;"	e	enum:__anon12	file:
CYBER_BMSK_AUDIO_INT_ENABLE	trident.h	317;"	d
CYBER_BMSK_AUENZ	trident.h	318;"	d
CYBER_BMSK_AUENZ_ENABLE	trident.h	319;"	d
CYBER_IDX_AUDIO_ENABLE	trident.h	316;"	d
CYBER_IDX_IRQ_ENABLE	trident.h	320;"	d
CYBER_PORT_AUDIO	trident.h	315;"	d
CYMBAL	opl3.c	295;"	d	file:
CYMBAL_ON	opl3_hw.h	78;"	d
DAC_RUNNING	i810_audio.c	126;"	d	file:
DAC_RUNNING	trident.h	70;"	d
DAPF	msnd.h	/^	msnd_fifo DAPF, DARF;$/;"	m	struct:multisound_dev
DAPQ	msnd.h	/^	void __iomem *DAPQ, *DARQ, *MODQ, *MIDQ, *DSPQ;$/;"	m	struct:multisound_dev
DAPQ_BUFF_SIZE	msnd_classic.h	92;"	d
DAPQ_BUFF_SIZE	msnd_pinnacle.h	125;"	d
DAPQ_DATA_BUFF	msnd_classic.h	98;"	d
DAPQ_DATA_BUFF	msnd_pinnacle.h	131;"	d
DAPQ_OFFSET	msnd_classic.h	104;"	d
DAPQ_OFFSET	msnd_pinnacle.h	137;"	d
DAPQ_STRUCT_SIZE	msnd_classic.h	90;"	d
DAPQ_STRUCT_SIZE	msnd_pinnacle.h	123;"	d
DAP_BUFF_SIZE	msnd_classic.h	87;"	d
DAP_BUFF_SIZE	msnd_pinnacle.h	120;"	d
DAQDS__size	msnd.h	180;"	d
DAQDS_wChannels	msnd.h	176;"	d
DAQDS_wFlags	msnd.h	179;"	d
DAQDS_wFormat	msnd.h	174;"	d
DAQDS_wIntMsg	msnd.h	178;"	d
DAQDS_wSampleRate	msnd.h	177;"	d
DAQDS_wSampleSize	msnd.h	175;"	d
DAQDS_wSize	msnd.h	173;"	d
DAQDS_wStart	msnd.h	172;"	d
DARF	msnd.h	/^	msnd_fifo DAPF, DARF;$/;"	m	struct:multisound_dev
DARQ	msnd.h	/^	void __iomem *DAPQ, *DARQ, *MODQ, *MIDQ, *DSPQ;$/;"	m	struct:multisound_dev
DARQ_BUFF_SIZE	msnd_classic.h	93;"	d
DARQ_BUFF_SIZE	msnd_pinnacle.h	126;"	d
DARQ_DATA_BUFF	msnd_classic.h	99;"	d
DARQ_DATA_BUFF	msnd_pinnacle.h	132;"	d
DARQ_OFFSET	msnd_classic.h	105;"	d
DARQ_OFFSET	msnd_pinnacle.h	138;"	d
DARQ_STRUCT_SIZE	msnd_classic.h	91;"	d
DARQ_STRUCT_SIZE	msnd_pinnacle.h	124;"	d
DAR_BUFF_SIZE	msnd_classic.h	88;"	d
DAR_BUFF_SIZE	msnd_pinnacle.h	121;"	d
DATAPORT	mpu401.c	76;"	d	file:
DATAPORT	uart401.c	46;"	d	file:
DATAPORT	uart6850.c	38;"	d	file:
DATA_AVAIL	midibuf.c	58;"	d	file:
DATR	waveartist.h	9;"	d
DAT_RF	waveartist.h	19;"	d
DAT_RFIE	waveartist.h	30;"	d
DAT_WE	waveartist.h	18;"	d
DAT_WEIE	waveartist.h	29;"	d
DBG	aedsp16.c	264;"	d	file:
DBG	aedsp16.c	271;"	d	file:
DBG1	aedsp16.c	266;"	d	file:
DBG1	aedsp16.c	268;"	d	file:
DBG1	aedsp16.c	272;"	d	file:
DBGC	vwsnd.c	202;"	d	file:
DBGC	vwsnd.c	217;"	d	file:
DBGCV	vwsnd.c	207;"	d	file:
DBGCV	vwsnd.c	222;"	d	file:
DBGDO	vwsnd.c	198;"	d	file:
DBGDO	vwsnd.c	213;"	d	file:
DBGE	vwsnd.c	201;"	d	file:
DBGE	vwsnd.c	216;"	d	file:
DBGEV	vwsnd.c	206;"	d	file:
DBGEV	vwsnd.c	221;"	d	file:
DBGP	vwsnd.c	200;"	d	file:
DBGP	vwsnd.c	215;"	d	file:
DBGPV	vwsnd.c	205;"	d	file:
DBGPV	vwsnd.c	219;"	d	file:
DBGR	vwsnd.c	203;"	d	file:
DBGR	vwsnd.c	218;"	d	file:
DBGRV	vwsnd.c	208;"	d	file:
DBGRV	vwsnd.c	223;"	d	file:
DBGX	vwsnd.c	199;"	d	file:
DBGX	vwsnd.c	214;"	d	file:
DBGXV	vwsnd.c	204;"	d	file:
DBGXV	vwsnd.c	220;"	d	file:
DDB	sound_config.h	139;"	d
DEB	ad1848.c	52;"	d	file:
DEB	pas2_mixer.c	25;"	d	file:
DEB	pas2_pcm.c	26;"	d	file:
DEB	sound_config.h	135;"	d
DEB1	ad1848.c	53;"	d	file:
DEBUG	au1550_ac97.c	36;"	d	file:
DEBUG	hal2.c	47;"	d	file:
DEBUG_CMD	waveartist.c	27;"	d	file:
DEBUG_DMASOUND	dmasound/dmasound.h	32;"	d
DEBUG_IN	waveartist.c	29;"	d	file:
DEBUG_INTR	waveartist.c	30;"	d	file:
DEBUG_MIX	hal2.c	53;"	d	file:
DEBUG_MIXER	waveartist.c	31;"	d	file:
DEBUG_OUT	waveartist.c	28;"	d	file:
DEBUG_TRIGGER	waveartist.c	32;"	d	file:
DECAY_MASK	opl3_hw.h	106;"	d
DEC_USE_COUNT	vwsnd.c	1526;"	d	file:
DEFAULT	opl3.c	300;"	d	file:
DEFAULT_BUFF_SIZE	dmasound/dmasound.h	83;"	d
DEFAULT_FRAGCOUNT	vwsnd.c	1556;"	d	file:
DEFAULT_FRAGSHIFT	vwsnd.c	1555;"	d	file:
DEFAULT_N_BUFFERS	dmasound/dmasound.h	82;"	d
DEFAULT_SUBDIVSHIFT	vwsnd.c	1557;"	d	file:
DEFCHANNELS	msnd.h	37;"	d
DEFFIFOSIZE	msnd.h	39;"	d
DEFSAMPLERATE	msnd.h	35;"	d
DEFSAMPLESIZE	msnd.h	36;"	d
DEF_AEDSP16_DMA	aedsp16.c	292;"	d	file:
DEF_AEDSP16_IOB	aedsp16.c	289;"	d	file:
DEF_AEDSP16_IRQ	aedsp16.c	290;"	d	file:
DEF_AEDSP16_MRQ	aedsp16.c	291;"	d	file:
DISABLED	vwsnd.c	/^	DISABLED = 1 << 0,$/;"	e	enum:vwsnd_port_flags	file:
DLV_MAX_RATE_COUNT	jzdlv.h	9;"	d
DMA0	waveartist.h	23;"	d
DMA0_IE	waveartist.h	34;"	d
DMA1	waveartist.h	22;"	d
DMA1_IE	waveartist.h	33;"	d
DMABUF_DEFAULTORDER	i810_audio.c	1000;"	d	file:
DMABUF_DEFAULTORDER	trident.c	1254;"	d	file:
DMABUF_MINORDER	i810_audio.c	1001;"	d	file:
DMABUF_MINORDER	trident.c	1255;"	d	file:
DMACHUNK_SHIFT	vwsnd.c	430;"	d	file:
DMACHUNK_SIZE	vwsnd.c	431;"	d	file:
DMAP_FREE_ON_CLOSE	dmabuf.c	31;"	d	file:
DMAP_KEEP_ON_CLOSE	dmabuf.c	32;"	d	file:
DMASOUND_ATARI_EDITION	dmasound/dmasound_atari.c	32;"	d	file:
DMASOUND_ATARI_REVISION	dmasound/dmasound_atari.c	31;"	d	file:
DMASOUND_CORE_EDITION	dmasound/dmasound_core.c	191;"	d	file:
DMASOUND_CORE_REVISION	dmasound/dmasound_core.c	190;"	d	file:
DMASOUND_PAULA_EDITION	dmasound/dmasound_paula.c	34;"	d	file:
DMASOUND_PAULA_REVISION	dmasound/dmasound_paula.c	33;"	d	file:
DMASOUND_Q40_EDITION	dmasound/dmasound_q40.c	30;"	d	file:
DMASOUND_Q40_REVISION	dmasound/dmasound_q40.c	29;"	d	file:
DMA_ACTIVE	dev_table.h	96;"	d
DMA_ALLOC_DONE	dev_table.h	99;"	d
DMA_AUTOMODE	dev_table.h	202;"	d
DMA_BLOAT_FACTOR	swarm_cs4297a.c	179;"	d	file:
DMA_BUF_SIZE	swarm_cs4297a.c	181;"	d	file:
DMA_BUSY	dev_table.h	94;"	d
DMA_CTL_ACAP_EN	btaudio.c	77;"	d	file:
DMA_CTL_A_PWRDN	btaudio.c	74;"	d	file:
DMA_CTL_DA_ES2	btaudio.c	76;"	d	file:
DMA_CTL_DA_SBR	btaudio.c	75;"	d	file:
DMA_CTL_FIFO_EN	btaudio.c	79;"	d	file:
DMA_CTL_RISC_EN	btaudio.c	78;"	d	file:
DMA_DEBUG	jz_i2s_dbg.h	37;"	d
DMA_DEBUG	jz_i2s_dbg.h	50;"	d
DMA_DESCR	swarm_cs4297a.c	180;"	d	file:
DMA_DIRTY	dev_table.h	101;"	d
DMA_DUPLEX	dev_table.h	203;"	d
DMA_EMPTY	dev_table.h	98;"	d
DMA_EXACT	dev_table.h	206;"	d
DMA_HARDSTOP	dev_table.h	205;"	d
DMA_ID_AC97_RX	jz_ac97.c	36;"	d	file:
DMA_ID_AC97_TX	jz_ac97.c	35;"	d	file:
DMA_ID_I2S_RX	jz_i2s.c	43;"	d	file:
DMA_ID_I2S_RX	jz_i2s_4750.c	42;"	d	file:
DMA_ID_I2S_RX	jz_i2s_dlv_dma_test.c	42;"	d	file:
DMA_ID_I2S_RX	jz_i2s_for_4750.c	42;"	d	file:
DMA_ID_I2S_TX	jz_i2s.c	42;"	d	file:
DMA_ID_I2S_TX	jz_i2s_4750.c	41;"	d	file:
DMA_ID_I2S_TX	jz_i2s_dlv_dma_test.c	41;"	d	file:
DMA_ID_I2S_TX	jz_i2s_for_4750.c	41;"	d	file:
DMA_INT_CELV	i810_audio.c	208;"	d	file:
DMA_INT_CNT	swarm_cs4297a.c	184;"	d	file:
DMA_INT_COMPLETE	i810_audio.c	206;"	d	file:
DMA_INT_DCH	i810_audio.c	209;"	d	file:
DMA_INT_FIFO	i810_audio.c	205;"	d	file:
DMA_INT_LVI	i810_audio.c	207;"	d	file:
DMA_INT_MASK	i810_audio.c	210;"	d	file:
DMA_MAP_BUSY	soundcard.c	73;"	d	file:
DMA_MAP_FREE	soundcard.c	72;"	d	file:
DMA_MAP_MAPPED	dev_table.h	135;"	d
DMA_MAP_UNAVAIL	soundcard.c	71;"	d	file:
DMA_NODMA	dev_table.h	103;"	d
DMA_NORESET	dev_table.h	207;"	d
DMA_NOTIMEOUT	dev_table.h	104;"	d
DMA_NR	sb_mixer.h	46;"	d
DMA_POST	dev_table.h	102;"	d
DMA_PSEUDO_AUTOMODE	dev_table.h	204;"	d
DMA_RESTART	dev_table.h	95;"	d
DMA_STARTED	dev_table.h	97;"	d
DMA_SYNCING	dev_table.h	100;"	d
DMAbuf_activate_recording	dmabuf.c	/^int DMAbuf_activate_recording(int dev, struct dma_buffparms *dmap)$/;"	f
DMAbuf_deinit	dmabuf.c	/^void DMAbuf_deinit(int dev)$/;"	f
DMAbuf_get_buffer_pointer	dmabuf.c	/^int DMAbuf_get_buffer_pointer(int dev, struct dma_buffparms *dmap, int direction)$/;"	f
DMAbuf_getrdbuffer	dmabuf.c	/^int DMAbuf_getrdbuffer(int dev, char **buf, int *len, int dontblock)$/;"	f
DMAbuf_getwrbuffer	dmabuf.c	/^int DMAbuf_getwrbuffer(int dev, char **buf, int *size, int dontblock)$/;"	f
DMAbuf_init	dmabuf.c	/^void DMAbuf_init(int dev, int dma1, int dma2)$/;"	f
DMAbuf_inputintr	dmabuf.c	/^EXPORT_SYMBOL(DMAbuf_inputintr);$/;"	v
DMAbuf_inputintr	dmabuf.c	/^void DMAbuf_inputintr(int dev)$/;"	f
DMAbuf_launch_output	dmabuf.c	/^void DMAbuf_launch_output(int dev, struct dma_buffparms *dmap)$/;"	f
DMAbuf_move_wrpointer	dmabuf.c	/^int DMAbuf_move_wrpointer(int dev, int l)$/;"	f
DMAbuf_open	dmabuf.c	/^int DMAbuf_open(int dev, int mode)$/;"	f
DMAbuf_outputintr	dmabuf.c	/^EXPORT_SYMBOL(DMAbuf_outputintr);$/;"	v
DMAbuf_outputintr	dmabuf.c	/^void DMAbuf_outputintr(int dev, int notify_only)$/;"	f
DMAbuf_poll	dmabuf.c	/^unsigned int DMAbuf_poll(struct file * file, int dev, poll_table *wait)$/;"	f
DMAbuf_release	dmabuf.c	/^int DMAbuf_release(int dev, int mode)$/;"	f
DMAbuf_reset	dmabuf.c	/^void DMAbuf_reset(int dev)$/;"	f
DMAbuf_rmchars	dmabuf.c	/^int DMAbuf_rmchars(int dev, int buff_no, int c)$/;"	f
DMAbuf_space_in_queue	dmabuf.c	/^int DMAbuf_space_in_queue(int dev)$/;"	f
DMAbuf_start_devices	dmabuf.c	/^void DMAbuf_start_devices(unsigned int devmask)$/;"	f
DMAbuf_start_dma	dmabuf.c	/^EXPORT_SYMBOL(DMAbuf_start_dma);$/;"	v
DMAbuf_start_dma	dmabuf.c	/^int DMAbuf_start_dma(int dev, unsigned long physaddr, int count, int dma_mode)$/;"	f
DMAbuf_sync	dmabuf.c	/^int DMAbuf_sync(int dev)$/;"	f
DMODE_INPUT	dev_table.h	74;"	d
DMODE_NONE	dev_table.h	72;"	d
DMODE_OUTPUT	dev_table.h	73;"	d
DM_PLAYBACK	trident.c	/^	DM_PLAYBACK = 0,$/;"	e	enum:dmabuf_mode	file:
DM_RECORD	trident.c	/^	DM_RECORD$/;"	e	enum:dmabuf_mode	file:
DO_TIMINGS	os.h	5;"	d
DPRINT	jz_i2s_dbg.h	135;"	d
DPRINT	jz_i2s_dbg.h	137;"	d
DPRINTK	jz_i2s_4750.c	40;"	d	file:
DPRINTK	jz_i2s_dlv_dma_test.c	40;"	d	file:
DPRINTK	jz_i2s_for_4750.c	40;"	d	file:
DPRINTK	via82cxxx_audio.c	50;"	d	file:
DPRINTK	via82cxxx_audio.c	52;"	d	file:
DPRINT_BUF	jz_i2s_dbg.h	88;"	d
DPRINT_BUF	jz_i2s_dbg.h	91;"	d
DPRINT_CODEC	jz_i2s_dbg.h	61;"	d
DPRINT_CODEC	jz_i2s_dbg.h	63;"	d
DPRINT_DLV_IOC_CMD	jz_i2s_dbg.h	76;"	d
DPRINT_DLV_IOC_CMD	jz_i2s_dbg.h	81;"	d
DPRINT_DMA	jz_i2s_dbg.h	96;"	d
DPRINT_DMA	jz_i2s_dbg.h	99;"	d
DPRINT_DSP_IOC_CMD	jz_i2s_dbg.h	78;"	d
DPRINT_DSP_IOC_CMD	jz_i2s_dbg.h	83;"	d
DPRINT_IOC	jz_i2s_dbg.h	75;"	d
DPRINT_IOC	jz_i2s_dbg.h	80;"	d
DPRINT_IRQ	jz_i2s_dbg.h	119;"	d
DPRINT_IRQ	jz_i2s_dbg.h	121;"	d
DPRINT_MIXER_IOC_CMD	jz_i2s_dbg.h	77;"	d
DPRINT_MIXER_IOC_CMD	jz_i2s_dbg.h	82;"	d
DPRINT_Q	jz_i2s_dbg.h	127;"	d
DPRINT_Q	jz_i2s_dbg.h	131;"	d
DPRINT_ROUTE	jz_i2s_dbg.h	113;"	d
DPRINT_ROUTE	jz_i2s_dbg.h	115;"	d
DPRINT_TRC	jz_i2s_dbg.h	105;"	d
DPRINT_TRC	jz_i2s_dbg.h	109;"	d
DRIVER_VERSION	i810_audio.c	108;"	d	file:
DRIVER_VERSION	trident.c	230;"	d	file:
DSPQ	msnd.h	/^	void __iomem *DAPQ, *DARQ, *MODQ, *MIDQ, *DSPQ;$/;"	m	struct:multisound_dev
DSPQ_BUFF_SIZE	msnd_classic.h	96;"	d
DSPQ_BUFF_SIZE	msnd_pinnacle.h	129;"	d
DSPQ_DATA_BUFF	msnd_classic.h	102;"	d
DSPQ_DATA_BUFF	msnd_pinnacle.h	135;"	d
DSPQ_OFFSET	msnd_classic.h	108;"	d
DSPQ_OFFSET	msnd_pinnacle.h	141;"	d
DSPTOPC_BASED	msnd.h	154;"	d
DSP_BANK_BASE	msnd.h	47;"	d
DSP_BASE_ADDR	msnd.h	46;"	d
DSP_BUFFCOUNT	sound_config.h	39;"	d
DSP_BUFFSIZE	sound_config.h	35;"	d
DSP_BUFFSIZE	sound_config.h	36;"	d
DSP_CMD_DMAOFF	sb.h	18;"	d
DSP_CMD_DMAON	sb.h	17;"	d
DSP_CMD_SPKOFF	sb.h	16;"	d
DSP_CMD_SPKON	sb.h	15;"	d
DSP_COMMAND	aedsp16.c	324;"	d	file:
DSP_COMMAND	sb.h	4;"	d
DSP_DATAVAIL	aedsp16.c	326;"	d	file:
DSP_DATA_AVAIL	sb.h	6;"	d
DSP_DATA_AVL16	sb.h	7;"	d
DSP_DEFAULT_SPEED	sound_config.h	57;"	d
DSP_INIT_MSS	aedsp16.c	307;"	d	file:
DSP_NUMIO	msnd_classic.h	34;"	d
DSP_NUMIO	msnd_pinnacle.h	34;"	d
DSP_READ	aedsp16.c	322;"	d	file:
DSP_READ	sb.h	2;"	d
DSP_RESET	aedsp16.c	321;"	d	file:
DSP_RESET	sb.h	1;"	d
DSP_STATUS	aedsp16.c	325;"	d	file:
DSP_STATUS	sb.h	5;"	d
DSP_WRITE	aedsp16.c	323;"	d	file:
DSP_WRITE	sb.h	3;"	d
DUMP_AIC_REGS	jz_i2s_dbg.h	67;"	d
DUMP_AIC_REGS	jz_i2s_dbg.h	70;"	d
DUMP_BUF	jz_i2s_dbg.h	87;"	d
DUMP_BUF	jz_i2s_dbg.h	90;"	d
DUMP_CODEC_REGS	jz_i2s_dbg.h	68;"	d
DUMP_CODEC_REGS	jz_i2s_dbg.h	71;"	d
DUMP_DMA	jz_i2s_dbg.h	95;"	d
DUMP_DMA	jz_i2s_dbg.h	98;"	d
DUMP_LIST	jz_i2s_dbg.h	126;"	d
DUMP_LIST	jz_i2s_dbg.h	130;"	d
DUMP_NODE	jz_i2s_dbg.h	125;"	d
DUMP_NODE	jz_i2s_dbg.h	129;"	d
DWORD	msnd.h	/^typedef u32			DWORD;$/;"	t
DX_AC97_BUSY_READ	trident.h	/^	DX_AC97_BUSY_WRITE = 0x8000, DX_AC97_BUSY_READ = 0x8000,$/;"	e	enum:trident_dx_ac97_bits
DX_AC97_BUSY_WRITE	trident.h	/^	DX_AC97_BUSY_WRITE = 0x8000, DX_AC97_BUSY_READ = 0x8000,$/;"	e	enum:trident_dx_ac97_bits
DX_AC97_PLAYBACK	trident.h	/^	DX_AC97_PLAYBACK   = 0x0002$/;"	e	enum:trident_dx_ac97_bits
DX_AC97_READY	trident.h	/^	DX_AC97_READY      = 0x0010, DX_AC97_RECORD    = 0x0008,$/;"	e	enum:trident_dx_ac97_bits
DX_AC97_RECORD	trident.h	/^	DX_AC97_READY      = 0x0010, DX_AC97_RECORD    = 0x0008,$/;"	e	enum:trident_dx_ac97_bits
DX_ACR0_AC97_W	trident.h	/^	DX_ACR0_AC97_W        = 0x40, DX_ACR1_AC97_R = 0x44,$/;"	e	enum:dx_ac97_registers
DX_ACR1_AC97_R	trident.h	/^	DX_ACR0_AC97_W        = 0x40, DX_ACR1_AC97_R = 0x44,$/;"	e	enum:dx_ac97_registers
DX_ACR2_AC97_COM_STAT	trident.h	/^	DX_ACR2_AC97_COM_STAT = 0x48$/;"	e	enum:dx_ac97_registers
EDROP_IE	trident.h	/^	EDROP_IE    = 0x00008000, BANK_B_EN   = 0x00010000$/;"	e	enum:global_control_bits
EMU_GM	dev_table.h	287;"	d
EMU_XG	dev_table.h	288;"	d
ENABLE_PINS	cs4232.c	64;"	d	file:
ENABLE_WAVE_SELECT	opl3_hw.h	44;"	d
ENDLP_IE	trident.h	/^	ENDLP_IE    = 0x00001000, MIDLP_IE    = 0x00002000,$/;"	e	enum:global_control_bits
ENTER	jz_i2s_dbg.h	103;"	d
ENTER	jz_i2s_dbg.h	107;"	d
ENUM_ENGINE	i810_audio.c	173;"	d	file:
ENVELOPE_IRQ	trident.h	/^	ENVELOPE_IRQ    = 0x00000040, ST_IRQ          = 0x00000080,$/;"	e	enum:miscint_bits
ERFLOWN	vwsnd.c	/^	ERFLOWN  = 1 << 1,		\/* overflown or underflown *\/$/;"	e	enum:vwsnd_port_flags	file:
ES1688_CLOCK1	sb_ess.c	211;"	d	file:
ES1688_CLOCK2	sb_ess.c	212;"	d	file:
ES1688_MIXER_DEVICES	sb_ess.c	1363;"	d	file:
ES1688_RECORDING_DEVICES	sb_ess.c	1361;"	d	file:
ES1887_MIXER_DEVICES	sb_ess.c	1368;"	d	file:
ES1887_RECORDING_DEVICES	sb_ess.c	1366;"	d	file:
ES18XX_CLOCK1	sb_ess.c	213;"	d	file:
ES18XX_CLOCK2	sb_ess.c	214;"	d	file:
ES688_MIXER_DEVICES	sb_ess.c	1356;"	d	file:
ES688_RECORDING_DEVICES	sb_ess.c	1354;"	d	file:
ESSTYPE_DETECT	sb_ess.c	199;"	d	file:
ESSTYPE_LIKE20	sb_ess.c	198;"	d	file:
ES_REC_MIXER_RECALTPCM	sb_ess.c	1388;"	d	file:
ES_REC_MIXER_RECBASE	sb_ess.c	1378;"	d	file:
ES_REC_MIXER_RECCD	sb_ess.c	1386;"	d	file:
ES_REC_MIXER_RECDIFF	sb_ess.c	1379;"	d	file:
ES_REC_MIXER_RECIGAIN	sb_ess.c	1390;"	d	file:
ES_REC_MIXER_RECIMIX	sb_ess.c	1387;"	d	file:
ES_REC_MIXER_RECLINE	sb_ess.c	1384;"	d	file:
ES_REC_MIXER_RECLINE1	sb_ess.c	1392;"	d	file:
ES_REC_MIXER_RECLINE2	sb_ess.c	1393;"	d	file:
ES_REC_MIXER_RECLINE3	sb_ess.c	1394;"	d	file:
ES_REC_MIXER_RECMIC	sb_ess.c	1385;"	d	file:
ES_REC_MIXER_RECOGAIN	sb_ess.c	1391;"	d	file:
ES_REC_MIXER_RECPCM	sb_ess.c	1382;"	d	file:
ES_REC_MIXER_RECRECLEV	sb_ess.c	1389;"	d	file:
ES_REC_MIXER_RECSPEAKER	sb_ess.c	1383;"	d	file:
ES_REC_MIXER_RECSYNTH	sb_ess.c	1381;"	d	file:
ETOG_IE	trident.h	/^	ETOG_IE     = 0x00004000,$/;"	e	enum:global_control_bits
EV_SZ	sequencer.c	61;"	d	file:
EXT_DSP_BIT_DCAL	msnd_classic.h	78;"	d
EXT_DSP_BIT_DCAL	msnd_pinnacle.h	111;"	d
EXT_DSP_BIT_MIDI_CON	msnd_classic.h	79;"	d
EXT_DSP_BIT_MIDI_CON	msnd_pinnacle.h	112;"	d
FALSE	aedsp16.c	279;"	d	file:
FALSE	os.h	27;"	d
FEEDBACK_CONNECTION	opl3_hw.h	148;"	d
FEEDBACK_MASK	opl3_hw.h	149;"	d
FILT_OFF	sb_mixer.h	60;"	d
FILT_ON	sb_mixer.h	59;"	d
FKS_LOGGING	sb_ess.c	1;"	d	file:
FKS_TEST	sb_ess.c	2;"	d	file:
FKS_test	sb_ess.c	/^static void FKS_test (sb_devc * devc)$/;"	f	file:
FM_MONO	sound_config.h	42;"	d
FM_VOL	sb_mixer.h	42;"	d
FNUM_HIGH_MASK	opl3_hw.h	134;"	d
FNUM_LOW	opl3_hw.h	126;"	d
FORCE_STOP	jz_i2s.c	52;"	d	file:
FRAME_BYTES	swarm_cs4297a.c	171;"	d	file:
FRAME_SAMPLE_BYTES	swarm_cs4297a.c	172;"	d	file:
FRAME_TX_US	swarm_cs4297a.c	189;"	d	file:
FREQ_HI	sb_mixer.h	57;"	d
FREQ_LOW	sb_mixer.h	58;"	d
F_AUDIO_READ_INUSE	msnd.h	224;"	d
F_AUDIO_WRITE_INUSE	msnd.h	220;"	d
F_DISABLE_WRITE_NDELAY	msnd.h	229;"	d
F_EXT_MIDI_INUSE	msnd.h	227;"	d
F_HAVEDIGITAL	msnd.h	219;"	d
F_HDR_MIDI_INUSE	msnd.h	228;"	d
F_READBLOCK	msnd.h	226;"	d
F_READING	msnd.h	225;"	d
F_RESETTING	msnd.h	218;"	d
F_WRITEBLOCK	msnd.h	222;"	d
F_WRITEFLUSH	msnd.h	223;"	d
F_WRITING	msnd.h	221;"	d
FalconInit	dmasound/dmasound_atari.c	/^static void FalconInit(void)$/;"	f	file:
FalconMixerInit	dmasound/dmasound_atari.c	/^static void __init FalconMixerInit(void)$/;"	f	file:
FalconMixerIoctl	dmasound/dmasound_atari.c	/^static int FalconMixerIoctl(u_int cmd, u_long arg)$/;"	f	file:
FalconSetFormat	dmasound/dmasound_atari.c	/^static int FalconSetFormat(int format)$/;"	f	file:
FalconSetVolume	dmasound/dmasound_atari.c	/^static int FalconSetVolume(int volume)$/;"	f	file:
FalconSilence	dmasound/dmasound_atari.c	/^static void FalconSilence(void)$/;"	f	file:
FalconStateInfo	dmasound/dmasound_atari.c	/^static int FalconStateInfo(char *buffer, size_t space)$/;"	f	file:
Free_In_Out_queue	jz_ac97.c	/^static void Free_In_Out_queue(int fragstotal,int fragsize)$/;"	f	file:
Free_In_Out_queue	jz_i2s_4750.c	/^static int Free_In_Out_queue(int fragstotal,int fragsize)$/;"	f	file:
Free_In_Out_queue	jz_i2s_dlv_dma_test.c	/^static int Free_In_Out_queue(int fragstotal,int fragsize)$/;"	f	file:
Free_In_Out_queue	jz_i2s_for_4750.c	/^static int Free_In_Out_queue(int fragstotal,int fragsize)$/;"	f	file:
Free_In_Out_queue	jz_pcm_tlv320aic1106_dma.c	/^static int Free_In_Out_queue(int fragstotal,int fragsize)$/;"	f	file:
GAIN_DB_TO_VOXWARE	dmasound/dmasound_atari.c	1001;"	d	file:
GAIN_VOXWARE_TO_DB	dmasound/dmasound_atari.c	999;"	d	file:
GA_CDCFG_REG	sscape.c	72;"	d	file:
GA_DMAA_REG	sscape.c	68;"	d	file:
GA_DMAB_REG	sscape.c	69;"	d	file:
GA_DMACFG_REG	sscape.c	71;"	d	file:
GA_HMCTL_REG	sscape.c	75;"	d	file:
GA_INTCFG_REG	sscape.c	70;"	d	file:
GA_INTENA_REG	sscape.c	67;"	d	file:
GA_INTSTAT_REG	sscape.c	66;"	d	file:
GA_SMCFGA_REG	sscape.c	73;"	d	file:
GA_SMCFGB_REG	sscape.c	74;"	d	file:
GENERATE_AMI_CT8	dmasound/dmasound_paula.c	191;"	d	file:
GENERATE_AMI_CT_16	dmasound/dmasound_paula.c	242;"	d	file:
GET_CIV	i810_audio.c	482;"	d	file:
GET_DSP_COPYRIGHT	aedsp16.c	310;"	d	file:
GET_DSP_VERSION	aedsp16.c	309;"	d	file:
GET_LVI	i810_audio.c	483;"	d	file:
GLOB_CNT	i810_audio.c	/^	GLOB_CNT =	0x2c,			\/* Global Control *\/$/;"	e	enum:__anon7	file:
GLOB_STA	i810_audio.c	/^	GLOB_STA = 	0x30,			\/* Global Status *\/$/;"	e	enum:__anon7	file:
GPIOIN	trident.h	/^	HEAD_SET_IN = 0x00001000, GPIOIN      = 0x00002000,$/;"	e	enum:serial_intf_ctrl_bits
GPIOOUT	trident.h	/^	GPIOOUT     = 0x00400000,$/;"	e	enum:serial_intf_ctrl_bits
H2I_ADC_C1	hal2.h	145;"	d
H2I_ADC_C2	hal2.h	146;"	d
H2I_AESRX_C	hal2.h	127;"	d
H2I_AESTX_C	hal2.h	135;"	d
H2I_AESTX_C_CLKID_M	hal2.h	137;"	d
H2I_AESTX_C_CLKID_SHIFT	hal2.h	136;"	d
H2I_AESTX_C_DATAT_M	hal2.h	139;"	d
H2I_AESTX_C_DATAT_SHIFT	hal2.h	138;"	d
H2I_BRES1_C1	hal2.h	177;"	d
H2I_BRES1_C2	hal2.h	186;"	d
H2I_BRES2_C1	hal2.h	178;"	d
H2I_BRES2_C2	hal2.h	187;"	d
H2I_BRES3_C1	hal2.h	179;"	d
H2I_BRES3_C2	hal2.h	188;"	d
H2I_BRES_C1_M	hal2.h	182;"	d
H2I_BRES_C1_SHIFT	hal2.h	181;"	d
H2I_BRES_C2_INC_M	hal2.h	191;"	d
H2I_BRES_C2_INC_SHIFT	hal2.h	190;"	d
H2I_BRES_C2_MOD_M	hal2.h	193;"	d
H2I_BRES_C2_MOD_SHIFT	hal2.h	192;"	d
H2I_C1_CLKID_M	hal2.h	153;"	d
H2I_C1_CLKID_SHIFT	hal2.h	152;"	d
H2I_C1_DATAT_M	hal2.h	155;"	d
H2I_C1_DATAT_SHIFT	hal2.h	154;"	d
H2I_C1_DMA_M	hal2.h	151;"	d
H2I_C1_DMA_SHIFT	hal2.h	150;"	d
H2I_C2_DO1	hal2.h	166;"	d
H2I_C2_DO2	hal2.h	167;"	d
H2I_C2_L_ATT_M	hal2.h	171;"	d
H2I_C2_L_ATT_SHIFT	hal2.h	170;"	d
H2I_C2_L_GAIN_M	hal2.h	162;"	d
H2I_C2_L_GAIN_SHIFT	hal2.h	161;"	d
H2I_C2_L_SEL	hal2.h	164;"	d
H2I_C2_MUTE	hal2.h	165;"	d
H2I_C2_R_ATT_M	hal2.h	169;"	d
H2I_C2_R_ATT_SHIFT	hal2.h	168;"	d
H2I_C2_R_GAIN_M	hal2.h	160;"	d
H2I_C2_R_GAIN_SHIFT	hal2.h	159;"	d
H2I_C2_R_SEL	hal2.h	163;"	d
H2I_C_NAUDIO	hal2.h	131;"	d
H2I_C_TS_EN	hal2.h	129;"	d
H2I_C_TS_FRMT	hal2.h	130;"	d
H2I_DAC_C1	hal2.h	143;"	d
H2I_DAC_C2	hal2.h	144;"	d
H2I_DMA_DRV	hal2.h	123;"	d
H2I_DMA_END	hal2.h	115;"	d
H2I_DMA_END_AESRX	hal2.h	117;"	d
H2I_DMA_END_AESTX	hal2.h	118;"	d
H2I_DMA_END_CODECR	hal2.h	120;"	d
H2I_DMA_END_CODECTX	hal2.h	119;"	d
H2I_DMA_END_SY_IN	hal2.h	116;"	d
H2I_DMA_PORT_EN	hal2.h	108;"	d
H2I_DMA_PORT_EN_AESRX	hal2.h	110;"	d
H2I_DMA_PORT_EN_AESTX	hal2.h	111;"	d
H2I_DMA_PORT_EN_CODECR	hal2.h	113;"	d
H2I_DMA_PORT_EN_CODECTX	hal2.h	112;"	d
H2I_DMA_PORT_EN_SY_IN	hal2.h	109;"	d
H2I_RELAY_C	hal2.h	103;"	d
H2I_RELAY_C_STATE	hal2.h	104;"	d
H2I_SYNTH_C	hal2.h	125;"	d
H2I_SYNTH_MAP_C	hal2.h	173;"	d
H2I_UTIME	hal2.h	197;"	d
H2I_UTIME_0_LD	hal2.h	198;"	d
H2I_UTIME_1_LD0	hal2.h	199;"	d
H2I_UTIME_1_LD1	hal2.h	200;"	d
H2I_UTIME_2_LD	hal2.h	201;"	d
H2I_UTIME_3_LD	hal2.h	202;"	d
H2_ADC_BUFSIZE	hal2.c	68;"	d	file:
H2_BLOCK_SIZE	hal2.c	67;"	d	file:
H2_DAC_BUFSIZE	hal2.c	69;"	d	file:
H2_IAR_ACCESS_SELECT	hal2.h	77;"	d
H2_IAR_NUM_M	hal2.h	59;"	d
H2_IAR_PARAM	hal2.h	78;"	d
H2_IAR_RB_INDEX_M	hal2.h	79;"	d
H2_IAR_TYPE_M	hal2.h	53;"	d
H2_INDIRECT_WAIT	hal2.c	127;"	d	file:
H2_ISR_CODEC_RESET_N	hal2.h	35;"	d
H2_ISR_GLOBAL_RESET_N	hal2.h	34;"	d
H2_ISR_QUAD_MODE	hal2.h	33;"	d
H2_ISR_TSTATUS	hal2.h	31;"	d
H2_ISR_USTATUS	hal2.h	32;"	d
H2_MIXERS	hal2.c	105;"	d	file:
H2_MIX_INPUT_GAIN	hal2.c	104;"	d	file:
H2_MIX_OUTPUT_ATT	hal2.c	103;"	d	file:
H2_READ_ADDR	hal2.c	129;"	d	file:
H2_REV_AUDIO_PRESENT	hal2.h	39;"	d
H2_REV_BOARD_M	hal2.h	40;"	d
H2_REV_MAJOR_CHIP_M	hal2.h	41;"	d
H2_REV_MINOR_CHIP_M	hal2.h	42;"	d
H2_SUPPORTED_FORMATS	hal2.c	149;"	d	file:
H2_WRITE_ADDR	hal2.c	130;"	d	file:
HAL2_PBUS_DMACFG	hal2.c	1463;"	d	file:
HARDRETRY	aedsp16.c	331;"	d	file:
HAS_8BIT_TABLES	dmasound/dmasound.h	61;"	d
HAS_8BIT_TABLES	dmasound/dmasound.h	66;"	d
HAVE_DSPCODEH	msnd_pinnacle.c	61;"	d	file:
HAVE_DSPCODEH	msnd_pinnacle.c	67;"	d	file:
HBO	vwsnd.c	1544;"	d	file:
HDEXAR_AUX_SET_POTS	msnd_classic.h	67;"	d
HDEXAR_AUX_SET_POTS	msnd_pinnacle.h	92;"	d
HDEXAR_CAL_A_TO_D	msnd_classic.h	68;"	d
HDEXAR_CAL_A_TO_D	msnd_pinnacle.h	93;"	d
HDEXAR_CLEAR_PEAKS	msnd_classic.h	65;"	d
HDEXAR_CLEAR_PEAKS	msnd_pinnacle.h	90;"	d
HDEXAR_IN_SET_POTS	msnd_classic.h	66;"	d
HDEXAR_IN_SET_POTS	msnd_pinnacle.h	91;"	d
HDEXAR_MIC_SET_POTS	msnd_pinnacle.h	98;"	d
HDEXAR_RD_EXT_DSP_BITS	msnd_classic.h	69;"	d
HDEXAR_RD_EXT_DSP_BITS	msnd_pinnacle.h	94;"	d
HDEXAR_READ_DAT_IN	msnd_pinnacle.h	97;"	d
HDEXAR_SET_ANA_IN	msnd_pinnacle.h	89;"	d
HDEXAR_SET_DAT_IN	msnd_pinnacle.h	99;"	d
HDEXAR_SET_SYNTH_44	msnd_pinnacle.h	102;"	d
HDEXAR_SET_SYNTH_48	msnd_pinnacle.h	101;"	d
HDEXAR_SET_SYNTH_IN	msnd_pinnacle.h	96;"	d
HDEX_AUX_REQ	msnd.h	143;"	d
HDEX_BASE	msnd.h	132;"	d
HDEX_MIDI_IN_START	msnd.h	139;"	d
HDEX_MIDI_IN_STOP	msnd.h	140;"	d
HDEX_MIDI_OUT_START	msnd.h	141;"	d
HDEX_MIDI_OUT_STOP	msnd.h	142;"	d
HDEX_PLAY_PAUSE	msnd.h	135;"	d
HDEX_PLAY_RESUME	msnd.h	136;"	d
HDEX_PLAY_START	msnd.h	133;"	d
HDEX_PLAY_STOP	msnd.h	134;"	d
HDEX_RECORD_START	msnd.h	137;"	d
HDEX_RECORD_STOP	msnd.h	138;"	d
HEAD_SET_IN	trident.h	/^	HEAD_SET_IN = 0x00001000, GPIOIN      = 0x00002000,$/;"	e	enum:serial_intf_ctrl_bits
HIBYTE	msnd.h	147;"	d
HIDSP_DAT_IN_OFF	msnd_pinnacle.h	87;"	d
HIDSP_INPUT_CLIPPING	msnd_classic.h	61;"	d
HIDSP_INPUT_CLIPPING	msnd_pinnacle.h	85;"	d
HIDSP_INT_PLAY_UNDER	msnd_classic.h	59;"	d
HIDSP_INT_PLAY_UNDER	msnd_pinnacle.h	73;"	d
HIDSP_INT_RECORD_OVER	msnd_classic.h	60;"	d
HIDSP_INT_RECORD_OVER	msnd_pinnacle.h	76;"	d
HIDSP_MIDI_FRAME_ERR	msnd_pinnacle.h	81;"	d
HIDSP_MIDI_IN_OVER	msnd_classic.h	62;"	d
HIDSP_MIDI_IN_OVER	msnd_pinnacle.h	79;"	d
HIDSP_MIDI_OVERRUN_ERR	msnd_classic.h	63;"	d
HIDSP_MIDI_OVERRUN_ERR	msnd_pinnacle.h	83;"	d
HIDSP_MIDI_PARITY_ERR	msnd_pinnacle.h	82;"	d
HIDSP_MIX_CLIPPING	msnd_pinnacle.h	86;"	d
HIDSP_PLAY_UNDER	msnd_pinnacle.h	72;"	d
HIDSP_RECQ_OVERFLOW	msnd_pinnacle.h	75;"	d
HIDSP_SSI_RX_OVERFLOW	msnd_pinnacle.h	77;"	d
HIDSP_SSI_TX_UNDER	msnd_pinnacle.h	74;"	d
HIHAT	opl3.c	294;"	d	file:
HIHAT_ON	opl3_hw.h	79;"	d
HIMT_DAT_OFF	msnd_pinnacle.h	70;"	d
HIMT_DSP	msnd.h	130;"	d
HIMT_MIDI_EOS	msnd.h	126;"	d
HIMT_MIDI_IN_UCHAR	msnd.h	129;"	d
HIMT_MIDI_OUT	msnd.h	127;"	d
HIMT_PLAY_DONE	msnd.h	124;"	d
HIMT_RECORD_DONE	msnd.h	125;"	d
HIWORD	msnd.h	145;"	d
HOSTQ_SIZE	msnd_classic.h	82;"	d
HOSTQ_SIZE	msnd_pinnacle.h	115;"	d
HOST_CTRL	sscape.c	55;"	d	file:
HOST_DATA	sscape.c	58;"	d	file:
HPBITMODE_16	msnd_classic.h	56;"	d
HPBITMODE_8	msnd_classic.h	57;"	d
HPBLKSEL_0	msnd_classic.h	50;"	d
HPBLKSEL_0	msnd_pinnacle.h	67;"	d
HPBLKSEL_1	msnd_classic.h	51;"	d
HPBLKSEL_1	msnd_pinnacle.h	68;"	d
HPCVR_HC	msnd.h	87;"	d
HPDSPRESET_OFF	msnd_classic.h	47;"	d
HPDSPRESET_OFF	msnd_pinnacle.h	64;"	d
HPDSPRESET_ON	msnd_classic.h	48;"	d
HPDSPRESET_ON	msnd_pinnacle.h	65;"	d
HPICR_HF0	msnd.h	83;"	d
HPICR_HF1	msnd.h	82;"	d
HPICR_HM0	msnd.h	81;"	d
HPICR_HM1	msnd.h	80;"	d
HPICR_INIT	msnd.h	79;"	d
HPICR_RREQ	msnd.h	85;"	d
HPICR_TREQ	msnd.h	84;"	d
HPIO_210	msnd.h	103;"	d
HPIO_220	msnd.h	102;"	d
HPIO_230	msnd.h	101;"	d
HPIO_240	msnd.h	100;"	d
HPIO_250	msnd.h	99;"	d
HPIO_260	msnd.h	98;"	d
HPIO_290	msnd.h	97;"	d
HPIO_3E0	msnd.h	104;"	d
HPIRQ_10	msnd.h	119;"	d
HPIRQ_11	msnd.h	120;"	d
HPIRQ_12	msnd.h	121;"	d
HPIRQ_15	msnd.h	122;"	d
HPIRQ_5	msnd.h	116;"	d
HPIRQ_7	msnd.h	117;"	d
HPIRQ_9	msnd.h	118;"	d
HPIRQ_NONE	msnd.h	115;"	d
HPISR_DMA	msnd.h	90;"	d
HPISR_HF2	msnd.h	92;"	d
HPISR_HF3	msnd.h	91;"	d
HPISR_HREQ	msnd.h	89;"	d
HPISR_RXDF	msnd.h	95;"	d
HPISR_TRDY	msnd.h	93;"	d
HPISR_TXDE	msnd.h	94;"	d
HPMEM_B000	msnd.h	107;"	d
HPMEM_C800	msnd.h	108;"	d
HPMEM_D000	msnd.h	109;"	d
HPMEM_D400	msnd.h	110;"	d
HPMEM_D800	msnd.h	111;"	d
HPMEM_E000	msnd.h	112;"	d
HPMEM_E800	msnd.h	113;"	d
HPMEM_NONE	msnd.h	106;"	d
HPPRORESET_OFF	msnd_classic.h	44;"	d
HPPRORESET_ON	msnd_classic.h	45;"	d
HPR_BLRC	msnd.h	70;"	d
HPR_SPR1	msnd.h	71;"	d
HPR_SPR2	msnd.h	72;"	d
HPR_TCL0	msnd.h	73;"	d
HPR_TCL1	msnd.h	74;"	d
HPR_TCL2	msnd.h	75;"	d
HPR_TCL3	msnd.h	76;"	d
HPR_TCL4	msnd.h	77;"	d
HPWAITSTATE_0	msnd_classic.h	53;"	d
HPWAITSTATE_1	msnd_classic.h	54;"	d
HP_BITM	msnd_classic.h	38;"	d
HP_BLKS	msnd_classic.h	42;"	d
HP_BLKS	msnd_pinnacle.h	62;"	d
HP_CVR	msnd.h	50;"	d
HP_CVR_DEF	msnd.h	63;"	d
HP_DSPR	msnd_classic.h	40;"	d
HP_DSPR	msnd_pinnacle.h	61;"	d
HP_ICR	msnd.h	49;"	d
HP_ICR_DEF	msnd.h	62;"	d
HP_INFO	msnd.h	54;"	d
HP_IRQM	msnd.h	68;"	d
HP_ISR	msnd.h	51;"	d
HP_ISR_DEF	msnd.h	64;"	d
HP_IVR	msnd.h	52;"	d
HP_IVR_DEF	msnd.h	65;"	d
HP_MEMM	msnd_classic.h	36;"	d
HP_NU	msnd.h	53;"	d
HP_NU_DEF	msnd.h	66;"	d
HP_PROR	msnd_classic.h	41;"	d
HP_RXH	msnd.h	56;"	d
HP_RXL	msnd.h	60;"	d
HP_RXM	msnd.h	58;"	d
HP_TXH	msnd.h	55;"	d
HP_TXL	msnd.h	59;"	d
HP_TXM	msnd.h	57;"	d
HP_WAIT	msnd_classic.h	39;"	d
HP_turn_off	jzcodec.c	/^void HP_turn_off(void)$/;"	f
HP_turn_on	jzcodec.c	/^void HP_turn_on(void)$/;"	f
HSET	trident.h	/^	PCM_LR         = 0x0800, HSET           = 0x0c00,$/;"	e	enum:channel_attribute
HWBASE_AD	btaudio.c	94;"	d	file:
HWBUF_ORDER	vwsnd.c	1545;"	d	file:
HWBUF_SHIFT	vwsnd.c	1542;"	d	file:
HWBUF_SIZE	vwsnd.c	1543;"	d	file:
HW_BUSY	vwsnd.c	/^	HW_BUSY  = 1 << 2,$/;"	e	enum:vwsnd_port_flags	file:
HW_RUNNING	vwsnd.c	/^	HW_RUNNING,$/;"	e	enum:vwsnd_port_hwstate	file:
HW_STOPPED	vwsnd.c	/^	HW_STOPPED,$/;"	e	enum:vwsnd_port_hwstate	file:
I2S_CLOCK	trident.h	/^	I2S_CLOCK   = 0x00000004, PCM_SEC_AC97= 0x00000008,$/;"	e	enum:serial_intf_ctrl_bits
I2S_FIFO_DEPTH	jz_i2s.c	771;"	d	file:
I2S_INPUT_EN	trident.h	/^	I2S_OUTPUT_EN = 0x00000040, I2S_INPUT_EN = 0x00000080,$/;"	e	enum:serial_intf_ctrl_bits
I2S_LR	trident.h	/^	I2S_LR         = 0x1000, CENTER_LFE     = 0x1400,$/;"	e	enum:channel_attribute
I2S_OUTPUT_EN	trident.h	/^	I2S_OUTPUT_EN = 0x00000040, I2S_INPUT_EN = 0x00000080,$/;"	e	enum:serial_intf_ctrl_bits
I2S_PDN	ak4642en.c	57;"	d	file:
I810_CARD_MAGIC	i810_audio.c	224;"	d	file:
I810_DMA_MASK	i810_audio.c	226;"	d	file:
I810_FMT_16BIT	i810_audio.c	128;"	d	file:
I810_FMT_MASK	i810_audio.c	130;"	d	file:
I810_FMT_STEREO	i810_audio.c	129;"	d	file:
I810_IOREAD	i810_audio.c	456;"	d	file:
I810_IOREADB	i810_audio.c	468;"	d	file:
I810_IOREADL	i810_audio.c	466;"	d	file:
I810_IOREADW	i810_audio.c	467;"	d	file:
I810_IOWRITE	i810_audio.c	470;"	d	file:
I810_IOWRITEB	i810_audio.c	480;"	d	file:
I810_IOWRITEL	i810_audio.c	478;"	d	file:
I810_IOWRITEW	i810_audio.c	479;"	d	file:
I810_MODULE_NAME	i810_audio.c	3604;"	d	file:
I810_STATE_MAGIC	i810_audio.c	225;"	d	file:
ICH82801AA	i810_audio.c	/^	ICH82801AA = 0,$/;"	e	enum:__anon9	file:
ICH82901AB	i810_audio.c	/^	ICH82901AB,$/;"	e	enum:__anon9	file:
IC_ODIE	sscape.c	106;"	d	file:
IC_OPUS	sscape.c	107;"	d	file:
IEV_SZ	sequencer.c	62;"	d	file:
IMODE_INIT	sb.h	23;"	d
IMODE_INPUT	sb.h	22;"	d
IMODE_MIDI	sb.h	24;"	d
IMODE_NONE	sb.h	20;"	d
IMODE_OUTPUT	sb.h	21;"	d
INC_USE_COUNT	vwsnd.c	1525;"	d	file:
INDEX_ADDRESS	cs4232.c	61;"	d	file:
INDEX_DATA	cs4232.c	62;"	d	file:
INITCODE	msnd_classic.h	166;"	d
INITCODE	msnd_classic.h	181;"	d
INITCODE	msnd_pinnacle.h	227;"	d
INITCODE	msnd_pinnacle.h	242;"	d
INITCODEFILE	msnd_classic.h	179;"	d
INITCODEFILE	msnd_pinnacle.h	240;"	d
INITCODESIZE	msnd_classic.h	168;"	d
INITCODESIZE	msnd_classic.h	183;"	d
INITCODESIZE	msnd_pinnacle.h	229;"	d
INITCODESIZE	msnd_pinnacle.h	244;"	d
INIT_MPU401	aedsp16.c	417;"	d	file:
INIT_MSS	aedsp16.c	416;"	d	file:
INIT_NONE	aedsp16.c	414;"	d	file:
INIT_SBPRO	aedsp16.c	415;"	d	file:
INPUT_AVAIL	mpu401.c	107;"	d	file:
INPUT_AVAIL	uart401.c	74;"	d	file:
INPUT_AVAIL	uart6850.c	66;"	d	file:
INTEL440MX	i810_audio.c	/^	INTEL440MX,$/;"	e	enum:__anon9	file:
INTELICH2	i810_audio.c	/^	INTELICH2,$/;"	e	enum:__anon9	file:
INTELICH3	i810_audio.c	/^	INTELICH3,$/;"	e	enum:__anon9	file:
INTELICH4	i810_audio.c	/^	INTELICH4,$/;"	e	enum:__anon9	file:
INTELICH5	i810_audio.c	/^	INTELICH5,$/;"	e	enum:__anon9	file:
INT_GPI	i810_audio.c	220;"	d	file:
INT_MASK	i810_audio.c	221;"	d	file:
INT_MC	i810_audio.c	215;"	d	file:
INT_MO	i810_audio.c	218;"	d	file:
INT_NI	i810_audio.c	219;"	d	file:
INT_PI	i810_audio.c	217;"	d	file:
INT_PO	i810_audio.c	216;"	d	file:
INT_PRI	i810_audio.c	214;"	d	file:
INT_SEC	i810_audio.c	213;"	d	file:
IN_FILTER	sb_mixer.h	39;"	d
IN_USE	vwsnd.c	1527;"	d	file:
IOBASE	aedsp16.c	346;"	d	file:
IOBASE_REGION_SIZE	aedsp16.c	284;"	d	file:
IOCTL_IN	dmasound/dmasound.h	45;"	d
IOCTL_OUT	dmasound/dmasound.h	49;"	d
IOC_DEBUG	jz_i2s_dbg.h	42;"	d
IO_REG_OFF	i810_audio.c	454;"	d	file:
IREG_ACTIVATE	msnd_pinnacle.h	37;"	d
IREG_EECONTROL	msnd_pinnacle.h	40;"	d
IREG_IO0_BASEHI	msnd_pinnacle.h	50;"	d
IREG_IO0_BASELO	msnd_pinnacle.h	51;"	d
IREG_IO1_BASEHI	msnd_pinnacle.h	52;"	d
IREG_IO1_BASELO	msnd_pinnacle.h	53;"	d
IREG_IRQ_NUMBER	msnd_pinnacle.h	54;"	d
IREG_IRQ_TYPE	msnd_pinnacle.h	55;"	d
IREG_LOGDEVICE	msnd_pinnacle.h	36;"	d
IREG_MEMBASEHI	msnd_pinnacle.h	41;"	d
IREG_MEMBASELO	msnd_pinnacle.h	42;"	d
IREG_MEMCONTROL	msnd_pinnacle.h	43;"	d
IREG_MEMRANGEHI	msnd_pinnacle.h	44;"	d
IREG_MEMRANGELO	msnd_pinnacle.h	45;"	d
IRQSTAT	waveartist.h	12;"	d
IRQTYPE_EDGE	msnd_pinnacle.h	59;"	d
IRQTYPE_HIGH	msnd_pinnacle.h	56;"	d
IRQTYPE_LEVEL	msnd_pinnacle.h	58;"	d
IRQTYPE_LOW	msnd_pinnacle.h	57;"	d
IRQ_ACK	waveartist.h	35;"	d
IRQ_BTAUDIO	btaudio.c	69;"	d	file:
IRQ_DEBUG	jz_i2s_dbg.h	41;"	d
IRQ_DEBUG	jz_i2s_dbg.h	49;"	d
IRQ_DEBUG	jz_i2s_dbg.h	56;"	d
IRQ_FBUS	btaudio.c	65;"	d	file:
IRQ_FDSR	btaudio.c	63;"	d	file:
IRQ_FTRGT	btaudio.c	64;"	d	file:
IRQ_NR	sb_mixer.h	45;"	d
IRQ_OCERR	btaudio.c	59;"	d	file:
IRQ_OFLOW	btaudio.c	67;"	d	file:
IRQ_PABORT	btaudio.c	60;"	d	file:
IRQ_PPERR	btaudio.c	62;"	d	file:
IRQ_REQ	waveartist.h	21;"	d
IRQ_RESET	opl3_hw.h	49;"	d
IRQ_RIPERR	btaudio.c	61;"	d	file:
IRQ_RISCI	btaudio.c	66;"	d	file:
IRQ_SCERR	btaudio.c	58;"	d	file:
IRQ_STAT	sb_mixer.h	47;"	d
Init_In_Out_queue	jz_ac97.c	/^static void Init_In_Out_queue(int fragstotal,int fragsize)$/;"	f	file:
Init_In_Out_queue	jz_i2s_4750.c	/^static int Init_In_Out_queue(int fragstotal,int fragsize)$/;"	f	file:
Init_In_Out_queue	jz_i2s_dlv_dma_test.c	/^static int Init_In_Out_queue(int fragstotal,int fragsize)$/;"	f	file:
Init_In_Out_queue	jz_i2s_for_4750.c	/^static int Init_In_Out_queue(int fragstotal,int fragsize)$/;"	f	file:
Init_In_Out_queue	jz_pcm_tlv320aic1106_dma.c	/^static int Init_In_Out_queue(int fragstotal,int fragsize)$/;"	f	file:
JACK_PLUG_IRQ	ak4642en.c	59;"	d	file:
JACK_PLUG_PIN	ak4642en.c	58;"	d	file:
JOY	aedsp16.c	347;"	d	file:
JQS__size	msnd.h	169;"	d
JQS_wHead	msnd.h	167;"	d
JQS_wSize	msnd.h	166;"	d
JQS_wStart	msnd.h	165;"	d
JQS_wTail	msnd.h	168;"	d
JZCODEC_RW_BUFFER_SIZE	jz_i2s.c	46;"	d	file:
JZCODEC_RW_BUFFER_SIZE	jz_i2s_4750.c	45;"	d	file:
JZCODEC_RW_BUFFER_SIZE	jz_i2s_dlv_dma_test.c	46;"	d	file:
JZCODEC_RW_BUFFER_SIZE	jz_i2s_for_4750.c	45;"	d	file:
JZCODEC_RW_BUFFER_SIZE	jz_pcm_tlv320aic1106_dma.c	40;"	d	file:
JZCODEC_RW_BUFFER_TOTAL	jz_i2s.c	47;"	d	file:
JZCODEC_RW_BUFFER_TOTAL	jz_i2s_4750.c	46;"	d	file:
JZCODEC_RW_BUFFER_TOTAL	jz_i2s_dlv_dma_test.c	47;"	d	file:
JZCODEC_RW_BUFFER_TOTAL	jz_i2s_for_4750.c	46;"	d	file:
JZCODEC_RW_BUFFER_TOTAL	jz_pcm_tlv320aic1106_dma.c	41;"	d	file:
JZCODEC_USER_BUFFER	jz_i2s_dlv_dma_test.c	48;"	d	file:
JZCODEC_USER_BUFFER	jz_pcm_tlv320aic1106_dma.c	42;"	d	file:
KBD_SPLIT_REGISTER	opl3_hw.h	67;"	d
KEYBOARD_SPLIT	opl3_hw.h	69;"	d
KEYON_BIT	opl3_hw.h	132;"	d
KEYON_BLOCK	opl3_hw.h	131;"	d
KEY_PORT	cs4232.c	59;"	d	file:
KSL_LEVEL	opl3_hw.h	97;"	d
KSL_MASK	opl3_hw.h	98;"	d
KSR	opl3_hw.h	91;"	d
LBUFCOPYSIZE	sb_audio.c	836;"	d	file:
LD_ACTIVATE	msnd_pinnacle.h	38;"	d
LD_DISACTIVATE	msnd_pinnacle.h	39;"	d
LEAVE	jz_i2s_dbg.h	104;"	d
LEAVE	jz_i2s_dbg.h	108;"	d
LEFT_4OP_0	opl3_hw.h	59;"	d
LEFT_4OP_1	opl3_hw.h	60;"	d
LEFT_4OP_2	opl3_hw.h	61;"	d
LEFT_CHN	ad1848_mixer.h	242;"	d
LEFT_CHN	sb_mixer.h	72;"	d
LFEOUT	trident.h	/^	CENTEROUT   = 0x00040000, LFEOUT      = 0x00080000,$/;"	e	enum:serial_intf_ctrl_bits
LINE1IN	trident.h	/^	PCMIN       = 0x00000100, LINE1IN     = 0x00000200,$/;"	e	enum:serial_intf_ctrl_bits
LINE1OUT	trident.h	/^	LINE1OUT    = 0x00100000, LINE2OUT    = 0x00200000,$/;"	e	enum:serial_intf_ctrl_bits
LINE2IN	trident.h	/^	MICIN       = 0x00000400, LINE2IN     = 0x00000800,$/;"	e	enum:serial_intf_ctrl_bits
LINE2OUT	trident.h	/^	LINE1OUT    = 0x00100000, LINE2OUT    = 0x00200000,$/;"	e	enum:serial_intf_ctrl_bits
LINE_VOL	sb_mixer.h	44;"	d
LI_AUDIO1_MSC	vwsnd.c	421;"	d	file:
LI_AUDIO1_UST	vwsnd.c	420;"	d	file:
LI_AUDIO2_MSC	vwsnd.c	423;"	d	file:
LI_AUDIO2_UST	vwsnd.c	422;"	d	file:
LI_CCFG_DIRECTION	vwsnd.c	402;"	d	file:
LI_CCFG_DIR_IN	vwsnd.c	403;"	d	file:
LI_CCFG_DIR_OUT	vwsnd.c	404;"	d	file:
LI_CCFG_FMT_16BIT	vwsnd.c	410;"	d	file:
LI_CCFG_FMT_8BIT	vwsnd.c	409;"	d	file:
LI_CCFG_FORMAT	vwsnd.c	408;"	d	file:
LI_CCFG_LOCK	vwsnd.c	400;"	d	file:
LI_CCFG_MODE	vwsnd.c	405;"	d	file:
LI_CCFG_MODE_MONO	vwsnd.c	406;"	d	file:
LI_CCFG_MODE_STEREO	vwsnd.c	407;"	d	file:
LI_CCFG_SLOT	vwsnd.c	401;"	d	file:
LI_CCTL_DMA_ENABLE	vwsnd.c	394;"	d	file:
LI_CCTL_RESET	vwsnd.c	392;"	d	file:
LI_CCTL_RPTR	vwsnd.c	397;"	d	file:
LI_CCTL_SIZE	vwsnd.c	393;"	d	file:
LI_CCTL_TMASK	vwsnd.c	395;"	d	file:
LI_CCTL_TPTR	vwsnd.c	396;"	d	file:
LI_CCTL_WPTR	vwsnd.c	398;"	d	file:
LI_CC_ADDR_MASK	vwsnd.c	386;"	d	file:
LI_CC_BUSY	vwsnd.c	382;"	d	file:
LI_CC_DIR	vwsnd.c	383;"	d	file:
LI_CC_DIR_RD	vwsnd.c	384;"	d	file:
LI_CC_DIR_WR	vwsnd.c	385;"	d	file:
LI_CODEC_COMMAND	vwsnd.c	381;"	d	file:
LI_CODEC_DATA	vwsnd.c	388;"	d	file:
LI_COMM1_BASE	vwsnd.c	390;"	d	file:
LI_COMM1_CFG	vwsnd.c	399;"	d	file:
LI_COMM1_CTL	vwsnd.c	391;"	d	file:
LI_COMM2_BASE	vwsnd.c	411;"	d	file:
LI_COMM2_CFG	vwsnd.c	414;"	d	file:
LI_COMM2_CTL	vwsnd.c	412;"	d	file:
LI_HC_LINK_CODEC	vwsnd.c	370;"	d	file:
LI_HC_LINK_ENABLE	vwsnd.c	368;"	d	file:
LI_HC_LINK_FAILURE	vwsnd.c	369;"	d	file:
LI_HC_LINK_READY	vwsnd.c	371;"	d	file:
LI_HC_RESET	vwsnd.c	367;"	d	file:
LI_HOST_CONTROLLER	vwsnd.c	366;"	d	file:
LI_INTR_COMM1_OVERFLOW	vwsnd.c	379;"	d	file:
LI_INTR_COMM1_TRIG	vwsnd.c	378;"	d	file:
LI_INTR_COMM2_TRIG	vwsnd.c	376;"	d	file:
LI_INTR_COMM2_UNDERFLOW	vwsnd.c	377;"	d	file:
LI_INTR_LINK_ERR	vwsnd.c	375;"	d	file:
LI_INTR_MASK	vwsnd.c	374;"	d	file:
LI_INTR_STATUS	vwsnd.c	373;"	d	file:
LI_PAGE0_OFFSET	vwsnd.c	/^	LI_PAGE0_OFFSET = 0x01000 - 0x1000, \/* FF001000 *\/$/;"	e	enum:__anon22	file:
LI_PAGE1_OFFSET	vwsnd.c	/^	LI_PAGE1_OFFSET = 0x0F000 - 0x1000, \/* FF00F000 *\/$/;"	e	enum:__anon22	file:
LI_PAGE2_OFFSET	vwsnd.c	/^	LI_PAGE2_OFFSET = 0x10000 - 0x1000, \/* FF010000 *\/$/;"	e	enum:__anon22	file:
LI_UST_HIGH	vwsnd.c	418;"	d	file:
LI_UST_LOW	vwsnd.c	417;"	d	file:
LOBYTE	msnd.h	148;"	d
LOGNAME	msnd.c	43;"	d	file:
LOGNAME	msnd_pinnacle.c	64;"	d	file:
LOGNAME	msnd_pinnacle.c	70;"	d	file:
LONGNAME	msnd_classic.h	185;"	d
LONGNAME	msnd_pinnacle.h	246;"	d
LOWORD	msnd.h	146;"	d
LOW_LEVEL_STAT_ALLOC	dmasound/dmasound_core.c	1181;"	d	file:
LPDAQD	msnd.h	/^typedef void __iomem *		LPDAQD;$/;"	t
MACHINE	dmasound/dmasound.h	/^} MACHINE;$/;"	t	typeref:struct:__anon17
MAKELONG	msnd.h	149;"	d
MAKEWORD	msnd.h	150;"	d
MANUAL_PNP	os.h	4;"	d
MASKP2	i810_audio.c	111;"	d	file:
MASTER_VOL	sb_mixer.h	41;"	d
MAXCARDS	hal2.c	139;"	d	file:
MAXDELAY	jz_i2s_4750.c	2121;"	d	file:
MAXDELAY	jz_i2s_4750.c	44;"	d	file:
MAXDELAY	jz_i2s_dlv_dma_test.c	45;"	d	file:
MAXDELAY	jz_i2s_for_4750.c	2092;"	d	file:
MAXDELAY	jz_i2s_for_4750.c	44;"	d	file:
MAXDELAY	jz_pcm_tlv320aic1106_dma.c	39;"	d	file:
MAX_AUDIO_DEV	dmasound/dmasound.h	34;"	d
MAX_AUDIO_DEV	sound_config.h	59;"	d
MAX_BUFSIZE	dmasound/dmasound.h	70;"	d
MAX_BUFSIZE	dmasound/dmasound.h	78;"	d
MAX_CARDS	via82cxxx_audio.c	68;"	d	file:
MAX_CATCH_RADIUS	dmasound/dmasound.h	40;"	d
MAX_FRAGCOUNT	vwsnd.c	1554;"	d	file:
MAX_FRAGSHIFT	vwsnd.c	1550;"	d	file:
MAX_FRAGSIZE	vwsnd.c	1552;"	d	file:
MAX_FRAG_SIZE	dmasound/dmasound.h	71;"	d
MAX_FRAG_SIZE	dmasound/dmasound.h	79;"	d
MAX_MIDI_DEV	dmasound/dmasound.h	37;"	d
MAX_MIDI_DEV	sound_config.h	62;"	d
MAX_MIXER_DEV	dmasound/dmasound.h	35;"	d
MAX_MIXER_DEV	sound_config.h	60;"	d
MAX_QUEUE_SIZE	midibuf.c	28;"	d	file:
MAX_RATE_COUNT	jzdlv.c	607;"	d	file:
MAX_RATE_COUNT	jzdlv.c	632;"	d	file:
MAX_REALTIME_FACTOR	sound_config.h	29;"	d
MAX_RETRY	jz_ac97.c	42;"	d	file:
MAX_SIZE	hex2hex.c	12;"	d	file:
MAX_SPEED	vwsnd.c	1547;"	d	file:
MAX_SUB_BUFFERS	dev_table.h	70;"	d
MAX_SYNTH_DEV	dmasound/dmasound.h	36;"	d
MAX_SYNTH_DEV	sound_config.h	61;"	d
MAX_SYSEX_BUF	dev_table.h	289;"	d
MAX_TIMER_DEV	dmasound/dmasound.h	38;"	d
MAX_TIMER_DEV	sound_config.h	63;"	d
MAX_VOICE	opl3.c	39;"	d	file:
MBUF_MAX	mpu401.c	61;"	d	file:
MCE_bit	ad1848.c	/^	unsigned char   MCE_bit;$/;"	m	struct:__anon1	file:
MDB	sound_config.h	144;"	d
MDB	sound_config.h	146;"	d
MDL_AEDSP	sb.h	45;"	d
MDL_AZTECH	sb.h	43;"	d
MDL_ES1868MIDI	sb.h	44;"	d
MDL_ESS	sb.h	42;"	d
MDL_ESSPCI	sb.h	46;"	d
MDL_JAZZ	sb.h	40;"	d
MDL_NONE	sb.h	33;"	d
MDL_SB1	sb.h	34;"	d
MDL_SB16	sb.h	38;"	d
MDL_SB2	sb.h	35;"	d
MDL_SB201	sb.h	36;"	d
MDL_SBPNP	sb.h	39;"	d
MDL_SBPRO	sb.h	37;"	d
MDL_SMW	sb.h	41;"	d
MDL_YMPCI	sb.h	47;"	d
MD_1845	ad1848.c	83;"	d	file:
MD_1845_SSCAPE	ad1848.c	88;"	d	file:
MD_1848	ad1848.c	80;"	d	file:
MD_4231	ad1848.c	81;"	d	file:
MD_4231A	ad1848.c	82;"	d	file:
MD_4232	ad1848.c	84;"	d	file:
MD_4235	ad1848.c	87;"	d	file:
MD_4236	ad1848.c	89;"	d	file:
MD_4239	ad1848.c	91;"	d	file:
MD_42xB	ad1848.c	90;"	d	file:
MD_C930	ad1848.c	85;"	d	file:
MD_IWAVE	ad1848.c	86;"	d	file:
MEMTYPE_16BIT	msnd_pinnacle.h	47;"	d
MEMTYPE_8BIT	msnd_pinnacle.h	46;"	d
MEMTYPE_HIADDR	msnd_pinnacle.h	49;"	d
MEMTYPE_RANGE	msnd_pinnacle.h	48;"	d
MIC	trident.h	/^	MIC            = 0x1400,$/;"	e	enum:channel_attribute
MICIN	trident.h	/^	MICIN       = 0x00000400, LINE2IN     = 0x00000800,$/;"	e	enum:serial_intf_ctrl_bits
MIC_MIX	sb_mixer.h	37;"	d
MIC_VOL	sb_mixer.h	36;"	d
MIDIBUF_C	midibuf.c	19;"	d	file:
MIDI_CTRL	sscape.c	54;"	d	file:
MIDI_DATA	sscape.c	53;"	d	file:
MIDI_SYNTH_CAPS	mpu401.c	878;"	d	file:
MIDI_SYNTH_CAPS	pas2_midi.c	192;"	d	file:
MIDI_SYNTH_CAPS	sb_midi.c	144;"	d	file:
MIDI_SYNTH_CAPS	uart401.c	203;"	d	file:
MIDI_SYNTH_CAPS	uart6850.c	229;"	d	file:
MIDI_SYNTH_CAPS	v_midi.c	129;"	d	file:
MIDI_SYNTH_NAME	mpu401.c	877;"	d	file:
MIDI_SYNTH_NAME	pas2_midi.c	191;"	d	file:
MIDI_SYNTH_NAME	sb_midi.c	143;"	d	file:
MIDI_SYNTH_NAME	uart401.c	202;"	d	file:
MIDI_SYNTH_NAME	uart6850.c	228;"	d	file:
MIDI_SYNTH_NAME	v_midi.c	128;"	d	file:
MIDIbuf_avail	midibuf.c	/^EXPORT_SYMBOL(MIDIbuf_avail);$/;"	v
MIDIbuf_avail	midibuf.c	/^int MIDIbuf_avail(int dev)$/;"	f
MIDIbuf_ioctl	midibuf.c	/^int MIDIbuf_ioctl(int dev, struct file *file,$/;"	f
MIDIbuf_open	midibuf.c	/^int MIDIbuf_open(int dev, struct file *file)$/;"	f
MIDIbuf_poll	midibuf.c	/^unsigned int MIDIbuf_poll(int dev, struct file *file, poll_table * wait)$/;"	f
MIDIbuf_read	midibuf.c	/^int MIDIbuf_read(int dev, struct file *file, char __user *buf, int count)$/;"	f
MIDIbuf_release	midibuf.c	/^void MIDIbuf_release(int dev, struct file *file)$/;"	f
MIDIbuf_write	midibuf.c	/^int MIDIbuf_write(int dev, struct file *file, const char __user *buf, int count)$/;"	f
MIDLP_IE	trident.h	/^	ENDLP_IE    = 0x00001000, MIDLP_IE    = 0x00002000,$/;"	e	enum:global_control_bits
MIDQ	msnd.h	/^	void __iomem *DAPQ, *DARQ, *MODQ, *MIDQ, *DSPQ;$/;"	m	struct:multisound_dev
MIDQ_BUFF_SIZE	msnd_classic.h	95;"	d
MIDQ_BUFF_SIZE	msnd_pinnacle.h	128;"	d
MIDQ_DATA_BUFF	msnd_classic.h	101;"	d
MIDQ_DATA_BUFF	msnd_pinnacle.h	134;"	d
MIDQ_OFFSET	msnd_classic.h	107;"	d
MIDQ_OFFSET	msnd_pinnacle.h	140;"	d
MIN_BUFFERS	dmasound/dmasound.h	67;"	d
MIN_BUFFERS	dmasound/dmasound.h	75;"	d
MIN_BUFSIZE	dmasound/dmasound.h	68;"	d
MIN_BUFSIZE	dmasound/dmasound.h	76;"	d
MIN_FRAGCOUNT	vwsnd.c	1553;"	d	file:
MIN_FRAGSHIFT	vwsnd.c	1549;"	d	file:
MIN_FRAGSIZE	vwsnd.c	1551;"	d	file:
MIN_FRAG_SIZE	dmasound/dmasound.h	69;"	d
MIN_FRAG_SIZE	dmasound/dmasound.h	77;"	d
MIN_SPEED	vwsnd.c	1546;"	d	file:
MIP_EXTIN	msnd_classic.h	115;"	d
MIP_EXTIN	msnd_pinnacle.h	149;"	d
MIP_HWINIT	msnd_pinnacle.h	151;"	d
MIP_INMASK	msnd_classic.h	117;"	d
MIP_MAX	msnd_pinnacle.h	152;"	d
MIP_SYNTH	msnd_classic.h	116;"	d
MIP_WAVEHDR	msnd_pinnacle.h	150;"	d
MIXER_ADDR	sb.h	8;"	d
MIXER_DATA	sb.h	9;"	d
MIXER_DRIVER_VERSION	dev_table.h	373;"	d
MIXER_OVERFLOW	trident.h	/^	MIXER_UNDERFLOW = 0x00000400, MIXER_OVERFLOW  = 0x00000800,$/;"	e	enum:miscint_bits
MIXER_PRIVATE3_READ	waveartist.c	1477;"	d	file:
MIXER_PRIVATE3_RESET	waveartist.c	1476;"	d	file:
MIXER_PRIVATE3_WRITE	waveartist.c	1478;"	d	file:
MIXER_UNDERFLOW	trident.h	/^	MIXER_UNDERFLOW = 0x00000400, MIXER_OVERFLOW  = 0x00000800,$/;"	e	enum:miscint_bits
MIX_ENT	ad1848_mixer.h	93;"	d
MIX_ENT	sb_mixer.h	87;"	d
MIX_ENT2	ad1848_mixer.h	97;"	d
MIX_GAIN_AUX1	waveartist.h	83;"	d
MIX_GAIN_AUX2	waveartist.h	84;"	d
MIX_GAIN_LINE	waveartist.h	82;"	d
MIX_GAIN_MIC	waveartist.h	86;"	d
MIX_GAIN_MONO	waveartist.h	89;"	d
MIX_GAIN_OUT	waveartist.h	88;"	d
MIX_GAIN_PREMIC	waveartist.h	87;"	d
MIX_GAIN_XMIC	waveartist.h	85;"	d
MI_MAX	dev_table.h	297;"	d
MODE1_MIXER_DEVICES	ad1848_mixer.h	32;"	d
MODE1_REC_DEVICES	ad1848_mixer.h	26;"	d
MODE2_MIXER_DEVICES	ad1848_mixer.h	37;"	d
MODE3_MIXER_DEVICES	ad1848_mixer.h	43;"	d
MODEM_LINE1	trident.h	/^	MODEM_LINE1    = 0x0000, MODEM_LINE2    = 0x0400,$/;"	e	enum:channel_attribute
MODEM_LINE2	trident.h	/^	MODEM_LINE1    = 0x0000, MODEM_LINE2    = 0x0400,$/;"	e	enum:channel_attribute
MODE_MIDI	mpu401.c	49;"	d	file:
MODE_SYNTH	mpu401.c	50;"	d	file:
MODE_is_8	jz_pcm_tlv320aic1106_dma.c	44;"	d	file:
MODNAME	sh_dac_audio.c	32;"	d	file:
MODQ	msnd.h	/^	void __iomem *DAPQ, *DARQ, *MODQ, *MIDQ, *DSPQ;$/;"	m	struct:multisound_dev
MODQ_BUFF_SIZE	msnd_classic.h	94;"	d
MODQ_BUFF_SIZE	msnd_pinnacle.h	127;"	d
MODQ_DATA_BUFF	msnd_classic.h	100;"	d
MODQ_DATA_BUFF	msnd_pinnacle.h	133;"	d
MODQ_OFFSET	msnd_classic.h	106;"	d
MODQ_OFFSET	msnd_pinnacle.h	139;"	d
MODULOP2	i810_audio.c	110;"	d	file:
MONO_DAC	sb_mixer.h	62;"	d
MONO_LEFT	trident.h	/^	MONO_LEFT      = 0x0000, MONO_RIGHT     = 0x0100,$/;"	e	enum:channel_attribute
MONO_MIX	trident.h	/^	MONO_MIX       = 0x0200, SRC_ENABLE     = 0x0080,$/;"	e	enum:channel_attribute
MONO_RIGHT	trident.h	/^	MONO_LEFT      = 0x0000, MONO_RIGHT     = 0x0100,$/;"	e	enum:channel_attribute
MOP_EXTOUT	msnd_classic.h	111;"	d
MOP_EXTOUT	msnd_pinnacle.h	144;"	d
MOP_EXTTHRU	msnd_classic.h	112;"	d
MOP_HWINIT	msnd_pinnacle.h	145;"	d
MOP_MAX	msnd_pinnacle.h	147;"	d
MOP_NONE	msnd_pinnacle.h	146;"	d
MOP_OUTMASK	msnd_classic.h	113;"	d
MOP_SYNTH	msnd_classic.h	110;"	d
MOP_WAVEHDR	msnd_pinnacle.h	143;"	d
MPU401_IRQ	trident.h	/^	SB_IRQ          = 0x00000004, MPU401_IRQ      = 0x00000008,$/;"	e	enum:miscint_bits
MPUADDR	aedsp16.c	348;"	d	file:
MPU_ACK	mpu401.c	108;"	d	file:
MPU_ACK	uart401.c	75;"	d	file:
MPU_CAP_2PORT	mpu401.c	58;"	d	file:
MPU_CAP_CLS	mpu401.c	56;"	d	file:
MPU_CAP_FSK	mpu401.c	55;"	d	file:
MPU_CAP_INTLG	mpu401.c	53;"	d	file:
MPU_CAP_SMPTE	mpu401.c	57;"	d	file:
MPU_CAP_SYNC	mpu401.c	54;"	d	file:
MPU_RESET	mpu401.c	109;"	d	file:
MPU_RESET	uart401.c	76;"	d	file:
MSC_offset	vwsnd.c	/^	int		MSC_offset;$/;"	m	struct:vwsnd_port	file:
MSND_CLASSIC	msnd_classic.c	2;"	d	file:
MSND_MAX_DEVS	msnd.c	45;"	d	file:
MST_DATA	dev_table.h	303;"	d
MST_INIT	dev_table.h	302;"	d
MST_SYSEX	dev_table.h	304;"	d
MULTIPLE_MASK	opl3_hw.h	92;"	d
NEEDS_RESTART	dev_table.h	201;"	d
NEUTRAL16	audio.c	38;"	d	file:
NEUTRAL8	audio.c	37;"	d	file:
NOMAL_STOP	jz_i2s.c	51;"	d	file:
NORMAL_MIDI	sb.h	26;"	d
NOTHING_SPECIAL	dev_table.h	200;"	d
NO_DMA	waveartist.c	55;"	d	file:
NO_INLINE_ASM	os.h	2;"	d
NO_WSS_MIXER	pss.c	112;"	d	file:
NR_AC97	i810_audio.c	230;"	d	file:
NR_AC97	jz_ac97.c	39;"	d	file:
NR_AC97	trident.c	247;"	d	file:
NR_BANKS	trident.h	64;"	d
NR_HW_CH	i810_audio.c	227;"	d	file:
NR_HW_CH	trident.c	243;"	d	file:
NR_I2S	jz_i2s.c	44;"	d	file:
NR_I2S	jz_i2s_4750.c	43;"	d	file:
NR_I2S	jz_i2s_dlv_dma_test.c	44;"	d	file:
NR_I2S	jz_i2s_for_4750.c	43;"	d	file:
NR_PCM	jz_pcm_tlv320aic1106_dma.c	38;"	d	file:
NUM_DBDMA_DESCRIPTORS	au1550_ac97.c	73;"	d	file:
NVIDIA_NFORCE	i810_audio.c	/^	NVIDIA_NFORCE,$/;"	e	enum:__anon9	file:
NX_AC97_BUSY_DATA	trident.h	/^	NX_AC97_BUSY_DATA  = 0x0400, NX_AC97_WRITE_SECONDARY = 0x0100,$/;"	e	enum:trident_nx_ac97_bits
NX_AC97_BUSY_READ	trident.h	/^	NX_AC97_BUSY_WRITE = 0x0800, NX_AC97_BUSY_READ = 0x0800,$/;"	e	enum:trident_nx_ac97_bits
NX_AC97_BUSY_WRITE	trident.h	/^	NX_AC97_BUSY_WRITE = 0x0800, NX_AC97_BUSY_READ = 0x0800,$/;"	e	enum:trident_nx_ac97_bits
NX_AC97_PCM_OUTPUT	trident.h	/^	NX_AC97_PCM_OUTPUT      = 0x0002,$/;"	e	enum:trident_nx_ac97_bits
NX_AC97_PRIMARY_READY	trident.h	/^	NX_AC97_PRIMARY_READY   = 0x0008, NX_AC97_PRIMARY_RECORD   = 0x0004,$/;"	e	enum:trident_nx_ac97_bits
NX_AC97_PRIMARY_RECORD	trident.h	/^	NX_AC97_PRIMARY_READY   = 0x0008, NX_AC97_PRIMARY_RECORD   = 0x0004,$/;"	e	enum:trident_nx_ac97_bits
NX_AC97_SECONDARY_READY	trident.h	/^	NX_AC97_SECONDARY_READY = 0x0040, NX_AC97_SECONDARY_RECORD = 0x0020,$/;"	e	enum:trident_nx_ac97_bits
NX_AC97_SECONDARY_RECORD	trident.h	/^	NX_AC97_SECONDARY_READY = 0x0040, NX_AC97_SECONDARY_RECORD = 0x0020,$/;"	e	enum:trident_nx_ac97_bits
NX_AC97_SURROUND_OUTPUT	trident.h	/^	NX_AC97_SURROUND_OUTPUT = 0x0010,$/;"	e	enum:trident_nx_ac97_bits
NX_AC97_WARM_RESET	trident.h	/^	NX_AC97_WARM_RESET      = 0x0001$/;"	e	enum:trident_nx_ac97_bits
NX_AC97_WRITE_SECONDARY	trident.h	/^	NX_AC97_BUSY_DATA  = 0x0400, NX_AC97_WRITE_SECONDARY = 0x0100,$/;"	e	enum:trident_nx_ac97_bits
NX_ACR0_AC97_COM_STAT	trident.h	/^	NX_ACR0_AC97_COM_STAT  = 0x40, NX_ACR1_AC97_W           = 0x44,$/;"	e	enum:nx_ac97_registers
NX_ACR1_AC97_W	trident.h	/^	NX_ACR0_AC97_COM_STAT  = 0x40, NX_ACR1_AC97_W           = 0x44,$/;"	e	enum:nx_ac97_registers
NX_ACR2_AC97_R_PRIMARY	trident.h	/^	NX_ACR2_AC97_R_PRIMARY = 0x48, NX_ACR3_AC97_R_SECONDARY	= 0x4c$/;"	e	enum:nx_ac97_registers
NX_ACR3_AC97_R_SECONDARY	trident.h	/^	NX_ACR2_AC97_R_PRIMARY = 0x48, NX_ACR3_AC97_R_SECONDARY	= 0x4c$/;"	e	enum:nx_ac97_registers
NX_SPCSTATUS	trident.h	/^	NX_SPESO	= 0x2c, NX_SPCSTATUS = 0x64$/;"	e	enum:nx_spdif_registers
NX_SPCTRL_SPCSO	trident.h	/^	NX_SPCTRL_SPCSO	= 0x24, NX_SPLBA = 0x28,$/;"	e	enum:nx_spdif_registers
NX_SPESO	trident.h	/^	NX_SPESO	= 0x2c, NX_SPCSTATUS = 0x64$/;"	e	enum:nx_spdif_registers
NX_SPLBA	trident.h	/^	NX_SPCTRL_SPCSO	= 0x24, NX_SPLBA = 0x28,$/;"	e	enum:nx_spdif_registers
ODIE_ADDR	sscape.c	59;"	d	file:
ODIE_DATA	sscape.c	60;"	d	file:
OFFS_4OP	opl3.c	40;"	d	file:
OPEN_READ	sound_config.h	109;"	d
OPEN_READWRITE	sound_config.h	111;"	d
OPEN_WRITE	sound_config.h	110;"	d
OPL3_BOTH	sb.h	12;"	d
OPL3_ENABLE	opl3_hw.h	64;"	d
OPL3_IRQ	trident.h	/^	OPL3_IRQ        = 0x00000010, ADDRESS_IRQ     = 0x00000020,$/;"	e	enum:miscint_bits
OPL3_LEFT	sb.h	10;"	d
OPL3_MODE_REGISTER	opl3_hw.h	63;"	d
OPL3_RIGHT	sb.h	11;"	d
OPL4_ENABLE	opl3_hw.h	65;"	d
OPSW	sb_mixer.h	48;"	d
OSS_DOCUMENTED_MIXER_SEMANTICS	au1550_ac97.c	63;"	d	file:
OSS_DOCUMENTED_MIXER_SEMANTICS	swarm_cs4297a.c	100;"	d	file:
OTHER_DEBUG	jz_i2s_dbg.h	44;"	d
OTHER_DEBUG	jz_i2s_dbg.h	48;"	d
OUTPUT_READY	mpu401.c	106;"	d	file:
OUTPUT_READY	uart401.c	73;"	d	file:
OUTPUT_READY	uart6850.c	65;"	d	file:
OUT_FILTER	sb_mixer.h	40;"	d
OVERRUN_IE	trident.h	/^	OVERRUN_IE  = 0x00000400, UNDERRUN_IE = 0x00000800,$/;"	e	enum:global_control_bits
PAS_PCM_INTRBITS	pas2_pcm.c	29;"	d	file:
PAUSE_ENG	trident.h	/^	PAUSE_ENG   = 0x00000200,$/;"	e	enum:global_control_bits
PB_24K_MODE	trident.h	/^	ST_TARGET_REACHED = 0x00008000, PB_24K_MODE   = 0x00010000, $/;"	e	enum:miscint_bits
PB_RESET	trident.h	/^	CHANNLE_IDX = 0x0000003f, PB_RESET    = 0x00000100,$/;"	e	enum:global_control_bits
PB_UNDERRUN	trident.h	/^	PB_UNDERRUN     = 0x00000100, REC_OVERRUN     = 0x00000200,$/;"	e	enum:miscint_bits
PB_UNDERRUN_IRO	trident.h	/^	PB_UNDERRUN_IRO = 0x00000001, REC_OVERRUN_IRQ = 0x00000002,$/;"	e	enum:miscint_bits
PCI_DEVICE_ID_ALI_1533	trident.h	56;"	d
PCI_DEVICE_ID_ALI_5451	trident.h	52;"	d
PCI_DEVICE_ID_SI_7018	trident.h	48;"	d
PCI_DEVICE_ID_TRIDENT_4DWAVE_DX	trident.h	40;"	d
PCI_DEVICE_ID_TRIDENT_4DWAVE_NX	trident.h	44;"	d
PCI_VENDOR_ID_ALI	trident.h	36;"	d
PCI_VENDOR_ID_SI	trident.h	32;"	d
PCI_VENDOR_ID_TRIDENT	trident.h	28;"	d
PCMIN	trident.h	/^	PCMIN       = 0x00000100, LINE1IN     = 0x00000200,$/;"	e	enum:serial_intf_ctrl_bits
PCMOUT	trident.h	/^	PCMOUT      = 0x00010000, SURROUT     = 0x00020000,$/;"	e	enum:serial_intf_ctrl_bits
PCM_ADC	pas2_pcm.c	36;"	d	file:
PCM_DAC	pas2_pcm.c	35;"	d	file:
PCM_LR	trident.h	/^	PCM_LR         = 0x0800, HSET           = 0x0c00,$/;"	e	enum:channel_attribute
PCM_NON	pas2_pcm.c	34;"	d	file:
PCM_SEC_AC97	trident.h	/^	I2S_CLOCK   = 0x00000004, PCM_SEC_AC97= 0x00000008,$/;"	e	enum:serial_intf_ctrl_bits
PCTODSP_BASED	msnd.h	153;"	d
PCTODSP_OFFSET	msnd.h	152;"	d
PERCOSSION_ENABLE	opl3_hw.h	74;"	d
PERCOSSION_REGISTER	opl3_hw.h	71;"	d
PERMCODE	msnd_classic.h	165;"	d
PERMCODE	msnd_classic.h	180;"	d
PERMCODE	msnd_pinnacle.h	226;"	d
PERMCODE	msnd_pinnacle.h	241;"	d
PERMCODEFILE	msnd_classic.h	178;"	d
PERMCODEFILE	msnd_pinnacle.h	239;"	d
PERMCODESIZE	msnd_classic.h	167;"	d
PERMCODESIZE	msnd_classic.h	182;"	d
PERMCODESIZE	msnd_pinnacle.h	228;"	d
PERMCODESIZE	msnd_pinnacle.h	243;"	d
PFX	via82cxxx_audio.c	72;"	d	file:
PIN_CONTROL	cs4232.c	63;"	d	file:
PIPE_TRANS	jz_i2s.c	53;"	d	file:
PM_SUSPENDED	i810_audio.c	326;"	d	file:
PM_SUSPENDED	i810_audio.c	328;"	d	file:
POLL_COUNT	au1550_ac97.c	66;"	d	file:
PORT	sscape.c	84;"	d	file:
POSSIBLE_RECORDING_DEVICES	pas2_mixer.c	36;"	d	file:
POWER_OFF	jzdlv.c	40;"	d	file:
POWER_ON	jzdlv.c	39;"	d	file:
PROC_BLOCK_SIZE	soundcard.c	142;"	d	file:
PSEUDO_DMA_AUTOINIT	os.h	42;"	d
PSS_CONTROL	pss.c	76;"	d	file:
PSS_DATA	pss.c	74;"	d	file:
PSS_FLAG0	pss.c	96;"	d	file:
PSS_FLAG1	pss.c	95;"	d	file:
PSS_FLAG2	pss.c	94;"	d	file:
PSS_FLAG3	pss.c	93;"	d	file:
PSS_ID	pss.c	77;"	d	file:
PSS_IRQACK	pss.c	78;"	d	file:
PSS_PIO	pss.c	79;"	d	file:
PSS_READ_FULL	pss.c	98;"	d	file:
PSS_STATUS	pss.c	75;"	d	file:
PSS_WRITE_EMPTY	pss.c	97;"	d	file:
Q40Alloc	dmasound/dmasound_q40.c	/^static void *Q40Alloc(unsigned int size, gfp_t flags)$/;"	f	file:
Q40Free	dmasound/dmasound_q40.c	/^static void Q40Free(void *ptr, unsigned int size)$/;"	f	file:
Q40Init	dmasound/dmasound_q40.c	/^static void Q40Init(void)$/;"	f	file:
Q40Interrupt	dmasound/dmasound_q40.c	/^static void Q40Interrupt(void)$/;"	f	file:
Q40IrqCleanUp	dmasound/dmasound_q40.c	/^static void Q40IrqCleanUp(void)$/;"	f	file:
Q40IrqInit	dmasound/dmasound_q40.c	/^static int __init Q40IrqInit(void)$/;"	f	file:
Q40MonoInterrupt	dmasound/dmasound_q40.c	/^static irqreturn_t Q40MonoInterrupt(int irq, void *dummy)$/;"	f	file:
Q40Play	dmasound/dmasound_q40.c	/^static void Q40Play(void)$/;"	f	file:
Q40PlayNextFrame	dmasound/dmasound_q40.c	/^static void Q40PlayNextFrame(int index)$/;"	f	file:
Q40SetFormat	dmasound/dmasound_q40.c	/^static int Q40SetFormat(int format)$/;"	f	file:
Q40SetVolume	dmasound/dmasound_q40.c	/^static int Q40SetVolume(int volume)$/;"	f	file:
Q40Silence	dmasound/dmasound_q40.c	/^static void Q40Silence(void)$/;"	f	file:
Q40StereoInterrupt	dmasound/dmasound_q40.c	/^static irqreturn_t Q40StereoInterrupt(int irq, void *dummy)$/;"	f	file:
QUEUE_BYTE	midibuf.c	61;"	d	file:
QUEUE_MAX	jz_ac97.c	224;"	d	file:
Q_DEBUG	jz_i2s_dbg.h	39;"	d
READ_HARD_CFG	aedsp16.c	300;"	d	file:
READ_INTR_MASK	vwsnd.c	1416;"	d	file:
RECLEVEL_GAIN_TO_VOXWARE	dmasound/dmasound_atari.c	1338;"	d	file:
RECLEVEL_VOXWARE_TO_GAIN	dmasound/dmasound_atari.c	1336;"	d	file:
RECORD	jzdlv.c	37;"	d	file:
RECORD_SRC	sb_mixer.h	38;"	d
REC_OVERRUN	trident.h	/^	PB_UNDERRUN     = 0x00000100, REC_OVERRUN     = 0x00000200,$/;"	e	enum:miscint_bits
REC_OVERRUN_IRQ	trident.h	/^	PB_UNDERRUN_IRO = 0x00000001, REC_OVERRUN_IRQ = 0x00000002,$/;"	e	enum:miscint_bits
REG	pss.c	73;"	d	file:
REG_DEBUG	jz_i2s_dbg.h	36;"	d
REG_DEBUG	jz_i2s_dbg.h	51;"	d
REG_GPIO_DMA_CTL	btaudio.c	52;"	d	file:
REG_INT_MASK	btaudio.c	51;"	d	file:
REG_INT_STAT	btaudio.c	50;"	d	file:
REG_LATENCY	swarm_cs4297a.c	187;"	d	file:
REG_PACKET_LEN	btaudio.c	53;"	d	file:
REG_RISC_COUNT	btaudio.c	55;"	d	file:
REG_RISC_STRT_ADD	btaudio.c	54;"	d	file:
RELEASE_MASK	opl3_hw.h	113;"	d
REMOVE_BYTE	midibuf.c	71;"	d	file:
REPLAY	jzdlv.c	36;"	d	file:
RESET	waveartist.h	32;"	d
RETRY	aedsp16.c	329;"	d	file:
RIGHT_4OP_0	opl3_hw.h	56;"	d
RIGHT_4OP_1	opl3_hw.h	57;"	d
RIGHT_4OP_2	opl3_hw.h	58;"	d
RIGHT_CHN	ad1848_mixer.h	243;"	d
RIGHT_CHN	sb_mixer.h	73;"	d
RISC_IRQ	btaudio.c	89;"	d	file:
RISC_JUMP	btaudio.c	83;"	d	file:
RISC_SYNC	btaudio.c	84;"	d	file:
RISC_SYNC_FM1	btaudio.c	91;"	d	file:
RISC_SYNC_RESYNC	btaudio.c	90;"	d	file:
RISC_SYNC_VRO	btaudio.c	92;"	d	file:
RISC_WRITE	btaudio.c	82;"	d	file:
RISC_WR_EOL	btaudio.c	88;"	d	file:
RISC_WR_SOL	btaudio.c	87;"	d	file:
RX_READY	sscape.c	57;"	d	file:
S16_TO_U8	au1550_ac97.c	/^static inline u8 S16_TO_U8(s16 ch)$/;"	f	file:
SAMPLE_BUF_SIZE	swarm_cs4297a.c	175;"	d	file:
SAMPLE_FRAME_COUNT	swarm_cs4297a.c	176;"	d	file:
SAMPLE_ROUNDUP	dmabuf.c	26;"	d	file:
SB16_IMASK_L	sb_mixer.h	69;"	d
SB16_IMASK_R	sb_mixer.h	70;"	d
SB16_MIXER_DEVICES	sb_mixer.c	50;"	d	file:
SB16_OMASK	sb_mixer.h	68;"	d
SB16_OUTFILTER_DEVICES	sb_mixer.c	47;"	d	file:
SB16_RECORDING_DEVICES	sb_mixer.c	44;"	d	file:
SBCAP_16BITS	sb.h	90;"	d
SBCAP_STEREO	sb.h	89;"	d
SBFM_MAXINSTR	sound_config.h	52;"	d
SBPRO_MIXER_DEVICES	sb_mixer.c	33;"	d	file:
SBPRO_RECORDING_DEVICES	sb_mixer.c	28;"	d	file:
SB_CAP_ES18XX_RATE	sb_ess.c	209;"	d	file:
SB_IRQ	trident.h	/^	SB_IRQ          = 0x00000004, MPU401_IRQ      = 0x00000008,$/;"	e	enum:miscint_bits
SB_MIDI_ONLY	sb.h	61;"	d
SB_NO_AUDIO	sb.h	59;"	d
SB_NO_MIDI	sb.h	57;"	d
SB_NO_MIXER	sb.h	58;"	d
SB_NO_RECORDING	sb.h	60;"	d
SB_PCI_ESSMAESTRO	sb.h	151;"	d
SB_PCI_IRQ	sb.h	62;"	d
SB_PCI_YAMAHA	sb.h	152;"	d
SB_TEST_IRQ	sb_midi.c	19;"	d	file:
SCALE	vidc.c	115;"	d	file:
SCALE	vidc.c	99;"	d	file:
SCALE	waveartist.c	933;"	d	file:
SDM	i810_audio.c	/^	SDM =           0x80                    \/* SDATA_IN Map Register *\/$/;"	e	enum:__anon8	file:
SECONDARY_ID	trident.h	/^	SECONDARY_ID= 0x00004000,$/;"	e	enum:serial_intf_ctrl_bits
SEQ_1	sequencer.c	45;"	d	file:
SEQ_2	sequencer.c	46;"	d	file:
SEQ_MAX_QUEUE	sound_config.h	50;"	d
SERDMA_NEXTBUF	swarm_cs4297a.c	191;"	d	file:
SER_BASE	swarm_cs4297a.c	166;"	d	file:
SETTINGS	dmasound/dmasound.h	/^} SETTINGS;$/;"	t	typeref:struct:__anon16
SET_VIBRATO	opl3.c	858;"	d	file:
SET_VIBRATO	opl3.c	931;"	d	file:
SGNXPRO_MIXER_DEVICES	sb_mixer.c	41;"	d	file:
SGNXPRO_RECORDING_DEVICES	sb_mixer.c	31;"	d	file:
SG_LEN	i810_audio.c	149;"	d	file:
SHIFT_FIELD	vwsnd.c	443;"	d	file:
SHORT_BANNERS	os.h	3;"	d
SI7012	i810_audio.c	/^	SI7012,$/;"	e	enum:__anon9	file:
SIGNAL	msnd_classic.h	76;"	d
SIGNAL	msnd_pinnacle.h	109;"	d
SIS_7018	trident.c	/^	SIS_7018,$/;"	e	enum:__anon12	file:
SI_AC97_AUDIO_BUSY	trident.h	/^	SI_AC97_AUDIO_BUSY = 0x4000, SI_AC97_MODEM_BUSY = 0x2000,$/;"	e	enum:sis7018_ac97_bits
SI_AC97_BUSY_READ	trident.h	/^	SI_AC97_BUSY_WRITE = 0x8000, SI_AC97_BUSY_READ = 0x8000,$/;"	e	enum:sis7018_ac97_bits
SI_AC97_BUSY_WRITE	trident.h	/^	SI_AC97_BUSY_WRITE = 0x8000, SI_AC97_BUSY_READ = 0x8000,$/;"	e	enum:sis7018_ac97_bits
SI_AC97_GPIO	trident.h	/^	SI_SERIAL_INTF_CTRL = 0x48, SI_AC97_GPIO = 0x4c$/;"	e	enum:si_ac97_registers
SI_AC97_MODEM_BUSY	trident.h	/^	SI_AC97_AUDIO_BUSY = 0x4000, SI_AC97_MODEM_BUSY = 0x2000,$/;"	e	enum:sis7018_ac97_bits
SI_AC97_PRIMARY_READY	trident.h	/^	SI_AC97_PRIMARY_READY   = 0x01000000,$/;"	e	enum:serial_intf_ctrl_bits
SI_AC97_READ	trident.h	/^	SI_AC97_WRITE       = 0x40, SI_AC97_READ = 0x44,$/;"	e	enum:si_ac97_registers
SI_AC97_SECONDARY	trident.h	/^	SI_AC97_SECONDARY  = 0x0080$/;"	e	enum:sis7018_ac97_bits
SI_AC97_SECONDARY_READY	trident.h	/^	SI_AC97_SECONDARY_READY = 0x02000000,$/;"	e	enum:serial_intf_ctrl_bits
SI_AC97_WRITE	trident.h	/^	SI_AC97_WRITE       = 0x40, SI_AC97_READ = 0x44,$/;"	e	enum:si_ac97_registers
SI_SERIAL_INTF_CTRL	trident.h	/^	SI_SERIAL_INTF_CTRL = 0x48, SI_AC97_GPIO = 0x4c$/;"	e	enum:si_ac97_registers
SLEEP	dmasound/dmasound.h	242;"	d
SLOWIO	msnd_pinnacle.c	55;"	d	file:
SMA	msnd.h	/^	void __iomem *SMA;$/;"	m	struct:multisound_dev
SMA_STRUCT_START	msnd_classic.h	85;"	d
SMA_STRUCT_START	msnd_pinnacle.h	118;"	d
SMA__size	msnd_classic.h	160;"	d
SMA__size	msnd_pinnacle.h	221;"	d
SMA_bAuxPotMaxLeft	msnd_pinnacle.h	189;"	d
SMA_bAuxPotMaxMethod	msnd_pinnacle.h	192;"	d
SMA_bAuxPotMaxRight	msnd_pinnacle.h	190;"	d
SMA_bAuxPotPosLeft	msnd_classic.h	150;"	d
SMA_bAuxPotPosLeft	msnd_pinnacle.h	185;"	d
SMA_bAuxPotPosRight	msnd_classic.h	149;"	d
SMA_bAuxPotPosRight	msnd_pinnacle.h	186;"	d
SMA_bBoardLevel	msnd_classic.h	146;"	d
SMA_bExtHostbits	msnd_classic.h	145;"	d
SMA_bInPotMaxLeft	msnd_pinnacle.h	187;"	d
SMA_bInPotMaxMethod	msnd_pinnacle.h	191;"	d
SMA_bInPotMaxRight	msnd_pinnacle.h	188;"	d
SMA_bInPotPosLeft	msnd_classic.h	148;"	d
SMA_bInPotPosLeft	msnd_pinnacle.h	183;"	d
SMA_bInPotPosRight	msnd_classic.h	147;"	d
SMA_bInPotPosRight	msnd_pinnacle.h	184;"	d
SMA_bMicPotMaxLeft	msnd_pinnacle.h	181;"	d
SMA_bMicPotMaxRight	msnd_pinnacle.h	182;"	d
SMA_bMicPotPosLeft	msnd_pinnacle.h	179;"	d
SMA_bMicPotPosRight	msnd_pinnacle.h	180;"	d
SMA_bUser_12	msnd_classic.h	153;"	d
SMA_bUser_13	msnd_classic.h	154;"	d
SMA_dwCurrPlayPitch	msnd_pinnacle.h	163;"	d
SMA_dwCurrPlayRate	msnd_pinnacle.h	164;"	d
SMA_dwDSPPlayCount	msnd_pinnacle.h	220;"	d
SMA_dwUser_5	msnd_classic.h	128;"	d
SMA_dwUser_6	msnd_classic.h	129;"	d
SMA_wCalFreqAtoD	msnd_classic.h	157;"	d
SMA_wCalFreqAtoD	msnd_pinnacle.h	195;"	d
SMA_wCurrAuxVolLeft	msnd_pinnacle.h	196;"	d
SMA_wCurrAuxVolRight	msnd_pinnacle.h	197;"	d
SMA_wCurrDATRXCHNL	msnd_pinnacle.h	217;"	d
SMA_wCurrDATRXRate	msnd_pinnacle.h	219;"	d
SMA_wCurrDATSR	msnd_pinnacle.h	216;"	d
SMA_wCurrDATTXCHNL	msnd_pinnacle.h	218;"	d
SMA_wCurrDSPStatusFlags	msnd_classic.h	139;"	d
SMA_wCurrDSPStatusFlags	msnd_pinnacle.h	174;"	d
SMA_wCurrHostStatusFlags	msnd_classic.h	140;"	d
SMA_wCurrHostStatusFlags	msnd_pinnacle.h	175;"	d
SMA_wCurrInVolLeft	msnd_classic.h	124;"	d
SMA_wCurrInVolLeft	msnd_pinnacle.h	159;"	d
SMA_wCurrInVolRight	msnd_classic.h	125;"	d
SMA_wCurrInVolRight	msnd_pinnacle.h	160;"	d
SMA_wCurrInputTagBits	msnd_classic.h	141;"	d
SMA_wCurrInputTagBits	msnd_pinnacle.h	176;"	d
SMA_wCurrLeftPeak	msnd_classic.h	142;"	d
SMA_wCurrLeftPeak	msnd_pinnacle.h	177;"	d
SMA_wCurrMHdrVolLeft	msnd_pinnacle.h	161;"	d
SMA_wCurrMHdrVolRight	msnd_pinnacle.h	162;"	d
SMA_wCurrMIDIIOPatch	msnd_pinnacle.h	165;"	d
SMA_wCurrMastVolLeft	msnd_classic.h	151;"	d
SMA_wCurrMastVolLeft	msnd_pinnacle.h	193;"	d
SMA_wCurrMastVolRight	msnd_classic.h	152;"	d
SMA_wCurrMastVolRight	msnd_pinnacle.h	194;"	d
SMA_wCurrPlay1PeakLeft	msnd_pinnacle.h	206;"	d
SMA_wCurrPlay1PeakRight	msnd_pinnacle.h	207;"	d
SMA_wCurrPlay1VolLeft	msnd_pinnacle.h	198;"	d
SMA_wCurrPlay1VolRight	msnd_pinnacle.h	199;"	d
SMA_wCurrPlay2PeakLeft	msnd_pinnacle.h	208;"	d
SMA_wCurrPlay2PeakRight	msnd_pinnacle.h	209;"	d
SMA_wCurrPlay2VolLeft	msnd_pinnacle.h	200;"	d
SMA_wCurrPlay2VolRight	msnd_pinnacle.h	201;"	d
SMA_wCurrPlay3PeakLeft	msnd_pinnacle.h	210;"	d
SMA_wCurrPlay3PeakRight	msnd_pinnacle.h	211;"	d
SMA_wCurrPlay3VolLeft	msnd_pinnacle.h	202;"	d
SMA_wCurrPlay3VolRight	msnd_pinnacle.h	203;"	d
SMA_wCurrPlay4PeakLeft	msnd_pinnacle.h	212;"	d
SMA_wCurrPlay4PeakRight	msnd_pinnacle.h	213;"	d
SMA_wCurrPlay4VolLeft	msnd_pinnacle.h	204;"	d
SMA_wCurrPlay4VolRight	msnd_pinnacle.h	205;"	d
SMA_wCurrPlayBytes	msnd_classic.h	120;"	d
SMA_wCurrPlayBytes	msnd_pinnacle.h	155;"	d
SMA_wCurrPlayChannels	msnd_pinnacle.h	168;"	d
SMA_wCurrPlayFormat	msnd_pinnacle.h	166;"	d
SMA_wCurrPlayPeakLeft	msnd_pinnacle.h	214;"	d
SMA_wCurrPlayPeakRight	msnd_pinnacle.h	215;"	d
SMA_wCurrPlaySampleRate	msnd_pinnacle.h	169;"	d
SMA_wCurrPlaySampleSize	msnd_pinnacle.h	167;"	d
SMA_wCurrPlayVolLeft	msnd_classic.h	122;"	d
SMA_wCurrPlayVolLeft	msnd_pinnacle.h	157;"	d
SMA_wCurrPlayVolRight	msnd_classic.h	123;"	d
SMA_wCurrPlayVolRight	msnd_pinnacle.h	158;"	d
SMA_wCurrRecordBytes	msnd_classic.h	121;"	d
SMA_wCurrRecordBytes	msnd_pinnacle.h	156;"	d
SMA_wCurrRecordChannels	msnd_pinnacle.h	172;"	d
SMA_wCurrRecordFormat	msnd_pinnacle.h	170;"	d
SMA_wCurrRecordSampleRate	msnd_pinnacle.h	173;"	d
SMA_wCurrRecordSampleSize	msnd_pinnacle.h	171;"	d
SMA_wCurrRightPeak	msnd_classic.h	143;"	d
SMA_wCurrRightPeak	msnd_pinnacle.h	178;"	d
SMA_wExtDSPbits	msnd_classic.h	144;"	d
SMA_wReserved_A	msnd_classic.h	131;"	d
SMA_wReserved_B	msnd_classic.h	132;"	d
SMA_wReserved_C	msnd_classic.h	133;"	d
SMA_wReserved_D	msnd_classic.h	134;"	d
SMA_wReserved_E	msnd_classic.h	135;"	d
SMA_wReserved_F	msnd_classic.h	136;"	d
SMA_wReserved_G	msnd_classic.h	137;"	d
SMA_wReserved_H	msnd_classic.h	138;"	d
SMA_wUser_14	msnd_classic.h	155;"	d
SMA_wUser_15	msnd_classic.h	156;"	d
SMA_wUser_16	msnd_classic.h	158;"	d
SMA_wUser_17	msnd_classic.h	159;"	d
SMA_wUser_3	msnd_classic.h	126;"	d
SMA_wUser_4	msnd_classic.h	127;"	d
SMA_wUser_7	msnd_classic.h	130;"	d
SNARE	opl3.c	297;"	d	file:
SNAREDRUM_ON	opl3_hw.h	76;"	d
SNDCARD_AD1816	dev_table.h	37;"	d
SNDCARD_DESKPROXL	dev_table.h	24;"	d
SNDCARD_MSND	msnd.h	41;"	d
SNDCARD_OPL3SA1	dev_table.h	29;"	d
SNDCARD_OPL3SA1_MPU	dev_table.h	31;"	d
SNDCARD_OPL3SA1_SB	dev_table.h	30;"	d
SNDCARD_OPL3SA2	dev_table.h	33;"	d
SNDCARD_OPL3SA2_MPU	dev_table.h	34;"	d
SNDCARD_OPL3SA2_MSS	dev_table.h	36;"	d
SNDCARD_SBPNP	dev_table.h	26;"	d
SNDCARD_SOFTOSS	dev_table.h	27;"	d
SNDCARD_VIDC	dev_table.h	25;"	d
SNDCARD_VMIDI	dev_table.h	28;"	d
SNDCARD_WAVEARTIST	dev_table.h	35;"	d
SNDCARD_WAVEFRONT	dev_table.h	32;"	d
SND_DEFAULT_ENABLE	sound_config.h	25;"	d
SND_DEV_AUDIO	dmasound/dmasound.h	23;"	d
SND_DEV_CTL	dmasound/dmasound.h	18;"	d
SND_DEV_DSP	dmasound/dmasound.h	22;"	d
SND_DEV_DSP16	dmasound/dmasound.h	24;"	d
SND_DEV_MIDIN	dmasound/dmasound.h	21;"	d
SND_DEV_PSS	dmasound/dmasound.h	29;"	d
SND_DEV_SEQ	dmasound/dmasound.h	19;"	d
SND_DEV_SEQ2	dmasound/dmasound.h	27;"	d
SND_DEV_SNDPROC	dmasound/dmasound.h	28;"	d
SND_DEV_STATUS	dmasound/dmasound.h	25;"	d
SND_DEV_SWMODEM	trident.c	250;"	d	file:
SND_NDEVS	dmasound/dmasound.h	17;"	d
SND_NDEVS	sound_config.h	55;"	d
SOUND_INTERNAL_VERSION	soundvers.h	2;"	d
SOUND_MIXER_CS_GETDBGLEVEL	swarm_cs4297a.c	350;"	d	file:
SOUND_MIXER_CS_GETDBGMASK	swarm_cs4297a.c	352;"	d	file:
SOUND_MIXER_CS_SETDBGLEVEL	swarm_cs4297a.c	351;"	d	file:
SOUND_MIXER_CS_SETDBGMASK	swarm_cs4297a.c	353;"	d	file:
SOUND_VERSION_STRING	soundvers.h	1;"	d
SPACE_AVAIL	midibuf.c	59;"	d	file:
SPDIF_EN	trident.h	/^	AC97_DBL_RATE = 0x00000010, SPDIF_EN  = 0x00000020,$/;"	e	enum:serial_intf_ctrl_bits
SPDIF_LR	trident.h	/^	SURR_LR        = 0x1800, SPDIF_LR       = 0x1c00,$/;"	e	enum:channel_attribute
SPDIF_ON	i810_audio.c	132;"	d	file:
SPRO_MIXER_DEVICES	ad1848_mixer.h	53;"	d
SPRO_REC_DEVICES	ad1848_mixer.h	29;"	d
SRAM_BANK_SIZE	msnd.h	43;"	d
SRAM_CNTL_START	msnd.h	44;"	d
SRAM_CNTL_START	msnd_classic.h	84;"	d
SRAM_CNTL_START	msnd_pinnacle.h	117;"	d
SRC_ENABLE	trident.h	/^	MONO_MIX       = 0x0200, SRC_ENABLE     = 0x0080,$/;"	e	enum:channel_attribute
SRC__CD	sb_mixer.h	95;"	d
SRC__LINE	sb_mixer.h	96;"	d
SRC__MIC	sb_mixer.h	94;"	d
SSCAPE_DMA_A	sscape.c	81;"	d	file:
SSCAPE_DMA_B	sscape.c	82;"	d	file:
SSCAPE_REGS	sscape.c	623;"	d	file:
SS_CSR	swarm_cs4297a.c	167;"	d	file:
SS_RXTBL	swarm_cs4297a.c	169;"	d	file:
SS_TXTBL	swarm_cs4297a.c	168;"	d	file:
STANDARD_SPEED	jz_ac97.c	41;"	d	file:
STATPORT	mpu401.c	78;"	d	file:
STATPORT	uart401.c	48;"	d	file:
STATPORT	uart6850.c	40;"	d	file:
STATR	waveartist.h	11;"	d
STATUSRETRY	aedsp16.c	330;"	d	file:
STAT_BUFF_LEN	dmasound/dmasound_core.c	1174;"	d	file:
STEREO_BITS	opl3_hw.h	185;"	d
STEREO_DAC	sb_mixer.h	63;"	d
STORE	midi_synth.c	31;"	d	file:
STORE	mpu401.c	162;"	d	file:
ST_DATABYTE	mpu401.c	141;"	d	file:
ST_INIT	mpu401.c	139;"	d	file:
ST_IRQ	trident.h	/^	ENVELOPE_IRQ    = 0x00000040, ST_IRQ          = 0x00000080,$/;"	e	enum:miscint_bits
ST_IRQ_EN	trident.h	/^	ST_IRQ_EN       = 0x00800000, ACGPIO_IRQ      = 0x01000000$/;"	e	enum:miscint_bits
ST_MTC	mpu401.c	145;"	d	file:
ST_SONGPOS	mpu401.c	147;"	d	file:
ST_SONGSEL	mpu401.c	146;"	d	file:
ST_SYSEX	mpu401.c	144;"	d	file:
ST_SYSMSG	mpu401.c	143;"	d	file:
ST_TARGET_REACHED	trident.h	/^	ST_TARGET_REACHED = 0x00008000, PB_24K_MODE   = 0x00010000, $/;"	e	enum:miscint_bits
ST_TIMED	mpu401.c	140;"	d	file:
SUBMDL_ALS007	sb.h	49;"	d
SUBMDL_ALS100	sb.h	51;"	d
SUBMDL_ES1788	sb_ess.c	201;"	d	file:
SUBMDL_ES1868	sb_ess.c	202;"	d	file:
SUBMDL_ES1869	sb_ess.c	203;"	d	file:
SUBMDL_ES1878	sb_ess.c	204;"	d	file:
SUBMDL_ES1879	sb_ess.c	205;"	d	file:
SUBMDL_ES1887	sb_ess.c	206;"	d	file:
SUBMDL_ES1888	sb_ess.c	207;"	d	file:
SUPPORTED_MIXER_DEVICES	pas2_mixer.c	39;"	d	file:
SUPPORTED_MIXER_DEVICES	waveartist.c	58;"	d	file:
SUPPORT_JOYSTICK	trident.c	233;"	d	file:
SURROUT	trident.h	/^	PCMOUT      = 0x00010000, SURROUT     = 0x00020000,$/;"	e	enum:serial_intf_ctrl_bits
SURR_LR	trident.h	/^	SURR_LR        = 0x1800, SPDIF_LR       = 0x1c00,$/;"	e	enum:channel_attribute
SURR_ON	i810_audio.c	133;"	d	file:
SUSTAIN_MASK	opl3_hw.h	112;"	d
SUSTAIN_ON	opl3_hw.h	90;"	d
SUSTAIN_RELEASE	opl3_hw.h	111;"	d
SW_DRAIN	vwsnd.c	/^	SW_DRAIN,$/;"	e	enum:vwsnd_port_swstate	file:
SW_INITIAL	vwsnd.c	/^	SW_INITIAL,$/;"	e	enum:vwsnd_port_swstate	file:
SW_INPUT_VOLUME_DEFAULT	dmasound/dmasound.h	257;"	d
SW_INPUT_VOLUME_SCALE	dmasound/dmasound.h	256;"	d
SW_OFF	vwsnd.c	/^	SW_OFF,$/;"	e	enum:vwsnd_port_swstate	file:
SW_RUN	vwsnd.c	/^	SW_RUN,$/;"	e	enum:vwsnd_port_swstate	file:
SYNTH_MAX_VOICES	sound_config.h	80;"	d
StopDMA	dmasound/dmasound_paula.c	/^static inline void StopDMA(void)$/;"	f	file:
T4D_AINTEN_A	trident.h	/^	T4D_LFO_GC_CIR	= 0xa0, T4D_AINTEN_A    = 0xa4,$/;"	e	enum:trident_op_registers
T4D_AINTEN_B	trident.h	/^	T4D_AINT_B	= 0xd8, T4D_AINTEN_B	= 0xdc,$/;"	e	enum:trident_op_registers
T4D_AINT_A	trident.h	/^	T4D_AINT_A      = 0x98, T4D_EINT_A	= 0x9c,$/;"	e	enum:trident_op_registers
T4D_AINT_B	trident.h	/^	T4D_AINT_B	= 0xd8, T4D_AINTEN_B	= 0xdc,$/;"	e	enum:trident_op_registers
T4D_CEBC_A	trident.h	/^	T4D_CSPF_A      = 0x90, T4D_CEBC_A      = 0x94,$/;"	e	enum:trident_op_registers
T4D_CSPF_A	trident.h	/^	T4D_CSPF_A      = 0x90, T4D_CEBC_A      = 0x94,$/;"	e	enum:trident_op_registers
T4D_CSPF_B	trident.h	/^	T4D_STOP_B      = 0xb8, T4D_CSPF_B	= 0xbc,$/;"	e	enum:trident_op_registers
T4D_DLY_A	trident.h	/^	T4D_DLY_A       = 0x88, T4D_SIGN_CSO_A  = 0x8c,$/;"	e	enum:trident_op_registers
T4D_EINT_A	trident.h	/^	T4D_AINT_A      = 0x98, T4D_EINT_A	= 0x9c,$/;"	e	enum:trident_op_registers
T4D_GAME_AXD	trident.h	/^	T4D_GAME_AXD	= 0x34,$/;"	e	enum:trident_op_registers
T4D_GAME_CR	trident.h	/^	T4D_GAME_CR	= 0x30, T4D_GAME_LEG	= 0x31,$/;"	e	enum:trident_op_registers
T4D_GAME_LEG	trident.h	/^	T4D_GAME_CR	= 0x30, T4D_GAME_LEG	= 0x31,$/;"	e	enum:trident_op_registers
T4D_LFO_B_I2S_DELTA	trident.h	/^	T4D_STIMER	= 0xc8, T4D_LFO_B_I2S_DELTA      = 0xcc,$/;"	e	enum:trident_op_registers
T4D_LFO_GC_CIR	trident.h	/^	T4D_LFO_GC_CIR	= 0xa0, T4D_AINTEN_A    = 0xa4,$/;"	e	enum:trident_op_registers
T4D_MISCINT	trident.h	/^	T4D_MISCINT	= 0xb0, T4D_START_B     = 0xb4,$/;"	e	enum:trident_op_registers
T4D_MUSICVOL_WAVEVOL	trident.h	/^	T4D_MUSICVOL_WAVEVOL = 0xa8, T4D_SBDELTA_DELTA_R = 0xac,$/;"	e	enum:trident_op_registers
T4D_REC_CH	trident.h	/^	T4D_REC_CH	= 0x70,$/;"	e	enum:trident_op_registers
T4D_SBBL_SBCL	trident.h	/^	T4D_SBBL_SBCL	= 0xc0, T4D_SBCTRL_SBE2R_SBDD    = 0xc4,$/;"	e	enum:trident_op_registers
T4D_SBCTRL_SBE2R_SBDD	trident.h	/^	T4D_SBBL_SBCL	= 0xc0, T4D_SBCTRL_SBE2R_SBDD    = 0xc4,$/;"	e	enum:trident_op_registers
T4D_SBDELTA_DELTA_R	trident.h	/^	T4D_MUSICVOL_WAVEVOL = 0xa8, T4D_SBDELTA_DELTA_R = 0xac,$/;"	e	enum:trident_op_registers
T4D_SIGN_CSO_A	trident.h	/^	T4D_DLY_A       = 0x88, T4D_SIGN_CSO_A  = 0x8c,$/;"	e	enum:trident_op_registers
T4D_START_A	trident.h	/^	T4D_START_A     = 0x80, T4D_STOP_A      = 0x84,$/;"	e	enum:trident_op_registers
T4D_START_B	trident.h	/^	T4D_MISCINT	= 0xb0, T4D_START_B     = 0xb4,$/;"	e	enum:trident_op_registers
T4D_STIMER	trident.h	/^	T4D_STIMER	= 0xc8, T4D_LFO_B_I2S_DELTA      = 0xcc,$/;"	e	enum:trident_op_registers
T4D_STOP_A	trident.h	/^	T4D_START_A     = 0x80, T4D_STOP_A      = 0x84,$/;"	e	enum:trident_op_registers
T4D_STOP_B	trident.h	/^	T4D_STOP_B      = 0xb8, T4D_CSPF_B	= 0xbc,$/;"	e	enum:trident_op_registers
TEST_REGISTER	opl3_hw.h	43;"	d
THIS_AUDIO_NODE	jz_i2s.c	58;"	d	file:
TIMER1_MASK	opl3_hw.h	50;"	d
TIMER1_REGISTER	opl3_hw.h	46;"	d
TIMER1_START	opl3_hw.h	52;"	d
TIMER2_MASK	opl3_hw.h	51;"	d
TIMER2_REGISTER	opl3_hw.h	47;"	d
TIMER2_START	opl3_hw.h	53;"	d
TIMER_ARMED	sound_config.h	150;"	d
TIMER_CONTROL_REGISTER	opl3_hw.h	48;"	d
TIMER_NOT_ARMED	sound_config.h	151;"	d
TIME_PRO_RESET	msnd_classic.h	73;"	d
TIME_PRO_RESET	msnd_pinnacle.h	106;"	d
TIME_PRO_RESET_DONE	msnd_classic.h	71;"	d
TIME_PRO_RESET_DONE	msnd_pinnacle.h	104;"	d
TIME_PRO_SYSEX	msnd_classic.h	72;"	d
TIME_PRO_SYSEX	msnd_pinnacle.h	105;"	d
TMU1_TCR_INIT	sh_dac_audio.c	36;"	d	file:
TMU1_TSTR_INIT	sh_dac_audio.c	37;"	d	file:
TMU_TOCR_INIT	sh_dac_audio.c	34;"	d	file:
TOMTOM	opl3.c	296;"	d	file:
TOMTOM_ON	opl3_hw.h	77;"	d
TONE_DB_TO_VOXWARE	dmasound/dmasound_atari.c	873;"	d	file:
TONE_VOXWARE_TO_DB	dmasound/dmasound_atari.c	871;"	d	file:
TOTAL_LEVEL_MASK	opl3_hw.h	99;"	d
TRACE_DEBUG	jz_i2s_dbg.h	40;"	d
TRACE_DEBUG	jz_i2s_dbg.h	57;"	d
TRANS	dmasound/dmasound.h	/^} TRANS;$/;"	t	typeref:struct:__anon18
TREBLE_LVL	sb_mixer.h	54;"	d
TREMOLO_DEPTH	opl3_hw.h	72;"	d
TREMOLO_ON	opl3_hw.h	88;"	d
TRIDENT_4D_DX	trident.c	/^	TRIDENT_4D_DX = 0,$/;"	e	enum:__anon12	file:
TRIDENT_4D_NX	trident.c	/^	TRIDENT_4D_NX,$/;"	e	enum:__anon12	file:
TRIDENT_CARD_MAGIC	trident.c	237;"	d	file:
TRIDENT_DMA_MASK	trident.c	240;"	d	file:
TRIDENT_FMT_16BIT	trident.h	67;"	d
TRIDENT_FMT_MASK	trident.h	68;"	d
TRIDENT_FMT_STEREO	trident.h	66;"	d
TRIDENT_MODULE_NAME	trident.c	4628;"	d	file:
TRIDENT_STATE_MAGIC	trident.c	238;"	d	file:
TRID_REG	trident.h	313;"	d
TRUE	aedsp16.c	278;"	d	file:
TRUE	os.h	28;"	d
TTInit	dmasound/dmasound_atari.c	/^static void TTInit(void)$/;"	f	file:
TTMixerInit	dmasound/dmasound_atari.c	/^static void __init TTMixerInit(void)$/;"	f	file:
TTMixerIoctl	dmasound/dmasound_atari.c	/^static int TTMixerIoctl(u_int cmd, u_long arg)$/;"	f	file:
TTSetFormat	dmasound/dmasound_atari.c	/^static int TTSetFormat(int format)$/;"	f	file:
TTSetGain	dmasound/dmasound_atari.c	/^static int TTSetGain(int gain)$/;"	f	file:
TTSetVolume	dmasound/dmasound_atari.c	/^static int TTSetVolume(int volume)$/;"	f	file:
TTSilence	dmasound/dmasound_atari.c	/^static void TTSilence(void)$/;"	f	file:
TTStateInfo	dmasound/dmasound_atari.c	/^static int TTStateInfo(char *buffer, size_t space)$/;"	f	file:
TX_READY	sscape.c	56;"	d	file:
TYPE	jz_ac97.c	1267;"	d	file:
TYPE	jz_i2s_4750.c	1559;"	d	file:
TYPE	jz_i2s_dlv_dma_test.c	1547;"	d	file:
TYPE	jz_i2s_for_4750.c	1530;"	d	file:
TYPE	jz_pcm_tlv320aic1106_dma.c	1008;"	d	file:
TYPE	vidc.c	409;"	d	file:
U8_TO_S16	au1550_ac97.c	/^static inline s16 U8_TO_S16(u8 ch)$/;"	f	file:
UART_MIDI	sb.h	27;"	d
UART_MODE_ON	mpu401.c	110;"	d	file:
UART_MODE_ON	uart401.c	77;"	d	file:
UART_MODE_ON	uart6850.c	69;"	d	file:
UART_RESET	uart6850.c	68;"	d	file:
UNDEFINED	opl3.c	299;"	d	file:
UNDERRUN_IE	trident.h	/^	OVERRUN_IE  = 0x00000400, UNDERRUN_IE = 0x00000800,$/;"	e	enum:global_control_bits
UNSHIFT_FIELD	vwsnd.c	444;"	d	file:
USE_AUTOINIT_DMA	os.h	37;"	d
USE_LEFT	opl3_hw.h	213;"	d
USE_LINEIN	jz_codec.h	89;"	d
USE_LINEIN	jz_i2s_dlv_dma_test.c	52;"	d	file:
USE_LINEIN	jzcodec.c	29;"	d	file:
USE_MIC	jz_codec.h	88;"	d
USE_MIC	jz_i2s_dlv_dma_test.c	51;"	d	file:
USE_MIC	jzcodec.c	28;"	d	file:
USE_NONE	jz_codec.h	87;"	d
USE_NONE	jz_i2s_dlv_dma_test.c	50;"	d	file:
USE_NONE	jzcodec.c	27;"	d	file:
USE_RIGHT	opl3_hw.h	214;"	d
USE_SEQ_MACROS	midi_synth.c	17;"	d	file:
USE_SEQ_MACROS	mpu401.c	25;"	d	file:
USE_SIMPLE_MACROS	midi_synth.c	18;"	d	file:
USE_SIMPLE_MACROS	mpu401.c	26;"	d	file:
USHORT	msnd.h	/^typedef u16			USHORT;$/;"	t
VALIDATE_CARD	trident.h	331;"	d
VALIDATE_MAGIC	trident.h	322;"	d
VALIDATE_STATE	swarm_cs4297a.c	196;"	d	file:
VALIDATE_STATE	trident.h	330;"	d
VERSION	aedsp16.c	257;"	d	file:
VERSION	msnd.h	33;"	d
VIA_ACLINK_CTRL	via82cxxx_audio.c	93;"	d	file:
VIA_ACLINK_STATUS	via82cxxx_audio.c	92;"	d	file:
VIA_BASE0_AC97_CTRL	via82cxxx_audio.c	139;"	d	file:
VIA_BASE0_FM_OUT_CHAN	via82cxxx_audio.c	128;"	d	file:
VIA_BASE0_FM_OUT_CHAN_CTRL	via82cxxx_audio.c	130;"	d	file:
VIA_BASE0_FM_OUT_CHAN_STATUS	via82cxxx_audio.c	129;"	d	file:
VIA_BASE0_FM_OUT_CHAN_TYPE	via82cxxx_audio.c	131;"	d	file:
VIA_BASE0_GPI_INT_ENABLE	via82cxxx_audio.c	141;"	d	file:
VIA_BASE0_MULTI_OUT_CHAN	via82cxxx_audio.c	134;"	d	file:
VIA_BASE0_MULTI_OUT_CHAN_CTRL	via82cxxx_audio.c	136;"	d	file:
VIA_BASE0_MULTI_OUT_CHAN_STATUS	via82cxxx_audio.c	135;"	d	file:
VIA_BASE0_MULTI_OUT_CHAN_TYPE	via82cxxx_audio.c	137;"	d	file:
VIA_BASE0_PCM_IN_CHAN	via82cxxx_audio.c	112;"	d	file:
VIA_BASE0_PCM_IN_CHAN_CTRL	via82cxxx_audio.c	114;"	d	file:
VIA_BASE0_PCM_IN_CHAN_STATUS	via82cxxx_audio.c	113;"	d	file:
VIA_BASE0_PCM_IN_CHAN_TYPE	via82cxxx_audio.c	115;"	d	file:
VIA_BASE0_PCM_OUT_CHAN	via82cxxx_audio.c	107;"	d	file:
VIA_BASE0_PCM_OUT_CHAN_CTRL	via82cxxx_audio.c	109;"	d	file:
VIA_BASE0_PCM_OUT_CHAN_STATUS	via82cxxx_audio.c	108;"	d	file:
VIA_BASE0_PCM_OUT_CHAN_TYPE	via82cxxx_audio.c	110;"	d	file:
VIA_BASE0_SGD_STATUS_SHADOW	via82cxxx_audio.c	140;"	d	file:
VIA_CARD_NAME	via82cxxx_audio.c	70;"	d	file:
VIA_CHAN_TYPE_INT_SELECT	via82cxxx_audio.c	167;"	d	file:
VIA_CHAN_TYPE_MASK	via82cxxx_audio.c	164;"	d	file:
VIA_COUNTER_LIMIT	via82cxxx_audio.c	74;"	d	file:
VIA_CR40_AC97_LOW_POWER	via82cxxx_audio.c	171;"	d	file:
VIA_CR40_AC97_READY	via82cxxx_audio.c	170;"	d	file:
VIA_CR40_SECONDARY_READY	via82cxxx_audio.c	172;"	d	file:
VIA_CR41_AC97_ENABLE	via82cxxx_audio.c	174;"	d	file:
VIA_CR41_AC97_RESET	via82cxxx_audio.c	175;"	d	file:
VIA_CR41_AC97_SDO	via82cxxx_audio.c	177;"	d	file:
VIA_CR41_AC97_WAKEUP	via82cxxx_audio.c	176;"	d	file:
VIA_CR41_BOOT_MASK	via82cxxx_audio.c	182;"	d	file:
VIA_CR41_FM_PCM_ENABLE	via82cxxx_audio.c	180;"	d	file:
VIA_CR41_PCM_ENABLE	via82cxxx_audio.c	179;"	d	file:
VIA_CR41_RUN_MASK	via82cxxx_audio.c	185;"	d	file:
VIA_CR41_SB_PCM_ENABLE	via82cxxx_audio.c	181;"	d	file:
VIA_CR41_VRA	via82cxxx_audio.c	178;"	d	file:
VIA_CR42_FM_ENABLE	via82cxxx_audio.c	192;"	d	file:
VIA_CR42_GAME_ENABLE	via82cxxx_audio.c	193;"	d	file:
VIA_CR42_MIDI_ENABLE	via82cxxx_audio.c	191;"	d	file:
VIA_CR42_MIDI_IRQMASK	via82cxxx_audio.c	194;"	d	file:
VIA_CR42_MIDI_PNP	via82cxxx_audio.c	195;"	d	file:
VIA_CR42_SB_ENABLE	via82cxxx_audio.c	190;"	d	file:
VIA_CR44_AC_LINK_ACCESS	via82cxxx_audio.c	198;"	d	file:
VIA_CR44_SECOND_CODEC_SUPPORT	via82cxxx_audio.c	197;"	d	file:
VIA_CR48_FM_TRAP_TO_NMI	via82cxxx_audio.c	200;"	d	file:
VIA_CR80_BUSY	via82cxxx_audio.c	217;"	d	file:
VIA_CR80_FIRST_CODEC	via82cxxx_audio.c	212;"	d	file:
VIA_CR80_FIRST_CODEC_VALID	via82cxxx_audio.c	214;"	d	file:
VIA_CR80_READ	via82cxxx_audio.c	220;"	d	file:
VIA_CR80_REG_IDX	via82cxxx_audio.c	222;"	d	file:
VIA_CR80_SECOND_CODEC	via82cxxx_audio.c	213;"	d	file:
VIA_CR80_SECOND_CODEC_VALID	via82cxxx_audio.c	216;"	d	file:
VIA_CR80_VALID	via82cxxx_audio.c	215;"	d	file:
VIA_CR80_WRITE_MODE	via82cxxx_audio.c	221;"	d	file:
VIA_CR83_BUSY	via82cxxx_audio.c	218;"	d	file:
VIA_CR83_FIRST_CODEC_VALID	via82cxxx_audio.c	219;"	d	file:
VIA_DEBUG	via82cxxx_audio.c	47;"	d	file:
VIA_DEFAULT_BUFFER_TIME	via82cxxx_audio.c	81;"	d	file:
VIA_DEFAULT_FRAG_TIME	via82cxxx_audio.c	80;"	d	file:
VIA_DSP_CAP	via82cxxx_audio.c	226;"	d	file:
VIA_DSP_CAP	via82cxxx_audio.c	229;"	d	file:
VIA_EOL	via82cxxx_audio.c	239;"	d	file:
VIA_FLAG	via82cxxx_audio.c	240;"	d	file:
VIA_FM_NMI_CTRL	via82cxxx_audio.c	96;"	d	file:
VIA_FUNC_ENABLE	via82cxxx_audio.c	94;"	d	file:
VIA_INTR_FM	via82cxxx_audio.c	144;"	d	file:
VIA_INTR_IN	via82cxxx_audio.c	143;"	d	file:
VIA_INTR_MASK	via82cxxx_audio.c	145;"	d	file:
VIA_INTR_OUT	via82cxxx_audio.c	142;"	d	file:
VIA_INT_DISABLE_MASK	via82cxxx_audio.c	203;"	d	file:
VIA_INT_SEL_LAST_SAMPLE_SENT	via82cxxx_audio.c	157;"	d	file:
VIA_INT_SEL_ONE_LINE_LEFT	via82cxxx_audio.c	158;"	d	file:
VIA_INT_SEL_PCI_LAST_LINE_READ	via82cxxx_audio.c	156;"	d	file:
VIA_IRQ_ON_EOL	via82cxxx_audio.c	155;"	d	file:
VIA_IRQ_ON_FLAG	via82cxxx_audio.c	154;"	d	file:
VIA_MAX_BUFFER_DMA_PAGES	via82cxxx_audio.c	77;"	d	file:
VIA_MAX_FRAG_NUMBER	via82cxxx_audio.c	85;"	d	file:
VIA_MAX_FRAG_SIZE	via82cxxx_audio.c	87;"	d	file:
VIA_MIN_FRAG_NUMBER	via82cxxx_audio.c	84;"	d	file:
VIA_MIN_FRAG_SIZE	via82cxxx_audio.c	88;"	d	file:
VIA_MODULE_NAME	via82cxxx_audio.c	71;"	d	file:
VIA_NDEBUG	via82cxxx_audio.c	55;"	d	file:
VIA_NEW_INTR_MASK	via82cxxx_audio.c	151;"	d	file:
VIA_PCM_BLOCK_COUNT	via82cxxx_audio.c	125;"	d	file:
VIA_PCM_CONTROL	via82cxxx_audio.c	119;"	d	file:
VIA_PCM_FMT_16BIT	via82cxxx_audio.c	160;"	d	file:
VIA_PCM_FMT_MASK	via82cxxx_audio.c	163;"	d	file:
VIA_PCM_FMT_STEREO	via82cxxx_audio.c	159;"	d	file:
VIA_PCM_LEFTVOL	via82cxxx_audio.c	121;"	d	file:
VIA_PCM_REC_FIFO	via82cxxx_audio.c	161;"	d	file:
VIA_PCM_RIGHTVOL	via82cxxx_audio.c	122;"	d	file:
VIA_PCM_STATUS	via82cxxx_audio.c	118;"	d	file:
VIA_PCM_STOPRATE	via82cxxx_audio.c	124;"	d	file:
VIA_PCM_TABLE_ADDR	via82cxxx_audio.c	123;"	d	file:
VIA_PCM_TYPE	via82cxxx_audio.c	120;"	d	file:
VIA_PNP_CONTROL	via82cxxx_audio.c	95;"	d	file:
VIA_RESTART_SGD_ON_EOL	via82cxxx_audio.c	162;"	d	file:
VIA_SGD_ACTIVE	via82cxxx_audio.c	206;"	d	file:
VIA_SGD_EOL	via82cxxx_audio.c	209;"	d	file:
VIA_SGD_FLAG	via82cxxx_audio.c	208;"	d	file:
VIA_SGD_PAUSED	via82cxxx_audio.c	205;"	d	file:
VIA_SGD_START	via82cxxx_audio.c	210;"	d	file:
VIA_SGD_STOPPED	via82cxxx_audio.c	204;"	d	file:
VIA_SGD_TERMINATE	via82cxxx_audio.c	207;"	d	file:
VIA_STOP	via82cxxx_audio.c	241;"	d	file:
VIA_SUPPORT_MMAP	via82cxxx_audio.c	66;"	d	file:
VIA_VERSION	via82cxxx_audio.c	18;"	d	file:
VIBRATO_DEPTH	opl3_hw.h	73;"	d
VIBRATO_ON	opl3_hw.h	89;"	d
VIDC_SOUND_CLOCK	vidc.c	42;"	d	file:
VIDC_SOUND_CLOCK_EXT	vidc.c	43;"	d	file:
VNC_DISABLE_AUTOSWITCH	waveartist.c	1484;"	d	file:
VNC_HANDSET_DETECT	waveartist.c	1483;"	d	file:
VNC_MUTE_INTERNAL_SPKR	waveartist.c	1480;"	d	file:
VNC_MUTE_LINE_OUT	waveartist.c	1481;"	d	file:
VNC_PHONE_DETECT	waveartist.c	1482;"	d	file:
VNC_SOUND_PAUSE	waveartist.c	1849;"	d	file:
VNC_SOUND_RESUME	waveartist.c	1850;"	d	file:
VNC_TIMER_PERIOD	waveartist.c	1474;"	d	file:
VOC_VOL	sb_mixer.h	35;"	d
VOICE_TO_LEFT	opl3_hw.h	186;"	d
VOICE_TO_RIGHT	opl3_hw.h	187;"	d
VOLUME_AMI_TO_VOXWARE	dmasound/dmasound_paula.c	427;"	d	file:
VOLUME_ATT_TO_VOXWARE	dmasound/dmasound_atari.c	1154;"	d	file:
VOLUME_DB_TO_VOXWARE	dmasound/dmasound_atari.c	985;"	d	file:
VOLUME_VOXWARE_TO_AMI	dmasound/dmasound_paula.c	425;"	d	file:
VOLUME_VOXWARE_TO_ATT	dmasound/dmasound_atari.c	1152;"	d	file:
VOLUME_VOXWARE_TO_DB	dmasound/dmasound_atari.c	983;"	d	file:
VOL_MUTED	i810_audio.c	135;"	d	file:
VWSND_DEBUG	vwsnd.c	22;"	d	file:
WACMD_GETREV	waveartist.h	40;"	d
WACMD_GET_LEVEL	waveartist.h	63;"	d
WACMD_INPUTCHANNELS	waveartist.h	42;"	d
WACMD_INPUTDMA	waveartist.h	44;"	d
WACMD_INPUTFORMAT	waveartist.h	41;"	d
WACMD_INPUTPAUSE	waveartist.h	47;"	d
WACMD_INPUTPIO	waveartist.h	50;"	d
WACMD_INPUTRESUME	waveartist.h	49;"	d
WACMD_INPUTSIZE	waveartist.h	45;"	d
WACMD_INPUTSPEED	waveartist.h	43;"	d
WACMD_INPUTSTART	waveartist.h	46;"	d
WACMD_INPUTSTOP	waveartist.h	48;"	d
WACMD_OUTPUTCHANNELS	waveartist.h	53;"	d
WACMD_OUTPUTDMA	waveartist.h	55;"	d
WACMD_OUTPUTFORMAT	waveartist.h	52;"	d
WACMD_OUTPUTPAUSE	waveartist.h	58;"	d
WACMD_OUTPUTPIO	waveartist.h	61;"	d
WACMD_OUTPUTRESUME	waveartist.h	60;"	d
WACMD_OUTPUTSIZE	waveartist.h	56;"	d
WACMD_OUTPUTSPEED	waveartist.h	54;"	d
WACMD_OUTPUTSTART	waveartist.h	57;"	d
WACMD_OUTPUTSTOP	waveartist.h	59;"	d
WACMD_RST_MIXER	waveartist.h	66;"	d
WACMD_SET_LEVEL	waveartist.h	64;"	d
WACMD_SET_MIXER	waveartist.h	65;"	d
WACMD_SET_MONO	waveartist.h	67;"	d
WACMD_SYSTEMID	waveartist.h	39;"	d
WAKE_UP	dmasound/dmasound.h	243;"	d
WARM_REST	trident.h	/^	WARM_REST   = 0x00000001, COLD_RESET  = 0x00000002,$/;"	e	enum:serial_intf_ctrl_bits
WAVE_SELECT	opl3_hw.h	118;"	d
WK_ABORT	sound_config.h	107;"	d
WK_NONE	sound_config.h	101;"	d
WK_SELECT	sound_config.h	106;"	d
WK_SIGNAL	sound_config.h	104;"	d
WK_SLEEP	sound_config.h	105;"	d
WK_TIMEOUT	sound_config.h	103;"	d
WK_WAKEUP	sound_config.h	102;"	d
WORD	msnd.h	/^typedef u16			WORD;$/;"	t
WRITE_INTR_MASK	vwsnd.c	1417;"	d	file:
WRITE_MDIRQ_CFG	aedsp16.c	298;"	d	file:
WSSADDR	aedsp16.c	353;"	d	file:
WSS_AUTOCALIBRATION	pss.c	110;"	d	file:
WSS_DATA	pss.c	104;"	d	file:
WSS_INDEX	pss.c	103;"	d	file:
WSS_INITIALIZING	pss.c	109;"	d	file:
_DEV_TABLE_H_	dev_table.h	16;"	d
_JZ_CODEC_H_	jz_codec.h	3;"	d
_JZ_DLV_H_	jzdlv.h	6;"	d
_MIDI_SYNTH_C_	midi_synth.c	22;"	d	file:
_SEQ_ADVBUF	midi_synth.c	41;"	d	file:
_SEQ_ADVBUF	mpu401.c	172;"	d	file:
_SIOC_NR	vidc.c	39;"	d	file:
_SIOC_TYPE	vidc.c	36;"	d	file:
_SOUND_CONFIG_H_	sound_config.h	15;"	d
__HAL2_H	hal2.h	2;"	d
__JZ_I2S_DBG_H__	jz_i2s_dbg.h	10;"	d
__MSND_CLASSIC_H	msnd_classic.h	31;"	d
__MSND_H	msnd.h	31;"	d
__MSND_PINNACLE_H	msnd_pinnacle.h	31;"	d
__NO_VERSION__	jz_ac97.c	17;"	d	file:
__SB_MIXER_C__	sb_mixer.c	21;"	d	file:
__TRID4DWAVE_H	trident.h	2;"	d
__audio_pipe	jz_i2s.c	/^typedef struct __audio_pipe$/;"	s	file:
__devinitdata	ad1848.c	/^static struct isapnp_device_id id_table[] __devinitdata = {$/;"	v	typeref:struct:id_table	file:
__devinitdata	i810_audio.c	/^static struct ac97_quirk ac97_quirks[] __devinitdata = {$/;"	v	typeref:struct:ac97_quirks	file:
__i810_update_lvi	i810_audio.c	/^static void __i810_update_lvi(struct i810_state *state, int rec)$/;"	f	file:
__initdata	ad1848.c	/^} ad1848_isapnp_list[] __initdata = {$/;"	v	typeref:struct:__anon3	file:
__initdata	aedsp16.c	/^                     __initdata = { 0, 0};$/;"	v	file:
__initdata	aedsp16.c	/^static char     DSPCopyright[CARDNAMELEN + 1] __initdata = {0, };$/;"	v	file:
__initdata	aedsp16.c	/^static char     DSPVersion[CARDVERLEN + 1] __initdata = {0, };$/;"	v	file:
__initdata	aedsp16.c	/^static int      soft_cfg __initdata = 0;	\/* bitmapped config *\/$/;"	v	file:
__initdata	aedsp16.c	/^static int      soft_cfg_mss __initdata = 0;	\/* bitmapped mss config *\/$/;"	v	file:
__initdata	aedsp16.c	/^static int      ver[CARDVERLEN] __initdata = {0, 0};	\/* DSP Ver:$/;"	v	file:
__initdata	aedsp16.c	/^static struct d_hcfg decoded_hcfg __initdata = {0, };$/;"	v	typeref:struct:decoded_hcfg	file:
__initdata	aedsp16.c	/^static struct orVals orDMA[] __initdata = {$/;"	v	typeref:struct:orDMA	file:
__initdata	aedsp16.c	/^static struct orVals orIRQ[] __initdata = {$/;"	v	typeref:struct:orIRQ	file:
__initdata	aedsp16.c	/^static struct orVals orMIRQ[] __initdata = {$/;"	v	typeref:struct:orMIRQ	file:
__initdata	msnd_pinnacle.c	/^calibrate_signal __initdata =		CONFIG_MSND_CALSIGNAL;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int calibrate_signal __initdata = 0;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int cfg __initdata =		-1;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int cfg __initdata =		CONFIG_MSNDPIN_CFG;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int digital __initdata =		CONFIG_MSNDPIN_DIGITAL;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int digital __initdata = 0;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int fifosize __initdata =	CONFIG_MSND_FIFOSIZE;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int fifosize __initdata =	DEFFIFOSIZE;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int ide_io0 __initdata =		CONFIG_MSNDPIN_IDE_IO0;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int ide_io0 __initdata = 0;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int ide_io1 __initdata =		CONFIG_MSNDPIN_IDE_IO1;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int ide_io1 __initdata = 0;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int ide_irq __initdata =		CONFIG_MSNDPIN_IDE_IRQ;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int ide_irq __initdata = 0;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int io __initdata =		-1;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int io __initdata =		CONFIG_MSNDCLAS_IO;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int io __initdata =		CONFIG_MSNDPIN_IO;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int irq __initdata =		-1;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int irq __initdata =		CONFIG_MSNDCLAS_IRQ;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int irq __initdata =		CONFIG_MSNDPIN_IRQ;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int joystick_io __initdata =	CONFIG_MSNDPIN_JOYSTICK_IO;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int joystick_io __initdata = 0;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int mem __initdata =		-1;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int mem __initdata =		CONFIG_MSNDCLAS_MEM;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int mem __initdata =		CONFIG_MSNDPIN_MEM;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int mpu_io __initdata =		CONFIG_MSNDPIN_MPU_IO;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int mpu_io __initdata = 0;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int mpu_irq __initdata =		CONFIG_MSNDPIN_MPU_IRQ;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int mpu_irq __initdata = 0;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int reset __initdata = 0;$/;"	v	file:
__initdata	msnd_pinnacle.c	/^static int write_ndelay __initdata =	-1;$/;"	v	file:
__initdata	pss.c	/^static int mpu_io __initdata	= -1;$/;"	v	file:
__initdata	pss.c	/^static int mpu_irq __initdata	= -1;$/;"	v	file:
__initdata	pss.c	/^static int mss_dma __initdata	= -1;$/;"	v	file:
__initdata	pss.c	/^static int mss_io __initdata	= -1;$/;"	v	file:
__initdata	pss.c	/^static int mss_irq __initdata	= -1;$/;"	v	file:
__initdata	pss.c	/^static int pss_io __initdata	= -1;$/;"	v	file:
__sscape_write	sscape.c	/^static void __sscape_write(int reg, int data)$/;"	f	file:
__start_adc	i810_audio.c	/^static inline void __start_adc(struct i810_state *state)$/;"	f	file:
__start_dac	i810_audio.c	/^static inline void __start_dac(struct i810_state *state)$/;"	f	file:
__stop_adc	i810_audio.c	/^static inline void __stop_adc(struct i810_state *state)$/;"	f	file:
__stop_adc	trident.c	/^__stop_adc(struct trident_state *state)$/;"	f	file:
__stop_dac	i810_audio.c	/^static inline void __stop_dac(struct i810_state *state)$/;"	f	file:
__stop_dac	trident.c	/^__stop_dac(struct trident_state *state)$/;"	f	file:
__swb_inc_i	vwsnd.c	/^static __inline__ unsigned int __swb_inc_i(vwsnd_port_t *port, int inc)$/;"	f	file:
__swb_inc_u	vwsnd.c	/^static __inline__ unsigned int __swb_inc_u(vwsnd_port_t *port, int inc)$/;"	f	file:
_dmasound_h_	dmasound/dmasound.h	13;"	d
_seqbuf	midi_synth.c	39;"	d	file:
_seqbuf	mpu401.c	170;"	d	file:
_seqbufptr	midi_synth.c	40;"	d	file:
_seqbufptr	mpu401.c	171;"	d	file:
_unused0	hal2.h	/^	u32 _unused0[2];$/;"	m	struct:hal2_syn_regs
_unused0	hal2.h	/^	u32 _unused0[4];$/;"	m	struct:hal2_ctl_regs
_unused1	hal2.h	/^	u32 _unused1[3];$/;"	m	struct:hal2_ctl_regs
_unused2	hal2.h	/^	u32 _unused2[3];$/;"	m	struct:hal2_ctl_regs
_unused3	hal2.h	/^	u32 _unused3[3];$/;"	m	struct:hal2_ctl_regs
_unused4	hal2.h	/^	u32 _unused4[3];$/;"	m	struct:hal2_ctl_regs
_unused5	hal2.h	/^	u32 _unused5[3];$/;"	m	struct:hal2_ctl_regs
_unused6	hal2.h	/^	u32 _unused6[3];$/;"	m	struct:hal2_ctl_regs
abnormal_data_count	jz_i2s_4750.c	/^int abnormal_data_count;$/;"	v
abnormal_data_count	jz_i2s_for_4750.c	/^int abnormal_data_count;$/;"	v
abort_read	dmasound/dmasound.h	/^    void (*abort_read)(void);		\/* optional *\/$/;"	m	struct:__anon17
ac97	via82cxxx_audio.c	/^	struct ac97_codec *ac97;$/;"	m	struct:via_info	typeref:struct:via_info::ac97_codec	file:
ac97_alloc_codec	ac97_codec.c	/^EXPORT_SYMBOL(ac97_alloc_codec);$/;"	v
ac97_alloc_codec	ac97_codec.c	/^struct ac97_codec *ac97_alloc_codec(void)$/;"	f
ac97_check_modem	ac97_codec.c	/^static int ac97_check_modem(struct ac97_codec *codec)$/;"	f	file:
ac97_codec	i810_audio.c	/^	struct ac97_codec *ac97_codec[NR_AC97];$/;"	m	struct:i810_card	typeref:struct:i810_card::ac97_codec	file:
ac97_codec	jz_ac97.c	/^	struct ac97_codec *ac97_codec[NR_AC97];$/;"	m	struct:jz_ac97_controller_info	typeref:struct:jz_ac97_controller_info::ac97_codec	file:
ac97_codec	trident.c	/^	struct ac97_codec *ac97_codec[NR_AC97];$/;"	m	struct:trident_card	typeref:struct:trident_card::ac97_codec	file:
ac97_codec_ids	ac97_codec.c	/^} ac97_codec_ids[] = {$/;"	v	typeref:struct:__anon13	file:
ac97_codec_read	jz_ac97.c	/^static u16 ac97_codec_read(struct ac97_codec *codec, u8 reg)$/;"	f	file:
ac97_codec_write	jz_ac97.c	/^static void ac97_codec_write(struct ac97_codec *codec, u8 reg, u16 data)$/;"	f	file:
ac97_controller	jz_ac97.c	/^static struct jz_ac97_controller_info *ac97_controller = NULL;$/;"	v	typeref:struct:jz_ac97_controller_info	file:
ac97_features	i810_audio.c	/^	u16 ac97_features;$/;"	m	struct:i810_card	file:
ac97_features	jz_ac97.c	/^	unsigned short ac97_features;$/;"	m	struct:jz_ac97_controller_info	file:
ac97_hw	ac97_codec.c	/^} ac97_hw[SOUND_MIXER_NRDEVICES]= {$/;"	v	typeref:struct:ac97_mixer_hw	file:
ac97_id_map	i810_audio.c	/^	u16    ac97_id_map[NR_AC97];$/;"	m	struct:i810_card	file:
ac97_init_mixer	ac97_codec.c	/^static int ac97_init_mixer(struct ac97_codec *codec)$/;"	f	file:
ac97_lock	i810_audio.c	/^	spinlock_t ac97_lock;$/;"	m	struct:i810_card	file:
ac97_lock	via82cxxx_audio.c	/^	spinlock_t ac97_lock;$/;"	m	struct:via_info	file:
ac97_mixer_hw	ac97_codec.c	/^static struct ac97_mixer_hw {$/;"	s	file:
ac97_mixer_ioctl	ac97_codec.c	/^static int ac97_mixer_ioctl(struct ac97_codec *codec, unsigned int cmd, unsigned long arg)$/;"	f	file:
ac97_oss_rm	ac97_codec.c	/^static const unsigned int ac97_oss_rm[] = {$/;"	v	file:
ac97_probe_codec	ac97_codec.c	/^EXPORT_SYMBOL(ac97_probe_codec);$/;"	v
ac97_probe_codec	ac97_codec.c	/^int ac97_probe_codec(struct ac97_codec *codec)$/;"	f
ac97_quirk	i810_audio.c	/^static int ac97_quirk = AC97_TUNE_DEFAULT;$/;"	v	file:
ac97_read_mixer	ac97_codec.c	/^static int ac97_read_mixer(struct ac97_codec *codec, int oss_channel) $/;"	f	file:
ac97_read_proc	ac97_codec.c	/^EXPORT_SYMBOL(ac97_read_proc);$/;"	v
ac97_read_proc	ac97_codec.c	/^int ac97_read_proc (char *page, char **start, off_t off,$/;"	f
ac97_recmask_io	ac97_codec.c	/^static int ac97_recmask_io(struct ac97_codec *codec, int rw, int mask) $/;"	f	file:
ac97_recsettings	ac97_codec.c	/^enum ac97_recsettings {$/;"	g	file:
ac97_release_codec	ac97_codec.c	/^EXPORT_SYMBOL(ac97_release_codec);$/;"	v
ac97_release_codec	ac97_codec.c	/^void ac97_release_codec(struct ac97_codec *codec)$/;"	f
ac97_rm2oss	ac97_codec.c	/^static const unsigned int ac97_rm2oss[] = {$/;"	v	file:
ac97_set_adc_rate	ac97_codec.c	/^EXPORT_SYMBOL(ac97_set_adc_rate);$/;"	v
ac97_set_adc_rate	ac97_codec.c	/^unsigned int ac97_set_adc_rate(struct ac97_codec *codec, unsigned int rate)$/;"	f
ac97_set_dac_rate	ac97_codec.c	/^EXPORT_SYMBOL(ac97_set_dac_rate);$/;"	v
ac97_set_dac_rate	ac97_codec.c	/^unsigned int ac97_set_dac_rate(struct ac97_codec *codec, unsigned int rate)$/;"	f
ac97_set_mixer	ac97_codec.c	/^static void ac97_set_mixer(struct ac97_codec *codec, unsigned int oss_mixer, unsigned int val ) $/;"	f	file:
ac97_status	i810_audio.c	/^	u16 ac97_status;$/;"	m	struct:i810_card	file:
ac97_stereo_enhancements	ac97_codec.c	/^static const char *ac97_stereo_enhancements[] =$/;"	v	file:
ac97_tune_hardware	ac97_codec.c	/^EXPORT_SYMBOL_GPL(ac97_tune_hardware);$/;"	v
ac97_tune_hardware	ac97_codec.c	/^int ac97_tune_hardware(struct pci_dev *pdev, struct ac97_quirk *quirk, int override)$/;"	f
ac97_write_mixer	ac97_codec.c	/^static void ac97_write_mixer(struct ac97_codec *codec, int oss_channel,$/;"	f	file:
ac97base	i810_audio.c	/^	unsigned long ac97base;$/;"	m	struct:i810_card	file:
ac97base_mmio	i810_audio.c	/^	u_int8_t __iomem *ac97base_mmio;$/;"	m	struct:i810_card	file:
ac97base_mmio_phys	i810_audio.c	/^	unsigned long ac97base_mmio_phys;$/;"	m	struct:i810_card	file:
acer	sb.h	/^	int  acer;	\/* Do acer notebook init? *\/$/;"	m	struct:sb_module_options
acer	sb_card.c	/^static int __initdata acer 	= 0; \/* Do acer notebook init? *\/$/;"	v	file:
acquirecodecaccess	trident.c	/^acquirecodecaccess(struct trident_card *card)$/;"	f	file:
act_i	opl3.c	/^	struct sbi_instrument *act_i[MAX_VOICE];$/;"	m	struct:opl_devinfo	typeref:struct:opl_devinfo::sbi_instrument	file:
action_queue	dmasound/dmasound.h	/^    wait_queue_head_t action_queue, open_queue, sync_queue;$/;"	m	struct:sound_queue
activate_dev	ad1848.c	/^static struct pnp_dev *activate_dev(char *devname, char *resname, struct pnp_dev *dev)$/;"	f	file:
active	dmasound/dmasound.h	/^    int active;$/;"	m	struct:sound_queue
ad1843_AAMEN	vwsnd.c	/^	ad1843_AAMEN  = { 27,  4,  1 },	\/* Analog to Analog Mix Enable *\/$/;"	v	file:
ad1843_ADLC	vwsnd.c	/^	ad1843_ADLC   = { 15,  0,  2 },	\/* ADC Left Sample Rate Source *\/$/;"	v	file:
ad1843_ADLEN	vwsnd.c	/^	ad1843_ADLEN  = { 27,  0,  1 },	\/* ADC Left Channel Enable *\/$/;"	v	file:
ad1843_ADLF	vwsnd.c	/^	ad1843_ADLF   = { 26,  0,  2 }, \/* ADC Left Channel Data Format *\/$/;"	v	file:
ad1843_ADRC	vwsnd.c	/^	ad1843_ADRC   = { 15,  2,  2 },	\/* ADC Right Sample Rate Source *\/$/;"	v	file:
ad1843_ADREN	vwsnd.c	/^	ad1843_ADREN  = { 27,  1,  1 },	\/* ADC Right Channel Enable *\/$/;"	v	file:
ad1843_ADRF	vwsnd.c	/^	ad1843_ADRF   = { 26,  2,  2 }, \/* ADC Right Channel Data Format *\/$/;"	v	file:
ad1843_ADTLK	vwsnd.c	/^	ad1843_ADTLK  = { 26,  4,  1 },	\/* ADC Transmit Lock Mode Select *\/$/;"	v	file:
ad1843_ANAEN	vwsnd.c	/^	ad1843_ANAEN  = { 27,  7,  1 },	\/* Analog Channel Enable *\/$/;"	v	file:
ad1843_C1C	vwsnd.c	/^	ad1843_C1C    = { 17,  0, 16 },	\/* Clock 1 Sample Rate Select *\/$/;"	v	file:
ad1843_C1EN	vwsnd.c	/^	ad1843_C1EN   = { 28, 11,  1 },	\/* Clock Generator 1 Enable *\/$/;"	v	file:
ad1843_C2C	vwsnd.c	/^	ad1843_C2C    = { 20,  0, 16 },	\/* Clock 1 Sample Rate Select *\/$/;"	v	file:
ad1843_C2EN	vwsnd.c	/^	ad1843_C2EN   = { 28, 12,  1 },	\/* Clock Generator 2 Enable *\/$/;"	v	file:
ad1843_DA1C	vwsnd.c	/^	ad1843_DA1C   = { 15,  8,  2 },	\/* DAC1 Sample Rate Source *\/$/;"	v	file:
ad1843_DA1EN	vwsnd.c	/^	ad1843_DA1EN  = { 27,  8,  1 },	\/* DAC1 Enable *\/$/;"	v	file:
ad1843_DA1F	vwsnd.c	/^	ad1843_DA1F   = { 26,  8,  2 },	\/* DAC1 Data Format Select *\/$/;"	v	file:
ad1843_DA1SM	vwsnd.c	/^	ad1843_DA1SM  = { 26, 14,  1 },	\/* DAC1 Stereo\/Mono Mode Select *\/$/;"	v	file:
ad1843_DA2EN	vwsnd.c	/^	ad1843_DA2EN  = { 27,  9,  1 },	\/* DAC2 Enable *\/$/;"	v	file:
ad1843_DAADL	vwsnd.c	/^	ad1843_DAADL  = { 25,  4,  2 },	\/* Digital ADC Left Source Select *\/$/;"	v	file:
ad1843_DAADR	vwsnd.c	/^	ad1843_DAADR  = { 25,  6,  2 },	\/* Digital ADC Right Source Select *\/$/;"	v	file:
ad1843_DRSFLT	vwsnd.c	/^	ad1843_DRSFLT = { 25, 15,  1 },	\/* Digital Reampler Filter Mode *\/$/;"	v	file:
ad1843_HPOM	vwsnd.c	/^	ad1843_HPOM   = {  8,  5,  1 },	\/* Headphone Output Mute *\/$/;"	v	file:
ad1843_HPOS	vwsnd.c	/^	ad1843_HPOS   = {  8,  4,  1 },	\/* Headphone Output Voltage Swing *\/$/;"	v	file:
ad1843_INIT	vwsnd.c	/^	ad1843_INIT   = {  0, 15,  1 },	\/* Clock Initialization Flag *\/$/;"	v	file:
ad1843_LDA1AM	vwsnd.c	/^	ad1843_LDA1AM = { 11, 15,  1 },	\/* Left DAC1 Digital Mute *\/$/;"	v	file:
ad1843_LDA1G	vwsnd.c	/^	ad1843_LDA1G  = {  9,  8,  6 },	\/* Left DAC1 Analog\/Digital Gain *\/$/;"	v	file:
ad1843_LDA1GM	vwsnd.c	/^	ad1843_LDA1GM = {  9, 15,  1 },	\/* Left DAC1 Analog Mute *\/$/;"	v	file:
ad1843_LIG	vwsnd.c	/^	ad1843_LIG    = {  2,  8,  4 },	\/* Left ADC Input Gain *\/$/;"	v	file:
ad1843_LMCM	vwsnd.c	/^	ad1843_LMCM   = {  7,  8,  5 },	\/* Left Mic Mix Gain\/Atten *\/$/;"	v	file:
ad1843_LMCMM	vwsnd.c	/^	ad1843_LMCMM  = {  7, 15,  1 },	\/* Left Mic Mix Mute *\/$/;"	v	file:
ad1843_LMGE	vwsnd.c	/^	ad1843_LMGE   = {  2, 12,  1 },	\/* Left ADC Mic Gain Enable *\/$/;"	v	file:
ad1843_LSS	vwsnd.c	/^	ad1843_LSS    = {  2, 13,  3 },	\/* Left ADC Source Select *\/$/;"	v	file:
ad1843_LX1M	vwsnd.c	/^	ad1843_LX1M   = {  4,  8,  5 },	\/* Left Aux 1 Mix Gain\/Atten *\/$/;"	v	file:
ad1843_LX1MM	vwsnd.c	/^	ad1843_LX1MM  = {  4, 15,  1 },	\/* Left Aux 1 Mix Mute *\/$/;"	v	file:
ad1843_LX2M	vwsnd.c	/^	ad1843_LX2M   = {  5,  8,  5 },	\/* Left Aux 2 Mix Gain\/Atten *\/$/;"	v	file:
ad1843_LX2MM	vwsnd.c	/^	ad1843_LX2MM  = {  5, 15,  1 },	\/* Left Aux 2 Mix Mute *\/$/;"	v	file:
ad1843_PDNI	vwsnd.c	/^	ad1843_PDNI   = { 28, 15,  1 };	\/* Converter Power Down *\/$/;"	v	file:
ad1843_PDNO	vwsnd.c	/^	ad1843_PDNO   = {  0, 14,  1 },	\/* Converter Power-Down Flag *\/$/;"	v	file:
ad1843_RDA1AM	vwsnd.c	/^	ad1843_RDA1AM = { 11,  7,  1 },	\/* Right DAC1 Digital Mute *\/$/;"	v	file:
ad1843_RDA1G	vwsnd.c	/^	ad1843_RDA1G  = {  9,  0,  6 },	\/* Right DAC1 Analog\/Digital Gain *\/$/;"	v	file:
ad1843_RDA1GM	vwsnd.c	/^	ad1843_RDA1GM = {  9,  7,  1 },	\/* Right DAC1 Analog Mute *\/$/;"	v	file:
ad1843_RIG	vwsnd.c	/^	ad1843_RIG    = {  2,  0,  4 },	\/* Right ADC Input Gain *\/$/;"	v	file:
ad1843_RMCM	vwsnd.c	/^	ad1843_RMCM   = {  7,  0,  5 },	\/* Right Mic Mix Gain\/Atten *\/$/;"	v	file:
ad1843_RMCMM	vwsnd.c	/^	ad1843_RMCMM  = {  7,  7,  1 },	\/* Right Mic Mix Mute *\/$/;"	v	file:
ad1843_RMGE	vwsnd.c	/^	ad1843_RMGE   = {  2,  4,  1 },	\/* Right ADC Mic Gain Enable *\/$/;"	v	file:
ad1843_RSS	vwsnd.c	/^	ad1843_RSS    = {  2,  5,  3 },	\/* Right ADC Source Select *\/$/;"	v	file:
ad1843_RX1M	vwsnd.c	/^	ad1843_RX1M   = {  4,  0,  5 },	\/* Right Aux 1 Mix Gain\/Atten *\/$/;"	v	file:
ad1843_RX1MM	vwsnd.c	/^	ad1843_RX1MM  = {  4,  7,  1 },	\/* Right Aux 1 Mix Mute *\/$/;"	v	file:
ad1843_RX2M	vwsnd.c	/^	ad1843_RX2M   = {  5,  0,  5 },	\/* Right Aux 2 Mix Gain\/Atten *\/$/;"	v	file:
ad1843_RX2MM	vwsnd.c	/^	ad1843_RX2MM  = {  5,  7,  1 },	\/* Right Aux 2 Mix Mute *\/$/;"	v	file:
ad1843_SCF	vwsnd.c	/^	ad1843_SCF    = { 26,  7,  1 },	\/* SCLK Frequency Select *\/$/;"	v	file:
ad1843_bitfield	vwsnd.c	/^typedef struct ad1843_bitfield {$/;"	s	file:
ad1843_bitfield_t	vwsnd.c	/^} ad1843_bitfield_t;$/;"	t	typeref:struct:ad1843_bitfield	file:
ad1843_gain	vwsnd.c	/^typedef struct ad1843_gain {$/;"	s	file:
ad1843_gain_CD	vwsnd.c	/^static const ad1843_gain_t ad1843_gain_CD$/;"	v	file:
ad1843_gain_LINE	vwsnd.c	/^static const ad1843_gain_t ad1843_gain_LINE$/;"	v	file:
ad1843_gain_MIC	vwsnd.c	/^static const ad1843_gain_t ad1843_gain_MIC$/;"	v	file:
ad1843_gain_PCM	vwsnd.c	/^static const ad1843_gain_t ad1843_gain_PCM$/;"	v	file:
ad1843_gain_RECLEV	vwsnd.c	/^static const ad1843_gain_t ad1843_gain_RECLEV$/;"	v	file:
ad1843_gain_t	vwsnd.c	/^} ad1843_gain_t;$/;"	t	typeref:struct:ad1843_gain	file:
ad1843_get_gain	vwsnd.c	/^static int ad1843_get_gain(lithium_t *lith, const ad1843_gain_t *gp)$/;"	f	file:
ad1843_get_outsrc	vwsnd.c	/^static int ad1843_get_outsrc(lithium_t *lith)$/;"	f	file:
ad1843_get_recsrc	vwsnd.c	/^static int ad1843_get_recsrc(lithium_t *lith)$/;"	f	file:
ad1843_init	vwsnd.c	/^static int __init ad1843_init(lithium_t *lith)$/;"	f	file:
ad1843_read_bits	vwsnd.c	/^static int ad1843_read_bits(lithium_t *lith, const ad1843_bitfield_t *field)$/;"	f	file:
ad1843_read_multi	vwsnd.c	/^static void ad1843_read_multi(lithium_t *lith, int argcount, ...)$/;"	f	file:
ad1843_set_gain	vwsnd.c	/^static int ad1843_set_gain(lithium_t *lith,$/;"	f	file:
ad1843_set_outsrc	vwsnd.c	/^static int ad1843_set_outsrc(lithium_t *lith, int mask)$/;"	f	file:
ad1843_set_recsrc	vwsnd.c	/^static int ad1843_set_recsrc(lithium_t *lith, int newsrc)$/;"	f	file:
ad1843_set_resample_mode	vwsnd.c	/^static void ad1843_set_resample_mode(lithium_t *lith, int onoff)$/;"	f	file:
ad1843_setup_adc	vwsnd.c	/^static void ad1843_setup_adc(lithium_t *lith, int framerate, int fmt, int channels)$/;"	f	file:
ad1843_setup_dac	vwsnd.c	/^static void ad1843_setup_dac(lithium_t *lith,$/;"	f	file:
ad1843_shutdown_adc	vwsnd.c	/^static void ad1843_shutdown_adc(lithium_t *lith)$/;"	f	file:
ad1843_shutdown_dac	vwsnd.c	/^static void ad1843_shutdown_dac(lithium_t *lith)$/;"	f	file:
ad1843_slot	vwsnd.c	/^	int ad1843_slot;$/;"	m	struct:dma_chan_desc	file:
ad1843_write_bits	vwsnd.c	/^static int ad1843_write_bits(lithium_t *lith,$/;"	f	file:
ad1843_write_multi	vwsnd.c	/^static void ad1843_write_multi(lithium_t *lith, int argcount, ...)$/;"	f	file:
ad1848_audio_driver	ad1848.c	/^static struct audio_driver ad1848_audio_driver =$/;"	v	typeref:struct:audio_driver	file:
ad1848_close	ad1848.c	/^static void ad1848_close(int dev)$/;"	f	file:
ad1848_control	ad1848.c	/^EXPORT_SYMBOL(ad1848_control);$/;"	v
ad1848_control	ad1848.c	/^int ad1848_control(int cmd, int arg)$/;"	f
ad1848_detect	ad1848.c	/^EXPORT_SYMBOL(ad1848_detect);$/;"	v
ad1848_detect	ad1848.c	/^int ad1848_detect(struct resource *ports, int *ad_flags, int *osp)$/;"	f
ad1848_dev	ad1848.c	/^static struct pnp_dev	*ad1848_dev  = NULL;$/;"	v	typeref:struct:pnp_dev	file:
ad1848_halt	ad1848.c	/^static void ad1848_halt(int dev)$/;"	f	file:
ad1848_halt_input	ad1848.c	/^static void ad1848_halt_input(int dev)$/;"	f	file:
ad1848_halt_output	ad1848.c	/^static void ad1848_halt_output(int dev)$/;"	f	file:
ad1848_info	ad1848.c	/^} ad1848_info;$/;"	t	typeref:struct:__anon1	file:
ad1848_init	ad1848.c	/^EXPORT_SYMBOL(ad1848_init);$/;"	v
ad1848_init	ad1848.c	/^int ad1848_init (char *name, struct resource *ports, int irq, int dma_playback,$/;"	f
ad1848_init_generic	ad1848.c	/^static struct pnp_dev __init *ad1848_init_generic(struct pnp_card *bus,$/;"	f	file:
ad1848_init_hw	ad1848.c	/^static void ad1848_init_hw(ad1848_info * devc)$/;"	f	file:
ad1848_isapnp_init	ad1848.c	/^static int __init ad1848_isapnp_init(struct address_info *hw_config, struct pnp_card *bus, int slot)$/;"	f	file:
ad1848_isapnp_probe	ad1848.c	/^static int __init ad1848_isapnp_probe(struct address_info *hw_config)$/;"	f	file:
ad1848_mix_devices	ad1848_mixer.h	/^static mixer_ents ad1848_mix_devices[32] = {$/;"	v
ad1848_mixer_get	ad1848.c	/^static int ad1848_mixer_get(ad1848_info * devc, int dev)$/;"	f	file:
ad1848_mixer_ioctl	ad1848.c	/^static int ad1848_mixer_ioctl(int dev, unsigned int cmd, void __user *arg)$/;"	f	file:
ad1848_mixer_operations	ad1848.c	/^static struct mixer_operations ad1848_mixer_operations =$/;"	v	typeref:struct:mixer_operations	file:
ad1848_mixer_reset	ad1848.c	/^static void ad1848_mixer_reset(ad1848_info * devc)$/;"	f	file:
ad1848_mixer_set	ad1848.c	/^static int ad1848_mixer_set(ad1848_info * devc, int dev, int value)$/;"	f	file:
ad1848_mixer_set_channel	ad1848.c	/^static void ad1848_mixer_set_channel(ad1848_info *devc, int dev, int value, int channel)$/;"	f	file:
ad1848_open	ad1848.c	/^static int ad1848_open(int dev, int mode)$/;"	f	file:
ad1848_output_block	ad1848.c	/^static void ad1848_output_block(int dev, unsigned long buf, int count, int intrflag)$/;"	f	file:
ad1848_port_info	ad1848.c	/^ad1848_port_info;$/;"	t	typeref:struct:ad1848_port_info	file:
ad1848_port_info	ad1848.c	/^typedef struct ad1848_port_info$/;"	s	file:
ad1848_prepare_for_input	ad1848.c	/^static int ad1848_prepare_for_input(int dev, int bsize, int bcount)$/;"	f	file:
ad1848_prepare_for_output	ad1848.c	/^static int ad1848_prepare_for_output(int dev, int bsize, int bcount)$/;"	f	file:
ad1848_set_bits	ad1848.c	/^static unsigned int ad1848_set_bits(int dev, unsigned int arg)$/;"	f	file:
ad1848_set_channels	ad1848.c	/^static short ad1848_set_channels(int dev, short arg)$/;"	f	file:
ad1848_set_recmask	ad1848.c	/^static int ad1848_set_recmask(ad1848_info * devc, int mask)$/;"	f	file:
ad1848_set_speed	ad1848.c	/^static int ad1848_set_speed(int dev, int arg)$/;"	f	file:
ad1848_start_input	ad1848.c	/^static void ad1848_start_input(int dev, unsigned long buf, int count, int intrflag)$/;"	f	file:
ad1848_tmr	ad1848.c	/^static struct sound_lowlev_timer ad1848_tmr =$/;"	v	typeref:struct:sound_lowlev_timer	file:
ad1848_tmr_disable	ad1848.c	/^static void ad1848_tmr_disable(int dev)$/;"	f	file:
ad1848_tmr_install	ad1848.c	/^static int ad1848_tmr_install(int dev)$/;"	f	file:
ad1848_tmr_reprogram	ad1848.c	/^static void ad1848_tmr_reprogram(int dev)$/;"	f	file:
ad1848_tmr_restart	ad1848.c	/^static void ad1848_tmr_restart(int dev)$/;"	f	file:
ad1848_tmr_start	ad1848.c	/^static unsigned int ad1848_tmr_start(int dev, unsigned int usecs)$/;"	f	file:
ad1848_trigger	ad1848.c	/^static void ad1848_trigger(int dev, int state)$/;"	f	file:
ad1848_unload	ad1848.c	/^EXPORT_SYMBOL(ad1848_unload);$/;"	v
ad1848_unload	ad1848.c	/^void ad1848_unload(int io_base, int irq, int dma_playback, int dma_capture, int share_dma)$/;"	f
ad1886_init	ac97_codec.c	/^static int ad1886_init(struct ac97_codec * codec)$/;"	f	file:
ad1886_ops	ac97_codec.c	/^static struct ac97_ops ad1886_ops = { ad1886_init, eapd_control, NULL };$/;"	v	typeref:struct:ac97_ops	file:
ad_enter_MCE	ad1848.c	/^static void ad_enter_MCE(ad1848_info * devc)$/;"	f	file:
ad_format_mask	ad1848.c	/^static int ad_format_mask[13 \/*devc->model *\/ ] =$/;"	v	file:
ad_leave_MCE	ad1848.c	/^static void ad_leave_MCE(ad1848_info * devc)$/;"	f	file:
ad_mixer_dev	pss.c	/^	int             ad_mixer_dev;$/;"	m	struct:pss_confdata	file:
ad_mute	ad1848.c	/^static void ad_mute(ad1848_info * devc)$/;"	f	file:
ad_read	ad1848.c	/^static int ad_read(ad1848_info * devc, int reg)$/;"	f	file:
ad_unmute	ad1848.c	/^static void ad_unmute(ad1848_info * devc)$/;"	f	file:
ad_write	ad1848.c	/^static void ad_write(ad1848_info * devc, int reg, int data)$/;"	f	file:
adc	hal2.c	/^	struct hal2_codec adc;$/;"	m	struct:hal2_card	typeref:struct:hal2_card::hal2_codec	file:
adc_dma_interrupt	au1550_ac97.c	/^static void adc_dma_interrupt(int irq, void *dev_id)$/;"	f	file:
adc_wait	jz_ac97.c	/^	wait_queue_head_t adc_wait;$/;"	m	struct:jz_ac97_controller_info	file:
adc_wait	jz_i2s_4750.c	/^	wait_queue_head_t adc_wait;$/;"	m	struct:jz_i2s_controller_info	file:
adc_wait	jz_i2s_dlv_dma_test.c	/^    wait_queue_head_t adc_wait;$/;"	m	struct:jz_i2s_controller_info	file:
adc_wait	jz_i2s_for_4750.c	/^	wait_queue_head_t adc_wait;$/;"	m	struct:jz_i2s_controller_info	file:
adc_wait	jz_pcm_tlv320aic1106_dma.c	/^	wait_queue_head_t adc_wait;$/;"	m	struct:jz_pcm_controller_info	file:
addr	via82cxxx_audio.c	/^	u32 addr;$/;"	m	struct:via_sgd_table	file:
address_info	sound_config.h	/^struct address_info {$/;"	s
address_interrupt	trident.c	/^	void (*address_interrupt) (struct trident_card *);$/;"	m	struct:trident_card	file:
addresses	trident.c	/^	struct trident_pcm_bank_address *addresses;$/;"	m	struct:trident_pcm_bank	typeref:struct:trident_pcm_bank::trident_pcm_bank_address	file:
adev_info	ad1848.c	/^static ad1848_info adev_info[MAX_AUDIO_DEV];$/;"	v	file:
adev_info	sscape.c	/^static struct sscape_info adev_info = {$/;"	v	typeref:struct:sscape_info	file:
adev_info	waveartist.c	/^static wavnc_info	adev_info[MAX_AUDIO_DEV];$/;"	v	file:
adintr	ad1848.c	/^static irqreturn_t adintr(int irq, void *dev_id)$/;"	f	file:
ae_config	aedsp16.c	/^static struct aedsp16_info ae_config = {$/;"	v	typeref:struct:aedsp16_info	file:
aedsp16_cfg_write	aedsp16.c	/^static int __init aedsp16_cfg_write(int port) {$/;"	f	file:
aedsp16_dsp_copyright	aedsp16.c	/^static int __init aedsp16_dsp_copyright(int port)$/;"	f	file:
aedsp16_dsp_reset	aedsp16.c	/^static int __init aedsp16_dsp_reset(int port)$/;"	f	file:
aedsp16_dsp_version	aedsp16.c	/^static int __init aedsp16_dsp_version(int port)$/;"	f	file:
aedsp16_ext_cfg_write	aedsp16.c	/^static int __init aedsp16_ext_cfg_write(int port) {$/;"	f	file:
aedsp16_hard_decode	aedsp16.c	/^static void __init aedsp16_hard_decode(void) {$/;"	f	file:
aedsp16_hard_encode	aedsp16.c	/^static void __init aedsp16_hard_encode(void) {$/;"	f	file:
aedsp16_hard_read	aedsp16.c	/^static int __init aedsp16_hard_read(int port) {$/;"	f	file:
aedsp16_hard_write	aedsp16.c	/^static int __init aedsp16_hard_write(int port) {$/;"	f	file:
aedsp16_info	aedsp16.c	/^struct aedsp16_info {$/;"	s	file:
aedsp16_init_board	aedsp16.c	/^static int __init aedsp16_init_board(void)$/;"	f	file:
aedsp16_init_mss	aedsp16.c	/^static int __init aedsp16_init_mss(int port)$/;"	f	file:
aedsp16_init_tables	aedsp16.c	/^static void __init aedsp16_init_tables(void)$/;"	f	file:
aedsp16_pinfo	aedsp16.c	/^void __init aedsp16_pinfo(void) {$/;"	f
aedsp16_read	aedsp16.c	/^static int __init aedsp16_read(int port)$/;"	f	file:
aedsp16_setup_board	aedsp16.c	/^static int __init aedsp16_setup_board(int port) {$/;"	f	file:
aedsp16_stdcfg	aedsp16.c	/^static int __init aedsp16_stdcfg(int port) {$/;"	f	file:
aedsp16_test_dsp	aedsp16.c	/^static int __init aedsp16_test_dsp(int port)$/;"	f	file:
aedsp16_wait_data	aedsp16.c	/^static int __init aedsp16_wait_data(int port)$/;"	f	file:
aedsp16_write	aedsp16.c	/^static int __init aedsp16_write(int port, int cmd)$/;"	f	file:
aes_regs	hal2.c	/^	struct hal2_aes_regs *aes_regs;	\/* HAL2 aes registers *\/$/;"	m	struct:hal2_card	typeref:struct:hal2_card::hal2_aes_regs	file:
aftertouch	dev_table.h	/^	void (*aftertouch) (int dev, int voice, int pressure);$/;"	m	struct:synth_operations
aic_codec_irq	jz_i2s_4750.c	/^static irqreturn_t aic_codec_irq(int irq, void *dev_id)$/;"	f	file:
aic_codec_irq	jz_i2s_dlv_dma_test.c	/^static irqreturn_t aic_codec_irq(int irq, void *dev_id)$/;"	f	file:
aic_codec_irq	jz_i2s_for_4750.c	/^static irqreturn_t aic_codec_irq(int irq, void *dev_id)$/;"	f	file:
aic_disable_transmit	jz_i2s.c	717;"	d	file:
aic_enable_transmit	jz_i2s.c	710;"	d	file:
aint	trident.c	/^	u32 aint;$/;"	m	struct:trident_pcm_bank_address	file:
aint_en	trident.c	/^	u32 aint_en;$/;"	m	struct:trident_pcm_bank_address	file:
ak4642en_mixer_info_id_name	ak4642en.c	/^void ak4642en_mixer_info_id_name(void)$/;"	f
ak4642en_mixer_old_info_id_name	ak4642en.c	/^void ak4642en_mixer_old_info_id_name(void)$/;"	f
ali_EMOD_control_bit	trident.h	/^enum ali_EMOD_control_bit {$/;"	g
ali_ac97_bits	trident.h	/^enum ali_ac97_bits {$/;"	g
ali_ac97_get	trident.c	/^ali_ac97_get(struct trident_card *card, int secondary, u8 reg)$/;"	f	file:
ali_ac97_power_control_bit	trident.h	/^enum ali_ac97_power_control_bit {$/;"	g
ali_ac97_read	trident.c	/^ali_ac97_read(struct ac97_codec *codec, u8 reg)$/;"	f	file:
ali_ac97_registers	trident.h	/^enum ali_ac97_registers {$/;"	g
ali_ac97_set	trident.c	/^ali_ac97_set(struct trident_card *card, int secondary, u8 reg, u16 val)$/;"	f	file:
ali_ac97_write	trident.c	/^ali_ac97_write(struct ac97_codec *codec, u8 reg, u16 val)$/;"	f	file:
ali_address_interrupt	trident.c	/^ali_address_interrupt(struct trident_card *card)$/;"	f	file:
ali_alloc_pcm_channel	trident.c	/^ali_alloc_pcm_channel(struct trident_card *card)$/;"	f	file:
ali_alloc_rec_pcm_channel	trident.c	/^ali_alloc_rec_pcm_channel(struct trident_card *card)$/;"	f	file:
ali_allocate_other_states_resources	trident.c	/^ali_allocate_other_states_resources(struct trident_state *state, int chan_nums)$/;"	f	file:
ali_close_multi_channels	trident.c	/^ali_close_multi_channels(void)$/;"	f	file:
ali_control_all	trident.h	/^enum ali_control_all {$/;"	g
ali_delay	trident.c	/^ali_delay(struct trident_card *card, int interval)$/;"	f	file:
ali_detect_spdif_rate	trident.c	/^ali_detect_spdif_rate(struct trident_card *card)$/;"	f	file:
ali_disable_spdif_in	trident.c	/^ali_disable_spdif_in(struct trident_card *card)$/;"	f	file:
ali_disable_special_channel	trident.c	/^ali_disable_special_channel(struct trident_card *card, int ch)$/;"	f	file:
ali_enable_special_channel	trident.c	/^ali_enable_special_channel(struct trident_state *stat)$/;"	f	file:
ali_free_other_states_resources	trident.c	/^ali_free_other_states_resources(struct trident_state *state)$/;"	f	file:
ali_free_pcm_channel	trident.c	/^ali_free_pcm_channel(struct trident_card *card, unsigned int channel)$/;"	f	file:
ali_get_spdif_in_rate	trident.c	/^ali_get_spdif_in_rate(struct trident_card *card)$/;"	f	file:
ali_global_control_bit	trident.h	/^enum ali_global_control_bit {$/;"	g
ali_hwvol_control	trident.c	/^ali_hwvol_control(struct trident_card *card, int opt)$/;"	f	file:
ali_multi_channels_5_1	trident.c	/^static const unsigned ali_multi_channels_5_1[] = {$/;"	v	file:
ali_op_registers	trident.h	/^enum ali_op_registers {$/;"	g
ali_pcm_in_channel_num	trident.h	/^enum ali_pcm_in_channel_num {$/;"	g
ali_pcm_out_channel_num	trident.h	/^enum ali_pcm_out_channel_num {$/;"	g
ali_queue_task	trident.c	/^ali_queue_task(struct trident_card *card, int opt)$/;"	f	file:
ali_registers	trident.c	/^} ali_registers;$/;"	v	typeref:struct:ali_saved_registers	file:
ali_registers_number	trident.h	/^enum ali_registers_number {$/;"	g
ali_reset_5451	trident.c	/^ali_reset_5451(struct trident_card *card)$/;"	f	file:
ali_restore_regs	trident.c	/^ali_restore_regs(struct trident_card *card)$/;"	f	file:
ali_revision	trident.h	/^enum ali_revision {$/;"	g
ali_save_regs	trident.c	/^ali_save_regs(struct trident_card *card)$/;"	f	file:
ali_saved_registers	trident.c	/^static struct ali_saved_registers {$/;"	s	file:
ali_sctrl_control_bit	trident.h	/^enum ali_sctrl_control_bit {$/;"	g
ali_set_spdif_out_rate	trident.c	/^ali_set_spdif_out_rate(struct trident_card *card, unsigned int rate)$/;"	f	file:
ali_set_timer	trident.c	/^ali_set_timer(struct trident_card *card)$/;"	f	file:
ali_setup_multi_channels	trident.c	/^ali_setup_multi_channels(struct trident_card *card, int chan_nums)$/;"	f	file:
ali_setup_spdif_in	trident.c	/^ali_setup_spdif_in(struct trident_card *card)$/;"	f	file:
ali_setup_spdif_out	trident.c	/^ali_setup_spdif_out(struct trident_card *card, int flag)$/;"	f	file:
ali_spdif_control_bit	trident.h	/^enum ali_spdif_control_bit {$/;"	g
ali_spdif_out_control	trident.h	/^enum ali_spdif_out_control {$/;"	g
ali_timeout	trident.c	/^ali_timeout(unsigned long ptr)$/;"	f	file:
ali_update_ptr_flags	trident.h	/^enum ali_update_ptr_flags {$/;"	g
ali_write_5_1	trident.c	/^ali_write_5_1(struct trident_state *state, const char __user *buf,$/;"	f	file:
ali_write_proc	trident.c	/^ali_write_proc(struct file *file, const char __user *buffer, unsigned long count, void *data)$/;"	f	file:
alloc	dev_table.h	/^ 	struct voice_alloc_info alloc;$/;"	m	struct:synth_operations	typeref:struct:synth_operations::voice_alloc_info
alloc_buffer	btaudio.c	/^static int alloc_buffer(struct btaudio *bta)$/;"	f	file:
alloc_dmabuf	i810_audio.c	/^static int alloc_dmabuf(struct i810_state *state)$/;"	f	file:
alloc_dmabuf	trident.c	/^alloc_dmabuf(struct dmabuf *dmabuf, struct pci_dev *pci_dev, int order)$/;"	f	file:
alloc_main_dmabuf	trident.c	/^alloc_main_dmabuf(struct trident_state *state)$/;"	f	file:
alloc_pcm_channel	i810_audio.c	/^	struct i810_channel *(*alloc_pcm_channel)(struct i810_card *);$/;"	m	struct:i810_card	typeref:struct:i810_card::alloc_pcm_channel	file:
alloc_pcm_channel	trident.c	/^	struct trident_channel *(*alloc_pcm_channel) (struct trident_card *);$/;"	m	struct:trident_card	typeref:struct:trident_card::alloc_pcm_channel	file:
alloc_rec_mic_channel	i810_audio.c	/^	struct i810_channel *(*alloc_rec_mic_channel)(struct i810_card *);$/;"	m	struct:i810_card	typeref:struct:i810_card::alloc_rec_mic_channel	file:
alloc_rec_pcm_channel	i810_audio.c	/^	struct i810_channel *(*alloc_rec_pcm_channel)(struct i810_card *);$/;"	m	struct:i810_card	typeref:struct:i810_card::alloc_rec_pcm_channel	file:
alloc_rec_pcm_channel	trident.c	/^	struct trident_channel *(*alloc_rec_pcm_channel) (struct trident_card *);$/;"	m	struct:trident_card	typeref:struct:trident_card::alloc_rec_pcm_channel	file:
alloc_times	sound_config.h	/^		int alloc_times[SYNTH_MAX_VOICES];$/;"	m	struct:voice_alloc_info
alloc_voice	dev_table.h	/^	int (*alloc_voice) (int dev, int chn, int note, struct voice_alloc_info *alloc);$/;"	m	struct:synth_operations
alloc_voice	sequencer.c	/^static int alloc_voice(int dev, int chn, int note)$/;"	f	file:
als007_mix	sb_mixer.c	/^static mixer_tab als007_mix = $/;"	v	file:
als007_mixer_operations	sb_mixer.c	/^static struct mixer_operations als007_mixer_operations =$/;"	v	typeref:struct:mixer_operations	file:
always_detect	sound_config.h	/^	int always_detect;	\/* 1=Trust me, it's there *\/$/;"	m	struct:address_info
ami_ct_s8	dmasound/dmasound_paula.c	/^static ssize_t ami_ct_s8(const u_char __user *userPtr, size_t userCount,$/;"	f	file:
analog	btaudio.c	/^	int analog;$/;"	m	struct:btaudio	file:
analog	btaudio.c	/^static int analog = 1;$/;"	v	file:
applic_profile	dev_table.h	/^	int     applic_profile;	\/* Application profile (APF_*) *\/$/;"	m	struct:dma_buffparms
apply_quirk	ac97_codec.c	/^static int apply_quirk(int quirk)$/;"	f	file:
arm_timer	dev_table.h	/^	void (*arm_timer)(int dev, long time);$/;"	m	struct:sound_timer_operations
assert	via82cxxx_audio.c	57;"	d	file:
assert	via82cxxx_audio.c	59;"	d	file:
ata_ct_law	dmasound/dmasound_atari.c	/^static ssize_t ata_ct_law(const u_char __user *userPtr, size_t userCount,$/;"	f	file:
ata_ct_s16be	dmasound/dmasound_atari.c	/^static ssize_t ata_ct_s16be(const u_char __user *userPtr, size_t userCount,$/;"	f	file:
ata_ct_s16le	dmasound/dmasound_atari.c	/^static ssize_t ata_ct_s16le(const u_char __user *userPtr, size_t userCount,$/;"	f	file:
ata_ct_s8	dmasound/dmasound_atari.c	/^static ssize_t ata_ct_s8(const u_char __user *userPtr, size_t userCount,$/;"	f	file:
ata_ct_u16be	dmasound/dmasound_atari.c	/^static ssize_t ata_ct_u16be(const u_char __user *userPtr, size_t userCount,$/;"	f	file:
ata_ct_u16le	dmasound/dmasound_atari.c	/^static ssize_t ata_ct_u16le(const u_char __user *userPtr, size_t userCount,$/;"	f	file:
ata_ct_u8	dmasound/dmasound_atari.c	/^static ssize_t ata_ct_u8(const u_char __user *userPtr, size_t userCount,$/;"	f	file:
ata_ctx_law	dmasound/dmasound_atari.c	/^static ssize_t ata_ctx_law(const u_char __user *userPtr, size_t userCount,$/;"	f	file:
ata_ctx_s16be	dmasound/dmasound_atari.c	/^static ssize_t ata_ctx_s16be(const u_char __user *userPtr, size_t userCount,$/;"	f	file:
ata_ctx_s16le	dmasound/dmasound_atari.c	/^static ssize_t ata_ctx_s16le(const u_char __user *userPtr, size_t userCount,$/;"	f	file:
ata_ctx_s8	dmasound/dmasound_atari.c	/^static ssize_t ata_ctx_s8(const u_char __user *userPtr, size_t userCount,$/;"	f	file:
ata_ctx_u16be	dmasound/dmasound_atari.c	/^static ssize_t ata_ctx_u16be(const u_char __user *userPtr, size_t userCount,$/;"	f	file:
ata_ctx_u16le	dmasound/dmasound_atari.c	/^static ssize_t ata_ctx_u16le(const u_char __user *userPtr, size_t userCount,$/;"	f	file:
ata_ctx_u8	dmasound/dmasound_atari.c	/^static ssize_t ata_ctx_u8(const u_char __user *userPtr, size_t userCount,$/;"	f	file:
attach	dev_table.h	/^	void (*attach) (struct address_info *hw_config);$/;"	m	struct:driver_info
attach_jz_ac97	jz_ac97.c	/^static void __init attach_jz_ac97(struct jz_ac97_controller_info *controller)$/;"	f	file:
attach_jz_i2s	jz_i2s.c	/^static void __init attach_jz_i2s(struct jz_i2s_controller_info *controller)$/;"	f	file:
attach_jz_i2s	jz_i2s_4750.c	/^static void __init attach_jz_i2s(struct jz_i2s_controller_info *controller)$/;"	f	file:
attach_jz_i2s	jz_i2s_dlv_dma_test.c	/^static void __init attach_jz_i2s(struct jz_i2s_controller_info *controller)$/;"	f	file:
attach_jz_i2s	jz_i2s_for_4750.c	/^static void __init attach_jz_i2s(struct jz_i2s_controller_info *controller)$/;"	f	file:
attach_jz_pcm	jz_pcm_tlv320aic1106_dma.c	/^static void __init attach_jz_pcm(struct jz_pcm_controller_info *controller)$/;"	f	file:
attach_mpu401	mpu401.c	/^EXPORT_SYMBOL(attach_mpu401);$/;"	v
attach_mpu401	mpu401.c	/^int attach_mpu401(struct address_info *hw_config, struct module *owner)$/;"	f
attach_ms_sound	ad1848.c	/^EXPORT_SYMBOL(attach_ms_sound);$/;"	v
attach_ms_sound	ad1848.c	/^void attach_ms_sound(struct address_info *hw_config, struct resource *ports, struct module *owner)$/;"	f
attach_multisound	msnd_pinnacle.c	/^static int __init attach_multisound(void)$/;"	f	file:
attach_pas_card	pas2_card.c	/^static void __init attach_pas_card(struct address_info *hw_config)$/;"	f	file:
attach_pss	pss.c	/^static int __init attach_pss(struct address_info *hw_config)$/;"	f	file:
attach_sscape	sscape.c	/^static void __init attach_sscape(struct address_info *hw_config)$/;"	f	file:
attach_uart6850	uart6850.c	/^static void __init attach_uart6850(struct address_info *hw_config)$/;"	f	file:
attach_v_midi	v_midi.c	/^static void __init attach_v_midi (struct address_info *hw_config)$/;"	f	file:
attach_vidc	vidc.c	/^static void __init attach_vidc(struct address_info *hw_config)$/;"	f	file:
attach_vwsnd	vwsnd.c	/^static int __init attach_vwsnd(struct address_info *hw_config)$/;"	f	file:
attach_waveartist	waveartist.c	/^attach_waveartist(struct address_info *hw, const struct waveartist_mixer_info *mix)$/;"	f	file:
attached	waveartist.c	/^static int attached;$/;"	v	file:
attr2mask	trident.c	/^static int attr2mask[] = {$/;"	v	file:
attribute	trident.c	/^	u16 attribute; \/* control where PCM data go and come  *\/$/;"	m	struct:trident_channel	file:
au1550_audio_fops	au1550_ac97.c	/^static \/*const *\/ struct file_operations au1550_audio_fops = {$/;"	v	typeref:struct:file_operations	file:
au1550_delay	au1550_ac97.c	/^au1550_delay(int msec)$/;"	f	file:
au1550_ioctl	au1550_ac97.c	/^au1550_ioctl(struct inode *inode, struct file *file, unsigned int cmd,$/;"	f	file:
au1550_ioctl_mixdev	au1550_ac97.c	/^au1550_ioctl_mixdev(struct inode *inode, struct file *file,$/;"	f	file:
au1550_llseek	au1550_ac97.c	/^au1550_llseek(struct file *file, loff_t offset, int origin)$/;"	f	file:
au1550_mixer_fops	au1550_ac97.c	/^static \/*const *\/ struct file_operations au1550_mixer_fops = {$/;"	v	typeref:struct:file_operations	file:
au1550_mmap	au1550_ac97.c	/^au1550_mmap(struct file *file, struct vm_area_struct *vma)$/;"	f	file:
au1550_open	au1550_ac97.c	/^au1550_open(struct inode *inode, struct file *file)$/;"	f	file:
au1550_open_mixdev	au1550_ac97.c	/^au1550_open_mixdev(struct inode *inode, struct file *file)$/;"	f	file:
au1550_poll	au1550_ac97.c	/^au1550_poll(struct file *file, struct poll_table_struct *wait)$/;"	f	file:
au1550_probe	au1550_ac97.c	/^au1550_probe(void)$/;"	f	file:
au1550_read	au1550_ac97.c	/^au1550_read(struct file *file, char *buffer, size_t count, loff_t *ppos)$/;"	f	file:
au1550_release	au1550_ac97.c	/^au1550_release(struct inode *inode, struct file *file)$/;"	f	file:
au1550_release_mixdev	au1550_ac97.c	/^au1550_release_mixdev(struct inode *inode, struct file *file)$/;"	f	file:
au1550_remove	au1550_ac97.c	/^au1550_remove(void)$/;"	f	file:
au1550_setup	au1550_ac97.c	/^au1550_setup(char *options)$/;"	f	file:
au1550_state	au1550_ac97.c	/^static struct au1550_state {$/;"	s	file:
au1550_state	au1550_ac97.c	/^} au1550_state;$/;"	v	typeref:struct:au1550_state	file:
au1550_write	au1550_ac97.c	/^au1550_write(struct file *file, const char *buffer, size_t count, loff_t * ppos)$/;"	f	file:
audio_activated	ad1848.c	/^static int audio_activated;$/;"	v	file:
audio_callback	dev_table.h	/^	void (*audio_callback) (int dev, int parm);$/;"	m	struct:dma_buffparms
audio_clear_endpoint	jz_i2s.c	/^void audio_clear_endpoint(audio_pipe *endpoint)$/;"	f
audio_close_endpoint	jz_i2s.c	/^void audio_close_endpoint(audio_pipe *endpoint, int mode)$/;"	f
audio_deinit_endpoint	jz_i2s.c	/^void audio_deinit_endpoint(audio_pipe *endpoint)$/;"	f
audio_devs	dev_table.c	/^EXPORT_SYMBOL(audio_devs);$/;"	v
audio_devs	dev_table.c	/^struct audio_operations *audio_devs[MAX_AUDIO_DEV];$/;"	v	typeref:struct:audio_operations
audio_dma_type	jz_i2s.c	/^} audio_dma_type;$/;"	t	typeref:struct:__anon25	file:
audio_driver	dev_table.h	/^struct audio_driver $/;"	s
audio_flags	ad1848.c	/^	int             audio_flags;$/;"	m	struct:__anon1	file:
audio_flags	waveartist.c	/^	int		audio_flags;$/;"	m	struct:__anon11	file:
audio_format	ad1848.c	/^	int             audio_format;$/;"	m	struct:ad1848_port_info	file:
audio_format	dev_table.h	/^	int audio_format;$/;"	m	struct:audio_operations
audio_format	waveartist.c	/^	int		audio_format;$/;"	m	struct:wavnc_port_info	file:
audio_get_endpoint_freesize	jz_i2s.c	/^int audio_get_endpoint_freesize(audio_pipe *endpoint, audio_buf_info *info)$/;"	f
audio_head	jz_i2s.c	/^} audio_head;$/;"	t	typeref:struct:__anon24	file:
audio_init_devices	audio.c	/^void audio_init_devices(void)$/;"	f
audio_init_endpoint	jz_i2s.c	/^void audio_init_endpoint(audio_pipe *endpoint, unsigned int pagesize, unsigned int count)$/;"	f
audio_ioctl	audio.c	/^int audio_ioctl(int dev, struct file *file, unsigned int cmd, void __user *arg)$/;"	f
audio_minor	vwsnd.c	/^	int		audio_minor;	\/* minor number of audio device *\/$/;"	m	struct:vwsnd_dev	file:
audio_mix_modcnt	jz_i2s.c	/^static int audio_mix_modcnt = 0;$/;"	v	file:
audio_mix_modcnt	jz_i2s_4750.c	/^static int              audio_mix_modcnt;$/;"	v	file:
audio_mix_modcnt	jz_i2s_dlv_dma_test.c	/^static int              audio_mix_modcnt;$/;"	v	file:
audio_mix_modcnt	jz_i2s_for_4750.c	/^static int              audio_mix_modcnt;$/;"	v	file:
audio_mode	ad1848.c	/^	int             audio_mode;$/;"	m	struct:__anon1	file:
audio_mode	dev_table.h	/^	int audio_mode;$/;"	m	struct:audio_operations
audio_mode	waveartist.c	/^	int		audio_mode;$/;"	m	struct:__anon11	file:
audio_node	jz_i2s.c	/^} audio_node;$/;"	t	typeref:struct:__anon23	file:
audio_open	audio.c	/^int audio_open(int dev, struct file *file)$/;"	f
audio_operations	dev_table.h	/^struct audio_operations $/;"	s
audio_pipe	jz_i2s.c	/^} audio_pipe;$/;"	t	typeref:struct:__audio_pipe	file:
audio_read	audio.c	/^int audio_read(int dev, struct file *file, char __user *buf, int count)$/;"	f
audio_release	audio.c	/^void audio_release(int dev, struct file *file)$/;"	f
audio_resizemem_endpoint	jz_i2s.c	/^int audio_resizemem_endpoint(audio_pipe *endpoint, unsigned int pagesize, unsigned int count)$/;"	f
audio_start_dma	jz_ac97.c	/^void audio_start_dma(int chan, void *dev_id, unsigned long phyaddr,int count, int mode)$/;"	f	file:
audio_start_dma	jz_i2s_4750.c	/^static inline void audio_start_dma(int chan, void *dev_id, unsigned long phyaddr,int count, int mode)$/;"	f	file:
audio_start_dma	jz_i2s_dlv_dma_test.c	/^static inline void audio_start_dma(int chan, void *dev_id, unsigned long phyaddr,int count, int mode)$/;"	f	file:
audio_start_dma	jz_i2s_for_4750.c	/^static inline void audio_start_dma(int chan, void *dev_id, unsigned long phyaddr,int count, int mode)$/;"	f	file:
audio_start_dma	jz_pcm_tlv320aic1106_dma.c	/^static inline void audio_start_dma(int chan, void *dev_id, unsigned long phyaddr,int count, int mode)$/;"	f	file:
audio_stop_dma_node	jz_i2s.c	/^static inline void audio_stop_dma_node(audio_dma_type* dma)$/;"	f	file:
audio_sync_endpoint	jz_i2s.c	/^void audio_sync_endpoint(audio_pipe *endpoint)$/;"	f
audio_trystart_dma_node	jz_i2s.c	/^static inline int audio_trystart_dma_node(audio_dma_type* dma, audio_node *node)$/;"	f	file:
audio_volume	jz_i2s.c	/^	int	audio_volume;$/;"	m	struct:i2s_codec	file:
audio_write	audio.c	/^int audio_write(int dev, struct file *file, const char __user *buf, int count)$/;"	f
audiomute	jz_i2s.c	/^	int	audiomute;$/;"	m	struct:i2s_codec	file:
avail	hal2.c	/^	unsigned char idx:4, avail:1;$/;"	m	struct:__anon4	file:
avialable_couter	jz_i2s.c	/^	int			avialable_couter;$/;"	m	struct:__audio_pipe	file:
bCurrentMidiPatch	msnd.h	/^	BYTE bCurrentMidiPatch;$/;"	m	struct:multisound_dev
bank_a_addrs	trident.c	/^static struct trident_pcm_bank_address bank_a_addrs = {$/;"	v	typeref:struct:trident_pcm_bank_address	file:
bank_b_addrs	trident.c	/^static struct trident_pcm_bank_address bank_b_addrs = {$/;"	v	typeref:struct:trident_pcm_bank_address	file:
banks	trident.c	/^	struct trident_pcm_bank banks[NR_BANKS];$/;"	m	struct:trident_card	typeref:struct:trident_card::trident_pcm_bank	file:
base	ad1848.c	/^	int             base;$/;"	m	struct:__anon1	file:
base	mpu401.c	/^	int             base;	\/*$/;"	m	struct:mpu_config	file:
base	msnd.h	/^	void __iomem *base;$/;"	m	struct:multisound_dev
base	opl3.c	/^	int             base;$/;"	m	struct:opl_devinfo	file:
base	pss.c	/^	int             base;$/;"	m	struct:pss_confdata	file:
base	sb.h	/^	   int base;$/;"	m	struct:sb_devc
base	sscape.c	/^	int	base, irq, dma;$/;"	m	struct:sscape_info	file:
base	uart401.c	/^	int             base;$/;"	m	struct:uart401_devc	file:
base_io	aedsp16.c	/^	int base_io;            \/* base I\/O address for accessing card  *\/$/;"	m	struct:aedsp16_info	file:
baseaddr	via82cxxx_audio.c	/^	long baseaddr;$/;"	m	struct:via_info	file:
basereg	vwsnd.c	/^	int basereg;$/;"	m	struct:dma_chan_desc	file:
baseval	vwsnd.c	/^	unsigned long   baseval;$/;"	m	struct:dma_chan	file:
bass	dmasound/dmasound.h	/^    int bass;		\/* tone (range is machine dependent) *\/$/;"	m	struct:sound_settings
bass	pss.c	/^	unsigned int bass;$/;"	m	struct:pss_mixerdata	file:
bass_gain	jz_i2s.c	/^	int	bass_gain;$/;"	m	struct:i2s_codec	file:
bend_pitch	opl3.c	/^static void bend_pitch(int dev, int voice, int value)$/;"	f	file:
bender	dev_table.h	/^	void (*bender) (int dev, int chn, int value);$/;"	m	struct:synth_operations
bender	opl3.c	/^	long            bender;$/;"	m	struct:voice_info	file:
bender_range	opl3.c	/^	long            bender_range;$/;"	m	struct:voice_info	file:
bender_range	sound_config.h	/^		int bender_range;$/;"	m	struct:channel_info
bender_value	sound_config.h	/^		int bender_value;$/;"	m	struct:channel_info
bit_resolution	jz_i2s_4750.c	/^	int bit_resolution;$/;"	m	struct:i2s_codec	file:
bit_resolution	jz_i2s_dlv_dma_test.c	/^    int bit_resolution;$/;"	m	struct:i2s_codec	file:
bit_resolution	jz_i2s_for_4750.c	/^	int bit_resolution;$/;"	m	struct:i2s_codec	file:
bit_resolution	jz_pcm_tlv320aic1106_dma.c	/^	int bit_resolution;$/;"	m	struct:pcm_codec	file:
bitmap	trident.c	/^	u32 bitmap;		\/* channel allocation bitmap *\/$/;"	m	struct:trident_pcm_bank	file:
bitoffs	sb.h	/^	unsigned int bitoffs:4;$/;"	m	struct:mixer_def
bitpos	ad1848_mixer.h	/^	unsigned int bitpos:3;		\/* position of bits in register for volume *\/$/;"	m	struct:mixer_def
bits	btaudio.c	/^	int bits;$/;"	m	struct:btaudio	file:
bits	sb.h	/^	   int speed, bits, channels;$/;"	m	struct:sb_devc
block_bytes	btaudio.c	/^	int block_bytes;$/;"	m	struct:btaudio	file:
block_count	btaudio.c	/^	int block_count;$/;"	m	struct:btaudio	file:
block_size	dmasound/dmasound.h	/^    int block_size;		\/* internal block size in bytes *\/$/;"	m	struct:sound_queue
blocks	jz_ac97.c	/^	unsigned        blocks;$/;"	m	struct:jz_ac97_controller_info	file:
blocks	jz_i2s_4750.c	/^	unsigned        blocks;$/;"	m	struct:jz_i2s_controller_info	file:
blocks	jz_i2s_dlv_dma_test.c	/^    unsigned        blocks;$/;"	m	struct:jz_i2s_controller_info	file:
blocks	jz_i2s_for_4750.c	/^	unsigned        blocks;$/;"	m	struct:jz_i2s_controller_info	file:
blocks	jz_pcm_tlv320aic1106_dma.c	/^	unsigned long blocks;$/;"	m	struct:jz_pcm_controller_info	file:
blocks	swarm_cs4297a.c	/^        unsigned blocks;	\/\/ last returned blocks value GETOPTR$/;"	m	struct:serdma_s	file:
broken_bus_clock	pas2_card.c	/^static int	broken_bus_clock = 1;$/;"	v	file:
broken_bus_clock	pas2_card.c	/^static int	broken_bus_clock;$/;"	v	file:
bss	cs4232.c	/^static int __initdata bss       = 0;$/;"	v	file:
btand	btaudio.c	45;"	d	file:
btaor	btaudio.c	47;"	d	file:
btaudio	btaudio.c	/^struct btaudio {$/;"	s	file:
btaudio_analog_dsp_fops	btaudio.c	/^static const struct file_operations btaudio_analog_dsp_fops = {$/;"	v	typeref:struct:file_operations	file:
btaudio_cleanup_module	btaudio.c	/^module_exit(btaudio_cleanup_module);$/;"	v
btaudio_cleanup_module	btaudio.c	/^static void btaudio_cleanup_module(void)$/;"	f	file:
btaudio_digital_dsp_fops	btaudio.c	/^static const struct file_operations btaudio_digital_dsp_fops = {$/;"	v	typeref:struct:file_operations	file:
btaudio_dsp_ioctl	btaudio.c	/^static int btaudio_dsp_ioctl(struct inode *inode, struct file *file,$/;"	f	file:
btaudio_dsp_open	btaudio.c	/^static int btaudio_dsp_open(struct inode *inode, struct file *file,$/;"	f	file:
btaudio_dsp_open_analog	btaudio.c	/^static int btaudio_dsp_open_analog(struct inode *inode, struct file *file)$/;"	f	file:
btaudio_dsp_open_digital	btaudio.c	/^static int btaudio_dsp_open_digital(struct inode *inode, struct file *file)$/;"	f	file:
btaudio_dsp_poll	btaudio.c	/^static unsigned int btaudio_dsp_poll(struct file *file, struct poll_table_struct *wait)$/;"	f	file:
btaudio_dsp_read	btaudio.c	/^static ssize_t btaudio_dsp_read(struct file *file, char __user *buffer,$/;"	f	file:
btaudio_dsp_release	btaudio.c	/^static int btaudio_dsp_release(struct inode *inode, struct file *file)$/;"	f	file:
btaudio_dsp_write	btaudio.c	/^static ssize_t btaudio_dsp_write(struct file *file, const char __user *buffer,$/;"	f	file:
btaudio_init_module	btaudio.c	/^module_init(btaudio_init_module);$/;"	v
btaudio_init_module	btaudio.c	/^static int btaudio_init_module(void)$/;"	f	file:
btaudio_irq	btaudio.c	/^static irqreturn_t btaudio_irq(int irq, void *dev_id)$/;"	f	file:
btaudio_mixer_fops	btaudio.c	/^static const struct file_operations btaudio_mixer_fops = {$/;"	v	typeref:struct:file_operations	file:
btaudio_mixer_ioctl	btaudio.c	/^static int btaudio_mixer_ioctl(struct inode *inode, struct file *file,$/;"	f	file:
btaudio_mixer_open	btaudio.c	/^static int btaudio_mixer_open(struct inode *inode, struct file *file)$/;"	f	file:
btaudio_mixer_release	btaudio.c	/^static int btaudio_mixer_release(struct inode *inode, struct file *file)$/;"	f	file:
btaudio_pci_driver	btaudio.c	/^static struct pci_driver btaudio_pci_driver = {$/;"	v	typeref:struct:pci_driver	file:
btaudio_pci_tbl	btaudio.c	/^static struct pci_device_id btaudio_pci_tbl[] = {$/;"	v	typeref:struct:pci_device_id	file:
btaudio_probe	btaudio.c	/^static int __devinit btaudio_probe(struct pci_dev *pci_dev,$/;"	f	file:
btaudio_remove	btaudio.c	/^static void __devexit btaudio_remove(struct pci_dev *pci_dev)$/;"	f	file:
btaudios	btaudio.c	/^static struct btaudio *btaudios;$/;"	v	typeref:struct:btaudio	file:
btor	btaudio.c	46;"	d	file:
btread	btaudio.c	43;"	d	file:
btwrite	btaudio.c	42;"	d	file:
buf	dmasound/dmasound_core.c	/^    char buf[STAT_BUFF_LEN];	\/* state.buf should not overflow! *\/$/;"	m	struct:__anon15	file:
buf	hex2hex.c	/^unsigned char buf[MAX_SIZE];$/;"	v
bufSize	dmasound/dmasound.h	/^    int bufSize;		\/* in bytes *\/$/;"	m	struct:sound_queue
buf_cpu	btaudio.c	/^	unsigned char  *buf_cpu;$/;"	m	struct:btaudio	file:
buf_dma	btaudio.c	/^	dma_addr_t     buf_dma;$/;"	m	struct:btaudio	file:
buf_flags	dev_table.h	/^	int	 buf_flags[MAX_SUB_BUFFERS];$/;"	m	struct:dma_buffparms
buf_size	btaudio.c	/^	unsigned int   buf_size;$/;"	m	struct:btaudio	file:
buffer	hal2.c	/^	unsigned char *buffer;$/;"	m	struct:hal2_codec	file:
buffer_begin	sh_dac_audio.c	/^static char *data_buffer, *buffer_begin, *buffer_end;$/;"	v	file:
buffer_end	sh_dac_audio.c	/^static char *data_buffer, *buffer_begin, *buffer_end;$/;"	v	file:
buffer_queue_s	jz_ac97.c	/^typedef struct buffer_queue_s {$/;"	s	file:
buffer_queue_s	jz_i2s_4750.c	/^typedef struct buffer_queue_s $/;"	s	file:
buffer_queue_s	jz_i2s_dlv_dma_test.c	/^typedef struct buffer_queue_s $/;"	s	file:
buffer_queue_s	jz_i2s_for_4750.c	/^typedef struct buffer_queue_s $/;"	s	file:
buffer_queue_s	jz_pcm_tlv320aic1106_dma.c	/^typedef struct buffer_queue_s {$/;"	s	file:
buffer_queue_t	jz_ac97.c	/^} buffer_queue_t;$/;"	t	typeref:struct:buffer_queue_s	file:
buffer_queue_t	jz_i2s_4750.c	/^} buffer_queue_t;$/;"	t	typeref:struct:buffer_queue_s	file:
buffer_queue_t	jz_i2s_dlv_dma_test.c	/^} buffer_queue_t;$/;"	t	typeref:struct:buffer_queue_s	file:
buffer_queue_t	jz_i2s_for_4750.c	/^} buffer_queue_t;$/;"	t	typeref:struct:buffer_queue_s	file:
buffer_queue_t	jz_pcm_tlv320aic1106_dma.c	/^} buffer_queue_t;$/;"	t	typeref:struct:buffer_queue_s	file:
buffer_status	dev_table.h	/^	int (*buffer_status) (int dev);$/;"	m	struct:midi_operations
buffers	dmasound/dmasound.h	/^    char **buffers;$/;"	m	struct:sound_queue
buffsize	dev_table.h	/^	int buffsize;$/;"	m	struct:dma_buffparms
buffsize	sscape.c	/^	int	buffsize;		\/* -------------------------- *\/$/;"	m	struct:sscape_info	file:
buforder	au1550_ac97.c	/^		unsigned        buforder;$/;"	m	struct:au1550_state::dmabuf	file:
buforder	i810_audio.c	/^		unsigned buforder;$/;"	m	struct:i810_state::dmabuf	file:
buforder	trident.c	/^		unsigned buforder;$/;"	m	struct:trident_state::dmabuf	file:
buforder_sample_buf	swarm_cs4297a.c	/^	unsigned buforder_sample_buf;	\/\/ Log base 2 of 'dma_buf' size in bytes..$/;"	m	struct:cs4297a_state	file:
busaddr	i810_audio.c	/^	u32 busaddr;	$/;"	m	struct:sg_item	file:
busy	dmasound/dmasound.h	/^    int busy, syncing, xruns, died;$/;"	m	struct:sound_queue
busy	dmasound/dmasound_core.c	/^    int busy;$/;"	m	struct:__anon14	file:
busy	dmasound/dmasound_core.c	/^    int busy;$/;"	m	struct:__anon15	file:
busy	opl3.c	/^	int             busy;$/;"	m	struct:opl_devinfo	file:
byte_count	vwsnd.c	/^	int		byte_count;$/;"	m	struct:vwsnd_port	file:
byte_counter	dev_table.h	/^	unsigned long	 byte_counter;$/;"	m	struct:dma_buffparms
bytes	via82cxxx_audio.c	/^	int bytes;$/;"	m	struct:via_channel	file:
bytes_in_use	dev_table.h	/^	int	 bytes_in_use;$/;"	m	struct:dma_buffparms
c930_mix_devices	ad1848_mixer.h	/^static mixer_ents c930_mix_devices[32] = {$/;"	v
calc_vol	opl3.c	/^static void calc_vol(unsigned char *regbyte, int volume, int main_vol)$/;"	f	file:
calibrate_adc	msnd_pinnacle.c	/^static int __init calibrate_adc(WORD srate)$/;"	f	file:
calibrate_signal	msnd.h	/^	int calibrate_signal;$/;"	m	struct:multisound_dev
call_ad_mixer	pss.c	/^static int call_ad_mixer(pss_confdata *devc,unsigned int cmd, void __user *arg)$/;"	f	file:
callback_parm	dev_table.h	/^	int callback_parm;$/;"	m	struct:dma_buffparms
capabilities	ad1848.c	/^} capabilities [10 \/*devc->model *\/ ] = {$/;"	v	typeref:struct:__anon2	file:
capabilities	dmasound/dmasound.h	/^    int capabilities ;		\/* low-level reply to SNDCTL_DSP_GETCAPS *\/$/;"	m	struct:__anon17
capabilities	mpu401.c	/^	unsigned int    capabilities;$/;"	m	struct:mpu_config	file:
caps	sb.h	/^	   int caps;$/;"	m	struct:sb_devc
card	i810_audio.c	/^	struct i810_card *card;	\/* Card info *\/$/;"	m	struct:i810_state	typeref:struct:i810_state::i810_card	file:
card	trident.c	/^	struct trident_card *card;	\/* Card info *\/$/;"	m	struct:trident_state	typeref:struct:trident_state::trident_card	file:
card_cap	i810_audio.c	/^} card_cap[] = {$/;"	v	typeref:struct:__anon10	file:
card_device	ad1848.c	/^	unsigned short	card_vendor, card_device,$/;"	m	struct:__anon3	file:
card_id	sb_card.h	/^	const  char         *card_id;$/;"	m	struct:sb_card_config
card_info	dev_table.h	/^struct card_info $/;"	s
card_names	i810_audio.c	/^static char * card_names[] = {$/;"	v	file:
card_names	trident.c	/^static char *card_names[] = {$/;"	v	file:
card_num	via82cxxx_audio.c	/^	int card_num;		\/* unique card number, from 0 *\/$/;"	m	struct:via_info	file:
card_subtype	dev_table.h	/^	int card_subtype;	\/* Driver specific. Usually 0 *\/$/;"	m	struct:driver_info
card_subtype	sound_config.h	/^	int card_subtype;	\/* Driver specific. Usually 0 *\/$/;"	m	struct:address_info
card_type	dev_table.h	/^	int card_type;		\/*	From soundcard.h	*\/$/;"	m	struct:driver_info
card_type	dev_table.h	/^	int card_type;	\/* Link (search key) to the driver list *\/$/;"	m	struct:card_info
card_vendor	ad1848.c	/^	unsigned short	card_vendor, card_device,$/;"	m	struct:__anon3	file:
cardinfo	btaudio.c	/^struct cardinfo {$/;"	s	file:
cards	btaudio.c	/^static struct cardinfo cards[] = {$/;"	v	typeref:struct:cardinfo	file:
catchRadius	dmasound/dmasound.h	249;"	d
cdrom	aedsp16.c	/^	int cdrom;$/;"	m	struct:d_hcfg	file:
cdrombase	aedsp16.c	/^	int cdrombase;$/;"	m	struct:d_hcfg	file:
cent_tuning	tuning.h	/^static unsigned short cent_tuning[100] =$/;"	v
cfg	ad1848.c	/^static struct address_info cfg;$/;"	v	typeref:struct:address_info	file:
cfg	cs4232.c	/^static struct address_info cfg;$/;"	v	typeref:struct:address_info	file:
cfg	mpu401.c	/^static struct address_info cfg;$/;"	v	typeref:struct:address_info	file:
cfg	pas2_card.c	/^static struct address_info cfg;$/;"	v	typeref:struct:address_info	file:
cfg	pss.c	/^static struct address_info cfg;$/;"	v	typeref:struct:address_info	file:
cfg	sscape.c	/^static struct address_info cfg;$/;"	v	typeref:struct:address_info	file:
cfg	trix.c	/^static struct address_info cfg;$/;"	v	typeref:struct:address_info	file:
cfg	v_midi.c	/^static struct address_info cfg; \/* dummy *\/$/;"	v	typeref:struct:address_info	file:
cfg	vidc.c	/^static struct address_info cfg;$/;"	v	typeref:struct:address_info	file:
cfg	waveartist.c	/^static struct address_info cfg;$/;"	v	typeref:struct:address_info	file:
cfg2	pas2_card.c	/^static struct address_info cfg2;$/;"	v	typeref:struct:address_info	file:
cfg2	pss.c	/^static struct address_info cfg2;$/;"	v	typeref:struct:address_info	file:
cfg2	trix.c	/^static struct address_info cfg2;$/;"	v	typeref:struct:address_info	file:
cfg_mpu	cs4232.c	/^static struct address_info cfg_mpu;$/;"	v	typeref:struct:address_info	file:
cfg_mpu	pss.c	/^static struct address_info cfg_mpu;$/;"	v	typeref:struct:address_info	file:
cfg_mpu	sscape.c	/^static struct address_info cfg_mpu;$/;"	v	typeref:struct:address_info	file:
cfg_mpu	trix.c	/^static struct address_info cfg_mpu;$/;"	v	typeref:struct:address_info	file:
cfg_mpu	uart401.c	/^static struct address_info cfg_mpu;$/;"	v	typeref:struct:address_info	file:
cfg_mpu	uart6850.c	/^static struct address_info cfg_mpu;$/;"	v	typeref:struct:address_info	file:
cfgreg	vwsnd.c	/^	int cfgreg;$/;"	m	struct:dma_chan_desc	file:
cfgval	vwsnd.c	/^	unsigned long	cfgval;$/;"	m	struct:dma_chan	file:
cfrag	dev_table.h	/^	int	 cfrag;	\/* Current incomplete fragment (write) *\/$/;"	m	struct:dma_buffparms
ch	jz_i2s.c	/^	int ch;$/;"	m	struct:__anon25	file:
ch_fm	via82cxxx_audio.c	/^	struct via_channel ch_fm;$/;"	m	struct:via_info	typeref:struct:via_info::via_channel	file:
ch_in	via82cxxx_audio.c	/^	struct via_channel ch_in;$/;"	m	struct:via_info	typeref:struct:via_info::via_channel	file:
ch_out	via82cxxx_audio.c	/^	struct via_channel ch_out;$/;"	m	struct:via_info	typeref:struct:via_info::via_channel	file:
chan	vwsnd.c	/^	dma_chan_t	chan;$/;"	m	struct:vwsnd_port	file:
chandma	i810_audio.c	/^	dma_addr_t chandma;$/;"	m	struct:i810_card	file:
change_bits	ad1848.c	/^static void change_bits(ad1848_info * devc, unsigned char *regval,$/;"	f	file:
change_bits	sb_mixer.c	/^static void change_bits(sb_devc * devc, unsigned char *regval, int dev, int chn, int newval)$/;"	f	file:
channel	i810_audio.c	/^	struct i810_channel *channel;	\/* 1:1 to states[] but diff. lifetime *\/$/;"	m	struct:i810_card	typeref:struct:i810_card::i810_channel	file:
channel	trident.c	/^		struct trident_channel *channel;$/;"	m	struct:trident_state::dmabuf	typeref:struct:trident_state::dmabuf::trident_channel	file:
channel_attribute	trident.h	/^enum channel_attribute {$/;"	g
channel_control_bits	trident.h	/^enum channel_control_bits {$/;"	g
channel_info	sound_config.h	/^struct channel_info {$/;"	s
channel_registers	trident.h	/^enum channel_registers {$/;"	g
channel_regs	trident.c	/^	unsigned long channel_regs[ALI_CHANNELS][ALI_CHANNEL_REGS];$/;"	m	struct:ali_saved_registers	file:
channels	ad1848.c	/^	int             channels;$/;"	m	struct:ad1848_port_info	file:
channels	btaudio.c	/^	int channels;$/;"	m	struct:btaudio	file:
channels	i810_audio.c	/^	u16 channels;$/;"	m	struct:i810_card	file:
channels	sb.h	/^	   int speed, bits, channels;$/;"	m	struct:sb_devc
channels	swarm_cs4297a.c	/^		unsigned channels;$/;"	m	struct:cs4297a_state::properties	file:
channels	trident.c	/^	struct trident_channel channels[32];$/;"	m	struct:trident_pcm_bank	typeref:struct:trident_pcm_bank::trident_channel	file:
channels	via82cxxx_audio.c	/^	u8 channels;		\/* Channel count *\/$/;"	m	struct:via_channel	file:
channels	waveartist.c	/^	int		channels;$/;"	m	struct:wavnc_port_info	file:
chans_num	trident.c	/^	unsigned chans_num;$/;"	m	struct:trident_state	file:
check_driver	dmabuf.c	/^static void check_driver(struct audio_driver *d)$/;"	f	file:
chip_name	ad1848.c	/^	char           *chip_name, *name;$/;"	m	struct:__anon1	file:
chip_name	waveartist.c	/^	char		*chip_name;$/;"	m	struct:__anon11	file:
chk_send_dsp_cmd	msnd_pinnacle.c	/^static __inline__ int chk_send_dsp_cmd(multisound_dev_t *dev, register BYTE cmd)$/;"	f	file:
chn	sequencer.c	449;"	d	file:
chn	sequencer.c	521;"	d	file:
chn_info	dev_table.h	/^ 	struct channel_info chn_info[16];$/;"	m	struct:synth_operations	typeref:struct:synth_operations::channel_info
chn_info	opl3.c	/^	struct channel_info *chn_info;$/;"	m	struct:opl_devinfo	typeref:struct:opl_devinfo::channel_info	file:
clean-files	Makefile	/^clean-files := msndperm.c msndinit.c pndsperm.c pndspini.c \\$/;"	m
cleanup_ad1848	ad1848.c	/^module_exit(cleanup_ad1848);$/;"	v
cleanup_ad1848	ad1848.c	/^static void __exit cleanup_ad1848(void)$/;"	f	file:
cleanup_aedsp16	aedsp16.c	/^module_exit(cleanup_aedsp16);$/;"	v
cleanup_aedsp16	aedsp16.c	/^static void __exit cleanup_aedsp16(void) {$/;"	f	file:
cleanup_ak4642en	ak4642en.c	/^module_exit(cleanup_ak4642en);$/;"	v
cleanup_ak4642en	ak4642en.c	/^static void __exit cleanup_ak4642en(void)$/;"	f	file:
cleanup_au1550	au1550_ac97.c	/^cleanup_au1550(void)$/;"	f	file:
cleanup_au1550	au1550_ac97.c	/^module_exit(cleanup_au1550);$/;"	v
cleanup_cs4232	cs4232.c	/^module_exit(cleanup_cs4232);$/;"	v
cleanup_cs4232	cs4232.c	/^static void __exit cleanup_cs4232(void)$/;"	f	file:
cleanup_dlv	jzdlv.c	/^module_exit(cleanup_dlv);$/;"	v
cleanup_dlv	jzdlv.c	/^static void __exit cleanup_dlv(void)$/;"	f	file:
cleanup_jz_ac97	jz_ac97.c	/^module_exit(cleanup_jz_ac97);$/;"	v
cleanup_jz_ac97	jz_ac97.c	/^static void __exit cleanup_jz_ac97(void)$/;"	f	file:
cleanup_jz_i2s	jz_i2s.c	/^module_exit(cleanup_jz_i2s);$/;"	v
cleanup_jz_i2s	jz_i2s.c	/^static void __exit cleanup_jz_i2s(void)$/;"	f	file:
cleanup_jz_i2s	jz_i2s_4750.c	/^module_exit(cleanup_jz_i2s);$/;"	v
cleanup_jz_i2s	jz_i2s_4750.c	/^static void __exit cleanup_jz_i2s(void)$/;"	f	file:
cleanup_jz_i2s	jz_i2s_dlv_dma_test.c	/^module_exit(cleanup_jz_i2s);$/;"	v
cleanup_jz_i2s	jz_i2s_dlv_dma_test.c	/^static void __exit cleanup_jz_i2s(void)$/;"	f	file:
cleanup_jz_i2s	jz_i2s_for_4750.c	/^module_exit(cleanup_jz_i2s);$/;"	v
cleanup_jz_i2s	jz_i2s_for_4750.c	/^static void __exit cleanup_jz_i2s(void)$/;"	f	file:
cleanup_jz_pcm	jz_pcm_tlv320aic1106_dma.c	/^module_exit(cleanup_jz_pcm);$/;"	v
cleanup_jz_pcm	jz_pcm_tlv320aic1106_dma.c	/^static void __exit cleanup_jz_pcm(void)$/;"	f	file:
cleanup_jzcodec	jzcodec.c	/^module_exit(cleanup_jzcodec);$/;"	v
cleanup_jzcodec	jzcodec.c	/^static void __exit cleanup_jzcodec(void)$/;"	f	file:
cleanup_module	msnd.c	/^void cleanup_module(void)$/;"	f
cleanup_mpu401	mpu401.c	/^module_exit(cleanup_mpu401);$/;"	v
cleanup_mpu401	mpu401.c	/^static void __exit cleanup_mpu401(void)$/;"	f	file:
cleanup_opl3	opl3.c	/^module_exit(cleanup_opl3);$/;"	v
cleanup_opl3	opl3.c	/^static void __exit cleanup_opl3(void)$/;"	f	file:
cleanup_pas2	pas2_card.c	/^module_exit(cleanup_pas2);$/;"	v
cleanup_pas2	pas2_card.c	/^static void __exit cleanup_pas2(void)$/;"	f	file:
cleanup_pss	pss.c	/^module_exit(cleanup_pss);$/;"	v
cleanup_pss	pss.c	/^static void __exit cleanup_pss(void)$/;"	f	file:
cleanup_sscape	sscape.c	/^module_exit(cleanup_sscape);$/;"	v
cleanup_sscape	sscape.c	/^static void __exit cleanup_sscape(void)$/;"	f	file:
cleanup_trix	trix.c	/^module_exit(cleanup_trix);$/;"	v
cleanup_trix	trix.c	/^static void __exit cleanup_trix(void)$/;"	f	file:
cleanup_uart401	uart401.c	/^module_exit(cleanup_uart401);$/;"	v
cleanup_uart401	uart401.c	/^static void __exit cleanup_uart401(void)$/;"	f	file:
cleanup_uart6850	uart6850.c	/^module_exit(cleanup_uart6850);$/;"	v
cleanup_uart6850	uart6850.c	/^static void __exit cleanup_uart6850(void)$/;"	f	file:
cleanup_via82cxxx_audio	via82cxxx_audio.c	/^module_exit(cleanup_via82cxxx_audio);$/;"	v
cleanup_via82cxxx_audio	via82cxxx_audio.c	/^static void __exit cleanup_via82cxxx_audio(void)$/;"	f	file:
cleanup_vidc	vidc.c	/^module_exit(cleanup_vidc);$/;"	v
cleanup_vidc	vidc.c	/^static void __exit cleanup_vidc(void)$/;"	f	file:
cleanup_vmidi	v_midi.c	/^module_exit(cleanup_vmidi);$/;"	v
cleanup_vmidi	v_midi.c	/^static void __exit cleanup_vmidi(void)$/;"	f	file:
cleanup_vwsnd	vwsnd.c	/^module_exit(cleanup_vwsnd);$/;"	v
cleanup_vwsnd	vwsnd.c	/^static void __exit cleanup_vwsnd(void)$/;"	f	file:
cleanup_waveartist	waveartist.c	/^module_exit(cleanup_waveartist);$/;"	v
cleanup_waveartist	waveartist.c	/^static void __exit cleanup_waveartist(void)$/;"	f	file:
clear_advance	swarm_cs4297a.c	/^static void clear_advance(void *buf, unsigned bsize, unsigned bptr,$/;"	f	file:
clear_ak4642en_mode	ak4642en.c	/^void clear_ak4642en_mode(void)$/;"	f
clear_ak4642en_record	ak4642en.c	/^void clear_ak4642en_record(void)$/;"	f
clear_ak4642en_replay	ak4642en.c	/^void clear_ak4642en_replay(void)$/;"	f
clear_codec_direct_mode	jz_i2s_4750.c	/^void (*clear_codec_direct_mode)(void) = NULL;$/;"	v
clear_codec_direct_mode	jz_i2s_for_4750.c	/^void (*clear_codec_direct_mode)(void) = NULL;$/;"	v
clear_codec_mode	jz_i2s_4750.c	/^void (*clear_codec_mode)(void) = NULL;$/;"	v
clear_codec_mode	jz_i2s_for_4750.c	/^void (*clear_codec_mode)(void) = NULL;$/;"	v
clear_codec_record	jz_i2s_4750.c	/^void (*clear_codec_record)(void) = NULL;$/;"	v
clear_codec_record	jz_i2s_for_4750.c	/^void (*clear_codec_record)(void) = NULL;$/;"	v
clear_codec_replay	jz_i2s_4750.c	/^void (*clear_codec_replay)(void) = NULL;$/;"	v
clear_codec_replay	jz_i2s_for_4750.c	/^void (*clear_codec_replay)(void) = NULL;$/;"	v
clear_jzcodec_direct_mode	jzcodec.c	/^void clear_jzcodec_direct_mode(void)$/;"	f
clocking	i810_audio.c	/^static unsigned int clocking;$/;"	v	file:
clocks2ticks	mpu401.c	/^static unsigned long clocks2ticks(unsigned long clocks)$/;"	f	file:
close	dev_table.h	/^	void (*close) (int dev);$/;"	m	struct:audio_driver
close	dev_table.h	/^	void (*close) (int dev);$/;"	m	struct:midi_operations
close	dev_table.h	/^	void (*close) (int dev);$/;"	m	struct:synth_operations
close	dev_table.h	/^	void (*close) (void *devc, int sub_device);$/;"	m	struct:coproc_operations
close	dev_table.h	/^	void (*close)(int dev);$/;"	m	struct:sound_timer_operations
close_dmap	dmabuf.c	/^static void close_dmap(struct audio_operations *adev, struct dma_buffparms *dmap)$/;"	f	file:
closing	dev_table.h	/^	int	 closing;$/;"	m	struct:dma_buffparms
cmask	opl3.c	/^	unsigned char   cmask;$/;"	m	struct:opl_devinfo	file:
cmd	au1550_ac97.c	/^	unsigned int    cmd;$/;"	m	struct:ioctl_str_t	file:
cmd	sb_ess.c	/^struct ess_command {short cmd; short data;};$/;"	m	struct:ess_command	file:
cmd	sequencer.c	448;"	d	file:
cmd	sequencer.c	520;"	d	file:
cmedia_digital_control	ac97_codec.c	/^static int cmedia_digital_control(struct ac97_codec *codec, int slots, int rate, int mode)$/;"	f	file:
cmedia_digital_ops	ac97_codec.c	/^static struct ac97_ops cmedia_digital_ops = { cmedia_init, eapd_control, cmedia_digital_control};$/;"	v	typeref:struct:ac97_ops	file:
cmedia_init	ac97_codec.c	/^static int cmedia_init(struct ac97_codec *codec)$/;"	f	file:
cmedia_ops	ac97_codec.c	/^static struct ac97_ops cmedia_ops = { NULL, eapd_control, NULL};$/;"	v	typeref:struct:ac97_ops	file:
cnt	hal2.c	/^	u32 cnt;			\/* don't touch, it is also padding *\/$/;"	m	struct:hal2_desc	file:
cnt_factor	au1550_ac97.c	/^		int		cnt_factor;$/;"	m	struct:au1550_state::dmabuf	file:
codec	au1550_ac97.c	/^	struct ac97_codec *codec;$/;"	m	struct:au1550_state	typeref:struct:au1550_state::ac97_codec	file:
codec	sscape.c	/^	int	codec, codec_irq;	\/* required to setup pnp cards*\/$/;"	m	struct:sscape_info	file:
codec_audiodev	sscape.c	/^	int	codec_audiodev;$/;"	m	struct:sscape_info	file:
codec_base_caps	au1550_ac97.c	/^	unsigned        codec_base_caps; \/* AC'97 reg 00h, "Reset Register" *\/$/;"	m	struct:au1550_state	file:
codec_bass_gain	jz_i2s_4750.c	/^static int              codec_bass_gain;$/;"	v	file:
codec_bass_gain	jz_i2s_for_4750.c	/^static int              codec_bass_gain;$/;"	v	file:
codec_ext_caps	au1550_ac97.c	/^	unsigned        codec_ext_caps;  \/* AC'97 reg 28h, "Extended Audio ID" *\/$/;"	m	struct:au1550_state	file:
codec_id	ac97_codec.c	/^static char *codec_id(u16 id1, u16 id2, char *buf)$/;"	f	file:
codec_ioctrl	jz_i2s.c	1177;"	d	file:
codec_irq	sscape.c	/^	int	codec, codec_irq;	\/* required to setup pnp cards*\/$/;"	m	struct:sscape_info	file:
codec_mic_gain	jz_i2s_4750.c	/^static int              codec_mic_gain;$/;"	v	file:
codec_mic_gain	jz_i2s_for_4750.c	/^static int              codec_mic_gain;$/;"	v	file:
codec_mixer_info_id_name	jz_i2s_4750.c	/^void (*codec_mixer_info_id_name)(void) = NULL;$/;"	v
codec_mixer_info_id_name	jz_i2s_for_4750.c	/^void (*codec_mixer_info_id_name)(void) = NULL;$/;"	v
codec_mixer_old_info_id_name	jz_i2s_4750.c	/^void (*codec_mixer_old_info_id_name)(void) = NULL;$/;"	v
codec_mixer_old_info_id_name	jz_i2s_for_4750.c	/^void (*codec_mixer_old_info_id_name)(void) = NULL;$/;"	v
codec_read	jz_i2s_4750.c	/^	u16  (*codec_read)  (u8 reg); \/* the function accessing Codec REGs *\/$/;"	m	struct:i2s_codec	file:
codec_read	jz_i2s_dlv_dma_test.c	/^    u16  (*codec_read)  (u8 reg);\/\/the function accessing Codec REGs fcj add$/;"	m	struct:i2s_codec	file:
codec_read	jz_i2s_for_4750.c	/^	u16  (*codec_read)  (u8 reg); \/* the function accessing Codec REGs *\/$/;"	m	struct:i2s_codec	file:
codec_read	jz_pcm_tlv320aic1106_dma.c	/^	u16  (*codec_read)  (u8 reg);\/\/the function accessing Codec REGs$/;"	m	struct:pcm_codec	file:
codec_type	sscape.c	/^	int	codec_type;$/;"	m	struct:sscape_info	file:
codec_volue_shift	jz_i2s_4750.c	/^int codec_volue_shift;$/;"	v
codec_volue_shift	jz_i2s_dlv_dma_test.c	/^static int              codec_volue_shift;$/;"	v	file:
codec_volue_shift	jz_i2s_for_4750.c	/^int codec_volue_shift;$/;"	v
codec_volume	ak4642en.c	/^static int codec_volume;$/;"	v	file:
codec_wait	jz_i2s_4750.c	/^	void  (*codec_wait)  (struct i2s_codec *codec);$/;"	m	struct:i2s_codec	file:
codec_wait	jz_i2s_dlv_dma_test.c	/^    void  (*codec_wait)  (struct i2s_codec *codec);$/;"	m	struct:i2s_codec	file:
codec_wait	jz_i2s_for_4750.c	/^	void  (*codec_wait)  (struct i2s_codec *codec);$/;"	m	struct:i2s_codec	file:
codec_wait	jz_pcm_tlv320aic1106_dma.c	/^	void  (*codec_wait)  (struct pcm_codec *codec);$/;"	m	struct:pcm_codec	file:
codec_write	jz_i2s_4750.c	/^	void (*codec_write) (u8 reg, u16 val);$/;"	m	struct:i2s_codec	file:
codec_write	jz_i2s_dlv_dma_test.c	/^    void (*codec_write) (u8 reg, u16 val);\/\/to AK4642EN,val is 8bit$/;"	m	struct:i2s_codec	file:
codec_write	jz_i2s_for_4750.c	/^	void (*codec_write) (u8 reg, u16 val);$/;"	m	struct:i2s_codec	file:
codec_write	jz_pcm_tlv320aic1106_dma.c	/^	void (*codec_write) (u8 reg, u16 val);$/;"	m	struct:pcm_codec	file:
codecs_ioctrl	jz_i2s.c	/^	int (*codecs_ioctrl)(void *context, unsigned int cmd, unsigned long arg);$/;"	m	struct:i2s_codec	file:
command	dev_table.h	/^	int (*command) (int dev, unsigned char *data);$/;"	m	struct:midi_operations
compute_finetune	sequencer.c	/^EXPORT_SYMBOL(compute_finetune);$/;"	v
compute_finetune	sequencer.c	/^unsigned long compute_finetune(unsigned long base_freq, int bend, int range,$/;"	f
compute_rate_play	trident.c	/^compute_rate_play(u32 rate)$/;"	f	file:
compute_rate_rec	trident.c	/^compute_rate_rec(u32 rate)$/;"	f	file:
conf	sb_card.h	/^	struct address_info conf;$/;"	m	struct:sb_card_config	typeref:struct:sb_card_config::address_info
conf_printf	soundcard.c	/^EXPORT_SYMBOL(conf_printf);$/;"	v
conf_printf	soundcard.c	/^void conf_printf(char *name, struct address_info *hw_config)$/;"	f
conf_printf2	soundcard.c	/^EXPORT_SYMBOL(conf_printf2);$/;"	v
conf_printf2	soundcard.c	/^void conf_printf2(char *name, int base, int irq, int dma, int dma2)$/;"	f
config	dev_table.h	/^	struct address_info config;$/;"	m	struct:card_info	typeref:struct:card_info::address_info
config_dma_trans_mode	jz_i2s.c	/^void config_dma_trans_mode(spinlock_t lock, audio_dma_type* dma, int sound_data_width)$/;"	f
config_pas_hw	pas2_card.c	/^static int __init config_pas_hw(struct address_info *hw_config)$/;"	f	file:
configure_nonsound_components	pss.c	/^static void configure_nonsound_components(void)$/;"	f	file:
control	i810_audio.c	/^	u32 control;$/;"	m	struct:sg_item	file:
control	trident.c	/^	u32 control; \/* signed\/unsigned, 8\/16 bits, mono\/stereo *\/$/;"	m	struct:trident_channel	file:
controller	dev_table.h	/^	void (*controller) (int dev, int voice, int ctrl_num, int value);$/;"	m	struct:synth_operations
controllers	sound_config.h	/^		unsigned char controllers[128];$/;"	m	struct:channel_info
conversion	swarm_cs4297a.c	/^	unsigned conversion:1;	\/\/ conversion from 16 to 8 bit in progress$/;"	m	struct:cs4297a_state	file:
convert_16bits_stereo2mono	jz_i2s.c	/^int convert_16bits_stereo2mono(void *buff, int data_len)$/;"	f
convert_8bits_signed2unsigned	jz_i2s.c	/^static int convert_8bits_signed2unsigned(void *buffer, int counter)$/;"	f	file:
convert_8bits_stereo2mono	jz_i2s.c	/^int convert_8bits_stereo2mono(void *buff, int data_len)$/;"	f
convert_8bits_stereo2mono_signed2unsigned	jz_i2s.c	/^int convert_8bits_stereo2mono_signed2unsigned(void *buff, int data_len)$/;"	f
converter	dev_table.h	/^	struct synth_operations *converter;$/;"	m	struct:midi_operations	typeref:struct:midi_operations::synth_operations
coproc	dev_table.h	/^	struct coproc_operations *coproc;$/;"	m	struct:audio_operations	typeref:struct:audio_operations::coproc_operations
coproc	dev_table.h	/^	struct coproc_operations *coproc;$/;"	m	struct:midi_operations	typeref:struct:midi_operations::coproc_operations
coproc_operations	dev_table.h	/^typedef struct coproc_operations $/;"	s
coproc_operations	dev_table.h	/^} coproc_operations;$/;"	t	typeref:struct:coproc_operations
copy_dmabuf_user	au1550_ac97.c	/^copy_dmabuf_user(struct dmabuf *db, char* userbuf, int count, int to_user)$/;"	f	file:
copy_user	dev_table.h	/^	void (*copy_user) (int dev,$/;"	m	struct:audio_driver
count	au1550_ac97.c	/^		int		count;$/;"	m	struct:au1550_state::dmabuf	file:
count	dmasound/dmasound.h	/^    int front, rear, count;$/;"	m	struct:sound_queue
count	i810_audio.c	/^		int count;		\/* bytes to be consumed or been generated by dma machine *\/$/;"	m	struct:i810_state::dmabuf	file:
count	jz_ac97.c	/^	int             count;	\/\/ current byte count in DMA buffer$/;"	m	struct:jz_ac97_controller_info	file:
count	jz_ac97.c	/^	int count;$/;"	m	struct:buffer_queue_s	file:
count	jz_i2s_4750.c	/^	int count;	 \/* current byte count in DMA buffer *\/$/;"	m	struct:jz_i2s_controller_info	file:
count	jz_i2s_4750.c	/^	int count;$/;"	m	struct:buffer_queue_s	file:
count	jz_i2s_dlv_dma_test.c	/^    int             count;	\/\/ current byte count in DMA buffer$/;"	m	struct:jz_i2s_controller_info	file:
count	jz_i2s_dlv_dma_test.c	/^    int count;$/;"	m	struct:buffer_queue_s	file:
count	jz_i2s_for_4750.c	/^	int count;	 \/* current byte count in DMA buffer *\/$/;"	m	struct:jz_i2s_controller_info	file:
count	jz_i2s_for_4750.c	/^	int count;$/;"	m	struct:buffer_queue_s	file:
count	jz_pcm_tlv320aic1106_dma.c	/^	int count;	\/\/ current byte count in DMA buffer$/;"	m	struct:jz_pcm_controller_info	file:
count	jz_pcm_tlv320aic1106_dma.c	/^	int count;$/;"	m	struct:buffer_queue_s	file:
count	swarm_cs4297a.c	/^        int count;$/;"	m	struct:serdma_s	file:
count	trident.c	/^		int count;	\/* bytes to be comsumed or been generated by dma machine *\/$/;"	m	struct:trident_state::dmabuf	file:
count	via82cxxx_audio.c	/^	u32 count;	\/* includes additional VIA_xxx bits also *\/$/;"	m	struct:via_sgd_table	file:
counts	dev_table.h	/^	int      counts[MAX_SUB_BUFFERS];$/;"	m	struct:dma_buffparms
cpuaddr	via82cxxx_audio.c	/^	void *cpuaddr;$/;"	m	struct:via_buffer_pgtbl	file:
create_special_devices	soundcard.c	/^static int create_special_devices(void)$/;"	f	file:
crystal_digital_control	ac97_codec.c	/^static int crystal_digital_control(struct ac97_codec *codec, int slots, int rate, int mode)$/;"	f	file:
crystal_digital_ops	ac97_codec.c	/^static struct ac97_ops crystal_digital_ops = { NULL, eapd_control, crystal_digital_control };$/;"	v	typeref:struct:ac97_ops	file:
crystal_key	cs4232.c	/^static unsigned char crystal_key[] =	\/* A 32 byte magic key sequence *\/$/;"	v	file:
cs4232_devices	cs4232.c	/^static unsigned int cs4232_devices;$/;"	v	file:
cs4232_driver	cs4232.c	/^static struct pnp_driver cs4232_driver = {$/;"	v	typeref:struct:pnp_driver	file:
cs4232_pnp_probe	cs4232.c	/^static int __init cs4232_pnp_probe(struct pnp_dev *dev, const struct pnp_device_id *dev_id)$/;"	f	file:
cs4232_pnp_remove	cs4232.c	/^static void __devexit cs4232_pnp_remove(struct pnp_dev *dev)$/;"	f	file:
cs4232_pnp_table	cs4232.c	/^static const struct pnp_device_id cs4232_pnp_table[] = {$/;"	v	typeref:struct:pnp_device_id	file:
cs4297a_audio_fops	swarm_cs4297a.c	/^static \/*const *\/ struct file_operations cs4297a_audio_fops = {$/;"	v	typeref:struct:file_operations	file:
cs4297a_cleanup	swarm_cs4297a.c	/^module_exit(cs4297a_cleanup);$/;"	v
cs4297a_cleanup	swarm_cs4297a.c	/^static void __exit cs4297a_cleanup(void)$/;"	f	file:
cs4297a_devs	swarm_cs4297a.c	/^struct list_head cs4297a_devs = { &cs4297a_devs, &cs4297a_devs };$/;"	v	typeref:struct:list_head
cs4297a_init	swarm_cs4297a.c	/^module_init(cs4297a_init);$/;"	v
cs4297a_init	swarm_cs4297a.c	/^static int __init cs4297a_init(void)$/;"	f	file:
cs4297a_interrupt	swarm_cs4297a.c	/^static void cs4297a_interrupt(int irq, void *dev_id)$/;"	f	file:
cs4297a_ioctl	swarm_cs4297a.c	/^static int cs4297a_ioctl(struct inode *inode, struct file *file,$/;"	f	file:
cs4297a_ioctl_mixdev	swarm_cs4297a.c	/^static int cs4297a_ioctl_mixdev(struct inode *inode, struct file *file,$/;"	f	file:
cs4297a_mixer_fops	swarm_cs4297a.c	/^static \/*const *\/ struct file_operations cs4297a_mixer_fops = {$/;"	v	typeref:struct:file_operations	file:
cs4297a_mmap	swarm_cs4297a.c	/^static int cs4297a_mmap(struct file *file, struct vm_area_struct *vma)$/;"	f	file:
cs4297a_open	swarm_cs4297a.c	/^static int cs4297a_open(struct inode *inode, struct file *file)$/;"	f	file:
cs4297a_open_mixdev	swarm_cs4297a.c	/^static int cs4297a_open_mixdev(struct inode *inode, struct file *file)$/;"	f	file:
cs4297a_poll	swarm_cs4297a.c	/^static unsigned int cs4297a_poll(struct file *file,$/;"	f	file:
cs4297a_read	swarm_cs4297a.c	/^static ssize_t cs4297a_read(struct file *file, char *buffer, size_t count,$/;"	f	file:
cs4297a_read_ac97	swarm_cs4297a.c	/^static int cs4297a_read_ac97(struct cs4297a_state *s, u32 offset,$/;"	f	file:
cs4297a_release	swarm_cs4297a.c	/^static int cs4297a_release(struct inode *inode, struct file *file)$/;"	f	file:
cs4297a_release_mixdev	swarm_cs4297a.c	/^static int cs4297a_release_mixdev(struct inode *inode, struct file *file)$/;"	f	file:
cs4297a_state	swarm_cs4297a.c	/^struct cs4297a_state {$/;"	s	file:
cs4297a_update_ptr	swarm_cs4297a.c	/^static void cs4297a_update_ptr(struct cs4297a_state *s, int intflag)$/;"	f	file:
cs4297a_write	swarm_cs4297a.c	/^static ssize_t cs4297a_write(struct file *file, const char *buffer,$/;"	f	file:
cs4297a_write_ac97	swarm_cs4297a.c	/^static int cs4297a_write_ac97(struct cs4297a_state *s, u32 offset,$/;"	f	file:
cs42xb_mix_devices	ad1848_mixer.h	/^static mixer_ents cs42xb_mix_devices[32] = {$/;"	v
cs_debuglevel	swarm_cs4297a.c	/^static unsigned long cs_debuglevel = 4;	\/\/ levels range from 1-9$/;"	v	file:
cs_debugmask	swarm_cs4297a.c	/^static unsigned long cs_debugmask = CS_INIT \/*| CS_IOCTL*\/;$/;"	v	file:
cs_printioctl	swarm_cs4297a.c	/^static void cs_printioctl(unsigned int x)$/;"	f	file:
ct_alaw	dmasound/dmasound.h	/^    ssize_t (*ct_alaw)(const u_char __user *, size_t, u_char *, ssize_t *, ssize_t);$/;"	m	struct:__anon18
ct_s16be	dmasound/dmasound.h	/^    ssize_t (*ct_s16be)(const u_char __user *, size_t, u_char *, ssize_t *, ssize_t);$/;"	m	struct:__anon18
ct_s16le	dmasound/dmasound.h	/^    ssize_t (*ct_s16le)(const u_char __user *, size_t, u_char *, ssize_t *, ssize_t);$/;"	m	struct:__anon18
ct_s8	dmasound/dmasound.h	/^    ssize_t (*ct_s8)(const u_char __user *, size_t, u_char *, ssize_t *, ssize_t);$/;"	m	struct:__anon18
ct_u16be	dmasound/dmasound.h	/^    ssize_t (*ct_u16be)(const u_char __user *, size_t, u_char *, ssize_t *, ssize_t);$/;"	m	struct:__anon18
ct_u16le	dmasound/dmasound.h	/^    ssize_t (*ct_u16le)(const u_char __user *, size_t, u_char *, ssize_t *, ssize_t);$/;"	m	struct:__anon18
ct_u8	dmasound/dmasound.h	/^    ssize_t (*ct_u8)(const u_char __user *, size_t, u_char *, ssize_t *, ssize_t);$/;"	m	struct:__anon18
ct_ulaw	dmasound/dmasound.h	/^    ssize_t (*ct_ulaw)(const u_char __user *, size_t, u_char *, ssize_t *, ssize_t);$/;"	m	struct:__anon18
ctl_regs	hal2.c	/^	struct hal2_ctl_regs *ctl_regs;	\/* HAL2 ctl registers *\/$/;"	m	struct:hal2_card	typeref:struct:hal2_card::hal2_ctl_regs	file:
ctlreg	vwsnd.c	/^	int ctlreg;$/;"	m	struct:dma_chan_desc	file:
ctlval	vwsnd.c	/^	unsigned long	ctlval;$/;"	m	struct:dma_chan	file:
ctrl	hal2.c	/^	unsigned int ctrl;		\/* Current state of pbus->pbdma_ctrl *\/$/;"	m	struct:hal2_pbus	file:
ctrl_def_values	midi_ctrl.h	/^static unsigned char ctrl_def_values[128] =$/;"	v
curr_clocks	mpu401.c	/^static volatile unsigned long curr_ticks, curr_clocks;$/;"	v	file:
curr_tempo	mpu401.c	/^static volatile int curr_tempo, curr_timebase, hw_timebase;$/;"	v	file:
curr_tempo	sound_timer.c	/^static volatile int curr_tempo, curr_timebase;$/;"	v	file:
curr_tempo	sys_timer.c	/^static volatile int curr_tempo, curr_timebase;$/;"	v	file:
curr_ticks	mpu401.c	/^static volatile unsigned long curr_ticks, curr_clocks;$/;"	v	file:
curr_ticks	sound_timer.c	/^static volatile unsigned long curr_ticks;$/;"	v	file:
curr_ticks	sys_timer.c	/^static volatile unsigned long curr_ticks;$/;"	v	file:
curr_timebase	mpu401.c	/^static volatile int curr_tempo, curr_timebase, hw_timebase;$/;"	v	file:
curr_timebase	sound_timer.c	/^static volatile int curr_tempo, curr_timebase;$/;"	v	file:
curr_timebase	sys_timer.c	/^static volatile int curr_tempo, curr_timebase;$/;"	v	file:
current_freq	opl3.c	/^	unsigned long   current_freq;$/;"	m	struct:voice_info	file:
current_interval	ad1848.c	/^static unsigned int current_interval;$/;"	v	file:
custom	dmasound/dmasound_paula.c	36;"	d	file:
cyber_address_interrupt	trident.c	/^cyber_address_interrupt(struct trident_card *card)$/;"	f	file:
cyber_alloc_pcm_channel	trident.c	/^cyber_alloc_pcm_channel(struct trident_card *card)$/;"	f	file:
cyber_free_pcm_channel	trident.c	/^cyber_free_pcm_channel(struct trident_card *card, unsigned int channel)$/;"	f	file:
cyber_inidx	trident.c	/^cyber_inidx(int port, int idx)$/;"	f	file:
cyber_init_ritual	trident.c	/^cyber_init_ritual(struct trident_card *card)$/;"	f	file:
cyber_outidx	trident.c	/^cyber_outidx(int port, int idx, int data)$/;"	f	file:
d	dev_table.h	/^	struct audio_driver *d;$/;"	m	struct:audio_operations	typeref:struct:audio_operations::audio_driver
d_hcfg	aedsp16.c	/^struct	d_hcfg {$/;"	s	file:
dac	hal2.c	/^	struct hal2_codec dac;$/;"	m	struct:hal2_card	typeref:struct:hal2_card::hal2_codec	file:
dac_audio_exit	sh_dac_audio.c	/^module_exit(dac_audio_exit);$/;"	v
dac_audio_exit	sh_dac_audio.c	/^static void __exit dac_audio_exit(void)$/;"	f	file:
dac_audio_fops	sh_dac_audio.c	/^const struct file_operations dac_audio_fops = {$/;"	v	typeref:struct:file_operations
dac_audio_init	sh_dac_audio.c	/^module_init(dac_audio_init);$/;"	v
dac_audio_init	sh_dac_audio.c	/^static int __init dac_audio_init(void)$/;"	f	file:
dac_audio_ioctl	sh_dac_audio.c	/^static int dac_audio_ioctl(struct inode *inode, struct file *file,$/;"	f	file:
dac_audio_open	sh_dac_audio.c	/^static int dac_audio_open(struct inode *inode, struct file *file)$/;"	f	file:
dac_audio_read	sh_dac_audio.c	/^static ssize_t dac_audio_read(struct file *file, char *buf, size_t count,$/;"	f	file:
dac_audio_release	sh_dac_audio.c	/^static int dac_audio_release(struct inode *inode, struct file *file)$/;"	f	file:
dac_audio_reset	sh_dac_audio.c	/^static void dac_audio_reset(void)$/;"	f	file:
dac_audio_set_rate	sh_dac_audio.c	/^static void dac_audio_set_rate(void)$/;"	f	file:
dac_audio_start	sh_dac_audio.c	/^static void dac_audio_start(void)$/;"	f	file:
dac_audio_start_timer	sh_dac_audio.c	/^static void dac_audio_start_timer(void)$/;"	f	file:
dac_audio_stop	sh_dac_audio.c	/^static void dac_audio_stop(void)$/;"	f	file:
dac_audio_stop_timer	sh_dac_audio.c	/^static void dac_audio_stop_timer(void)$/;"	f	file:
dac_audio_sync	sh_dac_audio.c	/^static void dac_audio_sync(void)$/;"	f	file:
dac_audio_write	sh_dac_audio.c	/^static ssize_t dac_audio_write(struct file *file, const char *buf, size_t count,$/;"	f	file:
dac_dma_interrupt	au1550_ac97.c	/^static void dac_dma_interrupt(int irq, void *dev_id)$/;"	f	file:
dac_wait	jz_ac97.c	/^	wait_queue_head_t dac_wait;$/;"	m	struct:jz_ac97_controller_info	file:
dac_wait	jz_i2s_4750.c	/^	wait_queue_head_t dac_wait;$/;"	m	struct:jz_i2s_controller_info	file:
dac_wait	jz_i2s_dlv_dma_test.c	/^    wait_queue_head_t dac_wait;$/;"	m	struct:jz_i2s_controller_info	file:
dac_wait	jz_i2s_for_4750.c	/^	wait_queue_head_t dac_wait;$/;"	m	struct:jz_i2s_controller_info	file:
dac_wait	jz_pcm_tlv320aic1106_dma.c	/^	wait_queue_head_t dac_wait;$/;"	m	struct:jz_pcm_controller_info	file:
data	msnd.h	/^	char *data;$/;"	m	struct:__anon5
data	sb_ess.c	/^struct ess_command {short cmd; short data;};$/;"	m	struct:ess_command	file:
data_addr	jz_i2s.c	/^	unsigned int *data_addr;$/;"	m	struct:__anon25	file:
data_buffer	sh_dac_audio.c	/^static char *data_buffer, *buffer_begin, *buffer_end;$/;"	v	file:
data_rate	dev_table.h	/^	int	 data_rate; \/* Bytes\/second *\/$/;"	m	struct:dma_buffparms
datasize	jz_i2s.c	/^	unsigned int datasize;$/;"	m	struct:__anon24	file:
dbgassert	vwsnd.c	/^static void dbgassert(const char *fcn, int line, const char *expr)$/;"	f	file:
dealloc_dmabuf	i810_audio.c	/^static void dealloc_dmabuf(struct i810_state *state)$/;"	f	file:
dealloc_dmabuf	swarm_cs4297a.c	315;"	d	file:
dealloc_dmabuf	trident.c	/^dealloc_dmabuf(struct dmabuf *dmabuf, struct pci_dev *pci_dev)$/;"	f	file:
debug	btaudio.c	/^static unsigned int debug;$/;"	v	file:
debug_flag	ad1848.c	/^	int             debug_flag;$/;"	m	struct:__anon1	file:
debug_flg	waveartist.c	34;"	d	file:
debugmem	dmabuf.c	/^static int debugmem;    	\/* switched off by default *\/$/;"	v	file:
decimation	btaudio.c	/^	int decimation;$/;"	m	struct:btaudio	file:
decode_mixer	waveartist.c	/^	int		(*decode_mixer)(wavnc_info *, int,$/;"	m	struct:waveartist_mixer_info	file:
def_hard	dmasound/dmasound_paula.c	/^static SETTINGS def_hard = {$/;"	v	file:
def_hard	dmasound/dmasound_q40.c	/^static SETTINGS def_hard = {$/;"	v	file:
def_hard_falcon	dmasound/dmasound_atari.c	/^static SETTINGS def_hard_falcon = {$/;"	v	file:
def_hard_tt	dmasound/dmasound_atari.c	/^static SETTINGS def_hard_tt = {$/;"	v	file:
def_soft	dmasound/dmasound_atari.c	/^static SETTINGS def_soft = {$/;"	v	file:
def_soft	dmasound/dmasound_paula.c	/^static SETTINGS def_soft = {$/;"	v	file:
def_soft	dmasound/dmasound_q40.c	/^static SETTINGS def_soft = {$/;"	v	file:
def_tmr_arm	sys_timer.c	/^def_tmr_arm(int dev, long time)$/;"	f	file:
def_tmr_close	sys_timer.c	/^def_tmr_close(int dev)$/;"	f	file:
def_tmr_event	sys_timer.c	/^def_tmr_event(int dev, unsigned char *event)$/;"	f	file:
def_tmr_get_time	sys_timer.c	/^def_tmr_get_time(int dev)$/;"	f	file:
def_tmr_ioctl	sys_timer.c	/^static int def_tmr_ioctl(int dev, unsigned int cmd, void __user *arg)$/;"	f	file:
def_tmr_open	sys_timer.c	/^def_tmr_open(int dev, int mode)$/;"	f	file:
default_digital_ops	ac97_codec.c	/^static struct ac97_ops default_digital_ops = { NULL, eapd_control, generic_digital_control};$/;"	v	typeref:struct:ac97_ops	file:
default_hard	dmasound/dmasound.h	/^    SETTINGS default_hard ;	\/* open() or init() should set something valid *\/$/;"	m	struct:__anon17
default_levels	pas2_mixer.c	/^static int      default_levels[32] =$/;"	v	file:
default_mixer_levels	ad1848_mixer.h	/^static int default_mixer_levels[32] =$/;"	v
default_ops	ac97_codec.c	/^static struct ac97_ops default_ops = { NULL, eapd_control, NULL };$/;"	v	typeref:struct:ac97_ops	file:
default_set_bits	dmabuf.c	/^static unsigned int default_set_bits(int dev, unsigned int bits)$/;"	f	file:
default_set_channels	dmabuf.c	/^static short default_set_channels(int dev, short channels)$/;"	f	file:
default_set_speed	dmabuf.c	/^static int default_set_speed(int dev, int speed)$/;"	f	file:
default_soft	dmasound/dmasound.h	/^    SETTINGS default_soft ;	\/* you can make it look like old OSS, if you want to *\/$/;"	m	struct:__anon17
default_sound_timer	sys_timer.c	/^struct sound_timer_operations default_sound_timer =$/;"	v	typeref:struct:sound_timer_operations
deinit_audio_node	jz_i2s.c	/^void deinit_audio_node(unsigned int **memory)$/;"	f
delta	trident.c	/^	u32 delta; \/* delta value, sample rate \/ 48k for playback, *\/$/;"	m	struct:trident_channel	file:
desc	hal2.c	/^	struct hal2_desc *desc;$/;"	m	struct:hal2_codec	typeref:struct:hal2_codec::hal2_desc	file:
desc	hal2.c	/^	struct hpc_dma_desc desc;$/;"	m	struct:hal2_desc	typeref:struct:hal2_desc::hpc_dma_desc	file:
desc	vwsnd.c	/^	const dma_chan_desc_t *desc;$/;"	m	struct:dma_chan	file:
desc_count	hal2.c	/^	int desc_count;$/;"	m	struct:hal2_codec	file:
descr_a	swarm_cs4297a.c	/^        u64 descr_a;$/;"	m	struct:serdma_descr_s	file:
descr_add	swarm_cs4297a.c	/^        serdma_descr_t  *descr_add;$/;"	m	struct:serdma_s	file:
descr_b	swarm_cs4297a.c	/^        u64 descr_b;$/;"	m	struct:serdma_descr_s	file:
descr_rem	swarm_cs4297a.c	/^        serdma_descr_t  *descr_rem;$/;"	m	struct:serdma_s	file:
descrtab	swarm_cs4297a.c	/^        serdma_descr_t  *descrtab;$/;"	m	struct:serdma_s	file:
descrtab_end	swarm_cs4297a.c	/^        serdma_descr_t  *descrtab_end;$/;"	m	struct:serdma_s	file:
descrtab_phys	swarm_cs4297a.c	/^        paddr_t          descrtab_phys;$/;"	m	struct:serdma_s	file:
deskpro_m	ad1848.c	/^static int deskpro_m;$/;"	v	file:
deskpro_xl	ad1848.c	/^static int deskpro_xl;$/;"	v	file:
detect_ga	sscape.c	/^static int detect_ga(sscape_info * devc)$/;"	f	file:
detect_mixer	sb_mixer.c	/^static int detect_mixer(sb_devc * devc)$/;"	f	file:
detect_pas_hw	pas2_card.c	/^static int __init detect_pas_hw(struct address_info *hw_config)$/;"	f	file:
detect_sscape_pnp	sscape.c	/^static int __init detect_sscape_pnp(sscape_info* devc)$/;"	f	file:
detected_devc	sb_common.c	/^static sb_devc *detected_devc;	\/* For communication from probe to init *\/$/;"	v	file:
detected_model	opl3.c	/^static int      detected_model;$/;"	v	file:
dev	dev_table.h	/^	int dev;$/;"	m	struct:sound_lowlev_timer
dev	msnd_pinnacle.c	/^static multisound_dev_t			dev;$/;"	v	file:
dev	sb.h	/^	   int dev;$/;"	m	struct:sb_devc
dev	sequencer.c	447;"	d	file:
dev	sequencer.c	519;"	d	file:
dev	v_midi.h	/^	   int dev;$/;"	m	struct:vmidi_devc
dev_audio	au1550_ac97.c	/^	int             dev_audio;$/;"	m	struct:au1550_state	file:
dev_audio	i810_audio.c	/^	int dev_audio;$/;"	m	struct:i810_card	file:
dev_audio	jz_ac97.c	/^	int dev_audio;$/;"	m	struct:jz_ac97_controller_info	file:
dev_audio	jz_i2s.c	/^	int		dev_audio;$/;"	m	struct:jz_i2s_controller_info	file:
dev_audio	jz_i2s_4750.c	/^	int dev_audio;$/;"	m	struct:jz_i2s_controller_info	file:
dev_audio	jz_i2s_dlv_dma_test.c	/^    int dev_audio;$/;"	m	struct:jz_i2s_controller_info	file:
dev_audio	jz_i2s_for_4750.c	/^	int dev_audio;$/;"	m	struct:jz_i2s_controller_info	file:
dev_audio	jz_pcm_tlv320aic1106_dma.c	/^	int dev_audio;$/;"	m	struct:jz_pcm_controller_info	file:
dev_audio	swarm_cs4297a.c	/^	int dev_audio;$/;"	m	struct:cs4297a_state	file:
dev_audio	trident.c	/^	int dev_audio;$/;"	m	struct:trident_card	file:
dev_conf	mpu401.c	/^static struct mpu_config dev_conf[MAX_MIDI_DEV];$/;"	v	typeref:struct:mpu_config	file:
dev_dsp	hal2.c	/^	int dev_dsp;			\/* audio device *\/$/;"	m	struct:hal2_card	file:
dev_dsp	via82cxxx_audio.c	/^	int dev_dsp;		\/* \/dev\/dsp index from register_sound_dsp() *\/$/;"	m	struct:via_info	file:
dev_fileops	msnd_pinnacle.c	/^static const struct file_operations dev_fileops = {$/;"	v	typeref:struct:file_operations	file:
dev_for_play	jz_ac97.c	/^	int dev_for_play;$/;"	m	struct:jz_ac97_controller_info	file:
dev_for_record	jz_ac97.c	/^	int dev_for_record;$/;"	m	struct:jz_ac97_controller_info	file:
dev_id	sb_card.h	/^	const  char         *dev_id;$/;"	m	struct:sb_card_config
dev_ioctl	msnd_pinnacle.c	/^static int dev_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)$/;"	f	file:
dev_list	soundcard.c	/^} dev_list[] = { \/* list of minor devices *\/$/;"	v	typeref:struct:__anon19	file:
dev_midi	hal2.c	/^	int dev_midi;			\/* midi device *\/$/;"	m	struct:hal2_card	file:
dev_mixer	hal2.c	/^	int dev_mixer;			\/* mixer device *\/$/;"	m	struct:hal2_card	file:
dev_mixer	jz_i2s.c	/^	int	dev_mixer;$/;"	m	struct:i2s_codec	file:
dev_mixer	jz_i2s_4750.c	/^	int dev_mixer; $/;"	m	struct:i2s_codec	file:
dev_mixer	jz_i2s_dlv_dma_test.c	/^    int dev_mixer; $/;"	m	struct:i2s_codec	file:
dev_mixer	jz_i2s_for_4750.c	/^	int dev_mixer; $/;"	m	struct:i2s_codec	file:
dev_mixer	jz_pcm_tlv320aic1106_dma.c	/^	int dev_mixer; $/;"	m	struct:pcm_codec	file:
dev_mixer	swarm_cs4297a.c	/^	int dev_mixer;$/;"	m	struct:cs4297a_state	file:
dev_no	ad1848.c	/^	int             dev_no;$/;"	m	struct:__anon1	file:
dev_no	waveartist.c	/^	int		dev_no;$/;"	m	struct:__anon11	file:
dev_open	msnd_pinnacle.c	/^static int dev_open(struct inode *inode, struct file *file)$/;"	f	file:
dev_read	msnd_pinnacle.c	/^static ssize_t dev_read(struct file *file, char __user *buf, size_t count, loff_t *off)$/;"	f	file:
dev_release	msnd_pinnacle.c	/^static int dev_release(struct inode *inode, struct file *file)$/;"	f	file:
dev_write	msnd_pinnacle.c	/^static ssize_t dev_write(struct file *file, const char __user *buf, size_t count, loff_t *off)$/;"	f	file:
devc	dev_table.h	/^	void *devc;		\/* Driver specific info *\/$/;"	m	struct:audio_operations
devc	dev_table.h	/^	void *devc;		\/* Driver specific info *\/$/;"	m	struct:coproc_operations
devc	dev_table.h	/^	void *devc;$/;"	m	struct:midi_operations
devc	dev_table.h	/^	void *devc;$/;"	m	struct:mixer_operations
devc	opl3.c	/^static struct opl_devinfo *devc = NULL;$/;"	v	typeref:struct:opl_devinfo	file:
devc	pss.c	/^static pss_confdata *devc = &pss_data;$/;"	v	file:
devc	sscape.c	/^static struct sscape_info *devc = &adev_info;$/;"	v	typeref:struct:sscape_info	file:
device_major	sh_dac_audio.c	/^static int in_use, device_major;$/;"	v	file:
devlink	dev_table.h	/^	int devlink;$/;"	m	struct:sound_timer_operations
devno	mpu401.c	/^	int             devno;$/;"	m	struct:mpu_config	file:
devs	i810_audio.c	/^static struct i810_card *devs = NULL;$/;"	v	typeref:struct:i810_card	file:
devs	msnd.c	/^static multisound_dev_t		*devs[MSND_MAX_DEVS];$/;"	v	file:
devs	trident.c	/^static struct trident_card *devs;$/;"	v	typeref:struct:trident_card	file:
dhigh	hal2.h	/^	volatile u32 dhigh;		\/* DOC Data high *\/$/;"	m	struct:hal2_syn_regs
died	dmasound/dmasound.h	/^    int busy, syncing, xruns, died;$/;"	m	struct:sound_queue
digital	btaudio.c	/^static int digital = 1;$/;"	v	file:
direction	vwsnd.c	/^	int direction;			\/* LI_CCTL_DIR_IN\/OUT *\/$/;"	m	struct:dma_chan_desc	file:
disable_all_emulations	pss.c	/^static void disable_all_emulations(void)$/;"	f	file:
disable_heartbeat	dmasound/dmasound_paula.c	/^static inline void disable_heartbeat(void)$/;"	f	file:
disable_heartbeat	dmasound/dmasound_paula.c	115;"	d	file:
disabled	uart401.c	/^	int             opened, disabled;$/;"	m	struct:uart401_devc	file:
dlow	hal2.h	/^	volatile u32 dlow;		\/* DOC Data low *\/$/;"	m	struct:hal2_syn_regs
dlv_anti_pop	jzdlv.c	/^static void dlv_anti_pop(int mode)$/;"	f	file:
dlv_codec_irq	jzdlv.c	/^static irqreturn_t dlv_codec_irq(int irq, void *dev_id)$/;"	f	file:
dlv_each_time_init	jzdlv.c	/^static void dlv_each_time_init(void)$/;"	f	file:
dlv_get_mixer_info	jzdlv.c	/^static void dlv_get_mixer_info(mixer_info *old_info)$/;"	f	file:
dlv_get_mixer_old_info	jzdlv.c	/^static void dlv_get_mixer_old_info(mixer_info *info)$/;"	f	file:
dlv_irq_lock	jzdlv.c	/^static spinlock_t dlv_irq_lock;$/;"	v	file:
dlv_mute	jzdlv.c	/^static int dlv_mute(int val)$/;"	f	file:
dlv_print_ioc_cmd	jzdlv.c	/^static dlv_print_ioc_cmd(int cmd)$/;"	f	file:
dlv_read_reg	jzdlv.c	/^static inline int dlv_read_reg(int addr)$/;"	f	file:
dlv_reset	jzdlv.c	/^static void dlv_reset(void)$/;"	f	file:
dlv_set_channel	jzdlv.c	/^static int dlv_set_channel(int ch)$/;"	f	file:
dlv_set_data_width	jzdlv.c	/^static int dlv_set_data_width(unsigned int mode, unsigned int width)$/;"	f	file:
dlv_set_line	jzdlv.c	/^static void dlv_set_line(int val)$/;"	f	file:
dlv_set_mic	jzdlv.c	/^static void dlv_set_mic(int val)$/;"	f	file:
dlv_set_mode	jzdlv.c	/^static void dlv_set_mode(void)$/;"	f	file:
dlv_set_record	jzdlv.c	/^static void dlv_set_record(void)$/;"	f	file:
dlv_set_record_speed	jzdlv.c	/^static int dlv_set_record_speed(int rate)$/;"	f	file:
dlv_set_replay	jzdlv.c	/^static void dlv_set_replay(void)$/;"	f	file:
dlv_set_replay_recode	jzdlv.c	/^static void dlv_set_replay_recode(int val)$/;"	f	file:
dlv_set_replay_speed	jzdlv.c	/^static int dlv_set_replay_speed(int rate)$/;"	f	file:
dlv_set_startup_param	jzdlv.c	/^static int dlv_set_startup_param(void)$/;"	f	file:
dlv_set_volume	jzdlv.c	/^static void dlv_set_volume(int val)$/;"	f	file:
dlv_turn_off	jzdlv.c	/^static void dlv_turn_off(int mode)$/;"	f	file:
dlv_turn_replay	jzdlv.c	/^static void dlv_turn_replay(int mode)$/;"	f	file:
dlv_work	jzdlv.c	/^static struct work_struct dlv_work;$/;"	v	typeref:struct:work_struct	file:
dlv_work_handle	jzdlv.c	/^static void dlv_work_handle(struct work_struct *work)$/;"	f	file:
dlv_write_reg	jzdlv.c	/^void dlv_write_reg(int addr, int val)$/;"	f
dlv_write_reg_bit	jzdlv.c	/^static int dlv_write_reg_bit(int addr, int bitval, int mask_bit)$/;"	f	file:
dma	ad1848.c	/^	short mss_io, irq, dma, dma2;   \/* index into isapnp table *\/$/;"	m	struct:__anon3	file:
dma	ad1848.c	/^static int __initdata dma = -1;$/;"	v	file:
dma	aedsp16.c	/^	int dma;                \/* dma value for DSP I\/O                *\/$/;"	m	struct:aedsp16_info	file:
dma	aedsp16.c	/^static int __initdata dma = -1;$/;"	v	file:
dma	cs4232.c	/^static int __initdata dma	= -1;$/;"	v	file:
dma	dev_table.h	/^	int	dma;		\/* DMA channel *\/$/;"	m	struct:dma_buffparms
dma	jz_i2s.c	/^	audio_dma_type	dma;$/;"	m	struct:__audio_pipe	file:
dma	pas2_card.c	/^static int __initdata dma	= -1;$/;"	v	file:
dma	pss.c	/^	int             dma;$/;"	m	struct:pss_confdata	file:
dma	sb_card.c	/^static int __initdata dma	= -1;$/;"	v	file:
dma	sound_config.h	/^	int dma;$/;"	m	struct:address_info
dma	sscape.c	/^	int	base, irq, dma;$/;"	m	struct:sscape_info	file:
dma	sscape.c	/^static int __initdata dma = -1;$/;"	v	file:
dma	trix.c	/^static int __initdata dma	= -1;$/;"	v	file:
dma	waveartist.c	/^static int __initdata dma = 0;$/;"	v	file:
dma1	ad1848.c	/^	int             dma1, dma2;$/;"	m	struct:__anon1	file:
dma1	jz_ac97.c	/^	int dma1; \/* play *\/$/;"	m	struct:jz_ac97_controller_info	file:
dma1	jz_i2s_4750.c	/^	int dma1;  \/* for play *\/$/;"	m	struct:jz_i2s_controller_info	file:
dma1	jz_i2s_dlv_dma_test.c	/^    int dma1; \/* play *\/$/;"	m	struct:jz_i2s_controller_info	file:
dma1	jz_i2s_for_4750.c	/^	int dma1;  \/* for play *\/$/;"	m	struct:jz_i2s_controller_info	file:
dma1	jz_pcm_tlv320aic1106_dma.c	/^	int dma1; \/* play *\/$/;"	m	struct:jz_pcm_controller_info	file:
dma16	pas2_card.c	/^static int __initdata dma16	= -1;	\/* Set this for modules that need it *\/$/;"	v	file:
dma16	sb.h	/^	   int dma8, dma16;$/;"	m	struct:sb_devc
dma16	sb_card.c	/^static int __initdata dma16	= -1;$/;"	v	file:
dma2	ad1848.c	/^	int             dma1, dma2;$/;"	m	struct:__anon1	file:
dma2	ad1848.c	/^	short mss_io, irq, dma, dma2;   \/* index into isapnp table *\/$/;"	m	struct:__anon3	file:
dma2	ad1848.c	/^static int __initdata dma2 = -1;$/;"	v	file:
dma2	cs4232.c	/^static int __initdata dma2	= -1;$/;"	v	file:
dma2	jz_ac97.c	/^	int dma2; \/* record *\/$/;"	m	struct:jz_ac97_controller_info	file:
dma2	jz_i2s_4750.c	/^	int dma2;  \/* for record *\/$/;"	m	struct:jz_i2s_controller_info	file:
dma2	jz_i2s_dlv_dma_test.c	/^    int dma2; \/* record *\/$/;"	m	struct:jz_i2s_controller_info	file:
dma2	jz_i2s_for_4750.c	/^	int dma2;  \/* for record *\/$/;"	m	struct:jz_i2s_controller_info	file:
dma2	jz_pcm_tlv320aic1106_dma.c	/^	int dma2; \/* record *\/$/;"	m	struct:jz_pcm_controller_info	file:
dma2	sound_config.h	/^	int dma2;$/;"	m	struct:address_info
dma2	trix.c	/^static int __initdata dma2	= -1;	\/* Set this for modules that need it *\/$/;"	v	file:
dma2	waveartist.c	/^static int __initdata dma2 = 0;$/;"	v	file:
dma8	sb.h	/^	   int dma8, dma16;$/;"	m	struct:sb_devc
dma_adc	au1550_ac97.c	/^	} dma_dac, dma_adc;$/;"	m	struct:au1550_state	typeref:struct:au1550_state::dmabuf	file:
dma_adc	swarm_cs4297a.c	/^        serdma_t dma_dac, dma_adc;$/;"	m	struct:cs4297a_state	file:
dma_alloc	dmasound/dmasound.h	/^    void *(*dma_alloc)(unsigned int, gfp_t);$/;"	m	struct:__anon17
dma_alloc_map	soundcard.c	/^static char     dma_alloc_map[MAX_DMA_CHANNELS];$/;"	v	file:
dma_allocated	sscape.c	/^	int	dma_allocated;$/;"	m	struct:sscape_info	file:
dma_bits	pas2_card.c	/^static unsigned char dma_bits[] = {$/;"	v	file:
dma_block	btaudio.c	/^	int dma_block;$/;"	m	struct:btaudio	file:
dma_buf	swarm_cs4297a.c	/^        u64  *dma_buf;           \/\/ buffer for DMA contents (frames)$/;"	m	struct:serdma_s	file:
dma_buf	vidc_fill.S	/^dma_buf:$/;"	l
dma_buf_phys	swarm_cs4297a.c	/^        paddr_t          dma_buf_phys;$/;"	m	struct:serdma_s	file:
dma_buffparms	dev_table.h	/^struct dma_buffparms $/;"	s
dma_buffsize	dmabuf.c	/^static int dma_buffsize = DSP_BUFFSIZE;$/;"	v	file:
dma_bufsize	vidc_fill.S	/^dma_bufsize:$/;"	l
dma_bytes_per_sample	au1550_ac97.c	/^		int		dma_bytes_per_sample;$/;"	m	struct:au1550_state::dmabuf	file:
dma_chan	vwsnd.c	/^typedef struct dma_chan {$/;"	s	file:
dma_chan_desc	vwsnd.c	/^typedef struct dma_chan_desc {$/;"	s	file:
dma_chan_desc_t	vwsnd.c	/^} dma_chan_desc_t;$/;"	t	typeref:struct:dma_chan_desc	file:
dma_chan_t	vwsnd.c	/^} dma_chan_t;$/;"	t	typeref:struct:dma_chan	file:
dma_count	vidc_fill.S	/^dma_count:$/;"	l
dma_count_done	au1550_ac97.c	/^dma_count_done(struct dmabuf *db)$/;"	f	file:
dma_dac	au1550_ac97.c	/^	} dma_dac, dma_adc;$/;"	m	struct:au1550_state	typeref:struct:au1550_state::dmabuf	file:
dma_dac	swarm_cs4297a.c	/^        serdma_t dma_dac, dma_adc;$/;"	m	struct:cs4297a_state	file:
dma_fragsize	au1550_ac97.c	/^		unsigned	dma_fragsize;$/;"	m	struct:au1550_state::dmabuf	file:
dma_free	dmasound/dmasound.h	/^    void (*dma_free)(void *, unsigned int);$/;"	m	struct:__anon17
dma_handle	i810_audio.c	/^		dma_addr_t dma_handle;$/;"	m	struct:i810_state::dmabuf	file:
dma_handle	trident.c	/^		dma_addr_t dma_handle;$/;"	m	struct:trident_state::dmabuf	file:
dma_init	swarm_cs4297a.c	/^static int dma_init(struct cs4297a_state *s)$/;"	f	file:
dma_init_buffers	dmabuf.c	/^static void dma_init_buffers(struct dma_buffparms *dmap)$/;"	f	file:
dma_interrupt	vidc_fill.S	/^dma_interrupt:$/;"	l
dma_ioctl	audio.c	/^static int dma_ioctl(int dev, unsigned int cmd, void __user *arg)$/;"	f	file:
dma_mode	dev_table.h	/^	int      dma_mode;	\/* DMODE_INPUT, DMODE_OUTPUT or DMODE_NONE *\/$/;"	m	struct:dma_buffparms
dma_pbuf	vidc_fill.S	/^dma_pbuf:$/;"	l
dma_qcount	au1550_ac97.c	/^		unsigned	dma_qcount;$/;"	m	struct:au1550_state::dmabuf	file:
dma_reset_input	dmabuf.c	/^static void dma_reset_input(int dev)$/;"	f	file:
dma_reset_output	dmabuf.c	/^static void dma_reset_output(int dev)$/;"	f	file:
dma_set_fragment	audio.c	/^static int dma_set_fragment(int dev, struct dma_buffparms *dmap, int fact)$/;"	f	file:
dma_start	vidc_fill.S	/^dma_start:$/;"	l
dma_subdivide	audio.c	/^static int dma_subdivide(int dev, struct dma_buffparms *dmap, int fact)$/;"	f	file:
dma_wait	hal2.c	/^	wait_queue_head_t dma_wait;$/;"	m	struct:hal2_codec	file:
dmaaddr	swarm_cs4297a.c	/^        dma_addr_t dmaaddr;$/;"	m	struct:serdma_s	file:
dmaaddr_sample_buf	swarm_cs4297a.c	/^	dma_addr_t dmaaddr_sample_buf;$/;"	m	struct:cs4297a_state	file:
dmabuf	au1550_ac97.c	/^	struct dmabuf {$/;"	s	struct:au1550_state	file:
dmabuf	i810_audio.c	/^	struct dmabuf {$/;"	s	struct:i810_state	file:
dmabuf	i810_audio.c	/^	} dmabuf;$/;"	m	struct:i810_state	typeref:struct:i810_state::dmabuf	file:
dmabuf	soundcard.c	/^static int dmabuf;$/;"	v	file:
dmabuf	trident.c	/^	struct dmabuf {$/;"	s	struct:trident_state	file:
dmabuf	trident.c	/^	} dmabuf;$/;"	m	struct:trident_state	typeref:struct:trident_state::dmabuf	file:
dmabuf_mode	trident.c	/^enum dmabuf_mode {$/;"	g	file:
dmabuf_timeout	dmabuf.c	/^static long dmabuf_timeout(struct dma_buffparms *dmap)$/;"	f	file:
dmabug	soundcard.c	/^static int dmabug;$/;"	v	file:
dmanr	au1550_ac97.c	/^		u32		dmanr;$/;"	m	struct:au1550_state::dmabuf	file:
dmap_in	dev_table.h	/^	struct dma_buffparms *dmap_in, *dmap_out;$/;"	m	struct:audio_operations	typeref:struct:audio_operations::dma_buffparms
dmap_out	dev_table.h	/^	struct dma_buffparms *dmap_in, *dmap_out;$/;"	m	struct:audio_operations	typeref:struct:audio_operations::
dmaps	dev_table.h	/^	struct dma_buffparms dmaps[2];$/;"	m	struct:audio_operations	typeref:struct:audio_operations::dma_buffparms
dmasize	au1550_ac97.c	/^		unsigned	dmasize;$/;"	m	struct:au1550_state::dmabuf	file:
dmasize	i810_audio.c	/^		unsigned dmasize;$/;"	m	struct:i810_state::dmabuf	file:
dmasize	trident.c	/^		unsigned dmasize;$/;"	m	struct:trident_state::dmabuf	file:
dmasound	dmasound/dmasound_core.c	/^EXPORT_SYMBOL(dmasound);$/;"	v
dmasound	dmasound/dmasound_core.c	/^struct sound_settings dmasound = { .lock = SPIN_LOCK_UNLOCKED };$/;"	v	typeref:struct:sound_settings
dmasound_alaw2dma8	dmasound/dmasound_core.c	/^EXPORT_SYMBOL(dmasound_alaw2dma8);$/;"	v
dmasound_alaw2dma8	dmasound/dmasound_core.c	/^char dmasound_alaw2dma8[] = {$/;"	v
dmasound_atari_cleanup	dmasound/dmasound_atari.c	/^module_exit(dmasound_atari_cleanup);$/;"	v
dmasound_atari_cleanup	dmasound/dmasound_atari.c	/^static void __exit dmasound_atari_cleanup(void)$/;"	f	file:
dmasound_atari_init	dmasound/dmasound_atari.c	/^module_init(dmasound_atari_init);$/;"	v
dmasound_atari_init	dmasound/dmasound_atari.c	/^static int __init dmasound_atari_init(void)$/;"	f	file:
dmasound_catchRadius	dmasound/dmasound_core.c	/^EXPORT_SYMBOL(dmasound_catchRadius);$/;"	v
dmasound_catchRadius	dmasound/dmasound_core.c	/^int dmasound_catchRadius = 0;$/;"	v
dmasound_deinit	dmasound/dmasound.h	93;"	d
dmasound_deinit	dmasound/dmasound_core.c	/^EXPORT_SYMBOL(dmasound_deinit);$/;"	v
dmasound_deinit	dmasound/dmasound_core.c	/^void dmasound_deinit(void)$/;"	f
dmasound_init	dmasound/dmasound_core.c	/^EXPORT_SYMBOL(dmasound_init);$/;"	v
dmasound_init	dmasound/dmasound_core.c	/^int dmasound_init(void)$/;"	f
dmasound_paula_cleanup	dmasound/dmasound_paula.c	/^module_exit(dmasound_paula_cleanup);$/;"	v
dmasound_paula_cleanup	dmasound/dmasound_paula.c	/^static void __exit dmasound_paula_cleanup(void)$/;"	f	file:
dmasound_paula_init	dmasound/dmasound_paula.c	/^int __init dmasound_paula_init(void)$/;"	f
dmasound_paula_init	dmasound/dmasound_paula.c	/^module_init(dmasound_paula_init);$/;"	v
dmasound_q40_cleanup	dmasound/dmasound_q40.c	/^module_exit(dmasound_q40_cleanup);$/;"	v
dmasound_q40_cleanup	dmasound/dmasound_q40.c	/^static void __exit dmasound_q40_cleanup(void)$/;"	f	file:
dmasound_q40_init	dmasound/dmasound_q40.c	/^int __init dmasound_q40_init(void)$/;"	f
dmasound_q40_init	dmasound/dmasound_q40.c	/^module_init(dmasound_q40_init);$/;"	v
dmasound_set_bass	dmasound/dmasound.h	/^static inline int dmasound_set_bass(int bass)$/;"	f
dmasound_set_gain	dmasound/dmasound.h	/^static inline int dmasound_set_gain(int gain)$/;"	f
dmasound_set_treble	dmasound/dmasound.h	/^static inline int dmasound_set_treble(int treble)$/;"	f
dmasound_set_volume	dmasound/dmasound.h	/^static inline int dmasound_set_volume(int volume)$/;"	f
dmasound_setup	dmasound/dmasound_core.c	/^static int dmasound_setup(char *str)$/;"	f	file:
dmasound_ulaw2dma8	dmasound/dmasound_core.c	/^EXPORT_SYMBOL(dmasound_ulaw2dma8);$/;"	v
dmasound_ulaw2dma8	dmasound/dmasound_core.c	/^char dmasound_ulaw2dma8[] = {$/;"	v
dmasound_write_sq	dmasound/dmasound_core.c	/^EXPORT_SYMBOL(dmasound_write_sq);$/;"	v
dmasound_write_sq	dmasound/dmasound_core.c	/^struct sound_queue dmasound_write_sq;$/;"	v	typeref:struct:sound_queue
do_dma	sscape.c	/^static void do_dma(struct sscape_info *devc, int dma_chan, unsigned long buf, int blk_size, int mode)$/;"	f	file:
do_init_aedsp16	aedsp16.c	/^module_init(do_init_aedsp16);$/;"	v
do_init_aedsp16	aedsp16.c	/^static int __init do_init_aedsp16(void) {$/;"	f	file:
do_inputintr	dmabuf.c	/^static void do_inputintr(int dev)$/;"	f	file:
do_midi_msg	midi_synth.c	/^EXPORT_SYMBOL(do_midi_msg);$/;"	v
do_midi_msg	midi_synth.c	/^do_midi_msg(int synthno, unsigned char *msg, int mlen)$/;"	f
do_outputintr	dmabuf.c	/^static void do_outputintr(int dev, int dummy)$/;"	f	file:
do_sequencer_timer	soundcard.c	/^static void do_sequencer_timer(unsigned long dummy)$/;"	f	file:
download_boot	trix.c	/^static void download_boot(int base)$/;"	f	file:
download_boot_block	pss.c	/^static int download_boot_block(void *dev_info, copr_buffer * buf)$/;"	f	file:
download_boot_block	sscape.c	/^static int download_boot_block(void *dev_info, copr_buffer * buf)$/;"	f	file:
drain_adc	jz_ac97.c	/^static int drain_adc(struct jz_ac97_controller_info *ctrl, int nonblock)$/;"	f	file:
drain_adc	jz_i2s_4750.c	/^static int drain_adc(struct jz_i2s_controller_info *ctrl, int nonblock)$/;"	f	file:
drain_adc	jz_i2s_dlv_dma_test.c	/^static int drain_adc(struct jz_i2s_controller_info *ctrl, int nonblock)$/;"	f	file:
drain_adc	jz_i2s_for_4750.c	/^static int drain_adc(struct jz_i2s_controller_info *ctrl, int nonblock)$/;"	f	file:
drain_adc	jz_pcm_tlv320aic1106_dma.c	/^static int drain_adc(struct jz_pcm_controller_info *ctrl, int nonblock)$/;"	f	file:
drain_adc	swarm_cs4297a.c	/^static int drain_adc(struct cs4297a_state *s, int nonblock)$/;"	f	file:
drain_dac	au1550_ac97.c	/^drain_dac(struct au1550_state *s, int nonblock)$/;"	f	file:
drain_dac	i810_audio.c	/^static int drain_dac(struct i810_state *state, int signals_allowed)$/;"	f	file:
drain_dac	jz_ac97.c	/^static int drain_dac(struct jz_ac97_controller_info *ctrl, int nonblock)$/;"	f	file:
drain_dac	jz_i2s_4750.c	/^static int drain_dac(struct jz_i2s_controller_info *ctrl, int nonblock)$/;"	f	file:
drain_dac	jz_i2s_dlv_dma_test.c	/^static int drain_dac(struct jz_i2s_controller_info *ctrl, int nonblock)$/;"	f	file:
drain_dac	jz_i2s_for_4750.c	/^static int drain_dac(struct jz_i2s_controller_info *ctrl, int nonblock)$/;"	f	file:
drain_dac	jz_pcm_tlv320aic1106_dma.c	/^static int drain_dac(struct jz_pcm_controller_info *ctrl, int nonblock)$/;"	f	file:
drain_dac	swarm_cs4297a.c	/^static int drain_dac(struct cs4297a_state *s, int nonblock)$/;"	f	file:
drain_dac	trident.c	/^drain_dac(struct trident_state *state, int nonblock)$/;"	f	file:
drain_flag	jz_i2s_4750.c	/^static int              drain_flag;$/;"	v	file:
drain_flag	jz_i2s_for_4750.c	/^static int              drain_flag;$/;"	v	file:
drain_midi_queue	midibuf.c	/^static void drain_midi_queue(int dev)$/;"	f	file:
dram	hal2.h	/^	volatile u32 dram;		\/* DRAM Access *\/$/;"	m	struct:hal2_syn_regs
driver_id	dev_table.h	/^	char *driver_id;$/;"	m	struct:driver_info
driver_info	dev_table.h	/^struct driver_info $/;"	s
driver_use_1	sound_config.h	/^	int driver_use_1;	\/* Driver defined field 1 *\/$/;"	m	struct:address_info
driver_use_2	sound_config.h	/^	int driver_use_2;	\/* Driver defined field 2 *\/$/;"	m	struct:address_info
dsp	dmasound/dmasound.h	/^    SETTINGS dsp;	\/* \/dev\/dsp default settings *\/$/;"	m	struct:sound_settings
dsp1	btaudio.c	/^static unsigned int dsp1 = -1;$/;"	v	file:
dsp2	btaudio.c	/^static unsigned int dsp2 = -1;$/;"	v	file:
dsp_analog	btaudio.c	/^	int            dsp_analog;$/;"	m	struct:btaudio	file:
dsp_digital	btaudio.c	/^	int            dsp_digital;$/;"	m	struct:btaudio	file:
dsp_full_reset	msnd_pinnacle.c	/^static int dsp_full_reset(void)$/;"	f	file:
dsp_get_frag_size	msnd_pinnacle.c	/^static int dsp_get_frag_size(void)$/;"	f	file:
dsp_get_vers	sb_common.c	/^static void dsp_get_vers(sb_devc * devc)$/;"	f	file:
dsp_halt	msnd_pinnacle.c	/^static void dsp_halt(struct file *file)$/;"	f	file:
dsp_ioctl	msnd_pinnacle.c	/^static int dsp_ioctl(struct file *file, unsigned int cmd, unsigned long arg)$/;"	f	file:
dsp_minor	msnd.h	/^	int dsp_minor, mixer_minor;$/;"	m	struct:multisound_dev
dsp_open	msnd_pinnacle.c	/^static int dsp_open(struct file *file)$/;"	f	file:
dsp_print_ioc_cmd	jz_i2s.c	/^void dsp_print_ioc_cmd(int cmd)$/;"	f
dsp_read	msnd_pinnacle.c	/^static int dsp_read(char __user *buf, size_t len)$/;"	f	file:
dsp_release	msnd_pinnacle.c	/^static int dsp_release(struct file *file)$/;"	f	file:
dsp_set_format	msnd_pinnacle.c	/^static int dsp_set_format(struct file *file, int val)$/;"	f	file:
dsp_ulaw	ulaw.h	/^static unsigned char dsp_ulaw[] = {$/;"	v
dsp_write	msnd_pinnacle.c	/^static int dsp_write(const char __user *buf, size_t len)$/;"	f	file:
dsp_write_flush	msnd_pinnacle.c	/^static void dsp_write_flush(void)$/;"	f	file:
dspini	msnd_pinnacle.c	/^static char				*dspini, *permini;$/;"	v	file:
dspq_buff_size	msnd.h	/^	int dspq_data_buff, dspq_buff_size;$/;"	m	struct:multisound_dev
dspq_data_buff	msnd.h	/^	int dspq_data_buff, dspq_buff_size;$/;"	m	struct:multisound_dev
dual_dma	ad1848.c	/^	int             dual_dma;	\/* 1, when two DMA channels allocated *\/$/;"	m	struct:__anon1	file:
dump_aic_regs	jz_i2s.c	/^void dump_aic_regs(const char *str)$/;"	f
dump_buf	jz_i2s.c	/^void dump_buf(char *buf, int dump_len, int bytes_in_line)$/;"	f
dump_dlv_regs	jzdlv.c	/^void dump_dlv_regs(const char * str)$/;"	f
dump_dma	jz_i2s.c	/^void dump_dma(unsigned int dmanr, const char *str)$/;"	f
dump_list	jz_i2s.c	/^void dump_list(audio_head *head)$/;"	f
dump_node	jz_i2s.c	/^void dump_node(audio_node *node, const char *str)$/;"	f
dump_pcmc_reg	jz_pcm_tlv320aic1106_dma.c	/^static void dump_pcmc_reg(void)$/;"	f	file:
dump_to_midi	pas2_midi.c	/^static int dump_to_midi(unsigned char midi_byte)$/;"	f	file:
duplex	sb.h	/^	   int duplex;$/;"	m	struct:sb_devc
dx_ac97_registers	trident.h	/^enum dx_ac97_registers {$/;"	g
each_time_init_ak4642en	ak4642en.c	/^void each_time_init_ak4642en(void)$/;"	f
each_time_init_codec	jz_i2s_4750.c	/^void (*each_time_init_codec)(void) = NULL;$/;"	v
each_time_init_codec	jz_i2s_for_4750.c	/^void (*each_time_init_codec)(void) = NULL;$/;"	v
each_time_init_jzcodec	jzcodec.c	/^void each_time_init_jzcodec(void)$/;"	f
eapd_control	ac97_codec.c	/^static int eapd_control(struct ac97_codec * codec, int on)$/;"	f	file:
elements_in_queue	jz_ac97.c	/^static inline int elements_in_queue(struct buffer_queue_s *q)$/;"	f	file:
elements_in_queue	jz_i2s_4750.c	/^static inline int elements_in_queue(struct buffer_queue_s *q)$/;"	f	file:
elements_in_queue	jz_i2s_dlv_dma_test.c	/^static inline int elements_in_queue(struct buffer_queue_s *q)$/;"	f	file:
elements_in_queue	jz_i2s_for_4750.c	/^static inline int elements_in_queue(struct buffer_queue_s *q)$/;"	f	file:
elements_in_queue	jz_pcm_tlv320aic1106_dma.c	/^static inline int elements_in_queue(struct buffer_queue_s *q)$/;"	f	file:
empty	sh_dac_audio.c	/^static int empty;$/;"	v	file:
emulation	dev_table.h	/^	int emulation;$/;"	m	struct:synth_operations
ena	swarm_cs4297a.c	/^	unsigned ena;$/;"	m	struct:cs4297a_state	file:
enable	i810_audio.c	/^		unsigned char fmt, enable, trigger;$/;"	m	struct:i810_state::dmabuf	file:
enable	trident.c	/^		unsigned char fmt, enable;$/;"	m	struct:trident_state::dmabuf	file:
enable_bits	dev_table.h	/^	int enable_bits;$/;"	m	struct:audio_operations
enable_heartbeat	dmasound/dmasound_paula.c	/^static inline void enable_heartbeat(void)$/;"	f	file:
enable_heartbeat	dmasound/dmasound_paula.c	116;"	d	file:
enable_xctrl	cs4232.c	/^static void enable_xctrl(int baseio)$/;"	f	file:
enabled	dev_table.h	/^	int enabled;$/;"	m	struct:card_info
end	jz_i2s.c	/^	unsigned int end;$/;"	m	struct:__anon23	file:
end_read	dev_table.h	/^	int (*end_read) (int dev);$/;"	m	struct:midi_operations
endcleared	swarm_cs4297a.c	/^        unsigned endcleared:1;$/;"	m	struct:serdma_s	file:
endcleared	trident.c	/^		unsigned endcleared:1;$/;"	m	struct:trident_state::dmabuf	file:
endpoint_get_userdata	jz_i2s.c	/^static inline int endpoint_get_userdata(audio_pipe *endpoint, const char __user *buffer, size_t count)$/;"	f	file:
endpoint_put_userdata	jz_i2s.c	/^static inline int endpoint_put_userdata(audio_pipe *endpoint, const char __user *buffer, size_t count)$/;"	f	file:
endpoint_set_filter	jz_i2s.c	/^static inline int endpoint_set_filter(audio_pipe *endpoint, int format, int channels)$/;"	f	file:
enter_4op_mode	opl3.c	/^static void enter_4op_mode(void)$/;"	f	file:
enter_uart_mode	uart401.c	/^static void enter_uart_mode(uart401_devc * devc)$/;"	f	file:
err	au1550_ac97.c	75;"	d	file:
error	au1550_ac97.c	/^		unsigned        error;$/;"	m	struct:au1550_state::dmabuf	file:
error	i810_audio.c	/^		unsigned error;		\/* number of over\/underruns *\/$/;"	m	struct:i810_state::dmabuf	file:
error	jz_ac97.c	/^	unsigned        error;	\/\/ over\/underrun$/;"	m	struct:jz_ac97_controller_info	file:
error	jz_i2s.c	/^	unsigned int	error;	\/* over \/ underrun *\/$/;"	m	struct:jz_i2s_controller_info	file:
error	jz_i2s_4750.c	/^	unsigned        error;	\/* over\/underrun *\/$/;"	m	struct:jz_i2s_controller_info	file:
error	jz_i2s_dlv_dma_test.c	/^    unsigned        error;	\/\/ over\/underrun$/;"	m	struct:jz_i2s_controller_info	file:
error	jz_i2s_for_4750.c	/^	unsigned        error;	\/* over\/underrun *\/$/;"	m	struct:jz_i2s_controller_info	file:
error	jz_pcm_tlv320aic1106_dma.c	/^	unsigned long error;	\/\/ over\/underrun$/;"	m	struct:jz_pcm_controller_info	file:
error	swarm_cs4297a.c	/^        unsigned error;	\/\/ over\/underrun $/;"	m	struct:serdma_s	file:
error	trident.c	/^		unsigned error;	\/* number of over\/underruns *\/$/;"	m	struct:trident_state::dmabuf	file:
es1688_mix	sb_ess.c	/^static mixer_tab es1688_mix = {$/;"	v	file:
es1688later_mix	sb_ess.c	/^static mixer_tab es1688later_mix = {$/;"	v	file:
es1887_mix	sb_ess.c	/^static mixer_tab es1887_mix = {$/;"	v	file:
es688_mix	sb_ess.c	/^static mixer_tab es688_mix = {$/;"	v	file:
es_rec_mix	sb_ess.c	/^static mixer_tab es_rec_mix = {$/;"	v	file:
es_rec_set_recmask	sb_ess.c	/^static int es_rec_set_recmask(sb_devc * devc, int mask)$/;"	f	file:
eso	trident.c	/^	u32 eso; \/* End Sample Offset, wehre dma buffer ends *\/$/;"	m	struct:trident_channel	file:
ess_audio_driver	sb_ess.c	/^static struct audio_driver ess_audio_driver =   \/* ESS ES688\/1688 *\/$/;"	v	typeref:struct:audio_driver	file:
ess_audio_halt_xfer	sb_ess.c	/^static void ess_audio_halt_xfer(int dev)$/;"	f	file:
ess_audio_init	sb_ess.c	/^struct audio_driver *ess_audio_init$/;"	f
ess_audio_output_block	sb_ess.c	/^static void ess_audio_output_block$/;"	f	file:
ess_audio_output_block_audio1	sb_ess.c	/^static void ess_audio_output_block_audio1$/;"	f	file:
ess_audio_output_block_audio2	sb_ess.c	/^static void ess_audio_output_block_audio2$/;"	f	file:
ess_audio_prepare_for_input	sb_ess.c	/^static int ess_audio_prepare_for_input(int dev, int bsize, int bcount)$/;"	f	file:
ess_audio_prepare_for_output	sb_ess.c	/^static int ess_audio_prepare_for_output(int dev, int bsize, int bcount)$/;"	f	file:
ess_audio_prepare_for_output_audio1	sb_ess.c	/^static int ess_audio_prepare_for_output_audio1 (int dev, int bsize, int bcount)$/;"	f	file:
ess_audio_prepare_for_output_audio2	sb_ess.c	/^static int ess_audio_prepare_for_output_audio2 (int dev, int bsize, int bcount)$/;"	f	file:
ess_audio_set_bits	sb_ess.c	/^static unsigned int ess_audio_set_bits(int dev, unsigned int bits)$/;"	f	file:
ess_audio_set_channels	sb_ess.c	/^static short ess_audio_set_channels(int dev, short channels)$/;"	f	file:
ess_audio_set_speed	sb_ess.c	/^static int ess_audio_set_speed(int dev, int speed)$/;"	f	file:
ess_audio_start_input	sb_ess.c	/^static void ess_audio_start_input$/;"	f	file:
ess_audio_trigger	sb_ess.c	/^static void ess_audio_trigger(int dev, int bits)$/;"	f	file:
ess_calc_best_speed	sb_ess.c	/^static int ess_calc_best_speed$/;"	f	file:
ess_calc_div	sb_ess.c	/^static int ess_calc_div (int clock, int revert, int *speedp, int *diffp)$/;"	f	file:
ess_change	sb_ess.c	/^static void ess_change$/;"	f	file:
ess_chgmixer	sb_ess.c	/^static void ess_chgmixer$/;"	f	file:
ess_command	sb_ess.c	/^struct ess_command {short cmd; short data;};$/;"	s	file:
ess_common_set_irq_hw	sb_ess.c	/^static int ess_common_set_irq_hw (sb_devc * devc)$/;"	f	file:
ess_common_speed	sb_ess.c	/^static void ess_common_speed (sb_devc *devc, int *speedp, int *divp)$/;"	f	file:
ess_dsp_init	sb_ess.c	/^int ess_dsp_init (sb_devc *devc, struct address_info *hw_config)$/;"	f
ess_dsp_reset	sb_ess.c	/^int ess_dsp_reset(sb_devc * devc)$/;"	f
ess_es1887_set_irq_hw	sb_ess.c	/^static void ess_es1887_set_irq_hw (sb_devc * devc)$/;"	f	file:
ess_exec_commands	sb_ess.c	/^static void ess_exec_commands$/;"	f	file:
ess_extended	sb_ess.c	/^static void ess_extended (sb_devc * devc)$/;"	f	file:
ess_getmixer	sb_ess.c	/^unsigned int ess_getmixer (sb_devc * devc, unsigned int port)$/;"	f
ess_handle_channel	sb_ess.c	/^static void ess_handle_channel$/;"	f	file:
ess_has_rec_mixer	sb_ess.c	/^static int ess_has_rec_mixer (int submodel)$/;"	f	file:
ess_i08m	sb_ess.c	/^static struct ess_command ess_i08m[] =		\/* input 8 bit mono *\/$/;"	v	typeref:struct:ess_command	file:
ess_i08s	sb_ess.c	/^static struct ess_command ess_i08s[] =		\/* input 8 bit stereo *\/$/;"	v	typeref:struct:ess_command	file:
ess_i16m	sb_ess.c	/^static struct ess_command ess_i16m[] =		\/* input 16 bit mono *\/$/;"	v	typeref:struct:ess_command	file:
ess_i16s	sb_ess.c	/^static struct ess_command ess_i16s[] =		\/* input 16 bit stereo *\/$/;"	v	typeref:struct:ess_command	file:
ess_identify	sb_ess.c	/^static unsigned int ess_identify (sb_devc * devc)$/;"	f	file:
ess_init	sb_ess.c	/^int ess_init(sb_devc * devc, struct address_info *hw_config)$/;"	f
ess_inp_cmds	sb_ess.c	/^static struct ess_command *ess_inp_cmds[] =$/;"	v	typeref:struct:ess_command	file:
ess_intr	sb_ess.c	/^void ess_intr (sb_devc *devc)$/;"	f
ess_irq_bits	sb_ess.c	/^static int ess_irq_bits (int irq)$/;"	f	file:
ess_midi_init	sb_ess.c	/^int ess_midi_init(sb_devc * devc, struct address_info *hw_config)$/;"	f
ess_mixer_init	sb_ess.c	/^void ess_mixer_init (sb_devc * devc)$/;"	f
ess_mixer_mon_regs	sb_ess.c	/^static int ess_mixer_mon_regs[]$/;"	v	file:
ess_mixer_reload	sb_ess.c	/^void ess_mixer_reload (sb_devc *devc, int dev)$/;"	f
ess_mixer_reset	sb_ess.c	/^int ess_mixer_reset (sb_devc * devc)$/;"	f
ess_mixer_set	sb_ess.c	/^int ess_mixer_set(sb_devc *devc, int dev, int left, int right)$/;"	f
ess_o08m	sb_ess.c	/^static struct ess_command ess_o08m[] =		\/* output 8 bit mono *\/$/;"	v	typeref:struct:ess_command	file:
ess_o08s	sb_ess.c	/^static struct ess_command ess_o08s[] =		\/* output 8 bit stereo *\/$/;"	v	typeref:struct:ess_command	file:
ess_o16m	sb_ess.c	/^static struct ess_command ess_o16m[] =		\/* output 16 bit mono *\/$/;"	v	typeref:struct:ess_command	file:
ess_o16s	sb_ess.c	/^static struct ess_command ess_o16s[] =		\/* output 16 bit stereo *\/$/;"	v	typeref:struct:ess_command	file:
ess_out_cmds	sb_ess.c	/^static struct ess_command *ess_out_cmds[] =$/;"	v	typeref:struct:ess_command	file:
ess_probe	sb_ess.c	/^static int ess_probe (sb_devc * devc, int reg, int xorval)$/;"	f	file:
ess_read	sb_ess.c	/^static int ess_read (sb_devc * devc, unsigned char reg)$/;"	f	file:
ess_set_dma_hw	sb_ess.c	/^static int ess_set_dma_hw(sb_devc * devc)$/;"	f	file:
ess_set_input_parms	sb_ess.c	/^static void ess_set_input_parms$/;"	f	file:
ess_set_irq_hw	sb_ess.c	/^static int ess_set_irq_hw (sb_devc * devc)$/;"	f	file:
ess_set_output_parms	sb_ess.c	/^static void ess_set_output_parms$/;"	f	file:
ess_set_recmask	sb_ess.c	/^int ess_set_recmask(sb_devc * devc, int *mask)$/;"	f
ess_setmixer	sb_ess.c	/^void ess_setmixer (sb_devc * devc, unsigned int port, unsigned int value)$/;"	f
ess_show_mixerregs	sb_ess.c	/^static void ess_show_mixerregs (sb_devc *devc)$/;"	f	file:
ess_speed	sb_ess.c	/^static void ess_speed (sb_devc *devc, int audionum)$/;"	f	file:
ess_write	sb_ess.c	/^static int ess_write (sb_devc * devc, unsigned char reg, unsigned char data)$/;"	f	file:
esstype	sb.h	/^	int  esstype;	\/* ESS chip type *\/$/;"	m	struct:sb_module_options
esstype	sb_card.c	/^static int __initdata esstype   = 0; \/* ESS chip type *\/$/;"	v	file:
eval_dsp_msg	msnd_pinnacle.c	/^static __inline__ void eval_dsp_msg(register WORD wMessage)$/;"	f	file:
event	dev_table.h	/^	int (*event)(int dev, unsigned char *ev);$/;"	m	struct:sound_timer_operations
exit_hal2	hal2.c	/^module_exit(exit_hal2);$/;"	v
exit_hal2	hal2.c	/^static void __exit exit_hal2(void)$/;"	f	file:
expand_bal	dmasound/dmasound_atari.c	/^static int expand_bal;	\/* Balance factor for expanding (not volume!) *\/$/;"	v	file:
expand_bal	dmasound/dmasound_q40.c	/^static int expand_bal;	\/* Balance factor for expanding (not volume!) *\/$/;"	v	file:
expand_data	dmasound/dmasound_atari.c	/^static int expand_data;	\/* Data for expanding *\/$/;"	v	file:
expand_data	dmasound/dmasound_q40.c	/^static int expand_data;	\/* Data for expanding *\/$/;"	v	file:
ext_midi_dev	msnd.h	/^	int ext_midi_dev, hdr_midi_dev;$/;"	m	struct:multisound_dev
extended_event	sequencer.c	/^static int extended_event(unsigned char *q)$/;"	f	file:
f_scale_array	jz_ac97.c	/^static unsigned int	*f_scale_array;$/;"	v	file:
f_scale_count	jz_ac97.c	/^static unsigned int	f_scale_count;$/;"	v	file:
f_scale_counts	jz_ac97.c	/^static unsigned int f_scale_counts[8] = {$/;"	v	file:
f_scale_idx	jz_ac97.c	/^static unsigned int	f_scale_idx;$/;"	v	file:
f_scale_reload	jz_ac97.c	/^static unsigned int	*f_scale_reload;$/;"	v	file:
fact	jz_i2s.c	/^	unsigned int fact;$/;"	m	struct:__anon24	file:
failed	sscape.c	/^	int	failed;$/;"	m	struct:sscape_info	file:
fifosize	msnd.h	/^	int fifosize;$/;"	m	struct:multisound_dev
fill_partial_frag	i810_audio.c	/^static inline void fill_partial_frag(struct dmabuf *dmabuf)$/;"	f	file:
filter	jz_i2s.c	/^	int (*filter)(void *buff, int cnt);$/;"	m	struct:__audio_pipe	file:
find_ac97_codec	jz_ac97.c	/^struct ac97_codec * find_ac97_codec(void)$/;"	f
find_output_space	dmabuf.c	/^static int find_output_space(int dev, char **buf, int *size)$/;"	f	file:
find_voice	sequencer.c	/^static int find_voice(int dev, int chn, int note)$/;"	f	file:
finish	jz_ac97.c	/^	int             finish; \/\/ current transfered byte count in DMA buffer $/;"	m	struct:jz_ac97_controller_info	file:
finish	jz_i2s_4750.c	/^	int finish;  \/* current transfered byte count in DMA buffer *\/ $/;"	m	struct:jz_i2s_controller_info	file:
finish	jz_i2s_dlv_dma_test.c	/^    int             finish; \/\/ current transfered byte count in DMA buffer $/;"	m	struct:jz_i2s_controller_info	file:
finish	jz_i2s_for_4750.c	/^	int finish;  \/* current transfered byte count in DMA buffer *\/ $/;"	m	struct:jz_i2s_controller_info	file:
finish	jz_pcm_tlv320aic1106_dma.c	/^	int finish; \/\/ current transfered byte count in DMA buffer $/;"	m	struct:jz_pcm_controller_info	file:
finish_output_interrupt	dmabuf.c	/^static void finish_output_interrupt(int dev, struct dma_buffparms *dmap)$/;"	f	file:
first_record_call	jz_ac97.c	/^static int first_record_call = 0;$/;"	v	file:
first_record_call	jz_i2s_4750.c	/^static int first_record_call = 0;$/;"	v	file:
first_record_call	jz_i2s_dlv_dma_test.c	/^static int first_record_call = 0;$/;"	v	file:
first_record_call	jz_i2s_for_4750.c	/^static int first_record_call = 0;$/;"	v	file:
first_record_call	jz_pcm_tlv320aic1106_dma.c	/^static int first_record_call = 0;$/;"	v	file:
flags	ac97_codec.c	/^	int flags;$/;"	m	struct:__anon13	file:
flags	ad1848.c	/^     unsigned char flags;$/;"	m	struct:__anon2	file:
flags	dev_table.h	/^	int flags;$/;"	m	struct:audio_operations
flags	dev_table.h	/^	unsigned long flags;$/;"	m	struct:dma_buffparms
flags	i810_audio.c	/^	u_int16_t flags;$/;"	m	struct:__anon10	file:
flags	msnd.h	/^	unsigned long flags;$/;"	m	struct:multisound_dev
flags	vwsnd.c	/^	vwsnd_port_flags_t flags;$/;"	m	struct:vwsnd_port	file:
fm_info	opl3.c	/^	struct synth_info fm_info;$/;"	m	struct:opl_devinfo	typeref:struct:opl_devinfo::synth_info	file:
fm_vol	trident.c	/^	u16 fm_vol;$/;"	m	struct:trident_channel	file:
fm_volume_table	opl3.c	/^static char fm_volume_table[128] =$/;"	v	file:
fmt	i810_audio.c	/^		unsigned char fmt, enable, trigger;$/;"	m	struct:i810_state::dmabuf	file:
fmt	swarm_cs4297a.c	/^		unsigned fmt;$/;"	m	struct:cs4297a_state::properties	file:
fmt	trident.c	/^		unsigned char fmt, enable;$/;"	m	struct:trident_state::dmabuf	file:
fmt_flag	trident.c	/^	unsigned long fmt_flag;$/;"	m	struct:trident_state	file:
fmt_original	swarm_cs4297a.c	/^		unsigned fmt_original;	\/\/ original requested format$/;"	m	struct:cs4297a_state::properties	file:
for_driver_use	dev_table.h	/^	void *for_driver_use;$/;"	m	struct:card_info
force_recsrc	msnd_pinnacle.c	/^static unsigned long force_recsrc(unsigned long recsrc)$/;"	f	file:
format	dmasound/dmasound.h	/^    int format;		\/* AFMT_* *\/$/;"	m	struct:__anon16
format	hal2.c	/^	unsigned int format;		\/* Audio data format *\/$/;"	m	struct:hal2_codec	file:
format_bits	ad1848.c	/^	unsigned char   format_bits;$/;"	m	struct:ad1848_port_info	file:
format_mask	dev_table.h	/^	int  format_mask;	\/* Bitmask for supported audio formats *\/$/;"	m	struct:audio_operations
frag_count	vwsnd.c	/^	int		frag_count;$/;"	m	struct:vwsnd_port	file:
frag_number	via82cxxx_audio.c	/^	unsigned int frag_number;$/;"	m	struct:via_channel	file:
frag_size	via82cxxx_audio.c	/^	unsigned int frag_size;$/;"	m	struct:via_channel	file:
fragment_size	dev_table.h	/^	int      fragment_size;$/;"	m	struct:dma_buffparms
fragsamples	i810_audio.c	/^		unsigned fragsamples;$/;"	m	struct:i810_state::dmabuf	file:
fragsamples	swarm_cs4297a.c	/^        unsigned fragsamples;$/;"	m	struct:serdma_s	file:
fragsamples	trident.c	/^		unsigned fragsamples;$/;"	m	struct:trident_state::dmabuf	file:
fragshift	au1550_ac97.c	/^		unsigned        fragshift;$/;"	m	struct:au1550_state::dmabuf	file:
fragshift	i810_audio.c	/^		unsigned fragshift;$/;"	m	struct:i810_state::dmabuf	file:
fragshift	swarm_cs4297a.c	/^        unsigned fragshift;	\/\/ Log base 2 of fragment size.$/;"	m	struct:serdma_s	file:
fragshift	trident.c	/^		unsigned fragshift;$/;"	m	struct:trident_state::dmabuf	file:
fragsize	au1550_ac97.c	/^		unsigned	fragsize;$/;"	m	struct:au1550_state::dmabuf	file:
fragsize	i810_audio.c	/^		unsigned fragsize;$/;"	m	struct:i810_state::dmabuf	file:
fragsize	jz_i2s.c	/^	int	fragsize;$/;"	m	struct:__audio_pipe	file:
fragsize	swarm_cs4297a.c	/^        unsigned fragsize;	\/\/ 2**fragshift..$/;"	m	struct:serdma_s	file:
fragsize	trident.c	/^		unsigned fragsize;$/;"	m	struct:trident_state::dmabuf	file:
fragstotal	jz_i2s.c	/^	int 	fragstotal;$/;"	m	struct:__audio_pipe	file:
frame_size	vwsnd.c	/^	int		frame_size;$/;"	m	struct:vwsnd_port	file:
free	jz_i2s.c	/^	struct list_head free;$/;"	m	struct:__anon24	typeref:struct:__anon24::list_head	file:
free_buffer	btaudio.c	/^static void free_buffer(struct btaudio *bta)$/;"	f	file:
free_pcm_channel	i810_audio.c	/^	void (*free_pcm_channel)(struct i810_card *, int chan);$/;"	m	struct:i810_card	file:
free_pcm_channel	trident.c	/^	void (*free_pcm_channel) (struct trident_card *, unsigned int chan);$/;"	m	struct:trident_card	file:
freq_to_fnum	opl3.c	/^static void freq_to_fnum    (int freq, int *block, int *fnum)$/;"	f	file:
front	dmasound/dmasound.h	/^    int front, rear, count;$/;"	m	struct:sound_queue
ftsodell	i810_audio.c	/^static int ftsodell;$/;"	v	file:
fullduplex	sb.h	/^	   int fullduplex;$/;"	m	struct:sb_devc
function	ad1848.c	/^			vendor, function;$/;"	m	struct:__anon3	file:
fw_load	pss.c	/^static int fw_load = 0;$/;"	v	file:
fw_load	trix.c	/^static int fw_load;$/;"	v	file:
gain	btaudio.c	/^	int gain[3];$/;"	m	struct:btaudio	file:
gain	dmasound/dmasound.h	/^    int gain;$/;"	m	struct:sound_settings
gain_down_end	jz_i2s_4750.c	/^static unsigned long    gain_down_end;$/;"	v	file:
gain_down_end	jz_i2s_dlv_dma_test.c	/^static unsigned long    gain_down_end;$/;"	v	file:
gain_down_end	jz_i2s_for_4750.c	/^static unsigned long    gain_down_end;$/;"	v	file:
gain_down_start	jz_i2s_4750.c	/^static unsigned long    gain_down_start;$/;"	v	file:
gain_down_start	jz_i2s_dlv_dma_test.c	/^static unsigned long    gain_down_start;$/;"	v	file:
gain_down_start	jz_i2s_for_4750.c	/^static unsigned long    gain_down_start;$/;"	v	file:
gain_up_end	jz_i2s_4750.c	/^static unsigned long    gain_up_end;$/;"	v	file:
gain_up_end	jz_i2s_dlv_dma_test.c	/^static unsigned long    gain_up_end;$/;"	v	file:
gain_up_end	jz_i2s_for_4750.c	/^static unsigned long    gain_up_end;$/;"	v	file:
gain_up_start	jz_i2s_4750.c	/^static unsigned long    gain_up_start;$/;"	v	file:
gain_up_start	jz_i2s_dlv_dma_test.c	/^static unsigned long    gain_up_start;$/;"	v	file:
gain_up_start	jz_i2s_for_4750.c	/^static unsigned long    gain_up_start;$/;"	v	file:
gameport	trident.c	/^	struct gameport *gameport;$/;"	m	struct:trident_card	typeref:struct:trident_card::gameport	file:
generic_digital_control	ac97_codec.c	/^static int generic_digital_control(struct ac97_codec *codec, int slots, int rate, int mode)$/;"	f	file:
get_afmt_string	dmasound/dmasound_core.c	/^EXPORT_SYMBOL(get_afmt_string) ;$/;"	v
get_afmt_string	dmasound/dmasound_core.c	/^char *get_afmt_string(int afmt)$/;"	f
get_audio_freenode	jz_i2s.c	/^static inline audio_node *get_audio_freenode(unsigned int *mem)$/;"	f	file:
get_audio_freenodecount	jz_i2s.c	/^static inline int get_audio_freenodecount(unsigned int *mem)$/;"	f	file:
get_audio_usenode	jz_i2s.c	/^static inline audio_node *get_audio_usenode(unsigned int *mem)$/;"	f	file:
get_buffer_id	jz_ac97.c	/^static inline int get_buffer_id(struct buffer_queue_s *q)$/;"	f	file:
get_buffer_id	jz_i2s_4750.c	/^static inline int get_buffer_id(struct buffer_queue_s *q)$/;"	f	file:
get_buffer_id	jz_i2s_dlv_dma_test.c	/^static inline int get_buffer_id(struct buffer_queue_s *q)$/;"	f	file:
get_buffer_id	jz_i2s_for_4750.c	/^static inline int get_buffer_id(struct buffer_queue_s *q)$/;"	f	file:
get_buffer_id	jz_pcm_tlv320aic1106_dma.c	/^static inline int get_buffer_id(struct buffer_queue_s *q)$/;"	f	file:
get_mixer	waveartist.c	/^	int		(*get_mixer)(wavnc_info *, int);$/;"	m	struct:waveartist_mixer_info	file:
get_mixer_info	soundcard.c	/^static int get_mixer_info(int dev, void __user *arg)$/;"	f	file:
get_mixer_levels	soundcard.c	/^static int get_mixer_levels(void __user * arg)$/;"	f	file:
get_old_mixer_info	soundcard.c	/^static int get_old_mixer_info(int dev, void __user *arg)$/;"	f	file:
get_play_delay_jiffies	msnd_pinnacle.c	77;"	d	file:
get_rec_delay_jiffies	msnd_pinnacle.c	82;"	d	file:
get_time	dev_table.h	/^	unsigned long (*get_time)(int dev);$/;"	m	struct:sound_timer_operations
global_control_bits	trident.h	/^enum global_control_bits {$/;"	g
global_regs	trident.c	/^	unsigned long global_regs[ALI_GLOBAL_REGS];$/;"	m	struct:ali_saved_registers	file:
go	dev_table.h	/^	int go;$/;"	m	struct:audio_operations
hal2_adc_interrupt	hal2.c	/^static void hal2_adc_interrupt(struct hal2_codec *adc)$/;"	f	file:
hal2_add_buffer	hal2.c	/^static int hal2_add_buffer(struct hal2_card *hal2, char *buffer, int count)$/;"	f	file:
hal2_aes_regs	hal2.h	/^struct hal2_aes_regs {$/;"	s
hal2_alloc_adc_dmabuf	hal2.c	/^static int hal2_alloc_adc_dmabuf(struct hal2_codec *codec)$/;"	f	file:
hal2_alloc_dac_dmabuf	hal2.c	/^static int hal2_alloc_dac_dmabuf(struct hal2_codec *codec)$/;"	f	file:
hal2_alloc_dmabuf	hal2.c	/^static int hal2_alloc_dmabuf(struct hal2_codec *codec, int size,$/;"	f	file:
hal2_audio_fops	hal2.c	/^static const struct file_operations hal2_audio_fops = {$/;"	v	typeref:struct:file_operations	file:
hal2_card	hal2.c	/^static struct hal2_card* hal2_card[MAXCARDS];$/;"	v	typeref:struct:hal2_card	file:
hal2_card	hal2.c	/^struct hal2_card {$/;"	s	file:
hal2_codec	hal2.c	/^struct hal2_codec {$/;"	s	file:
hal2_compute_rate	hal2.c	/^static int hal2_compute_rate(struct hal2_codec *codec, unsigned int rate)$/;"	f	file:
hal2_ctl_regs	hal2.h	/^struct hal2_ctl_regs {$/;"	s
hal2_dac_interrupt	hal2.c	/^static void hal2_dac_interrupt(struct hal2_codec *dac)$/;"	f	file:
hal2_desc	hal2.c	/^struct hal2_desc {$/;"	s	file:
hal2_desc_addr	hal2.c	/^static dma_addr_t hal2_desc_addr(struct hal2_codec *codec, int i)$/;"	f	file:
hal2_detect	hal2.c	/^static int hal2_detect(struct hal2_card *hal2)$/;"	f	file:
hal2_dsp_find_card	hal2.c	/^static struct hal2_card* hal2_dsp_find_card(int minor)$/;"	f	file:
hal2_dump_regs	hal2.c	/^static void hal2_dump_regs(struct hal2_card *hal2)$/;"	f	file:
hal2_free_adc_dmabuf	hal2.c	/^static void hal2_free_adc_dmabuf(struct hal2_codec *codec)$/;"	f	file:
hal2_free_dac_dmabuf	hal2.c	/^static void hal2_free_dac_dmabuf(struct hal2_codec *codec)$/;"	f	file:
hal2_free_dmabuf	hal2.c	/^static void hal2_free_dmabuf(struct hal2_codec *codec, int size, int dir)$/;"	f	file:
hal2_get_buffer	hal2.c	/^static int hal2_get_buffer(struct hal2_card *hal2, char *buffer, int count)$/;"	f	file:
hal2_i_clearbit16	hal2.c	/^static void hal2_i_clearbit16(struct hal2_card *hal2, u16 addr, u16 bit)$/;"	f	file:
hal2_i_look16	hal2.c	/^static u16 hal2_i_look16(struct hal2_card *hal2, u16 addr)$/;"	f	file:
hal2_i_look32	hal2.c	/^static u32 hal2_i_look32(struct hal2_card *hal2, u16 addr)$/;"	f	file:
hal2_i_setbit16	hal2.c	/^static void hal2_i_setbit16(struct hal2_card *hal2, u16 addr, u16 bit)$/;"	f	file:
hal2_i_setbit32	hal2.c	/^static void hal2_i_setbit32(struct hal2_card *hal2, u16 addr, u32 bit)$/;"	f	file:
hal2_i_write16	hal2.c	/^static void hal2_i_write16(struct hal2_card *hal2, u16 addr, u16 val)$/;"	f	file:
hal2_i_write32	hal2.c	/^static void hal2_i_write32(struct hal2_card *hal2, u16 addr, u32 val)$/;"	f	file:
hal2_inc_head	hal2.c	/^static void hal2_inc_head(struct hal2_codec *codec)$/;"	f	file:
hal2_inc_tail	hal2.c	/^static void hal2_inc_tail(struct hal2_codec *codec)$/;"	f	file:
hal2_init_card	hal2.c	/^static int hal2_init_card(struct hal2_card **phal2, struct hpc3_regs *hpc3)$/;"	f	file:
hal2_init_codec	hal2.c	/^static void hal2_init_codec(struct hal2_codec *codec, struct hpc3_regs *hpc3,$/;"	f	file:
hal2_init_mixer	hal2.c	/^static void hal2_init_mixer(struct hal2_card *hal2)$/;"	f	file:
hal2_interrupt	hal2.c	/^static irqreturn_t hal2_interrupt(int irq, void *dev_id)$/;"	f	file:
hal2_ioctl	hal2.c	/^static int hal2_ioctl(struct inode *inode, struct file *file, $/;"	f	file:
hal2_ioctl_mixdev	hal2.c	/^static int hal2_ioctl_mixdev(struct inode *inode, struct file *file,$/;"	f	file:
hal2_isr_look	hal2.c	/^static inline u16 hal2_isr_look(struct hal2_card *hal2)$/;"	f	file:
hal2_isr_write	hal2.c	/^static inline void hal2_isr_write(struct hal2_card *hal2, u16 val)$/;"	f	file:
hal2_mixer	hal2.c	/^struct hal2_mixer {$/;"	s	file:
hal2_mixer_find_card	hal2.c	/^static struct hal2_card* hal2_mixer_find_card(int minor)$/;"	f	file:
hal2_mixer_fops	hal2.c	/^static const struct file_operations hal2_mixer_fops = {$/;"	v	typeref:struct:file_operations	file:
hal2_mixer_ioctl	hal2.c	/^static int hal2_mixer_ioctl(struct hal2_card *hal2, unsigned int cmd,$/;"	f	file:
hal2_open	hal2.c	/^static int hal2_open(struct inode *inode, struct file *file)$/;"	f	file:
hal2_open_mixdev	hal2.c	/^static int hal2_open_mixdev(struct inode *inode, struct file *file)$/;"	f	file:
hal2_pbus	hal2.c	/^struct hal2_pbus {$/;"	s	file:
hal2_poll	hal2.c	/^static unsigned int hal2_poll(struct file *file, struct poll_table_struct *wait)$/;"	f	file:
hal2_read	hal2.c	/^static ssize_t hal2_read(struct file *file, char *buffer,$/;"	f	file:
hal2_release	hal2.c	/^static int hal2_release(struct inode *inode, struct file *file)$/;"	f	file:
hal2_release_mixdev	hal2.c	/^static int hal2_release_mixdev(struct inode *inode, struct file *file)$/;"	f	file:
hal2_reset_adc_pointer	hal2.c	722;"	d	file:
hal2_reset_dac_pointer	hal2.c	721;"	d	file:
hal2_reset_pointer	hal2.c	/^static void hal2_reset_pointer(struct hal2_card *hal2, int is_dac)$/;"	f	file:
hal2_rev_look	hal2.c	/^static inline u16 hal2_rev_look(struct hal2_card *hal2)$/;"	f	file:
hal2_set_adc_rate	hal2.c	/^static void hal2_set_adc_rate(struct hal2_card *hal2)$/;"	f	file:
hal2_set_dac_rate	hal2.c	/^static void hal2_set_dac_rate(struct hal2_card *hal2)$/;"	f	file:
hal2_setup_adc	hal2.c	/^static void hal2_setup_adc(struct hal2_card *hal2)$/;"	f	file:
hal2_setup_dac	hal2.c	/^static void hal2_setup_dac(struct hal2_card *hal2)$/;"	f	file:
hal2_start_adc	hal2.c	/^static void hal2_start_adc(struct hal2_card *hal2)$/;"	f	file:
hal2_start_dac	hal2.c	/^static void hal2_start_dac(struct hal2_card *hal2)$/;"	f	file:
hal2_stop_adc	hal2.c	/^static inline void hal2_stop_adc(struct hal2_card *hal2)$/;"	f	file:
hal2_stop_dac	hal2.c	/^static inline void hal2_stop_dac(struct hal2_card *hal2)$/;"	f	file:
hal2_syn_regs	hal2.h	/^struct hal2_syn_regs {$/;"	s
hal2_sync_dac	hal2.c	/^static int hal2_sync_dac(struct hal2_card *hal2)$/;"	f	file:
hal2_vol_regs	hal2.h	/^struct hal2_vol_regs {$/;"	s
hal2_volume_control	hal2.c	/^static void hal2_volume_control(int direction)$/;"	f	file:
hal2_write	hal2.c	/^static ssize_t hal2_write(struct file *file, const char *buffer,$/;"	f	file:
hal2_write_mixer	hal2.c	/^static int hal2_write_mixer(struct hal2_card *hal2, int index, int vol)$/;"	f	file:
hal2str	hal2.c	/^static char *hal2str = "HAL2";$/;"	v	file:
halt_input	dev_table.h	/^	void (*halt_input) (int dev);$/;"	m	struct:audio_driver
halt_io	dev_table.h	/^	void (*halt_io) (int dev);$/;"	m	struct:audio_driver
halt_output	dev_table.h	/^	void (*halt_output) (int dev);$/;"	m	struct:audio_driver
handle	jz_i2s.c	/^	void (*handle)(struct __audio_pipe *endpoint);$/;"	m	struct:__audio_pipe	file:
handle	via82cxxx_audio.c	/^	dma_addr_t handle;$/;"	m	struct:via_buffer_pgtbl	file:
handle_in_endpoint_work	jz_i2s.c	/^static void handle_in_endpoint_work(audio_pipe *endpoint)$/;"	f	file:
handle_out_endpoint_work	jz_i2s.c	/^static void handle_out_endpoint_work(audio_pipe *endpoint)$/;"	f	file:
handset_detect	waveartist.c	/^	unsigned int	handset_detect	:1;$/;"	m	struct:__anon11	file:
hard	dmasound/dmasound.h	/^    SETTINGS hard;	\/* hardware settings *\/$/;"	m	struct:sound_settings
hardware_afmts	dmasound/dmasound.h	/^    int hardware_afmts ;		\/* OSS says we only return h'ware info *\/$/;"	m	struct:__anon17
hdr_midi_dev	msnd.h	/^	int ext_midi_dev, hdr_midi_dev;$/;"	m	struct:multisound_dev
head	hal2.c	/^	int tail, head;			\/* tail index, head index *\/$/;"	m	struct:hal2_codec	file:
head	midibuf.c	/^	int len, head, tail;$/;"	m	struct:midi_buf	file:
head	msnd.h	/^	int head, tail;$/;"	m	struct:__anon5
host_close	sscape.c	/^static void host_close(struct sscape_info *devc)$/;"	f	file:
host_command2	sscape.c	/^static int host_command2(struct sscape_info *devc, int cmd, int parm1)$/;"	f	file:
host_command3	sscape.c	/^static int host_command3(struct sscape_info *devc, int cmd, int parm1, int parm2)$/;"	f	file:
host_open	sscape.c	/^static void host_open(struct sscape_info *devc)$/;"	f	file:
host_read	sscape.c	/^static int host_read(struct sscape_info *devc)$/;"	f	file:
host_write	sscape.c	/^static int host_write(struct sscape_info *devc, unsigned char *data, int count)$/;"	f	file:
hostprogs-y	Makefile	/^hostprogs-y	:= bin2hex hex2hex$/;"	m
hpvol	jz_i2s_4750.c	/^	int hpvol;$/;"	m	struct:hpvol_shift_s	file:
hpvol	jz_i2s_dlv_dma_test.c	/^	int hpvol;$/;"	m	struct:hpvol_shift_s	file:
hpvol	jz_i2s_for_4750.c	/^	int hpvol;$/;"	m	struct:hpvol_shift_s	file:
hpvol	jzcodec.c	/^	int hpvol;$/;"	m	struct:hpvol_shift_s	file:
hpvol_shift_s	jz_i2s_4750.c	/^typedef struct hpvol_shift_s$/;"	s	file:
hpvol_shift_s	jz_i2s_dlv_dma_test.c	/^typedef struct hpvol_shift_s$/;"	s	file:
hpvol_shift_s	jz_i2s_for_4750.c	/^typedef struct hpvol_shift_s$/;"	s	file:
hpvol_shift_s	jzcodec.c	/^typedef struct hpvol_shift_s$/;"	s	file:
hpvol_shift_t	jz_i2s_4750.c	/^} hpvol_shift_t;$/;"	t	typeref:struct:hpvol_shift_s	file:
hpvol_shift_t	jz_i2s_dlv_dma_test.c	/^} hpvol_shift_t;$/;"	t	typeref:struct:hpvol_shift_s	file:
hpvol_shift_t	jz_i2s_for_4750.c	/^} hpvol_shift_t;$/;"	t	typeref:struct:hpvol_shift_s	file:
hpvol_shift_t	jzcodec.c	/^} hpvol_shift_t;$/;"	t	typeref:struct:hpvol_shift_s	file:
hpvol_shift_table	jz_i2s_4750.c	/^hpvol_shift_t hpvol_shift_table[72];$/;"	v
hpvol_shift_table	jz_i2s_for_4750.c	/^hpvol_shift_t hpvol_shift_table[72];$/;"	v
hw	waveartist.c	/^	struct address_info  hw;	\/* hardware *\/$/;"	m	struct:__anon11	typeref:struct:__anon11::address_info	file:
hw_control	dev_table.h	/^	void (*hw_control) (int dev, unsigned char *event);$/;"	m	struct:synth_operations
hw_fragcount	vwsnd.c	/^	unsigned int	hw_fragcount;$/;"	m	struct:vwsnd_port	file:
hw_fragshift	vwsnd.c	/^	unsigned int	hw_fragshift;$/;"	m	struct:vwsnd_port	file:
hw_fragsize	vwsnd.c	/^	unsigned int	hw_fragsize;$/;"	m	struct:vwsnd_port	file:
hw_ptr	via82cxxx_audio.c	/^	atomic_t hw_ptr;$/;"	m	struct:via_channel	file:
hw_timebase	mpu401.c	/^static volatile int curr_tempo, curr_timebase, hw_timebase;$/;"	v	file:
hwbuf	vwsnd.c	/^	void *		hwbuf;		\/* hwbuf == hwbuf_vaddr *\/$/;"	m	struct:vwsnd_port	file:
hwbuf_max	vwsnd.c	/^	int		hwbuf_max;	\/* max bytes to preload *\/$/;"	m	struct:vwsnd_port	file:
hwbuf_paddr	vwsnd.c	/^	unsigned long	hwbuf_paddr;$/;"	m	struct:vwsnd_port	file:
hwbuf_size	vwsnd.c	/^	int		hwbuf_size;$/;"	m	struct:vwsnd_port	file:
hwbuf_vaddr	vwsnd.c	/^	unsigned long	hwbuf_vaddr;$/;"	m	struct:vwsnd_port	file:
hwptr	i810_audio.c	/^		unsigned hwptr;		\/* where dma last started, updated by update_ptr *\/$/;"	m	struct:i810_state::dmabuf	file:
hwptr	swarm_cs4297a.c	/^        unsigned hwptr, swptr;$/;"	m	struct:serdma_s	file:
hwptr	trident.c	/^		unsigned hwptr;	\/* where dma last started, updated by update_ptr *\/$/;"	m	struct:trident_state::dmabuf	file:
hwptrreg	vwsnd.c	/^	int hwptrreg;$/;"	m	struct:dma_chan_desc	file:
hwstate	vwsnd.c	/^	vwsnd_port_hwstate_t hwstate;$/;"	m	struct:vwsnd_port	file:
hwvolctl	trident.c	/^	int hwvolctl;$/;"	m	struct:trident_card	file:
i2c_addr	ak4642en.c	/^static unsigned int i2c_addr = 0x26; \/\/AK4642EN device address at I2C bus$/;"	v	file:
i2c_clk	ak4642en.c	/^static unsigned int i2c_clk = 100000;\/\/AK4642EN 400kHz max,but 100kHz here$/;"	v	file:
i2s_clk	jz_i2s_4750.c	/^unsigned long i2s_clk;$/;"	v
i2s_clk	jz_i2s_for_4750.c	/^unsigned long i2s_clk;$/;"	v
i2s_codec	jz_i2s.c	/^	struct i2s_codec *i2s_codec;$/;"	m	struct:jz_i2s_controller_info	typeref:struct:jz_i2s_controller_info::i2s_codec	file:
i2s_codec	jz_i2s.c	/^struct i2s_codec$/;"	s	file:
i2s_codec	jz_i2s_4750.c	/^	struct i2s_codec *i2s_codec[NR_I2S];$/;"	m	struct:jz_i2s_controller_info	typeref:struct:jz_i2s_controller_info::i2s_codec	file:
i2s_codec	jz_i2s_4750.c	/^struct i2s_codec $/;"	s	file:
i2s_codec	jz_i2s_dlv_dma_test.c	/^    struct i2s_codec *i2s_codec[NR_I2S];$/;"	m	struct:jz_i2s_controller_info	typeref:struct:jz_i2s_controller_info::i2s_codec	file:
i2s_codec	jz_i2s_dlv_dma_test.c	/^struct i2s_codec $/;"	s	file:
i2s_codec	jz_i2s_for_4750.c	/^	struct i2s_codec *i2s_codec[NR_I2S];$/;"	m	struct:jz_i2s_controller_info	typeref:struct:jz_i2s_controller_info::i2s_codec	file:
i2s_codec	jz_i2s_for_4750.c	/^struct i2s_codec $/;"	s	file:
i2s_codec_write	ak4642en.c	/^static void i2s_codec_write(u8 reg, u16 data)$/;"	f	file:
i2s_controller	jz_i2s_4750.c	/^static struct jz_i2s_controller_info *i2s_controller = NULL;$/;"	v	typeref:struct:jz_i2s_controller_info	file:
i2s_controller	jz_i2s_dlv_dma_test.c	/^static struct jz_i2s_controller_info *i2s_controller = NULL;$/;"	v	typeref:struct:jz_i2s_controller_info	file:
i2s_controller	jz_i2s_for_4750.c	/^static struct jz_i2s_controller_info *i2s_controller = NULL;$/;"	v	typeref:struct:jz_i2s_controller_info	file:
i2s_controller_init	jz_i2s.c	/^void i2s_controller_init(void)$/;"	f
i2s_mixer_ioctl	jz_i2s_4750.c	/^static int i2s_mixer_ioctl(struct i2s_codec *codec, unsigned int cmd, unsigned long arg)$/;"	f	file:
i2s_mixer_ioctl	jz_i2s_dlv_dma_test.c	/^static int i2s_mixer_ioctl(struct i2s_codec *codec, unsigned int cmd, unsigned long arg)$/;"	f	file:
i2s_mixer_ioctl	jz_i2s_for_4750.c	/^static int i2s_mixer_ioctl(struct i2s_codec *codec, unsigned int cmd, unsigned long arg)$/;"	f	file:
i2s_probe_codec	jz_i2s.c	/^int i2s_probe_codec(struct i2s_codec *codec)$/;"	f
i2s_probe_codec	jz_i2s_4750.c	/^int i2s_probe_codec(struct i2s_codec *codec)$/;"	f
i2s_probe_codec	jz_i2s_dlv_dma_test.c	/^int i2s_probe_codec(struct i2s_codec *codec)$/;"	f
i2s_probe_codec	jz_i2s_for_4750.c	/^int i2s_probe_codec(struct i2s_codec *codec)$/;"	f
i2s_read_proc	jz_i2s_4750.c	/^int i2s_read_proc (char *page, char **start, off_t off, int count, int *eof, void *data)$/;"	f
i2s_read_proc	jz_i2s_dlv_dma_test.c	/^int i2s_read_proc (char *page, char **start, off_t off, int count, int *eof, void *data)$/;"	f
i2s_read_proc	jz_i2s_for_4750.c	/^int i2s_read_proc (char *page, char **start, off_t off, int count, int *eof, void *data)$/;"	f
i2s_resume_codec	jz_i2s_4750.c	/^void (*i2s_resume_codec)(void) = NULL;$/;"	v
i2s_resume_codec	jz_i2s_for_4750.c	/^void (*i2s_resume_codec)(void) = NULL;$/;"	v
i2s_sem	jz_i2s.c	/^	struct semaphore i2s_sem;$/;"	m	struct:i2s_codec	typeref:struct:i2s_codec::semaphore	file:
i2s_suspend_codec	jz_i2s_4750.c	/^void (*i2s_suspend_codec)(int wr,int rd) = NULL;$/;"	v
i2s_suspend_codec	jz_i2s_for_4750.c	/^void (*i2s_suspend_codec)(int wr,int rd) = NULL;$/;"	v
i810_ac97_enable_variable_rate	i810_audio.c	/^static inline int i810_ac97_enable_variable_rate(struct ac97_codec *codec)$/;"	f	file:
i810_ac97_exists	i810_audio.c	/^static inline int i810_ac97_exists(struct i810_card *card, int ac97_number)$/;"	f	file:
i810_ac97_get	i810_audio.c	/^static u16 i810_ac97_get(struct ac97_codec *dev, u8 reg)$/;"	f	file:
i810_ac97_get_io	i810_audio.c	/^static u16 i810_ac97_get_io(struct ac97_codec *dev, u8 reg)$/;"	f	file:
i810_ac97_get_mmio	i810_audio.c	/^static u16 i810_ac97_get_mmio(struct ac97_codec *dev, u8 reg)$/;"	f	file:
i810_ac97_init	i810_audio.c	/^static int __devinit i810_ac97_init(struct i810_card *card)$/;"	f	file:
i810_ac97_power_up_bus	i810_audio.c	/^static int i810_ac97_power_up_bus(struct i810_card *card)$/;"	f	file:
i810_ac97_probe_and_powerup	i810_audio.c	/^static int i810_ac97_probe_and_powerup(struct i810_card *card,struct ac97_codec *codec)$/;"	f	file:
i810_ac97_set	i810_audio.c	/^static void i810_ac97_set(struct ac97_codec *dev, u8 reg, u16 data)$/;"	f	file:
i810_ac97_set_io	i810_audio.c	/^static void i810_ac97_set_io(struct ac97_codec *dev, u8 reg, u16 data)$/;"	f	file:
i810_ac97_set_mmio	i810_audio.c	/^static void i810_ac97_set_mmio(struct ac97_codec *dev, u8 reg, u16 data)$/;"	f	file:
i810_alloc_pcm_channel	i810_audio.c	/^static struct i810_channel *i810_alloc_pcm_channel(struct i810_card *card)$/;"	f	file:
i810_alloc_rec_mic_channel	i810_audio.c	/^static struct i810_channel *i810_alloc_rec_mic_channel(struct i810_card *card)$/;"	f	file:
i810_alloc_rec_pcm_channel	i810_audio.c	/^static struct i810_channel *i810_alloc_rec_pcm_channel(struct i810_card *card)$/;"	f	file:
i810_audio_fops	i810_audio.c	/^static \/*const*\/ struct file_operations i810_audio_fops = {$/;"	v	typeref:struct:file_operations	file:
i810_card	i810_audio.c	/^struct i810_card {$/;"	s	file:
i810_channel	i810_audio.c	/^struct i810_channel $/;"	s	file:
i810_channel_interrupt	i810_audio.c	/^static void i810_channel_interrupt(struct i810_card *card)$/;"	f	file:
i810_cleanup_module	i810_audio.c	/^module_exit(i810_cleanup_module);$/;"	v
i810_cleanup_module	i810_audio.c	/^static void __exit i810_cleanup_module (void)$/;"	f	file:
i810_configure_clocking	i810_audio.c	/^static void __devinit i810_configure_clocking (void)$/;"	f	file:
i810_free_pcm_channel	i810_audio.c	/^static void i810_free_pcm_channel(struct i810_card *card, int channel)$/;"	f	file:
i810_get_available_read_data	i810_audio.c	/^static inline int i810_get_available_read_data(struct i810_state *state)$/;"	f	file:
i810_get_dma_addr	i810_audio.c	/^static inline unsigned i810_get_dma_addr(struct i810_state *state, int rec)$/;"	f	file:
i810_get_free_write_space	i810_audio.c	/^static inline int i810_get_free_write_space(struct i810_state *state)$/;"	f	file:
i810_init_module	i810_audio.c	/^module_init(i810_init_module);$/;"	v
i810_init_module	i810_audio.c	/^static int __init i810_init_module (void)$/;"	f	file:
i810_interrupt	i810_audio.c	/^static irqreturn_t i810_interrupt(int irq, void *dev_id)$/;"	f	file:
i810_ioctl	i810_audio.c	/^static int i810_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)$/;"	f	file:
i810_ioctl_mixdev	i810_audio.c	/^static int i810_ioctl_mixdev(struct inode *inode, struct file *file, unsigned int cmd,$/;"	f	file:
i810_mixer_fops	i810_audio.c	/^static \/*const*\/ struct file_operations i810_mixer_fops = {$/;"	v	typeref:struct:file_operations	file:
i810_mmap	i810_audio.c	/^static int i810_mmap(struct file *file, struct vm_area_struct *vma)$/;"	f	file:
i810_open	i810_audio.c	/^static int i810_open(struct inode *inode, struct file *file)$/;"	f	file:
i810_open_mixdev	i810_audio.c	/^static int i810_open_mixdev(struct inode *inode, struct file *file)$/;"	f	file:
i810_pci_driver	i810_audio.c	/^static struct pci_driver i810_pci_driver = {$/;"	v	typeref:struct:pci_driver	file:
i810_pci_tbl	i810_audio.c	/^static struct pci_device_id i810_pci_tbl [] = {$/;"	v	typeref:struct:pci_device_id	file:
i810_pm_resume	i810_audio.c	/^static int i810_pm_resume(struct pci_dev *dev)$/;"	f	file:
i810_pm_suspend	i810_audio.c	/^static int i810_pm_suspend(struct pci_dev *dev, pm_message_t pm_state)$/;"	f	file:
i810_poll	i810_audio.c	/^static unsigned int i810_poll(struct file *file, struct poll_table_struct *wait)$/;"	f	file:
i810_probe	i810_audio.c	/^static int __devinit i810_probe(struct pci_dev *pci_dev, const struct pci_device_id *pci_id)$/;"	f	file:
i810_read	i810_audio.c	/^static ssize_t i810_read(struct file *file, char __user *buffer, size_t count, loff_t *ppos)$/;"	f	file:
i810_release	i810_audio.c	/^static int i810_release(struct inode *inode, struct file *file)$/;"	f	file:
i810_remove	i810_audio.c	/^static void __devexit i810_remove(struct pci_dev *pci_dev)$/;"	f	file:
i810_set_adc_rate	i810_audio.c	/^static unsigned int i810_set_adc_rate(struct i810_state * state, unsigned int rate)$/;"	f	file:
i810_set_dac_channels	i810_audio.c	/^static void i810_set_dac_channels(struct i810_state *state, int channel)$/;"	f	file:
i810_set_dac_rate	i810_audio.c	/^static unsigned int i810_set_dac_rate(struct i810_state * state, unsigned int rate)$/;"	f	file:
i810_set_spdif_output	i810_audio.c	/^static int i810_set_spdif_output(struct i810_state *state, int slots, int rate)$/;"	f	file:
i810_state	i810_audio.c	/^struct i810_state {$/;"	s	file:
i810_update_lvi	i810_audio.c	/^static void i810_update_lvi(struct i810_state *state, int rec)$/;"	f	file:
i810_update_ptr	i810_audio.c	/^static void i810_update_ptr(struct i810_state *state)$/;"	f	file:
i810_valid_spdif_rate	i810_audio.c	/^static int i810_valid_spdif_rate ( struct ac97_codec *codec, int rate )$/;"	f	file:
i810_write	i810_audio.c	/^static ssize_t i810_write(struct file *file, const char __user *buffer, size_t count, loff_t *ppos)$/;"	f	file:
i_map	opl3.c	/^	struct sbi_instrument i_map[SBFM_MAXINSTR];$/;"	m	struct:opl_devinfo	typeref:struct:opl_devinfo::sbi_instrument	file:
iar	hal2.h	/^	volatile u32 iar;		\/* 0x30 Indirect Address Register *\/$/;"	m	struct:hal2_ctl_regs
ic_type	sscape.c	/^	int	ic_type;$/;"	m	struct:sscape_info	file:
ich_use_mmio	i810_audio.c	/^static inline int ich_use_mmio(struct i810_card *card)$/;"	f	file:
id	ac97_codec.c	/^	u32 id;$/;"	m	struct:__anon13	file:
id	dev_table.h	/^	char *id;	\/* Unique identifier (ASCII) max 29 char *\/$/;"	m	struct:synth_operations
id	dev_table.h	/^	char id[16];$/;"	m	struct:mixer_operations
id	jz_ac97.c	/^	int *id;$/;"	m	struct:buffer_queue_s	file:
id	jz_i2s.c	/^	int	id;$/;"	m	struct:i2s_codec	file:
id	jz_i2s_4750.c	/^	int *id;$/;"	m	struct:buffer_queue_s	file:
id	jz_i2s_4750.c	/^	int id;$/;"	m	struct:i2s_codec	file:
id	jz_i2s_dlv_dma_test.c	/^    int *id;$/;"	m	struct:buffer_queue_s	file:
id	jz_i2s_dlv_dma_test.c	/^    int id;$/;"	m	struct:i2s_codec	file:
id	jz_i2s_for_4750.c	/^	int *id;$/;"	m	struct:buffer_queue_s	file:
id	jz_i2s_for_4750.c	/^	int id;$/;"	m	struct:i2s_codec	file:
id	jz_pcm_tlv320aic1106_dma.c	/^	int *id;$/;"	m	struct:buffer_queue_s	file:
id	jz_pcm_tlv320aic1106_dma.c	/^	int id;$/;"	m	struct:pcm_codec	file:
id_tbl	kahlua.c	/^static struct pci_device_id id_tbl[] = {$/;"	v	typeref:struct:pci_device_id	file:
idr0	hal2.h	/^	volatile u32 idr0;		\/* 0x40 Indirect Data Register 0 *\/$/;"	m	struct:hal2_ctl_regs
idr1	hal2.h	/^	volatile u32 idr1;		\/* 0x50 Indirect Data Register 1 *\/$/;"	m	struct:hal2_ctl_regs
idr2	hal2.h	/^	volatile u32 idr2;		\/* 0x60 Indirect Data Register 2 *\/$/;"	m	struct:hal2_ctl_regs
idr3	hal2.h	/^	volatile u32 idr3;		\/* 0x70 Indirect Data Register 3 *\/$/;"	m	struct:hal2_ctl_regs
idx	hal2.c	/^	unsigned char idx:4, avail:1;$/;"	m	struct:__anon4	file:
in_busy_queue	jz_ac97.c	/^static buffer_queue_t in_busy_queue;$/;"	v	file:
in_busy_queue	jz_i2s_4750.c	/^static buffer_queue_t in_busy_queue;$/;"	v	file:
in_busy_queue	jz_i2s_dlv_dma_test.c	/^static buffer_queue_t in_busy_queue;$/;"	v	file:
in_busy_queue	jz_i2s_for_4750.c	/^static buffer_queue_t in_busy_queue;$/;"	v	file:
in_busy_queue	jz_pcm_tlv320aic1106_dma.c	/^static buffer_queue_t in_busy_queue;$/;"	v	file:
in_codec_app1	jzcodec.c	/^void in_codec_app1(void)$/;"	f
in_codec_app12	jzcodec.c	/^void in_codec_app12(void)$/;"	f
in_dma_buf	jz_ac97.c	/^static unsigned long *in_dma_buf = NULL;$/;"	v	file:
in_dma_buf	jz_i2s_4750.c	/^static unsigned long *in_dma_buf = NULL;$/;"	v	file:
in_dma_buf	jz_i2s_dlv_dma_test.c	/^static unsigned long *in_dma_buf = NULL;$/;"	v	file:
in_dma_buf	jz_i2s_for_4750.c	/^static unsigned long *in_dma_buf = NULL;$/;"	v	file:
in_dma_buf	jz_pcm_tlv320aic1106_dma.c	/^static unsigned long *in_dma_buf = NULL;$/;"	v	file:
in_dma_buf_data_count	jz_ac97.c	/^static unsigned long *in_dma_buf_data_count = NULL;$/;"	v	file:
in_dma_buf_data_count	jz_i2s_4750.c	/^static unsigned long *in_dma_buf_data_count = NULL;$/;"	v	file:
in_dma_buf_data_count	jz_i2s_dlv_dma_test.c	/^static unsigned long *in_dma_buf_data_count = NULL;$/;"	v	file:
in_dma_buf_data_count	jz_i2s_for_4750.c	/^static unsigned long *in_dma_buf_data_count = NULL;$/;"	v	file:
in_dma_buf_data_count	jz_pcm_tlv320aic1106_dma.c	/^static unsigned long *in_dma_buf_data_count = NULL;$/;"	v	file:
in_dma_pbuf	jz_ac97.c	/^static unsigned long *in_dma_pbuf = NULL;$/;"	v	file:
in_dma_pbuf	jz_i2s_4750.c	/^static unsigned long *in_dma_pbuf = NULL;$/;"	v	file:
in_dma_pbuf	jz_i2s_dlv_dma_test.c	/^static unsigned long *in_dma_pbuf = NULL;$/;"	v	file:
in_dma_pbuf	jz_i2s_for_4750.c	/^static unsigned long *in_dma_pbuf = NULL;$/;"	v	file:
in_dma_pbuf	jz_pcm_tlv320aic1106_dma.c	/^static unsigned long *in_dma_pbuf = NULL;$/;"	v	file:
in_empty_queue	jz_ac97.c	/^static buffer_queue_t in_empty_queue;$/;"	v	file:
in_empty_queue	jz_i2s_4750.c	/^static buffer_queue_t in_empty_queue;$/;"	v	file:
in_empty_queue	jz_i2s_dlv_dma_test.c	/^static buffer_queue_t in_empty_queue;$/;"	v	file:
in_empty_queue	jz_i2s_for_4750.c	/^static buffer_queue_t in_empty_queue;$/;"	v	file:
in_empty_queue	jz_pcm_tlv320aic1106_dma.c	/^static buffer_queue_t in_empty_queue;$/;"	v	file:
in_endpoint	jz_i2s.c	/^static audio_pipe in_endpoint= {$/;"	v	file:
in_full_queue	jz_ac97.c	/^static buffer_queue_t in_full_queue;$/;"	v	file:
in_full_queue	jz_i2s_4750.c	/^static buffer_queue_t in_full_queue;$/;"	v	file:
in_full_queue	jz_i2s_dlv_dma_test.c	/^static buffer_queue_t in_full_queue;$/;"	v	file:
in_full_queue	jz_i2s_for_4750.c	/^static buffer_queue_t in_full_queue;$/;"	v	file:
in_full_queue	jz_pcm_tlv320aic1106_dma.c	/^static buffer_queue_t in_full_queue;$/;"	v	file:
in_info	dev_table.h	/^	struct midi_input_info in_info;$/;"	m	struct:midi_operations	typeref:struct:midi_operations::midi_input_info
in_sleeper	dev_table.h	/^	wait_queue_head_t in_sleeper;$/;"	m	struct:audio_operations
in_use	sh_dac_audio.c	/^static int in_use, device_major;$/;"	v	file:
inc	hal2.c	/^	unsigned short inc;		\/* INC value *\/$/;"	m	struct:hal2_codec	file:
info	dev_table.h	/^	struct midi_info info;$/;"	m	struct:midi_operations	typeref:struct:midi_operations::midi_info
info	dev_table.h	/^	struct sound_timer_info info;$/;"	m	struct:sound_timer_operations	typeref:struct:sound_timer_operations::sound_timer_info
info	dev_table.h	/^	struct synth_info *info;$/;"	m	struct:synth_operations	typeref:struct:synth_operations::synth_info
info	jz_i2s_4750.c	/^mixer_info info;$/;"	v
info	jz_i2s_for_4750.c	/^mixer_info info;$/;"	v
info	msnd.h	/^	unsigned char info;$/;"	m	struct:multisound_dev
init	aedsp16.c	/^	int init;               \/* Initialization status of the card    *\/$/;"	m	struct:aedsp16_info	file:
init	dmasound/dmasound.h	/^    void (*init)(void);$/;"	m	struct:__anon17
init_Jazz16	sb_common.c	/^static int init_Jazz16(sb_devc * devc, struct address_info *hw_config)$/;"	f	file:
init_Jazz16_midi	sb_common.c	/^static int init_Jazz16_midi(sb_devc * devc, struct address_info *hw_config)$/;"	f	file:
init_ad1848	ad1848.c	/^module_init(init_ad1848);$/;"	v
init_ad1848	ad1848.c	/^static int __init init_ad1848(void)$/;"	f	file:
init_aedsp16	aedsp16.c	/^static int __init init_aedsp16(void)$/;"	f	file:
init_aedsp16_mpu	aedsp16.c	/^static int __init init_aedsp16_mpu(void)$/;"	f	file:
init_aedsp16_mss	aedsp16.c	/^static int __init init_aedsp16_mss(void)$/;"	f	file:
init_aedsp16_sb	aedsp16.c	/^static int __init init_aedsp16_sb(void)$/;"	f	file:
init_ak4642en	ak4642en.c	/^module_init(init_ak4642en);$/;"	v
init_ak4642en	ak4642en.c	/^static int __init init_ak4642en(void)$/;"	f	file:
init_au1550	au1550_ac97.c	/^init_au1550(void)$/;"	f	file:
init_au1550	au1550_ac97.c	/^module_init(init_au1550);$/;"	v
init_audio_audiodma	jz_i2s.c	/^int init_audio_audiodma(audio_pipe *endpoint, int mode)$/;"	f
init_audio_node	jz_i2s.c	/^int init_audio_node(unsigned int **memory, unsigned int pagesize, unsigned int count)$/;"	f
init_audio_recorddma	jz_i2s.c	/^int init_audio_recorddma(audio_pipe *endpoint)$/;"	f
init_audio_replaydma	jz_i2s.c	/^int init_audio_replaydma(audio_pipe *endpoint)$/;"	f
init_codec	jz_i2s_4750.c	/^static void init_codec(void)$/;"	f	file:
init_codec	jz_i2s_dlv_dma_test.c	/^static void init_codec(void)$/;"	f	file:
init_codec	jz_i2s_for_4750.c	/^static void init_codec(void)$/;"	f	file:
init_codec	jz_pcm_tlv320aic1106_dma.c	/^static void init_codec(void)$/;"	f	file:
init_codec_pin	jz_i2s_4750.c	/^void (*init_codec_pin)(void) = NULL;$/;"	v
init_codec_pin	jz_i2s_for_4750.c	/^void (*init_codec_pin)(void) = NULL;$/;"	v
init_cs4232	cs4232.c	/^module_init(init_cs4232);$/;"	v
init_cs4232	cs4232.c	/^static int __init init_cs4232(void)$/;"	f	file:
init_deskpro	ad1848.c	/^static int init_deskpro(struct address_info *hw_config)$/;"	f	file:
init_deskpro_m	ad1848.c	/^static int init_deskpro_m(struct address_info *hw_config)$/;"	f	file:
init_dlv	jzdlv.c	/^module_init(init_dlv);$/;"	v
init_dlv	jzdlv.c	/^static int __init init_dlv(void)$/;"	f	file:
init_hal2	hal2.c	/^module_init(init_hal2);$/;"	v
init_hal2	hal2.c	/^static int __init init_hal2(void)$/;"	f	file:
init_jz_ac97	jz_ac97.c	/^module_init(init_jz_ac97);$/;"	v
init_jz_ac97	jz_ac97.c	/^static int __init init_jz_ac97(void)$/;"	f	file:
init_jz_i2s	jz_i2s.c	/^static int __init init_jz_i2s(struct platform_device *pdev)$/;"	f	file:
init_jz_i2s	jz_i2s_4750.c	/^module_init(init_jz_i2s);$/;"	v
init_jz_i2s	jz_i2s_4750.c	/^static int __init init_jz_i2s(void)$/;"	f	file:
init_jz_i2s	jz_i2s_dlv_dma_test.c	/^module_init(init_jz_i2s);$/;"	v
init_jz_i2s	jz_i2s_dlv_dma_test.c	/^static int __init init_jz_i2s(void)$/;"	f	file:
init_jz_i2s	jz_i2s_for_4750.c	/^module_init(init_jz_i2s);$/;"	v
init_jz_i2s	jz_i2s_for_4750.c	/^static int __init init_jz_i2s(void)$/;"	f	file:
init_jz_pcm	jz_pcm_tlv320aic1106_dma.c	/^module_init(init_jz_pcm);$/;"	v
init_jz_pcm	jz_pcm_tlv320aic1106_dma.c	/^static int __init init_jz_pcm(void)$/;"	f	file:
init_jzcodec	jzcodec.c	/^module_init(init_jzcodec);$/;"	v
init_jzcodec	jzcodec.c	/^static int __init init_jzcodec(void)$/;"	f	file:
init_module	msnd.c	/^int init_module(void)$/;"	f
init_mpu401	mpu401.c	/^module_init(init_mpu401);$/;"	v
init_mpu401	mpu401.c	/^static int __init init_mpu401(void)$/;"	f	file:
init_opl3	opl3.c	/^module_init(init_opl3);$/;"	v
init_opl3	opl3.c	/^static int __init init_opl3 (void)$/;"	f	file:
init_pas2	pas2_card.c	/^module_init(init_pas2);$/;"	v
init_pas2	pas2_card.c	/^static int __init init_pas2(void)$/;"	f	file:
init_pss	pss.c	/^module_init(init_pss);$/;"	v
init_pss	pss.c	/^static int __init init_pss(void)$/;"	f	file:
init_serdma	swarm_cs4297a.c	/^static int init_serdma(serdma_t *dma)$/;"	f	file:
init_sma	msnd_pinnacle.c	/^static int init_sma(void)$/;"	f	file:
init_ss_ms_sound	sscape.c	/^static int __init init_ss_ms_sound(struct address_info *hw_config)$/;"	f	file:
init_sscape	sscape.c	/^module_init(init_sscape);$/;"	v
init_sscape	sscape.c	/^static int __init init_sscape(void)$/;"	f	file:
init_trix	trix.c	/^module_init(init_trix);$/;"	v
init_trix	trix.c	/^static int __init init_trix(void)$/;"	f	file:
init_trix_wss	trix.c	/^static int __init init_trix_wss(struct address_info *hw_config)$/;"	f	file:
init_uart401	uart401.c	/^module_init(init_uart401);$/;"	v
init_uart401	uart401.c	/^static int __init init_uart401(void)$/;"	f	file:
init_uart6850	uart6850.c	/^module_init(init_uart6850);$/;"	v
init_uart6850	uart6850.c	/^static int __init init_uart6850(void)$/;"	f	file:
init_via82cxxx_audio	via82cxxx_audio.c	/^module_init(init_via82cxxx_audio);$/;"	v
init_via82cxxx_audio	via82cxxx_audio.c	/^static int __init init_via82cxxx_audio(void)$/;"	f	file:
init_vidc	vidc.c	/^module_init(init_vidc);$/;"	v
init_vidc	vidc.c	/^static int __init init_vidc(void)$/;"	f	file:
init_vmidi	v_midi.c	/^module_init(init_vmidi);$/;"	v
init_vmidi	v_midi.c	/^static int __init init_vmidi(void)$/;"	f	file:
init_vwsnd	vwsnd.c	/^module_init(init_vwsnd);$/;"	v
init_vwsnd	vwsnd.c	/^static int __init init_vwsnd(void)$/;"	f	file:
init_waveartist	waveartist.c	/^module_init(init_waveartist);$/;"	v
init_waveartist	waveartist.c	/^static int __init init_waveartist(void)$/;"	f	file:
initialize	msnd_pinnacle.c	/^static int initialize(void)$/;"	f	file:
initialized	mpu401.c	/^	int             initialized;$/;"	m	struct:mpu_config	file:
initialized	sound_timer.c	/^static volatile int initialized, opened, tmr_running;$/;"	v	file:
initializing	i810_audio.c	/^	int initializing;$/;"	m	struct:i810_card	file:
input_avail	mpu401.c	88;"	d	file:
input_avail	uart401.c	55;"	d	file:
input_avail	uart6850.c	47;"	d	file:
input_byte	uart401.c	/^	volatile unsigned char input_byte;$/;"	m	struct:uart401_devc	file:
input_opened	pas2_midi.c	/^static int      midi_busy, input_opened;$/;"	v	file:
input_opened	sb.h	/^	   int input_opened;$/;"	m	struct:sb_devc
input_opened	v_midi.h	/^	   int input_opened;$/;"	m	struct:vmidi_devc
input_sleeper	midibuf.c	/^static wait_queue_head_t input_sleeper[MAX_MIDI_DEV];$/;"	v	file:
inputintr	mpu401.c	/^	  void            (*inputintr) (int dev, unsigned char data);$/;"	m	struct:mpu_config	file:
intmask	via82cxxx_audio.c	/^	unsigned char intmask;$/;"	m	struct:via_channel	file:
intmask	via82cxxx_audio.c	/^	unsigned intmask: 1;	\/* Needs int bits *\/$/;"	m	struct:via_info	file:
intr	msnd_pinnacle.c	/^static irqreturn_t intr(int irq, void *dev_id)$/;"	f	file:
intr_active	ad1848.c	/^	int             intr_active;$/;"	m	struct:__anon1	file:
intr_active	sb.h	/^	   volatile int intr_active, irq_mode;$/;"	m	struct:sb_devc
intr_active	v_midi.h	/^	   int intr_active;$/;"	m	struct:vmidi_devc
intr_active_16	sb.h	/^	   volatile int intr_active_16, irq_mode_16;$/;"	m	struct:sb_devc
invalid_magic	swarm_cs4297a.c	/^static const char invalid_magic[] =$/;"	v	file:
invalid_magic	trident.c	/^static const char invalid_magic[] = KERN_CRIT "trident: invalid magic value in %s\\n";$/;"	v	file:
io	ad1848.c	/^static int __initdata io = -1;$/;"	v	file:
io	aedsp16.c	/^static int __initdata io = -1;$/;"	v	file:
io	cs4232.c	/^static int __initdata io	= -1;$/;"	v	file:
io	mpu401.c	/^static int io = -1;$/;"	v	file:
io	msnd.h	/^	int io, numio;$/;"	m	struct:multisound_dev
io	opl3.c	/^static int io = -1;$/;"	v	file:
io	pas2_card.c	/^static int __initdata io	= -1;$/;"	v	file:
io	sb_card.c	/^static int __initdata io	= -1;$/;"	v	file:
io	sscape.c	/^static int __initdata io = -1;$/;"	v	file:
io	trix.c	/^static int __initdata io	= -1;$/;"	v	file:
io	uart401.c	/^static int io = -1;$/;"	v	file:
io	uart6850.c	/^static int __initdata io = -1;$/;"	v	file:
io	waveartist.c	/^static int __initdata io = 0;$/;"	v	file:
io0	msnd_pinnacle.c	/^	WORD io0, io1, irq;$/;"	m	struct:msnd_pinnacle_cfg_device	file:
io1	msnd_pinnacle.c	/^	WORD io0, io1, irq;$/;"	m	struct:msnd_pinnacle_cfg_device	file:
io_Index_Addr	ad1848.c	155;"	d	file:
io_Indexed_Data	ad1848.c	156;"	d	file:
io_Polled_IO	ad1848.c	158;"	d	file:
io_Status	ad1848.c	157;"	d	file:
io_base	jz_ac97.c	/^	int io_base;$/;"	m	struct:jz_ac97_controller_info	file:
io_base	jz_i2s_4750.c	/^	int io_base;$/;"	m	struct:jz_i2s_controller_info	file:
io_base	jz_i2s_dlv_dma_test.c	/^    int io_base;$/;"	m	struct:jz_i2s_controller_info	file:
io_base	jz_i2s_for_4750.c	/^	int io_base;$/;"	m	struct:jz_i2s_controller_info	file:
io_base	jz_pcm_tlv320aic1106_dma.c	/^	int io_base;$/;"	m	struct:jz_pcm_controller_info	file:
io_base	sound_config.h	/^	int io_base;$/;"	m	struct:address_info
io_mutex	vwsnd.c	/^	struct mutex io_mutex;$/;"	m	struct:vwsnd_dev	typeref:struct:vwsnd_dev::mutex	file:
ioaddr	opl3_hw.h	/^		unsigned short ioaddr; \/* I\/O port (left or right side) *\/$/;"	m	struct:physical_voice_info
iobase	aedsp16.c	/^	int iobase;$/;"	m	struct:d_hcfg	file:
iobase	i810_audio.c	/^	unsigned long iobase;$/;"	m	struct:i810_card	file:
iobase	trident.c	/^	unsigned long iobase;$/;"	m	struct:trident_card	file:
iobase	via82cxxx_audio.c	/^	long iobase;$/;"	m	struct:via_channel	file:
iobase_mmio	i810_audio.c	/^	u_int8_t __iomem *iobase_mmio;$/;"	m	struct:i810_card	file:
iobase_mmio_phys	i810_audio.c	/^	unsigned long iobase_mmio_phys;$/;"	m	struct:i810_card	file:
ioctl	dev_table.h	/^	int (*ioctl) (int dev, unsigned int cmd, void __user * arg);$/;"	m	struct:audio_driver
ioctl	dev_table.h	/^	int (*ioctl) (int dev, unsigned int cmd, void __user * arg);$/;"	m	struct:midi_operations
ioctl	dev_table.h	/^	int (*ioctl) (int dev, unsigned int cmd, void __user * arg);$/;"	m	struct:mixer_operations
ioctl	dev_table.h	/^	int (*ioctl) (int dev, unsigned int cmd, void __user * arg);$/;"	m	struct:sound_timer_operations
ioctl	dev_table.h	/^	int (*ioctl) (int dev, unsigned int cmd, void __user * arg);$/;"	m	struct:synth_operations
ioctl	dev_table.h	/^	int (*ioctl) (void *devc, unsigned int cmd, void __user * arg, int local);$/;"	m	struct:coproc_operations
ioctl_return	dmasound/dmasound.h	/^static inline int ioctl_return(int __user *addr, int value)$/;"	f
ioctl_str	au1550_ac97.c	/^} ioctl_str[] = {$/;"	v	typeref:struct:ioctl_str_t	file:
ioctl_str_t	au1550_ac97.c	/^static struct ioctl_str_t {$/;"	s	file:
ioctllock	jz_ac97.c	/^	spinlock_t ioctllock;$/;"	m	struct:jz_ac97_controller_info	file:
ioctllock	jz_i2s_4750.c	/^	spinlock_t ioctllock;$/;"	m	struct:jz_i2s_controller_info	file:
ioctllock	jz_i2s_dlv_dma_test.c	/^    spinlock_t ioctllock;$/;"	m	struct:jz_i2s_controller_info	file:
ioctllock	jz_i2s_for_4750.c	/^	spinlock_t ioctllock;$/;"	m	struct:jz_i2s_controller_info	file:
ioctllock	jz_pcm_tlv320aic1106_dma.c	/^	spinlock_t ioctllock;$/;"	m	struct:jz_pcm_controller_info	file:
iomap	sb.h	/^	   mixer_tab *iomap;$/;"	m	struct:sb_devc
iomap_sz	sb.h	/^	   size_t iomap_sz; \/* number or records in the iomap table *\/$/;"	m	struct:sb_devc
iqhead	sequencer.c	/^static volatile int iqhead, iqtail, iqlen;$/;"	v	file:
iqlen	sequencer.c	/^static volatile int iqhead, iqtail, iqlen;$/;"	v	file:
iqtail	sequencer.c	/^static volatile int iqhead, iqtail, iqlen;$/;"	v	file:
iqueue	sequencer.c	/^static unsigned char *iqueue;$/;"	v	file:
irq	ad1848.c	/^	int             irq;$/;"	m	struct:__anon1	file:
irq	ad1848.c	/^	short mss_io, irq, dma, dma2;   \/* index into isapnp table *\/$/;"	m	struct:__anon3	file:
irq	ad1848.c	/^static int __initdata irq = -1;$/;"	v	file:
irq	aedsp16.c	/^	int irq;                \/* irq value for DSP I\/O                *\/$/;"	m	struct:aedsp16_info	file:
irq	aedsp16.c	/^static int __initdata irq = -1;$/;"	v	file:
irq	btaudio.c	/^	unsigned int   irq;$/;"	m	struct:btaudio	file:
irq	cs4232.c	/^static int __initdata irq	= -1;$/;"	v	file:
irq	hal2.h	/^	volatile u32 irq;		\/* IRQ Status *\/$/;"	m	struct:hal2_syn_regs
irq	i810_audio.c	/^	u32 irq;$/;"	m	struct:i810_card	file:
irq	mpu401.c	/^	int             irq;$/;"	m	struct:mpu_config	file:
irq	mpu401.c	/^static int irq = -1;$/;"	v	file:
irq	msnd.h	/^	int irq, irq_ref;$/;"	m	struct:multisound_dev
irq	msnd_pinnacle.c	/^	WORD io0, io1, irq;$/;"	m	struct:msnd_pinnacle_cfg_device	file:
irq	pas2_card.c	/^static int __initdata irq	= -1;$/;"	v	file:
irq	pss.c	/^	int             irq;$/;"	m	struct:pss_confdata	file:
irq	sb.h	/^	   int irq;$/;"	m	struct:sb_devc
irq	sb_card.c	/^static int __initdata irq	= -1;$/;"	v	file:
irq	sound_config.h	/^	int irq;$/;"	m	struct:address_info
irq	sscape.c	/^	int	base, irq, dma;$/;"	m	struct:sscape_info	file:
irq	sscape.c	/^static int __initdata irq = -1;$/;"	v	file:
irq	swarm_cs4297a.c	/^	unsigned int irq;$/;"	m	struct:cs4297a_state	file:
irq	trident.c	/^	u32 irq;$/;"	m	struct:trident_card	file:
irq	trix.c	/^static int __initdata irq	= -1;$/;"	v	file:
irq	uart401.c	/^	int             irq;$/;"	m	struct:uart401_devc	file:
irq	uart401.c	/^static int irq = -1;$/;"	v	file:
irq	uart6850.c	/^static int __initdata irq = -1;$/;"	v	file:
irq	waveartist.c	/^static int __initdata irq = 0;$/;"	v	file:
irq2dev	ad1848.c	/^static volatile signed char irq2dev[17] = {$/;"	v	file:
irq_bits	pas2_card.c	/^static unsigned char irq_bits[] = {$/;"	v	file:
irq_debug	btaudio.c	/^static unsigned int irq_debug;$/;"	v	file:
irq_installed	dmasound/dmasound_core.c	/^static int irq_installed;$/;"	v	file:
irq_mode	sb.h	/^	   volatile int intr_active, irq_mode;$/;"	m	struct:sb_devc
irq_mode_16	sb.h	/^	   volatile int intr_active_16, irq_mode_16;$/;"	m	struct:sb_devc
irq_name	btaudio.c	/^static char *irq_name[] = { "", "", "", "OFLOW", "", "", "", "", "", "", "",$/;"	v	file:
irq_ok	ad1848.c	/^	int             irq_ok;$/;"	m	struct:__anon1	file:
irq_ok	sb.h	/^	   volatile int irq_ok;$/;"	m	struct:sb_devc
irq_ref	msnd.h	/^	int irq, irq_ref;$/;"	m	struct:multisound_dev
irqcleanup	dmasound/dmasound.h	/^    void (*irqcleanup)(void);$/;"	m	struct:__anon17
irqid	msnd.h	/^	int memid, irqid;$/;"	m	struct:multisound_dev
irqinit	dmasound/dmasound.h	/^    int (*irqinit)(void);$/;"	m	struct:__anon17
is_active	via82cxxx_audio.c	/^	unsigned is_active : 1;$/;"	m	struct:via_channel	file:
is_enabled	via82cxxx_audio.c	/^	unsigned is_enabled : 1;$/;"	m	struct:via_channel	file:
is_falcon	dmasound/dmasound_atari.c	/^static int is_falcon;$/;"	v	file:
is_mapped	via82cxxx_audio.c	/^	unsigned is_mapped : 1;$/;"	m	struct:via_channel	file:
is_multi	via82cxxx_audio.c	/^	unsigned is_multi: 1;	\/* 8233 6 channel *\/$/;"	m	struct:via_channel	file:
is_new_ich	i810_audio.c	/^static int is_new_ich(u16 pci_id)$/;"	f	file:
is_non_block	jz_i2s.c	/^	int	is_non_block;$/;"	m	struct:__audio_pipe	file:
is_null_free_audio_node	jz_i2s.c	446;"	d	file:
is_null_use_audio_node	jz_i2s.c	453;"	d	file:
is_opl4	opl3.c	/^	int             is_opl4;$/;"	m	struct:opl_devinfo	file:
is_record	via82cxxx_audio.c	/^	unsigned is_record : 1;$/;"	m	struct:via_channel	file:
isapnp	ad1848.c	/^static int isapnp	= 1;$/;"	v	file:
isapnp	ad1848.c	/^static int isapnp;$/;"	v	file:
isapnp	cs4232.c	/^static int __initdata isapnp	= 1;$/;"	v	file:
isapnpjump	ad1848.c	/^static int isapnpjump;$/;"	v	file:
isr	hal2.h	/^	volatile u32 isr;		\/* 0x10 Status Register *\/$/;"	m	struct:hal2_ctl_regs
iwave_mix_devices	ad1848_mixer.h	/^static mixer_ents iwave_mix_devices[32] = {$/;"	v
jack_plug_level	ak4642en.c	/^static int jack_plug_level, old_level;$/;"	v	file:
jazz16_audio_driver	sb_audio.c	/^static struct audio_driver jazz16_audio_driver =	\/* Jazz16 and SM Wave *\/$/;"	v	typeref:struct:audio_driver	file:
jazz16_audio_set_speed	sb_audio.c	/^static int jazz16_audio_set_speed(int dev, int speed)$/;"	f	file:
jazz16_base	sb_common.c	/^static int jazz16_base;			\/* Not detected *\/$/;"	v	file:
jazz16_bits	sb_common.c	/^static unsigned char jazz16_bits;	\/* I\/O relocation bits *\/$/;"	v	file:
jazz_dma_bits	sb_common.c	/^static unsigned char jazz_dma_bits[] = {$/;"	v	file:
jazz_irq_bits	sb_common.c	/^static unsigned char jazz_irq_bits[] = {$/;"	v	file:
joystick	aedsp16.c	/^	int joystick;$/;"	m	struct:d_hcfg	file:
joystick	pas2_card.c	/^static int	joystick;$/;"	v	file:
joystick	pas2_card.c	/^static int 	joystick = 1;$/;"	v	file:
joystick	trix.c	/^static int joystick;$/;"	v	file:
jz_ac97_audio_fops	jz_ac97.c	/^static struct file_operations jz_ac97_audio_fops =$/;"	v	typeref:struct:file_operations	file:
jz_ac97_audio_fops	jz_ac97.c	/^static struct file_operations jz_ac97_audio_fops;$/;"	v	typeref:struct:file_operations	file:
jz_ac97_cleanup_proc	jz_ac97.c	/^static void jz_ac97_cleanup_proc(struct jz_ac97_controller_info *controller)$/;"	f	file:
jz_ac97_codec_init	jz_ac97.c	/^static int __init jz_ac97_codec_init(struct jz_ac97_controller_info *controller)$/;"	f	file:
jz_ac97_controller_info	jz_ac97.c	/^struct jz_ac97_controller_info$/;"	s	file:
jz_ac97_full_reset	jz_ac97.c	/^jz_ac97_full_reset(struct jz_ac97_controller_info *controller)$/;"	f	file:
jz_ac97_initHw	jz_ac97.c	/^static void jz_ac97_initHw(struct jz_ac97_controller_info *controller)$/;"	f	file:
jz_ac97_init_proc	jz_ac97.c	/^static int jz_ac97_init_proc(struct jz_ac97_controller_info *controller)$/;"	f	file:
jz_ac97_ioctl_mixdev	jz_ac97.c	/^static int jz_ac97_ioctl_mixdev(struct inode *inode, struct file *file, unsigned int cmd,$/;"	f	file:
jz_ac97_llseek	jz_ac97.c	/^static loff_t jz_ac97_llseek(struct file *file, loff_t offset, int origin)$/;"	f	file:
jz_ac97_mixer_fops	jz_ac97.c	/^static \/*const*\/ struct file_operations jz_ac97_mixer_fops = {$/;"	v	typeref:struct:file_operations	file:
jz_ac97_mksound	jz_ac97.c	/^jz_ac97_mksound(unsigned int hz, unsigned int ticks)$/;"	f	file:
jz_ac97_open_mixdev	jz_ac97.c	/^static int jz_ac97_open_mixdev(struct inode *inode, struct file *file)$/;"	f	file:
jz_ac97_pm_callback	jz_ac97.c	/^static int jz_ac97_pm_callback(struct pm_dev *pm_dev, pm_request_t req, void *data)$/;"	f	file:
jz_ac97_record_dma_irq	jz_ac97.c	/^jz_ac97_record_dma_irq (int irq, void *dev_id)$/;"	f	file:
jz_ac97_replay_dma_irq	jz_ac97.c	/^jz_ac97_replay_dma_irq (int irq, void *dev_id)$/;"	f	file:
jz_ac97_resume	jz_ac97.c	/^static int jz_ac97_resume(struct jz_ac97_controller_info *controller)$/;"	f	file:
jz_ac97_suspend	jz_ac97.c	/^static int jz_ac97_suspend(struct jz_ac97_controller_info *controller, int state)$/;"	f	file:
jz_audio_b	jz_i2s_4750.c	/^static int		jz_audio_b;               \/* bits expand multiple *\/$/;"	v	file:
jz_audio_b	jz_i2s_dlv_dma_test.c	/^static int		jz_audio_b;   \/* bits expand multiple *\/$/;"	v	file:
jz_audio_b	jz_i2s_for_4750.c	/^static int		jz_audio_b;               \/* bits expand multiple *\/$/;"	v	file:
jz_audio_channels	jz_ac97.c	/^static char		jz_audio_channels;$/;"	v	file:
jz_audio_channels	jz_i2s_4750.c	/^static int		jz_audio_channels;$/;"	v	file:
jz_audio_channels	jz_i2s_dlv_dma_test.c	/^static char		jz_audio_channels;$/;"	v	file:
jz_audio_channels	jz_i2s_for_4750.c	/^static int		jz_audio_channels;$/;"	v	file:
jz_audio_channels	jz_pcm_tlv320aic1106_dma.c	/^static char		jz_audio_channels;$/;"	v	file:
jz_audio_count	jz_ac97.c	/^static int		jz_audio_count;  \/* total count of voice data *\/$/;"	v	file:
jz_audio_dma_tran_count	jz_ac97.c	/^static int              jz_audio_dma_tran_count;\/\/bytes count of one DMA transfer$/;"	v	file:
jz_audio_dma_tran_count	jz_i2s_4750.c	/^static int              jz_audio_dma_tran_count;  \/* bytes count of one DMA transfer *\/$/;"	v	file:
jz_audio_dma_tran_count	jz_i2s_dlv_dma_test.c	/^static int              jz_audio_dma_tran_count;\/\/bytes count of one DMA transfer$/;"	v	file:
jz_audio_dma_tran_count	jz_i2s_for_4750.c	/^static int              jz_audio_dma_tran_count;  \/* bytes count of one DMA transfer *\/$/;"	v	file:
jz_audio_dma_tran_count	jz_pcm_tlv320aic1106_dma.c	/^static int              jz_audio_dma_tran_count;\/\/bytes count of one DMA transfer$/;"	v	file:
jz_audio_format	jz_ac97.c	/^static char		jz_audio_format;$/;"	v	file:
jz_audio_format	jz_i2s_4750.c	/^static int		jz_audio_format;$/;"	v	file:
jz_audio_format	jz_i2s_dlv_dma_test.c	/^static char		jz_audio_format;$/;"	v	file:
jz_audio_format	jz_i2s_for_4750.c	/^static int		jz_audio_format;$/;"	v	file:
jz_audio_format	jz_pcm_tlv320aic1106_dma.c	/^static char		jz_audio_format;$/;"	v	file:
jz_audio_fragments	jz_ac97.c	/^static int              jz_audio_fragments;\/\/unused fragment amount$/;"	v	file:
jz_audio_fragments	jz_i2s_4750.c	/^static int              jz_audio_fragments;       \/* unused fragment amount *\/$/;"	v	file:
jz_audio_fragments	jz_i2s_dlv_dma_test.c	/^static int              jz_audio_fragments;\/\/unused fragment amount$/;"	v	file:
jz_audio_fragments	jz_i2s_for_4750.c	/^static int              jz_audio_fragments;       \/* unused fragment amount *\/$/;"	v	file:
jz_audio_fragments	jz_pcm_tlv320aic1106_dma.c	/^static int              jz_audio_fragments;\/\/unused fragment amount$/;"	v	file:
jz_audio_fragsize	jz_ac97.c	/^static int              jz_audio_fragsize;$/;"	v	file:
jz_audio_fragsize	jz_i2s_4750.c	/^static int              jz_audio_fragsize;$/;"	v	file:
jz_audio_fragsize	jz_i2s_dlv_dma_test.c	/^static int              jz_audio_fragsize;$/;"	v	file:
jz_audio_fragsize	jz_i2s_for_4750.c	/^static int              jz_audio_fragsize;$/;"	v	file:
jz_audio_fragsize	jz_pcm_tlv320aic1106_dma.c	/^static int              jz_audio_fragsize;$/;"	v	file:
jz_audio_fragstotal	jz_ac97.c	/^static int              jz_audio_fragstotal;$/;"	v	file:
jz_audio_fragstotal	jz_i2s_4750.c	/^static int              jz_audio_fragstotal;$/;"	v	file:
jz_audio_fragstotal	jz_i2s_dlv_dma_test.c	/^static int              jz_audio_fragstotal;$/;"	v	file:
jz_audio_fragstotal	jz_i2s_for_4750.c	/^static int              jz_audio_fragstotal;$/;"	v	file:
jz_audio_fragstotal	jz_pcm_tlv320aic1106_dma.c	/^static int              jz_audio_fragstotal;$/;"	v	file:
jz_audio_ioctl	jz_ac97.c	/^static int jz_audio_ioctl(struct inode *inode, struct file *file,$/;"	f	file:
jz_audio_ioctl	jz_i2s.c	/^static int jz_audio_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)$/;"	f	file:
jz_audio_ioctl	jz_i2s_4750.c	/^static int jz_audio_ioctl(struct inode *inode, struct file *file,$/;"	f	file:
jz_audio_ioctl	jz_i2s_dlv_dma_test.c	/^static int jz_audio_ioctl(struct inode *inode, struct file *file,$/;"	f	file:
jz_audio_ioctl	jz_i2s_for_4750.c	/^static int jz_audio_ioctl(struct inode *inode, struct file *file,$/;"	f	file:
jz_audio_ioctl	jz_pcm_tlv320aic1106_dma.c	/^static int jz_audio_ioctl(struct inode *inode, struct file *file,$/;"	f	file:
jz_audio_k	jz_ac97.c	/^static int              jz_audio_k;   \/* rate expand multiple *\/$/;"	v	file:
jz_audio_open	jz_ac97.c	/^static int jz_audio_open(struct inode *inode, struct file *file)$/;"	f	file:
jz_audio_open	jz_i2s.c	/^static int jz_audio_open(struct inode *inode, struct file *file)$/;"	f	file:
jz_audio_open	jz_i2s_4750.c	/^static int jz_audio_open(struct inode *inode, struct file *file)$/;"	f	file:
jz_audio_open	jz_i2s_dlv_dma_test.c	/^static int jz_audio_open(struct inode *inode, struct file *file)$/;"	f	file:
jz_audio_open	jz_i2s_for_4750.c	/^static int jz_audio_open(struct inode *inode, struct file *file)$/;"	f	file:
jz_audio_open	jz_pcm_tlv320aic1106_dma.c	/^static int jz_audio_open(struct inode *inode, struct file *file)$/;"	f	file:
jz_audio_poll	jz_ac97.c	/^static unsigned int jz_audio_poll(struct file *file,$/;"	f	file:
jz_audio_poll	jz_i2s_4750.c	/^static unsigned int jz_audio_poll(struct file *file,struct poll_table_struct *wait)$/;"	f	file:
jz_audio_poll	jz_i2s_dlv_dma_test.c	/^static unsigned int jz_audio_poll(struct file *file,struct poll_table_struct *wait)$/;"	f	file:
jz_audio_poll	jz_i2s_for_4750.c	/^static unsigned int jz_audio_poll(struct file *file,struct poll_table_struct *wait)$/;"	f	file:
jz_audio_poll	jz_pcm_tlv320aic1106_dma.c	/^static unsigned int jz_audio_poll(struct file *file,struct poll_table_struct *wait)$/;"	f	file:
jz_audio_q	jz_ac97.c	/^static int              jz_audio_q;   \/* rate expand compensate *\/$/;"	v	file:
jz_audio_rate	jz_ac97.c	/^static int		jz_audio_rate;$/;"	v	file:
jz_audio_rate	jz_i2s_4750.c	/^static int		jz_audio_rate;$/;"	v	file:
jz_audio_rate	jz_i2s_dlv_dma_test.c	/^static int		jz_audio_rate;$/;"	v	file:
jz_audio_rate	jz_i2s_for_4750.c	/^static int		jz_audio_rate;$/;"	v	file:
jz_audio_rate	jz_pcm_tlv320aic1106_dma.c	/^static int		jz_audio_rate;$/;"	v	file:
jz_audio_read	jz_ac97.c	/^static ssize_t jz_audio_read(struct file *file, char *buffer,$/;"	f	file:
jz_audio_read	jz_i2s.c	/^static ssize_t jz_audio_read(struct file *file, char __user *buffer, size_t count, loff_t *ppos)$/;"	f	file:
jz_audio_read	jz_i2s_4750.c	/^static ssize_t jz_audio_read(struct file *file, char *buffer, size_t count, loff_t *ppos)$/;"	f	file:
jz_audio_read	jz_i2s_dlv_dma_test.c	/^static ssize_t jz_audio_read(struct file *file, char *buffer, size_t count, loff_t *ppos)$/;"	f	file:
jz_audio_read	jz_i2s_for_4750.c	/^static ssize_t jz_audio_read(struct file *file, char *buffer, size_t count, loff_t *ppos)$/;"	f	file:
jz_audio_read	jz_pcm_tlv320aic1106_dma.c	/^static ssize_t jz_audio_read(struct file *file, char *buffer, size_t count, loff_t *ppos)$/;"	f	file:
jz_audio_release	jz_ac97.c	/^static int jz_audio_release(struct inode *inode, struct file *file)$/;"	f	file:
jz_audio_release	jz_i2s.c	/^static int jz_audio_release(struct inode *inode, struct file *file)$/;"	f	file:
jz_audio_release	jz_i2s_4750.c	/^static int jz_audio_release(struct inode *inode, struct file *file)$/;"	f	file:
jz_audio_release	jz_i2s_dlv_dma_test.c	/^static int jz_audio_release(struct inode *inode, struct file *file)$/;"	f	file:
jz_audio_release	jz_i2s_for_4750.c	/^static int jz_audio_release(struct inode *inode, struct file *file)$/;"	f	file:
jz_audio_release	jz_pcm_tlv320aic1106_dma.c	/^static int jz_audio_release(struct inode *inode, struct file *file)$/;"	f	file:
jz_audio_reset	jz_ac97.c	/^static void jz_audio_reset(void)$/;"	f	file:
jz_audio_reset	jz_i2s_4750.c	/^static void jz_audio_reset(void)$/;"	f	file:
jz_audio_reset	jz_i2s_dlv_dma_test.c	/^static void jz_audio_reset(void)$/;"	f	file:
jz_audio_reset	jz_i2s_for_4750.c	/^static void jz_audio_reset(void)$/;"	f	file:
jz_audio_reset	jz_pcm_tlv320aic1106_dma.c	/^static void jz_audio_reset(void)$/;"	f	file:
jz_audio_set_channels	jz_ac97.c	/^static short jz_audio_set_channels(int dev, short channels)$/;"	f	file:
jz_audio_set_channels	jz_i2s_4750.c	/^static short jz_audio_set_channels(int dev, short channels)$/;"	f	file:
jz_audio_set_channels	jz_i2s_dlv_dma_test.c	/^static short jz_audio_set_channels(int dev, short channels)$/;"	f	file:
jz_audio_set_channels	jz_i2s_for_4750.c	/^static short jz_audio_set_channels(int dev, short channels)$/;"	f	file:
jz_audio_set_channels	jz_pcm_tlv320aic1106_dma.c	/^static short jz_audio_set_channels(int dev, short channels)$/;"	f	file:
jz_audio_set_format	jz_ac97.c	/^static unsigned int jz_audio_set_format(int dev, unsigned int fmt)$/;"	f	file:
jz_audio_set_format	jz_i2s_4750.c	/^static unsigned int jz_audio_set_format(int dev, unsigned int fmt)$/;"	f	file:
jz_audio_set_format	jz_i2s_dlv_dma_test.c	/^static unsigned int jz_audio_set_format(int dev, unsigned int fmt)$/;"	f	file:
jz_audio_set_format	jz_i2s_for_4750.c	/^static unsigned int jz_audio_set_format(int dev, unsigned int fmt)$/;"	f	file:
jz_audio_set_format	jz_pcm_tlv320aic1106_dma.c	/^static unsigned int jz_audio_set_format(int dev, unsigned int fmt)$/;"	f	file:
jz_audio_set_speed	jz_ac97.c	/^static int jz_audio_set_speed(int dev, int rate)$/;"	f	file:
jz_audio_set_speed	jz_i2s_4750.c	/^static int jz_audio_set_speed(int dev, int rate)$/;"	f	file:
jz_audio_set_speed	jz_i2s_dlv_dma_test.c	/^static int jz_audio_set_speed(int dev, int rate)$/;"	f	file:
jz_audio_set_speed	jz_i2s_for_4750.c	/^static int jz_audio_set_speed(int dev, int rate)$/;"	f	file:
jz_audio_set_speed	jz_pcm_tlv320aic1106_dma.c	/^static int jz_audio_set_speed(int dev, int rate)$/;"	f	file:
jz_audio_speed	jz_i2s_4750.c	/^static int              jz_audio_speed;$/;"	v	file:
jz_audio_speed	jz_i2s_dlv_dma_test.c	/^static int              jz_audio_speed;$/;"	v	file:
jz_audio_speed	jz_i2s_for_4750.c	/^static int              jz_audio_speed;$/;"	v	file:
jz_audio_speed	jz_pcm_tlv320aic1106_dma.c	/^static int              jz_audio_speed;$/;"	v	file:
jz_audio_volume	jz_i2s_4750.c	/^static int		jz_audio_volume;$/;"	v	file:
jz_audio_volume	jz_i2s_dlv_dma_test.c	/^static char		jz_audio_volume;$/;"	v	file:
jz_audio_volume	jz_i2s_for_4750.c	/^static int		jz_audio_volume;$/;"	v	file:
jz_audio_volume	jz_pcm_tlv320aic1106_dma.c	/^static char		jz_audio_volume;$/;"	v	file:
jz_audio_write	jz_ac97.c	/^static ssize_t jz_audio_write(struct file *file, const char *buffer,$/;"	f	file:
jz_audio_write	jz_i2s.c	/^static ssize_t jz_audio_write(struct file *file, const char __user *buffer, size_t count, loff_t *ppos)$/;"	f	file:
jz_audio_write	jz_i2s_4750.c	/^static ssize_t jz_audio_write(struct file *file, const char *buffer, size_t count, loff_t *ppos)$/;"	f	file:
jz_audio_write	jz_i2s_dlv_dma_test.c	/^static ssize_t jz_audio_write(struct file *file, const char *buffer, size_t count, loff_t *ppos)$/;"	f	file:
jz_audio_write	jz_i2s_for_4750.c	/^static ssize_t jz_audio_write(struct file *file, const char *buffer, size_t count, loff_t *ppos)$/;"	f	file:
jz_audio_write	jz_pcm_tlv320aic1106_dma.c	/^static ssize_t jz_audio_write(struct file *file, const char *buffer, size_t count, loff_t *ppos)$/;"	f	file:
jz_codec_anti_pop	jz_i2s.c	/^void jz_codec_anti_pop(struct i2s_codec *codec, int mode)$/;"	f
jz_codec_close	jz_i2s.c	/^void jz_codec_close(struct i2s_codec *codec, int mode)$/;"	f
jz_codec_config	jz_i2s_4750.c	/^static int              jz_codec_config = 0;$/;"	v	file:
jz_codec_config	jz_i2s_dlv_dma_test.c	/^static int              jz_codec_config = 0;$/;"	v	file:
jz_codec_config	jz_i2s_for_4750.c	/^static int              jz_codec_config = 0;$/;"	v	file:
jz_codec_select_mode	jz_i2s.c	/^static void jz_codec_select_mode(struct i2s_codec *codec, int mode)$/;"	f	file:
jz_codec_set_channels	jz_i2s.c	/^static short jz_codec_set_channels(struct i2s_codec *codec, short channels, int mode)$/;"	f	file:
jz_codec_set_format	jz_i2s.c	/^static int jz_codec_set_format(struct i2s_codec *codec, unsigned int format, int mode)$/;"	f	file:
jz_codec_set_speed	jz_i2s.c	/^static int jz_codec_set_speed(struct i2s_codec *codec, int rate, int mode)$/;"	f	file:
jz_i2s_audio_fops	jz_i2s.c	/^static struct file_operations jz_i2s_audio_fops = {$/;"	v	typeref:struct:file_operations	file:
jz_i2s_audio_fops	jz_i2s_4750.c	/^static struct file_operations jz_i2s_audio_fops =$/;"	v	typeref:struct:file_operations	file:
jz_i2s_audio_fops	jz_i2s_4750.c	/^static struct file_operations jz_i2s_audio_fops;$/;"	v	typeref:struct:file_operations	file:
jz_i2s_audio_fops	jz_i2s_dlv_dma_test.c	/^static struct file_operations jz_i2s_audio_fops =$/;"	v	typeref:struct:file_operations	file:
jz_i2s_audio_fops	jz_i2s_dlv_dma_test.c	/^static struct file_operations jz_i2s_audio_fops;$/;"	v	typeref:struct:file_operations	file:
jz_i2s_audio_fops	jz_i2s_for_4750.c	/^static struct file_operations jz_i2s_audio_fops =$/;"	v	typeref:struct:file_operations	file:
jz_i2s_audio_fops	jz_i2s_for_4750.c	/^static struct file_operations jz_i2s_audio_fops;$/;"	v	typeref:struct:file_operations	file:
jz_i2s_cleanup_proc	jz_i2s_4750.c	/^static void jz_i2s_cleanup_proc(struct jz_i2s_controller_info *controller)$/;"	f	file:
jz_i2s_cleanup_proc	jz_i2s_dlv_dma_test.c	/^static void jz_i2s_cleanup_proc(struct jz_i2s_controller_info *controller)$/;"	f	file:
jz_i2s_cleanup_proc	jz_i2s_for_4750.c	/^static void jz_i2s_cleanup_proc(struct jz_i2s_controller_info *controller)$/;"	f	file:
jz_i2s_codec_init	jz_i2s.c	/^static int __init jz_i2s_codec_init(struct jz_i2s_controller_info *controller)$/;"	f	file:
jz_i2s_codec_init	jz_i2s_4750.c	/^static int __init jz_i2s_codec_init(struct jz_i2s_controller_info *controller)$/;"	f	file:
jz_i2s_codec_init	jz_i2s_dlv_dma_test.c	/^static int __init jz_i2s_codec_init(struct jz_i2s_controller_info *controller)$/;"	f	file:
jz_i2s_codec_init	jz_i2s_for_4750.c	/^static int __init jz_i2s_codec_init(struct jz_i2s_controller_info *controller)$/;"	f	file:
jz_i2s_controller_info	jz_i2s.c	/^struct jz_i2s_controller_info$/;"	s	file:
jz_i2s_controller_info	jz_i2s_4750.c	/^struct jz_i2s_controller_info$/;"	s	file:
jz_i2s_controller_info	jz_i2s_dlv_dma_test.c	/^struct jz_i2s_controller_info$/;"	s	file:
jz_i2s_controller_info	jz_i2s_for_4750.c	/^struct jz_i2s_controller_info$/;"	s	file:
jz_i2s_dma_irq	jz_i2s.c	/^static irqreturn_t jz_i2s_dma_irq (int irq, void *dev_id)$/;"	f	file:
jz_i2s_full_reset	jz_i2s_4750.c	/^static void jz_i2s_full_reset(struct jz_i2s_controller_info *controller)$/;"	f	file:
jz_i2s_full_reset	jz_i2s_dlv_dma_test.c	/^static void jz_i2s_full_reset(struct jz_i2s_controller_info *controller)$/;"	f	file:
jz_i2s_full_reset	jz_i2s_for_4750.c	/^static void jz_i2s_full_reset(struct jz_i2s_controller_info *controller)$/;"	f	file:
jz_i2s_initHw	jz_i2s_4750.c	/^static void jz_i2s_initHw(int set)$/;"	f	file:
jz_i2s_initHw	jz_i2s_dlv_dma_test.c	/^static void jz_i2s_initHw(int set)$/;"	f	file:
jz_i2s_initHw	jz_i2s_for_4750.c	/^static void jz_i2s_initHw(int set)$/;"	f	file:
jz_i2s_init_proc	jz_i2s_4750.c	/^static int jz_i2s_init_proc(struct jz_i2s_controller_info *controller)$/;"	f	file:
jz_i2s_init_proc	jz_i2s_dlv_dma_test.c	/^static int jz_i2s_init_proc(struct jz_i2s_controller_info *controller)$/;"	f	file:
jz_i2s_init_proc	jz_i2s_for_4750.c	/^static int jz_i2s_init_proc(struct jz_i2s_controller_info *controller)$/;"	f	file:
jz_i2s_ioctl_mixdev	jz_i2s.c	/^static int jz_i2s_ioctl_mixdev(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)$/;"	f	file:
jz_i2s_ioctl_mixdev	jz_i2s_4750.c	/^static int jz_i2s_ioctl_mixdev(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)$/;"	f	file:
jz_i2s_ioctl_mixdev	jz_i2s_dlv_dma_test.c	/^static int jz_i2s_ioctl_mixdev(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)$/;"	f	file:
jz_i2s_ioctl_mixdev	jz_i2s_for_4750.c	/^static int jz_i2s_ioctl_mixdev(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)$/;"	f	file:
jz_i2s_llseek	jz_i2s_4750.c	/^static loff_t jz_i2s_llseek(struct file *file, loff_t offset, int origin)$/;"	f	file:
jz_i2s_llseek	jz_i2s_dlv_dma_test.c	/^static loff_t jz_i2s_llseek(struct file *file, loff_t offset, int origin)$/;"	f	file:
jz_i2s_llseek	jz_i2s_for_4750.c	/^static loff_t jz_i2s_llseek(struct file *file, loff_t offset, int origin)$/;"	f	file:
jz_i2s_mixer_fops	jz_i2s.c	/^static struct file_operations jz_i2s_mixer_fops = $/;"	v	typeref:struct:file_operations	file:
jz_i2s_mixer_fops	jz_i2s_4750.c	/^static struct file_operations jz_i2s_mixer_fops = $/;"	v	typeref:struct:file_operations	file:
jz_i2s_mixer_fops	jz_i2s_dlv_dma_test.c	/^static struct file_operations jz_i2s_mixer_fops = $/;"	v	typeref:struct:file_operations	file:
jz_i2s_mixer_fops	jz_i2s_for_4750.c	/^static struct file_operations jz_i2s_mixer_fops = $/;"	v	typeref:struct:file_operations	file:
jz_i2s_open_mixdev	jz_i2s.c	/^static int jz_i2s_open_mixdev(struct inode *inode, struct file *file)$/;"	f	file:
jz_i2s_open_mixdev	jz_i2s_4750.c	/^static int jz_i2s_open_mixdev(struct inode *inode, struct file *file)$/;"	f	file:
jz_i2s_open_mixdev	jz_i2s_dlv_dma_test.c	/^static int jz_i2s_open_mixdev(struct inode *inode, struct file *file)$/;"	f	file:
jz_i2s_open_mixdev	jz_i2s_for_4750.c	/^static int jz_i2s_open_mixdev(struct inode *inode, struct file *file)$/;"	f	file:
jz_i2s_pm_callback	jz_i2s.c	/^static int jz_i2s_pm_callback(struct pm_dev *pm_dev, pm_request_t req, void *data)$/;"	f	file:
jz_i2s_pm_callback	jz_i2s_4750.c	/^static int jz_i2s_pm_callback(struct pm_dev *pm_dev, pm_request_t req, void *data)$/;"	f	file:
jz_i2s_pm_callback	jz_i2s_dlv_dma_test.c	/^static int jz_i2s_pm_callback(struct pm_dev *pm_dev, pm_request_t req, void *data)$/;"	f	file:
jz_i2s_pm_callback	jz_i2s_for_4750.c	/^static int jz_i2s_pm_callback(struct pm_dev *pm_dev, pm_request_t req, void *data)$/;"	f	file:
jz_i2s_record_dma_irq	jz_i2s_4750.c	/^static irqreturn_t jz_i2s_record_dma_irq (int irq, void *dev_id)$/;"	f	file:
jz_i2s_record_dma_irq	jz_i2s_dlv_dma_test.c	/^static irqreturn_t jz_i2s_record_dma_irq (int irq, void *dev_id)$/;"	f	file:
jz_i2s_record_dma_irq	jz_i2s_for_4750.c	/^static irqreturn_t jz_i2s_record_dma_irq (int irq, void *dev_id)$/;"	f	file:
jz_i2s_reinit_hw	jz_i2s.c	/^static void jz_i2s_reinit_hw(struct i2s_codec *codec, int mode)$/;"	f	file:
jz_i2s_replay_dma_irq	jz_i2s_4750.c	/^static irqreturn_t jz_i2s_replay_dma_irq (int irq, void *dev_id)$/;"	f	file:
jz_i2s_replay_dma_irq	jz_i2s_dlv_dma_test.c	/^static irqreturn_t jz_i2s_replay_dma_irq (int irq, void *dev_id)$/;"	f	file:
jz_i2s_replay_dma_irq	jz_i2s_for_4750.c	/^static irqreturn_t jz_i2s_replay_dma_irq (int irq, void *dev_id)$/;"	f	file:
jz_i2s_resume	jz_i2s.c	/^static int jz_i2s_resume(struct jz_i2s_controller_info *controller)$/;"	f	file:
jz_i2s_resume	jz_i2s_4750.c	/^static int jz_i2s_resume(struct jz_i2s_controller_info *controller)$/;"	f	file:
jz_i2s_resume	jz_i2s_dlv_dma_test.c	/^static int jz_i2s_resume(struct jz_i2s_controller_info *controller)$/;"	f	file:
jz_i2s_resume	jz_i2s_for_4750.c	/^static int jz_i2s_resume(struct jz_i2s_controller_info *controller)$/;"	f	file:
jz_i2s_suspend	jz_i2s.c	/^static int jz_i2s_suspend(struct jz_i2s_controller_info *controller, int state)$/;"	f	file:
jz_i2s_suspend	jz_i2s_4750.c	/^static int jz_i2s_suspend(struct jz_i2s_controller_info *controller, int state)$/;"	f	file:
jz_i2s_suspend	jz_i2s_dlv_dma_test.c	/^static int jz_i2s_suspend(struct jz_i2s_controller_info *controller, int state)$/;"	f	file:
jz_i2s_suspend	jz_i2s_for_4750.c	/^static int jz_i2s_suspend(struct jz_i2s_controller_info *controller, int state)$/;"	f	file:
jz_i2s_write_mixdev	jz_i2s.c	/^static int jz_i2s_write_mixdev(struct file *file, const char __user *buffer, size_t count, loff_t *ppos)$/;"	f	file:
jz_in_status_ready	jz_ac97.c	/^static inline int jz_in_status_ready(void)$/;"	f	file:
jz_mic_only	jz_i2s_4750.c	/^static int              jz_mic_only = 1;$/;"	v	file:
jz_mic_only	jz_i2s_dlv_dma_test.c	/^static int              jz_mic_only = 1;$/;"	v	file:
jz_mic_only	jz_i2s_for_4750.c	/^static int              jz_mic_only = 1;$/;"	v	file:
jz_out_command_ready	jz_ac97.c	/^static inline int jz_out_command_ready(void)$/;"	f	file:
jz_pcm_audio_fops	jz_pcm_tlv320aic1106_dma.c	/^static struct file_operations jz_pcm_audio_fops =$/;"	v	typeref:struct:file_operations	file:
jz_pcm_audio_fops	jz_pcm_tlv320aic1106_dma.c	/^static struct file_operations jz_pcm_audio_fops;$/;"	v	typeref:struct:file_operations	file:
jz_pcm_codec_init	jz_pcm_tlv320aic1106_dma.c	/^static int __init jz_pcm_codec_init(struct jz_pcm_controller_info *controller)$/;"	f	file:
jz_pcm_controller_info	jz_pcm_tlv320aic1106_dma.c	/^struct jz_pcm_controller_info {$/;"	s	file:
jz_pcm_ioctl_mixdev	jz_pcm_tlv320aic1106_dma.c	/^static int jz_pcm_ioctl_mixdev(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)$/;"	f	file:
jz_pcm_irq	jz_pcm_tlv320aic1106_dma.c	/^static irqreturn_t jz_pcm_irq(int irq, void *dev_id)$/;"	f	file:
jz_pcm_llseek	jz_pcm_tlv320aic1106_dma.c	/^static loff_t jz_pcm_llseek(struct file *file, loff_t offset, int origin)$/;"	f	file:
jz_pcm_mixer_fops	jz_pcm_tlv320aic1106_dma.c	/^static struct file_operations jz_pcm_mixer_fops = $/;"	v	typeref:struct:file_operations	file:
jz_pcm_open_mixdev	jz_pcm_tlv320aic1106_dma.c	/^static int jz_pcm_open_mixdev(struct inode *inode, struct file *file)$/;"	f	file:
jz_pcm_record_dma_irq	jz_pcm_tlv320aic1106_dma.c	/^static irqreturn_t jz_pcm_record_dma_irq(int irq, void *dev_id)$/;"	f	file:
jz_pcm_replay_dma_irq	jz_pcm_tlv320aic1106_dma.c	/^static irqreturn_t jz_pcm_replay_dma_irq(int irq, void *dev_id)$/;"	f	file:
jz_readAC97Reg	jz_ac97.c	/^static int jz_readAC97Reg (struct ac97_codec *dev, u8 reg)$/;"	f	file:
jz_update_filler	jz_ac97.c	/^static void jz_update_filler(int format, int channels)$/;"	f	file:
jz_update_filler	jz_i2s_4750.c	/^static void jz_update_filler(int format, int channels)$/;"	f	file:
jz_update_filler	jz_i2s_dlv_dma_test.c	/^static void jz_update_filler(int format, int channels)$/;"	f	file:
jz_update_filler	jz_i2s_for_4750.c	/^static void jz_update_filler(int format, int channels)$/;"	f	file:
jz_update_filler	jz_pcm_tlv320aic1106_dma.c	/^static void jz_update_filler(int format, int channels)$/;"	f	file:
jz_writeAC97Reg	jz_ac97.c	/^static int jz_writeAC97Reg (struct ac97_codec *dev, u8 reg, u16 value)$/;"	f	file:
jzcodec_mixer_info_id_name	jzcodec.c	/^void jzcodec_mixer_info_id_name(void)$/;"	f
jzcodec_mixer_old_info_id_name	jzcodec.c	/^void jzcodec_mixer_old_info_id_name(void)$/;"	f
jzcodec_reg	jzcodec.c	/^static int jzcodec_reg[2];$/;"	v	file:
jzdlv_ioctl	jzdlv.c	/^static int jzdlv_ioctl(void *context, unsigned int cmd, unsigned long arg)$/;"	f	file:
k_11025	jz_ac97.c	/^static unsigned int k_11025[] = {$/;"	v	file:
k_16000	jz_ac97.c	/^static unsigned int k_16000[] = {$/;"	v	file:
k_22050	jz_ac97.c	/^static unsigned int k_22050[] = {$/;"	v	file:
k_24000	jz_ac97.c	/^static unsigned int k_24000[] = {$/;"	v	file:
k_32000	jz_ac97.c	/^static unsigned int k_32000[] = {$/;"	v	file:
k_44100	jz_ac97.c	/^static unsigned int k_44100[] = {$/;"	v	file:
k_48000	jz_ac97.c	/^static unsigned int k_48000[] = {$/;"	v	file:
k_8000	jz_ac97.c	/^static unsigned int k_8000[] = {$/;"	v	file:
kahlua_cleanup_module	kahlua.c	/^module_exit(kahlua_cleanup_module);$/;"	v
kahlua_cleanup_module	kahlua.c	/^static void __devexit kahlua_cleanup_module(void)$/;"	f	file:
kahlua_driver	kahlua.c	/^static struct pci_driver kahlua_driver = {$/;"	v	typeref:struct:pci_driver	file:
kahlua_init_module	kahlua.c	/^module_init(kahlua_init_module);$/;"	v
kahlua_init_module	kahlua.c	/^static int __init kahlua_init_module(void)$/;"	f	file:
keyon_byte	opl3.c	/^	unsigned char   keyon_byte;$/;"	m	struct:voice_info	file:
kick	dev_table.h	/^	void (*kick)(int dev);$/;"	m	struct:midi_operations
kill_note	dev_table.h	/^	int (*kill_note) (int dev, int voice, int note, int velocity);$/;"	m	struct:synth_operations
last_devc	sb_common.c	/^static sb_devc *last_devc;	\/* For MPU401 initialization *\/$/;"	v	file:
last_dma_buffer_id	jz_i2s_4750.c	/^static int              last_dma_buffer_id;$/;"	v	file:
last_dma_buffer_id	jz_i2s_for_4750.c	/^static int              last_dma_buffer_id;$/;"	v	file:
last_jz_audio_count	jz_ac97.c	/^static int		last_jz_audio_count;$/;"	v	file:
last_playbank	msnd.h	/^	int last_playbank, last_recbank;$/;"	m	struct:multisound_dev
last_recbank	msnd.h	/^	int last_playbank, last_recbank;$/;"	m	struct:multisound_dev
last_sb	sb_common.c	/^static sb_devc *last_sb;		\/* Last sb loaded *\/$/;"	v	file:
last_status	mpu401.c	/^	  unsigned char   last_status;$/;"	m	struct:mpu_config	file:
latency	btaudio.c	/^static int latency = -1;$/;"	v	file:
lba	trident.c	/^	u32 lba; \/* Loop Begine Address, where dma buffer starts *\/$/;"	m	struct:trident_channel	file:
lbuf16	sb_audio.c	/^static signed short *lbuf16 = (signed short *)lbuf8;$/;"	v	file:
lbuf8	sb_audio.c	/^static unsigned char lbuf8[2048];$/;"	v	file:
ld2	au1550_ac97.c	/^ld2(unsigned int x)$/;"	f	file:
ld2	trident.h	/^static inline unsigned ld2(unsigned int x)$/;"	f
le2be16	dmasound/dmasound.h	42;"	d
le2be16dbl	dmasound/dmasound.h	43;"	d
leave_sysex	midi_synth.c	/^leave_sysex(int dev)$/;"	f	file:
left	hal2.h	/^	volatile u32 left;		\/* Left volume *\/$/;"	m	struct:hal2_vol_regs
left	jz_i2s_4750.c	/^	signed long left;$/;"	m	struct:left_right_sample_s	file:
left	jz_i2s_dlv_dma_test.c	/^	signed long left;$/;"	m	struct:left_right_sample_s	file:
left	jz_i2s_for_4750.c	/^	signed long left;$/;"	m	struct:left_right_sample_s	file:
left_io	opl3.c	/^	int             left_io, right_io;$/;"	m	struct:opl_devinfo	file:
left_levels	msnd.h	/^	int left_levels[32];$/;"	m	struct:multisound_dev
left_right_sample_s	jz_i2s_4750.c	/^typedef struct left_right_sample_s$/;"	s	file:
left_right_sample_s	jz_i2s_dlv_dma_test.c	/^typedef struct left_right_sample_s$/;"	s	file:
left_right_sample_s	jz_i2s_for_4750.c	/^typedef struct left_right_sample_s$/;"	s	file:
left_right_sample_t	jz_i2s_4750.c	/^} left_right_sample_t;$/;"	t	typeref:struct:left_right_sample_s	file:
left_right_sample_t	jz_i2s_dlv_dma_test.c	/^} left_right_sample_t;$/;"	t	typeref:struct:left_right_sample_s	file:
left_right_sample_t	jz_i2s_for_4750.c	/^} left_right_sample_t;$/;"	t	typeref:struct:left_right_sample_s	file:
legacy	sb_card.c	/^static struct sb_card_config *legacy = NULL;$/;"	v	typeref:struct:sb_card_config	file:
legacy	via82cxxx_audio.c	/^	unsigned legacy: 1;	\/* Has legacy ports *\/$/;"	m	struct:via_info	file:
len	dmasound/dmasound_core.c	/^    int len, ptr;$/;"	m	struct:__anon15	file:
len	midibuf.c	/^	int len, head, tail;$/;"	m	struct:midi_buf	file:
len	msnd.h	/^	size_t n, len;$/;"	m	struct:__anon5
len_tab	mpu401.c	/^static unsigned char len_tab[] =	\/* # of data bytes following a status$/;"	v	file:
levels	ad1848.c	/^	int            *levels;$/;"	m	struct:__anon1	file:
levels	pas2_mixer.c	/^static int     *levels;$/;"	v	file:
levels	sb.h	/^	   int *levels;$/;"	m	struct:sb_devc
levels	waveartist.c	/^	unsigned short	*levels;	   \/* cache of volume settings   *\/$/;"	m	struct:__anon11	file:
levels	waveartist.c	/^static unsigned short levels[SOUND_MIXER_NRDEVICES] = {$/;"	v	file:
lfield	vwsnd.c	/^	const ad1843_bitfield_t *lfield;$/;"	m	struct:ad1843_gain	file:
li_activate_dma	vwsnd.c	/^static __inline__ void li_activate_dma(dma_chan_t *chan)$/;"	f	file:
li_ad1843_wait	vwsnd.c	/^static int li_ad1843_wait(lithium_t *lith)$/;"	f	file:
li_comm1	vwsnd.c	/^static const dma_chan_desc_t li_comm1 = {$/;"	v	file:
li_comm2	vwsnd.c	/^static const dma_chan_desc_t li_comm2 = {$/;"	v	file:
li_create	vwsnd.c	/^static int __init li_create(lithium_t *lith, unsigned long baseaddr)$/;"	f	file:
li_deactivate_dma	vwsnd.c	/^static void li_deactivate_dma(dma_chan_t *chan)$/;"	f	file:
li_destroy	vwsnd.c	/^static void li_destroy(lithium_t *lith)$/;"	f	file:
li_disable_interrupts	vwsnd.c	/^static void li_disable_interrupts(lithium_t *lith, unsigned int mask)$/;"	f	file:
li_enable_interrupts	vwsnd.c	/^static void li_enable_interrupts(lithium_t *lith, unsigned int mask)$/;"	f	file:
li_get_clear_intr_status	vwsnd.c	/^static unsigned int li_get_clear_intr_status(lithium_t *lith)$/;"	f	file:
li_init	vwsnd.c	/^static int li_init(lithium_t *lith)$/;"	f	file:
li_read_USTMSC	vwsnd.c	/^static void li_read_USTMSC(dma_chan_t *chan, ustmsc_t *ustmsc)$/;"	f	file:
li_read_ad1843_reg	vwsnd.c	/^static int li_read_ad1843_reg(lithium_t *lith, int reg)$/;"	f	file:
li_read_hwptr	vwsnd.c	/^static __inline__ int li_read_hwptr(dma_chan_t *chan)$/;"	f	file:
li_read_swptr	vwsnd.c	/^static __inline__ int li_read_swptr(dma_chan_t *chan)$/;"	f	file:
li_readb	vwsnd.c	/^static __inline__ unsigned char li_readb(lithium_t *lith, int off)$/;"	f	file:
li_readl	vwsnd.c	/^static __inline__ unsigned long li_readl(lithium_t *lith, int off)$/;"	f	file:
li_setup_dma	vwsnd.c	/^static void li_setup_dma(dma_chan_t *chan,$/;"	f	file:
li_shutdown_dma	vwsnd.c	/^static void li_shutdown_dma(dma_chan_t *chan)$/;"	f	file:
li_write_ad1843_reg	vwsnd.c	/^static void li_write_ad1843_reg(lithium_t *lith, int reg, int newval)$/;"	f	file:
li_write_swptr	vwsnd.c	/^static __inline__ void li_write_swptr(dma_chan_t *chan, int val)$/;"	f	file:
li_writeb	vwsnd.c	/^static __inline__ void li_writeb(lithium_t *lith, int off, unsigned char val)$/;"	f	file:
li_writel	vwsnd.c	/^static __inline__ void li_writel(lithium_t *lith, int off, unsigned long val)$/;"	f	file:
line_bytes	btaudio.c	/^	int line_bytes;$/;"	m	struct:btaudio	file:
line_count	btaudio.c	/^	int line_count;$/;"	m	struct:btaudio	file:
line_mute_state	waveartist.c	/^	unsigned int	line_mute_state	:1;\/* set by ioctl or autoselect *\/$/;"	m	struct:__anon11	file:
list	jz_i2s.c	/^	struct list_head list;$/;"	m	struct:__anon23	typeref:struct:__anon23::list_head	file:
list	swarm_cs4297a.c	/^	struct list_head list;$/;"	m	struct:cs4297a_state	typeref:struct:cs4297a_state::list_head	file:
listsize	jz_i2s.c	/^	unsigned int listsize;$/;"	m	struct:__anon24	file:
lith	vwsnd.c	/^	lithium_t	lith;$/;"	m	struct:vwsnd_dev	file:
lith	vwsnd.c	/^	lithium_t      *lith;$/;"	m	struct:dma_chan	file:
lithium	vwsnd.c	/^typedef struct lithium {$/;"	s	file:
lithium_t	vwsnd.c	/^} lithium_t;$/;"	t	typeref:struct:lithium	file:
lo_bit	vwsnd.c	/^	char lo_bit;$/;"	m	struct:ad1843_bitfield	file:
load_mixer_volumes	soundcard.c	/^EXPORT_SYMBOL(load_mixer_volumes);$/;"	v
load_mixer_volumes	soundcard.c	/^int *load_mixer_volumes(char *name, int *levels, int present)$/;"	f
load_patch	dev_table.h	/^	int (*load_patch) (int dev, int format, const char __user *addr,$/;"	m	struct:synth_operations
loaded	ad1848.c	/^static int loaded;$/;"	v	file:
loadhex	hex2hex.c	/^int loadhex(FILE *inf, unsigned char *buf)$/;"	f
local_conversion	dev_table.h	/^	int local_conversion;$/;"	m	struct:audio_operations
local_format	dev_table.h	/^	int local_format;$/;"	m	struct:audio_operations
local_qlen	dev_table.h	/^	int (*local_qlen)(int dev);$/;"	m	struct:audio_driver
local_start_dma	dmabuf.c	/^static int local_start_dma(struct audio_operations *adev, unsigned long physaddr, int count, int dma_mode)$/;"	f	file:
lock	ad1848.c	/^	spinlock_t	lock;$/;"	m	struct:__anon1	file:
lock	au1550_ac97.c	/^	spinlock_t      lock;$/;"	m	struct:au1550_state	file:
lock	btaudio.c	/^	struct mutex lock;$/;"	m	struct:btaudio	typeref:struct:btaudio::mutex	file:
lock	dev_table.h	/^	spinlock_t lock;$/;"	m	struct:dma_buffparms
lock	dmasound/dmasound.h	/^    spinlock_t lock;$/;"	m	struct:sound_settings
lock	hal2.c	/^	spinlock_t lock;$/;"	m	struct:hal2_codec	file:
lock	i810_audio.c	/^	spinlock_t lock;$/;"	m	struct:i810_card	file:
lock	jz_ac97.c	/^	spinlock_t lock;$/;"	m	struct:buffer_queue_s	file:
lock	jz_ac97.c	/^	spinlock_t lock;$/;"	m	struct:jz_ac97_controller_info	file:
lock	jz_i2s.c	/^	spinlock_t	lock;$/;"	m	struct:__audio_pipe	file:
lock	jz_i2s_4750.c	/^	int lock;$/;"	m	struct:buffer_queue_s	file:
lock	jz_i2s_4750.c	/^	spinlock_t lock;$/;"	m	struct:jz_i2s_controller_info	file:
lock	jz_i2s_dlv_dma_test.c	/^    int lock;$/;"	m	struct:buffer_queue_s	file:
lock	jz_i2s_dlv_dma_test.c	/^    spinlock_t lock;$/;"	m	struct:jz_i2s_controller_info	file:
lock	jz_i2s_for_4750.c	/^	int lock;$/;"	m	struct:buffer_queue_s	file:
lock	jz_i2s_for_4750.c	/^	spinlock_t lock;$/;"	m	struct:jz_i2s_controller_info	file:
lock	jz_pcm_tlv320aic1106_dma.c	/^	int lock;$/;"	m	struct:buffer_queue_s	file:
lock	jz_pcm_tlv320aic1106_dma.c	/^	spinlock_t lock;$/;"	m	struct:jz_pcm_controller_info	file:
lock	mpu401.c	/^	  spinlock_t	lock;$/;"	m	struct:mpu_config	file:
lock	msnd.h	/^	spinlock_t lock;$/;"	m	struct:multisound_dev
lock	sb.h	/^	   spinlock_t lock;$/;"	m	struct:sb_devc
lock	sound_timer.c	/^static spinlock_t lock;$/;"	v	file:
lock	sscape.c	/^	spinlock_t lock;$/;"	m	struct:sscape_info	file:
lock	swarm_cs4297a.c	/^	spinlock_t lock;$/;"	m	struct:cs4297a_state	file:
lock	trident.c	/^	spinlock_t lock;$/;"	m	struct:trident_card	file:
lock	uart401.c	/^	spinlock_t	lock;$/;"	m	struct:uart401_devc	file:
lock	v_midi.h	/^	   spinlock_t lock;$/;"	m	struct:vmidi_devc
lock	via82cxxx_audio.c	/^	spinlock_t lock;$/;"	m	struct:via_info	file:
lock	vwsnd.c	/^	spinlock_t	lock;		\/* protects codec and UST\/MSC access *\/$/;"	m	struct:lithium	file:
lock	vwsnd.c	/^	spinlock_t	lock;$/;"	m	struct:vwsnd_port	file:
lock_set_fmt	trident.c	/^static inline int lock_set_fmt(struct trident_state* state)$/;"	f	file:
locked	dmasound/dmasound.h	/^    int locked ;		\/* params cannot be modified when != 0 *\/$/;"	m	struct:sound_queue
locked_rate	via82cxxx_audio.c	/^	unsigned locked_rate : 1;$/;"	m	struct:via_info	file:
lv_map	opl3.c	/^	int             lv_map[MAX_VOICE];$/;"	m	struct:opl_devinfo	file:
m6850intr	uart6850.c	/^static irqreturn_t m6850intr(int irq, void *dev_id)$/;"	f	file:
m_buf	dev_table.h	/^    	unsigned char   m_buf[MI_MAX];$/;"	m	struct:midi_input_info
m_buf	mpu401.c	/^	  unsigned char   m_buf[MBUF_MAX];$/;"	m	struct:mpu_config	file:
m_busy	dev_table.h	/^	volatile int             m_busy;$/;"	m	struct:midi_input_info
m_busy	mpu401.c	/^	  int             m_busy;$/;"	m	struct:mpu_config	file:
m_left	dev_table.h	/^    	int             m_left;$/;"	m	struct:midi_input_info
m_left	mpu401.c	/^	  int             m_left;$/;"	m	struct:mpu_config	file:
m_ops	v_midi.c	/^	struct midi_operations m_ops[2];$/;"	m	struct:vmidi_memory	typeref:struct:vmidi_memory::midi_operations	file:
m_prev_status	dev_table.h	/^	unsigned char	m_prev_status;	\/* For running status *\/$/;"	m	struct:midi_input_info
m_ptr	dev_table.h	/^    	int             m_ptr;$/;"	m	struct:midi_input_info
m_ptr	mpu401.c	/^	  int             m_ptr;$/;"	m	struct:mpu_config	file:
m_state	dev_table.h	/^    	int             m_state;$/;"	m	struct:midi_input_info
m_state	mpu401.c	/^	  int             m_state;$/;"	m	struct:mpu_config	file:
mach	dmasound/dmasound.h	/^    MACHINE mach;	\/* machine dependent things *\/$/;"	m	struct:sound_settings
machAmiga	dmasound/dmasound_paula.c	/^static MACHINE machAmiga = {$/;"	v	file:
machFalcon	dmasound/dmasound_atari.c	/^static MACHINE machFalcon = {$/;"	v	file:
machQ40	dmasound/dmasound_q40.c	/^static MACHINE machQ40 = {$/;"	v	file:
machTT	dmasound/dmasound_atari.c	/^static MACHINE machTT = {$/;"	v	file:
mach_heartbeat	dmasound/dmasound_paula.c	95;"	d	file:
machine_is_netwinder	waveartist.c	151;"	d	file:
magic	i810_audio.c	/^	unsigned int magic;$/;"	m	struct:i810_card	file:
magic	i810_audio.c	/^	unsigned int magic;$/;"	m	struct:i810_state	file:
magic	swarm_cs4297a.c	/^	unsigned int magic;$/;"	m	struct:cs4297a_state	file:
magic	trident.c	/^	unsigned int magic;$/;"	m	struct:trident_card	file:
magic	trident.c	/^	unsigned int magic;$/;"	m	struct:trident_state	file:
main	bin2hex.c	/^int main( int argc, const char * argv [] )$/;"	f
main	hex2hex.c	/^int main( int argc, const char * argv [] )$/;"	f
major	sb.h	/^	   int minor, major;$/;"	m	struct:sb_devc
make_risc	btaudio.c	/^static int make_risc(struct btaudio *bta)$/;"	f	file:
map	sound_config.h	/^		unsigned short map[SYNTH_MAX_VOICES]; \/* (ch << 8) | (note+1) *\/$/;"	m	struct:voice_alloc_info
mapped	au1550_ac97.c	/^		unsigned        mapped:1;$/;"	m	struct:au1550_state::dmabuf	file:
mapped	i810_audio.c	/^		unsigned mapped:1;$/;"	m	struct:i810_state::dmabuf	file:
mapped	swarm_cs4297a.c	/^        unsigned mapped:1;	\/\/ Buffer mapped in cs4297a_mmap()?$/;"	m	struct:serdma_s	file:
mapped	trident.c	/^		unsigned mapped:1;$/;"	m	struct:trident_state::dmabuf	file:
mapping_flags	dev_table.h	/^	int	 mapping_flags;$/;"	m	struct:dma_buffparms
mask2attr	trident.c	/^static u16 mask2attr[] = {$/;"	v	file:
master	hal2.c	/^	unsigned int master;		\/* Master frequency *\/$/;"	m	struct:hal2_codec	file:
master	hal2.c	/^	unsigned int master;$/;"	m	struct:hal2_mixer	file:
max	waveartist.c	/^	unsigned char	max;$/;"	m	struct:mix_ent	file:
max_active	dmasound/dmasound.h	/^    int max_active;		\/* in-use fragments <= max_count *\/$/;"	m	struct:sound_queue
max_byte_counter	dev_table.h	/^	unsigned long	 max_byte_counter;$/;"	m	struct:dma_buffparms
max_count	dmasound/dmasound.h	/^    int max_count;		\/* actual # fragments <= numBufs *\/$/;"	m	struct:sound_queue
max_dsp_speed	dmasound/dmasound.h	/^    int max_dsp_speed;$/;"	m	struct:__anon17
max_fragment	dev_table.h	/^	int max_fragment;	\/* 0 == unlimited *\/$/;"	m	struct:audio_operations
max_fragments	dev_table.h	/^	int	 max_fragments;$/;"	m	struct:dma_buffparms
max_mididev	sequencer.c	/^static int      max_mididev;$/;"	v	file:
max_synthdev	sequencer.c	/^static int      max_synthdev;$/;"	v	file:
max_timebase	mpu401.c	/^static int      max_timebase = 8;	\/* 8*24=192 ppqn *\/$/;"	v	file:
max_voice	sound_config.h	/^		int max_voice;$/;"	m	struct:voice_alloc_info
mdelay	msnd.h	256;"	d
me	opl3.c	/^static int me;$/;"	v	file:
mem	btaudio.c	/^	unsigned long  mem;$/;"	m	struct:btaudio	file:
mem	jz_i2s.c	/^	unsigned int	*mem;$/;"	m	struct:__audio_pipe	file:
mem	msnd_pinnacle.c	/^	int mem;$/;"	m	struct:msnd_pinnacle_cfg_device	file:
memid	msnd.h	/^	int memid, irqid;$/;"	m	struct:multisound_dev
memptr	sound_config.h	/^	void *memptr;           \/* Module memory chainer *\/$/;"	m	struct:address_info
metronome_mode	mpu401.c	/^static int      metronome_mode;$/;"	v	file:
mic_gain	jz_i2s.c	/^	int	mic_gain;$/;"	m	struct:i2s_codec	file:
micpreamp	swarm_cs4297a.c	/^		unsigned short micpreamp;$/;"	m	struct:cs4297a_state::__anon21	file:
midi1	v_midi.c	/^static int midi1,midi2;$/;"	v	file:
midi2	v_midi.c	/^static int midi1,midi2;$/;"	v	file:
midi2synth	midi_synth.c	/^static int      midi2synth[MAX_MIDI_DEV];$/;"	v	file:
midi_broken	sb.h	/^	   int midi_broken;$/;"	m	struct:sb_devc
midi_buf	midibuf.c	/^struct midi_buf$/;"	s	file:
midi_busy	pas2_midi.c	/^static int      midi_busy, input_opened;$/;"	v	file:
midi_dev	dev_table.h	/^	int midi_dev;$/;"	m	struct:synth_operations
midi_devc	via82cxxx_audio.c	/^        void *midi_devc;$/;"	m	struct:via_info	file:
midi_devs	dev_table.c	/^EXPORT_SYMBOL(midi_devs);$/;"	v
midi_devs	dev_table.c	/^struct midi_operations *midi_devs[MAX_MIDI_DEV];$/;"	v	typeref:struct:midi_operations
midi_in_buf	midibuf.c	/^static struct midi_buf *midi_in_buf[MAX_MIDI_DEV] = {NULL};$/;"	v	typeref:struct:midi_buf	file:
midi_in_interrupt	msnd.h	/^	void (*midi_in_interrupt)(struct multisound_dev *);$/;"	m	struct:multisound_dev
midi_info	via82cxxx_audio.c	/^        struct address_info midi_info;$/;"	m	struct:via_info	typeref:struct:via_info::address_info	file:
midi_input_info	dev_table.h	/^struct midi_input_info $/;"	s
midi_input_intr	midibuf.c	/^static void midi_input_intr(int dev, unsigned char data)$/;"	f	file:
midi_input_intr	pas2_midi.c	/^static void     (*midi_input_intr) (int dev, unsigned char data);$/;"	v	file:
midi_input_intr	sb.h	/^	   void (*midi_input_intr) (int dev, unsigned char data);$/;"	m	struct:sb_devc
midi_input_intr	uart401.c	/^	void            (*midi_input_intr) (int dev, unsigned char data);$/;"	m	struct:uart401_devc	file:
midi_input_intr	uart6850.c	/^static void (*midi_input_intr) (int dev, unsigned char data);$/;"	v	file:
midi_input_intr	v_midi.h	/^	   void (*midi_input_intr) (int dev, unsigned char data);$/;"	m	struct:vmidi_devc
midi_irq_cookie	sb.h	/^	   void *midi_irq_cookie;		\/* IRQ cookie for the midi *\/$/;"	m	struct:sb_devc
midi_mem	v_midi.c	/^static void *midi_mem = NULL;$/;"	v	file:
midi_opened	sequencer.c	/^static int      midi_opened[MAX_MIDI_DEV];$/;"	v	file:
midi_operations	dev_table.h	/^struct midi_operations $/;"	s
midi_out_buf	midibuf.c	/^static struct midi_buf *midi_out_buf[MAX_MIDI_DEV] = {NULL};$/;"	v	typeref:struct:midi_buf	file:
midi_outc	midi_synth.c	/^midi_outc(int midi_dev, int data)$/;"	f	file:
midi_outc	sequencer.c	/^static void midi_outc(int dev, unsigned char data)$/;"	f	file:
midi_output_intr	midibuf.c	/^static void midi_output_intr(int dev)$/;"	f	file:
midi_parms	midibuf.c	/^struct midi_parms$/;"	s	file:
midi_poll	midibuf.c	/^static void midi_poll(unsigned long dummy)$/;"	f	file:
midi_sleeper	midibuf.c	/^static wait_queue_head_t midi_sleeper[MAX_MIDI_DEV];$/;"	v	file:
midi_synth_aftertouch	midi_synth.c	/^EXPORT_SYMBOL(midi_synth_aftertouch);$/;"	v
midi_synth_aftertouch	midi_synth.c	/^void midi_synth_aftertouch(int dev, int channel, int pressure)$/;"	f
midi_synth_bender	midi_synth.c	/^EXPORT_SYMBOL(midi_synth_bender);$/;"	v
midi_synth_bender	midi_synth.c	/^midi_synth_bender(int dev, int channel, int value)$/;"	f
midi_synth_close	midi_synth.c	/^EXPORT_SYMBOL(midi_synth_close);$/;"	v
midi_synth_close	midi_synth.c	/^midi_synth_close(int dev)$/;"	f
midi_synth_controller	midi_synth.c	/^EXPORT_SYMBOL(midi_synth_controller);$/;"	v
midi_synth_controller	midi_synth.c	/^midi_synth_controller(int dev, int channel, int ctrl_num, int value)$/;"	f
midi_synth_hw_control	midi_synth.c	/^EXPORT_SYMBOL(midi_synth_hw_control);$/;"	v
midi_synth_hw_control	midi_synth.c	/^midi_synth_hw_control(int dev, unsigned char *event)$/;"	f
midi_synth_input	midi_synth.c	/^midi_synth_input(int orig_dev, unsigned char data)$/;"	f	file:
midi_synth_ioctl	midi_synth.c	/^EXPORT_SYMBOL(midi_synth_ioctl);$/;"	v
midi_synth_ioctl	midi_synth.c	/^int midi_synth_ioctl(int dev, unsigned int cmd, void __user *arg)$/;"	f
midi_synth_kill_note	midi_synth.c	/^EXPORT_SYMBOL(midi_synth_kill_note);$/;"	v
midi_synth_kill_note	midi_synth.c	/^midi_synth_kill_note(int dev, int channel, int note, int velocity)$/;"	f
midi_synth_load_patch	midi_synth.c	/^EXPORT_SYMBOL(midi_synth_load_patch);$/;"	v
midi_synth_load_patch	midi_synth.c	/^midi_synth_load_patch(int dev, int format, const char __user *addr,$/;"	f
midi_synth_open	midi_synth.c	/^EXPORT_SYMBOL(midi_synth_open);$/;"	v
midi_synth_open	midi_synth.c	/^midi_synth_open(int dev, int mode)$/;"	f
midi_synth_output	midi_synth.c	/^midi_synth_output(int dev)$/;"	f	file:
midi_synth_panning	midi_synth.c	/^EXPORT_SYMBOL(midi_synth_panning);$/;"	v
midi_synth_panning	midi_synth.c	/^void midi_synth_panning(int dev, int channel, int pressure)$/;"	f
midi_synth_reset	midi_synth.c	/^EXPORT_SYMBOL(midi_synth_reset);$/;"	v
midi_synth_reset	midi_synth.c	/^midi_synth_reset(int dev)$/;"	f
midi_synth_send_sysex	midi_synth.c	/^EXPORT_SYMBOL(midi_synth_send_sysex);$/;"	v
midi_synth_send_sysex	midi_synth.c	/^midi_synth_send_sysex(int dev, unsigned char *bytes, int len)$/;"	f
midi_synth_set_instr	midi_synth.c	/^EXPORT_SYMBOL(midi_synth_set_instr);$/;"	v
midi_synth_set_instr	midi_synth.c	/^midi_synth_set_instr(int dev, int channel, int instr_no)$/;"	f
midi_synth_setup_voice	midi_synth.c	/^EXPORT_SYMBOL(midi_synth_setup_voice);$/;"	v
midi_synth_setup_voice	midi_synth.c	/^midi_synth_setup_voice(int dev, int voice, int channel)$/;"	f
midi_synth_start_note	midi_synth.c	/^EXPORT_SYMBOL(midi_synth_start_note);$/;"	v
midi_synth_start_note	midi_synth.c	/^midi_synth_start_note(int dev, int channel, int note, int velocity)$/;"	f
midi_written	sequencer.c	/^static int      midi_written[MAX_MIDI_DEV];$/;"	v	file:
minDev	dmasound/dmasound.h	/^    int minDev;		\/* minor device number currently open *\/$/;"	m	struct:sound_settings
min_dsp_speed	dmasound/dmasound.h	/^    int min_dsp_speed;$/;"	m	struct:__anon17
min_fragment	dev_table.h	/^	int min_fragment;	\/* 0 == unlimited *\/$/;"	m	struct:audio_operations
minor	sb.h	/^	   int minor, major;$/;"	m	struct:sb_devc
minor	soundcard.c	/^	unsigned short minor;$/;"	m	struct:__anon19	file:
miscint_bits	trident.h	/^enum miscint_bits {$/;"	g
mix	swarm_cs4297a.c	/^	} mix;$/;"	m	struct:cs4297a_state	typeref:struct:cs4297a_state::__anon21	file:
mix	waveartist.c	/^	const struct waveartist_mixer_info *mix;$/;"	m	struct:__anon11	typeref:struct:__anon11::waveartist_mixer_info	file:
mix_cvt	ad1848_mixer.h	/^static char mix_cvt[101] = {$/;"	v
mix_devices	ad1848.c	/^	mixer_ents     *mix_devices;$/;"	m	struct:__anon1	file:
mix_devs	waveartist.c	/^static const struct mix_ent mix_devs[SOUND_MIXER_NRDEVICES] = {$/;"	v	typeref:struct:mix_ent	file:
mix_ent	waveartist.c	/^struct mix_ent {$/;"	s	file:
mix_mutex	vwsnd.c	/^	struct mutex mix_mutex;$/;"	m	struct:vwsnd_dev	typeref:struct:vwsnd_dev::mutex	file:
mix_write	pas2_mixer.c	/^mix_write(unsigned char data, int ioaddr)$/;"	f
mixcount	btaudio.c	/^	int mixcount;$/;"	m	struct:btaudio	file:
mixdev_ioctl	au1550_ac97.c	/^mixdev_ioctl(struct ac97_codec *codec, unsigned int cmd,$/;"	f	file:
mixer	ac97_codec.c	/^	int mixer;$/;"	m	struct:mixer_defaults	file:
mixer	btaudio.c	/^static unsigned int mixer = -1;$/;"	v	file:
mixer	dmasound/dmasound_core.c	/^} mixer;$/;"	v	typeref:struct:__anon14	file:
mixer	hal2.c	/^	struct hal2_mixer mixer;$/;"	m	struct:hal2_card	typeref:struct:hal2_card::hal2_mixer	file:
mixer	pss.c	/^	pss_mixerdata   mixer;$/;"	m	struct:pss_confdata	file:
mixer_caps	sb.h	/^	   int mixer_caps, recmask, outmask, supported_devices;$/;"	m	struct:sb_devc
mixer_def	ad1848_mixer.h	/^struct mixer_def {$/;"	s
mixer_def	sb.h	/^struct mixer_def {$/;"	s
mixer_defaults	ac97_codec.c	/^static struct mixer_defaults {$/;"	s	file:
mixer_defaults	ac97_codec.c	/^} mixer_defaults[SOUND_MIXER_NRDEVICES] = {$/;"	v	typeref:struct:mixer_defaults	file:
mixer_dev	btaudio.c	/^	int            mixer_dev;$/;"	m	struct:btaudio	file:
mixer_dev	dev_table.h	/^	int mixer_dev;$/;"	m	struct:audio_operations
mixer_devs	dev_table.c	/^EXPORT_SYMBOL(mixer_devs);$/;"	v
mixer_devs	dev_table.c	/^struct mixer_operations *mixer_devs[MAX_MIXER_DEV];$/;"	v	typeref:struct:mixer_operations
mixer_ent	ad1848_mixer.h	/^typedef struct mixer_def mixer_ent;$/;"	t	typeref:struct:mixer_def
mixer_ent	sb.h	/^typedef struct mixer_def mixer_ent;$/;"	t	typeref:struct:mixer_def
mixer_ents	ad1848_mixer.h	/^typedef mixer_ent mixer_ents[2];$/;"	t
mixer_fops	dmasound/dmasound_core.c	/^static const struct file_operations mixer_fops =$/;"	v	typeref:struct:file_operations	file:
mixer_get	msnd_pinnacle.c	/^static int mixer_get(int d)$/;"	f	file:
mixer_init	dmasound/dmasound.h	/^    void (*mixer_init)(void);		\/* optional *\/$/;"	m	struct:__anon17
mixer_init	dmasound/dmasound_core.c	/^static void mixer_init(void)$/;"	f	file:
mixer_ioctl	dmasound/dmasound.h	/^    int (*mixer_ioctl)(u_int, u_long);	\/* optional *\/$/;"	m	struct:__anon17
mixer_ioctl	dmasound/dmasound_core.c	/^static int mixer_ioctl(struct inode *inode, struct file *file, u_int cmd,$/;"	f	file:
mixer_ioctl	jz_i2s_4750.c	/^	int  (*mixer_ioctl)(struct i2s_codec *codec, unsigned int cmd, unsigned long arg);$/;"	m	struct:i2s_codec	file:
mixer_ioctl	jz_i2s_dlv_dma_test.c	/^    int  (*mixer_ioctl)(struct i2s_codec *codec, unsigned int cmd, unsigned long arg);$/;"	m	struct:i2s_codec	file:
mixer_ioctl	jz_i2s_for_4750.c	/^	int  (*mixer_ioctl)(struct i2s_codec *codec, unsigned int cmd, unsigned long arg);$/;"	m	struct:i2s_codec	file:
mixer_ioctl	jz_pcm_tlv320aic1106_dma.c	/^	int  (*mixer_ioctl)(struct pcm_codec *codec, unsigned int cmd, unsigned long arg);$/;"	m	struct:pcm_codec	file:
mixer_ioctl	msnd_pinnacle.c	/^static int mixer_ioctl(unsigned int cmd, unsigned long arg)$/;"	f	file:
mixer_ioctl	swarm_cs4297a.c	/^static int mixer_ioctl(struct cs4297a_state *s, unsigned int cmd,$/;"	f	file:
mixer_minor	msnd.h	/^	int dsp_minor, mixer_minor;$/;"	m	struct:multisound_dev
mixer_minor	vwsnd.c	/^	int		mixer_minor;	\/* minor number of mixer device *\/$/;"	m	struct:vwsnd_dev	file:
mixer_mod_count	msnd.h	/^	int mixer_mod_count;$/;"	m	struct:multisound_dev
mixer_open	dmasound/dmasound_core.c	/^static int mixer_open(struct inode *inode, struct file *file)$/;"	f	file:
mixer_operations	dev_table.h	/^struct mixer_operations $/;"	s
mixer_output	pas2_mixer.c	/^mixer_output(int right_vol, int left_vol, int div, int bits,$/;"	f	file:
mixer_output_port	ad1848.c	/^	int             mixer_output_port;$/;"	m	struct:__anon1	file:
mixer_print_ioc_cmd	jz_i2s.c	/^void mixer_print_ioc_cmd(int cmd)$/;"	f
mixer_read	kahlua.c	/^static u8 __devinit mixer_read(unsigned long io, u8 reg)$/;"	f	file:
mixer_read_ioctl	vwsnd.c	/^static int mixer_read_ioctl(vwsnd_dev_t *devc, unsigned int nr, void __user *arg)$/;"	f	file:
mixer_regs	trident.c	/^	u16 mixer_regs[64][NR_AC97];	\/* Made card local by Alan *\/$/;"	m	struct:trident_card	file:
mixer_regs	trident.c	/^	unsigned mixer_regs[ALI_MIXER_REGS];$/;"	m	struct:ali_saved_registers	file:
mixer_regs_ready	trident.c	/^	int mixer_regs_ready;$/;"	m	struct:trident_card	file:
mixer_release	dmasound/dmasound_core.c	/^static int mixer_release(struct inode *inode, struct file *file)$/;"	f	file:
mixer_reroute	ad1848.c	/^	short           mixer_reroute[32];$/;"	m	struct:__anon1	file:
mixer_set	msnd_pinnacle.c	/^static int mixer_set(int d, int value)$/;"	f	file:
mixer_setup	msnd_pinnacle.c	/^static void mixer_setup(void)$/;"	f	file:
mixer_state	jz_i2s_4750.c	/^	unsigned int mixer_state[SOUND_MIXER_NRDEVICES];$/;"	m	struct:i2s_codec	file:
mixer_state	jz_i2s_dlv_dma_test.c	/^    unsigned int mixer_state[SOUND_MIXER_NRDEVICES];$/;"	m	struct:i2s_codec	file:
mixer_state	jz_i2s_for_4750.c	/^	unsigned int mixer_state[SOUND_MIXER_NRDEVICES];$/;"	m	struct:i2s_codec	file:
mixer_state	jz_pcm_tlv320aic1106_dma.c	/^	unsigned int mixer_state[SOUND_MIXER_NRDEVICES];$/;"	m	struct:pcm_codec	file:
mixer_tab	sb.h	/^typedef struct mixer_def mixer_tab[32][2];$/;"	t	typeref:struct:mixer_def
mixer_unit	dmasound/dmasound_core.c	/^static int mixer_unit = -1;$/;"	v	file:
mixer_vol	via82cxxx_audio.c	/^	int mixer_vol;		\/* 8233\/35 volume  - not yet implemented *\/$/;"	m	struct:via_info	file:
mixer_vols	soundcard.c	/^static mixer_vol_table mixer_vols[MAX_MIXER_DEV];$/;"	v	file:
mixer_write_ioctl	vwsnd.c	/^static int mixer_write_ioctl(vwsnd_dev_t *devc, unsigned int nr, void __user *arg)$/;"	f	file:
mixtable	hal2.c	/^} mixtable[SOUND_MIXER_NRDEVICES] = {$/;"	v	typeref:struct:__anon4	file:
mmap	dev_table.h	/^	void (*mmap)(int dev);$/;"	m	struct:audio_driver
mmio	btaudio.c	/^	unsigned long  __iomem *mmio;$/;"	m	struct:btaudio	file:
mod	hal2.c	/^	unsigned short mod;		\/* MOD value *\/$/;"	m	struct:hal2_codec	file:
modcnt	hal2.c	/^	int modcnt;$/;"	m	struct:hal2_mixer	file:
modcnt	jz_i2s_4750.c	/^	int modcnt;$/;"	m	struct:i2s_codec	file:
modcnt	jz_i2s_dlv_dma_test.c	/^    int modcnt;$/;"	m	struct:i2s_codec	file:
modcnt	jz_i2s_for_4750.c	/^	int modcnt;$/;"	m	struct:i2s_codec	file:
modcnt	jz_pcm_tlv320aic1106_dma.c	/^	int modcnt;$/;"	m	struct:pcm_codec	file:
modcnt	swarm_cs4297a.c	/^		unsigned int modcnt;$/;"	m	struct:cs4297a_state::__anon21	file:
mode	mpu401.c	/^	int             mode;$/;"	m	struct:mpu_config	file:
mode	msnd.h	/^	mode_t mode;$/;"	m	struct:multisound_dev
mode	opl3.c	/^	int             mode;$/;"	m	struct:voice_info	file:
mode	soundcard.c	/^	umode_t mode;$/;"	m	struct:__anon19	file:
mode_control	pas2_mixer.c	/^static int      mode_control;$/;"	v	file:
model	ad1848.c	/^	int             model;$/;"	m	struct:__anon1	file:
model	opl3.c	/^	int             model;$/;"	m	struct:opl_devinfo	file:
model	sb.h	/^	   int model, submodel;$/;"	m	struct:sb_devc
modify_counter	dev_table.h	/^	int modify_counter;$/;"	m	struct:mixer_operations
modify_counter	dmasound/dmasound_core.c	/^    int modify_counter;$/;"	m	struct:__anon14	file:
mpu	sb_card.h	/^	int                 mpu;$/;"	m	struct:sb_card_config
mpu	trix.c	/^static int mpu;$/;"	v	file:
mpu401_buffer_status	mpu401.c	/^static int mpu401_buffer_status(int dev)$/;"	f	file:
mpu401_chk_version	mpu401.c	/^static void mpu401_chk_version(int n, struct mpu_config *devc)$/;"	f	file:
mpu401_close	mpu401.c	/^static void mpu401_close(int dev)$/;"	f	file:
mpu401_command	mpu401.c	/^static int mpu401_command(int dev, mpu_command_rec * cmd)$/;"	f	file:
mpu401_end_read	mpu401.c	/^static int mpu401_end_read(int dev)$/;"	f	file:
mpu401_input_loop	mpu401.c	/^static void mpu401_input_loop(struct mpu_config *devc)$/;"	f	file:
mpu401_ioctl	mpu401.c	/^static int mpu401_ioctl(int dev, unsigned cmd, void __user *arg)$/;"	f	file:
mpu401_kick	mpu401.c	/^static void mpu401_kick(int dev)$/;"	f	file:
mpu401_midi_operations	mpu401.c	/^static struct midi_operations mpu401_midi_operations[MAX_MIDI_DEV];$/;"	v	typeref:struct:midi_operations	file:
mpu401_midi_proto	mpu401.c	/^static struct midi_operations mpu401_midi_proto =$/;"	v	typeref:struct:midi_operations	file:
mpu401_open	mpu401.c	/^static int mpu401_open(int dev, int mode,$/;"	f	file:
mpu401_out	mpu401.c	/^static int mpu401_out(int dev, unsigned char midi_byte)$/;"	f	file:
mpu401_prefix_cmd	mpu401.c	/^static int mpu401_prefix_cmd(int dev, unsigned char status)$/;"	f	file:
mpu401_start_read	mpu401.c	/^static int mpu401_start_read(int dev)$/;"	f	file:
mpu401_status	mpu401.c	/^static inline int mpu401_status(struct mpu_config *devc)$/;"	f	file:
mpu401_synth_operations	mpu401.c	/^static struct synth_operations *mpu401_synth_operations[MAX_MIDI_DEV];$/;"	v	typeref:struct:synth_operations	file:
mpu401_synth_proto	mpu401.c	/^static struct synth_operations mpu401_synth_proto =$/;"	v	typeref:struct:synth_operations	file:
mpu_base	aedsp16.c	/^	int mpu_base;           \/* base I\/O for MPU-401 emulation       *\/$/;"	m	struct:aedsp16_info	file:
mpu_base	aedsp16.c	/^static int __initdata mpu_base = -1;$/;"	v	file:
mpu_base	cs4232.c	/^static int mpu_base, mpu_irq;$/;"	v	file:
mpu_cmd	mpu401.c	/^static int mpu_cmd(int dev, int cmd, int data)$/;"	f	file:
mpu_config	mpu401.c	/^struct mpu_config$/;"	s	file:
mpu_detected	cs4232.c	/^static int mpu_detected;$/;"	v	file:
mpu_input_scanner	mpu401.c	/^static int mpu_input_scanner(struct mpu_config *devc, unsigned char midic)$/;"	f	file:
mpu_io	sb_card.c	/^static int __initdata mpu_io	= 0;$/;"	v	file:
mpu_io	sscape.c	/^static int __initdata mpu_io = -1;$/;"	v	file:
mpu_io	trix.c	/^static int __initdata mpu_io	= -1;$/;"	v	file:
mpu_irq	aedsp16.c	/^	int mpu_irq;            \/* irq for mpu401 interface I\/O         *\/$/;"	m	struct:aedsp16_info	file:
mpu_irq	aedsp16.c	/^static int __initdata mpu_irq = -1;$/;"	v	file:
mpu_irq	cs4232.c	/^static int mpu_base, mpu_irq;$/;"	v	file:
mpu_irq	sscape.c	/^static int __initdata mpu_irq = -1;$/;"	v	file:
mpu_irq	trix.c	/^static int __initdata mpu_irq	= -1;$/;"	v	file:
mpu_start_timer	mpu401.c	/^static int mpu_start_timer(int midi_dev)$/;"	f	file:
mpu_synth_close	mpu401.c	/^static void mpu_synth_close(int dev)$/;"	f	file:
mpu_synth_info	mpu401.c	/^static struct synth_info mpu_synth_info[MAX_MIDI_DEV];$/;"	v	typeref:struct:synth_info	file:
mpu_synth_info_proto	mpu401.c	/^static struct synth_info mpu_synth_info_proto = {$/;"	v	typeref:struct:synth_info	file:
mpu_synth_ioctl	mpu401.c	/^static int mpu_synth_ioctl(int dev, unsigned int cmd, void __user *arg)$/;"	f	file:
mpu_synth_open	mpu401.c	/^static int mpu_synth_open(int dev, int mode)$/;"	f	file:
mpu_timer	mpu401.c	/^static struct sound_timer_operations mpu_timer =$/;"	v	typeref:struct:sound_timer_operations	file:
mpu_timer_arm	mpu401.c	/^static void mpu_timer_arm(int dev, long time)$/;"	f	file:
mpu_timer_close	mpu401.c	/^static void mpu_timer_close(int dev)$/;"	f	file:
mpu_timer_event	mpu401.c	/^static int mpu_timer_event(int dev, unsigned char *event)$/;"	f	file:
mpu_timer_get_time	mpu401.c	/^static unsigned long mpu_timer_get_time(int dev)$/;"	f	file:
mpu_timer_init	mpu401.c	/^static int mpu_timer_init(int midi_dev)$/;"	f	file:
mpu_timer_interrupt	mpu401.c	/^static void mpu_timer_interrupt(void)$/;"	f	file:
mpu_timer_ioctl	mpu401.c	/^static int mpu_timer_ioctl(int dev, unsigned int command, void __user *arg)$/;"	f	file:
mpu_timer_open	mpu401.c	/^static int mpu_timer_open(int dev, int mode)$/;"	f	file:
mpubase	aedsp16.c	/^	int mpubase;$/;"	m	struct:d_hcfg	file:
mpucnf	sb_card.h	/^	struct address_info mpucnf;$/;"	m	struct:sb_card_config	typeref:struct:sb_card_config::address_info
mpuintr	mpu401.c	/^static irqreturn_t mpuintr(int irq, void *dev_id)$/;"	f	file:
mpuio	cs4232.c	/^static int __initdata mpuio	= -1;$/;"	v	file:
mpuirq	cs4232.c	/^static int __initdata mpuirq	= -1;$/;"	v	file:
msc	vwsnd.c	/^	unsigned long msc;$/;"	m	struct:ustmsc	file:
mscreg	vwsnd.c	/^	int mscreg;$/;"	m	struct:dma_chan_desc	file:
msdn_cleanup	msnd_pinnacle.c	/^module_exit(msdn_cleanup);$/;"	v
msdn_cleanup	msnd_pinnacle.c	/^static void __exit msdn_cleanup(void)$/;"	f	file:
msndClassic	msnd.h	/^	enum { msndClassic, msndPinnacle } type;$/;"	e	enum:multisound_dev::__anon6
msndPinnacle	msnd.h	/^	enum { msndClassic, msndPinnacle } type;$/;"	e	enum:multisound_dev::__anon6
msnd_activate_logical	msnd_pinnacle.c	/^static int __init msnd_activate_logical(int cfg, int num)$/;"	f	file:
msnd_disable_irq	msnd.c	/^EXPORT_SYMBOL(msnd_disable_irq);$/;"	v
msnd_disable_irq	msnd.c	/^int msnd_disable_irq(multisound_dev_t *dev)$/;"	f
msnd_enable_irq	msnd.c	/^EXPORT_SYMBOL(msnd_enable_irq);$/;"	v
msnd_enable_irq	msnd.c	/^int msnd_enable_irq(multisound_dev_t *dev)$/;"	f
msnd_fifo	msnd.h	/^} msnd_fifo;$/;"	t	typeref:struct:__anon5
msnd_fifo_alloc	msnd.c	/^EXPORT_SYMBOL(msnd_fifo_alloc);$/;"	v
msnd_fifo_alloc	msnd.c	/^int msnd_fifo_alloc(msnd_fifo *f, size_t n)$/;"	f
msnd_fifo_free	msnd.c	/^EXPORT_SYMBOL(msnd_fifo_free);$/;"	v
msnd_fifo_free	msnd.c	/^void msnd_fifo_free(msnd_fifo *f)$/;"	f
msnd_fifo_init	msnd.c	/^EXPORT_SYMBOL(msnd_fifo_init);$/;"	v
msnd_fifo_init	msnd.c	/^void msnd_fifo_init(msnd_fifo *f)$/;"	f
msnd_fifo_make_empty	msnd.c	/^EXPORT_SYMBOL(msnd_fifo_make_empty);$/;"	v
msnd_fifo_make_empty	msnd.c	/^void msnd_fifo_make_empty(msnd_fifo *f)$/;"	f
msnd_fifo_read	msnd.c	/^EXPORT_SYMBOL(msnd_fifo_read);$/;"	v
msnd_fifo_read	msnd.c	/^int msnd_fifo_read(msnd_fifo *f, char *buf, size_t len)$/;"	f
msnd_fifo_read_io	msnd.c	/^EXPORT_SYMBOL(msnd_fifo_read_io);$/;"	v
msnd_fifo_read_io	msnd.c	/^int msnd_fifo_read_io(msnd_fifo *f, char __iomem *buf, size_t len)$/;"	f
msnd_fifo_write	msnd.c	/^EXPORT_SYMBOL(msnd_fifo_write);$/;"	v
msnd_fifo_write	msnd.c	/^int msnd_fifo_write(msnd_fifo *f, const char *buf, size_t len)$/;"	f
msnd_fifo_write_io	msnd.c	/^EXPORT_SYMBOL(msnd_fifo_write_io);$/;"	v
msnd_fifo_write_io	msnd.c	/^int msnd_fifo_write_io(msnd_fifo *f, char __iomem *buf, size_t len)$/;"	f
msnd_inb	msnd.h	158;"	d
msnd_inb	msnd.h	161;"	d
msnd_init	msnd_pinnacle.c	/^module_init(msnd_init);$/;"	v
msnd_init	msnd_pinnacle.c	/^static int __init msnd_init(void)$/;"	f	file:
msnd_init_queue	msnd.c	/^EXPORT_SYMBOL(msnd_init_queue);$/;"	v
msnd_init_queue	msnd.c	/^void msnd_init_queue(void __iomem *base, int start, int size)$/;"	f
msnd_outb	msnd.h	157;"	d
msnd_outb	msnd.h	160;"	d
msnd_pinnacle_cfg_device	msnd_pinnacle.c	/^typedef struct msnd_pinnacle_cfg_device {$/;"	s	file:
msnd_pinnacle_cfg_devices	msnd_pinnacle.c	/^static int __init msnd_pinnacle_cfg_devices(int cfg, int reset, msnd_pinnacle_cfg_t device)$/;"	f	file:
msnd_pinnacle_cfg_t	msnd_pinnacle.c	/^} msnd_pinnacle_cfg_t[4];$/;"	t	typeref:struct:msnd_pinnacle_cfg_device	file:
msnd_register	msnd.c	/^EXPORT_SYMBOL(msnd_register);$/;"	v
msnd_register	msnd.c	/^int msnd_register(multisound_dev_t *dev)$/;"	f
msnd_send_dsp_cmd	msnd.c	/^EXPORT_SYMBOL(msnd_send_dsp_cmd);$/;"	v
msnd_send_dsp_cmd	msnd.c	/^int msnd_send_dsp_cmd(multisound_dev_t *dev, BYTE cmd)$/;"	f
msnd_send_word	msnd.c	/^EXPORT_SYMBOL(msnd_send_word);$/;"	v
msnd_send_word	msnd.c	/^int msnd_send_word(multisound_dev_t *dev, unsigned char high,$/;"	f
msnd_unregister	msnd.c	/^EXPORT_SYMBOL(msnd_unregister);$/;"	v
msnd_unregister	msnd.c	/^void msnd_unregister(multisound_dev_t *dev)$/;"	f
msnd_upload_host	msnd.c	/^EXPORT_SYMBOL(msnd_upload_host);$/;"	v
msnd_upload_host	msnd.c	/^int msnd_upload_host(multisound_dev_t *dev, char *bin, int len)$/;"	f
msnd_wait_HC0	msnd.c	/^static int msnd_wait_HC0(multisound_dev_t *dev)$/;"	f	file:
msnd_wait_TXDE	msnd.c	/^static int msnd_wait_TXDE(multisound_dev_t *dev)$/;"	f	file:
msnd_write_cfg	msnd_pinnacle.c	/^static int __init msnd_write_cfg(int cfg, int reg, int value)$/;"	f	file:
msnd_write_cfg_io0	msnd_pinnacle.c	/^static int __init msnd_write_cfg_io0(int cfg, int num, WORD io)$/;"	f	file:
msnd_write_cfg_io1	msnd_pinnacle.c	/^static int __init msnd_write_cfg_io1(int cfg, int num, WORD io)$/;"	f	file:
msnd_write_cfg_irq	msnd_pinnacle.c	/^static int __init msnd_write_cfg_irq(int cfg, int num, WORD irq)$/;"	f	file:
msnd_write_cfg_logical	msnd_pinnacle.c	/^static int __init msnd_write_cfg_logical(int cfg, int num, WORD io0, WORD io1, WORD irq, int mem)$/;"	f	file:
msnd_write_cfg_mem	msnd_pinnacle.c	/^static int __init msnd_write_cfg_mem(int cfg, int num, int mem)$/;"	f	file:
mss	sscape.c	/^static int mss = 0;$/;"	v	file:
mss_base	aedsp16.c	/^	int mss_base;           \/* base I\/O for Microsoft Sound System  *\/$/;"	m	struct:aedsp16_info	file:
mss_base	aedsp16.c	/^static int __initdata mss_base = -1;$/;"	v	file:
mss_io	ad1848.c	/^	short mss_io, irq, dma, dma2;   \/* index into isapnp table *\/$/;"	m	struct:__anon3	file:
multi_channel_use_count	trident.c	/^	int multi_channel_use_count;$/;"	m	struct:trident_card	file:
multi_channels_adjust_count	trident.c	/^	int multi_channels_adjust_count;$/;"	m	struct:trident_state	file:
multisound_dev	msnd.h	/^typedef struct multisound_dev {$/;"	s
multisound_dev_t	msnd.h	/^} multisound_dev_t;$/;"	t	typeref:struct:multisound_dev
mutepol	ad1848_mixer.h	/^	unsigned int mutepol:1;		\/* mute polarity: 0=normal, 1=reversed *\/$/;"	m	struct:mixer_def
mutepos	ad1848_mixer.h	/^	unsigned int mutepos:4;		\/* position of mute bit in register *\/$/;"	m	struct:mixer_def
mutereg	ad1848_mixer.h	/^	unsigned int mutereg:6;		\/* register number for mute bit *\/$/;"	m	struct:mixer_def
my_abs	vidc.c	188;"	d	file:
my_audiodev	sscape.c	/^	int	my_audiodev;$/;"	m	struct:sscape_info	file:
my_dev	pas2_midi.c	/^static int      my_dev;$/;"	v	file:
my_dev	uart401.c	/^	int             my_dev;$/;"	m	struct:uart401_devc	file:
my_dev	uart6850.c	/^static int my_dev;$/;"	v	file:
my_mididev	sb.h	/^	   int my_mididev;$/;"	m	struct:sb_devc
my_mididev	v_midi.h	/^	   int my_mididev;$/;"	m	struct:vmidi_devc
my_mixerdev	sb.h	/^	   int my_mixerdev;$/;"	m	struct:sb_devc
n	msnd.h	/^	size_t n, len;$/;"	m	struct:__anon5
n_frags	via82cxxx_audio.c	/^	atomic_t n_frags;$/;"	m	struct:via_channel	file:
n_irqs	via82cxxx_audio.c	/^	unsigned int n_irqs;$/;"	m	struct:via_channel	file:
n_mpu_devs	mpu401.c	/^static int n_mpu_devs;$/;"	v	file:
name	ac97_codec.c	/^	char *name;$/;"	m	struct:__anon13	file:
name	ad1848.c	/^	char           *chip_name, *name;$/;"	m	struct:__anon1	file:
name	ad1848.c	/^	char *name;$/;"	m	struct:__anon3	file:
name	btaudio.c	/^	char *name;$/;"	m	struct:cardinfo	file:
name	dev_table.h	/^	char *name;$/;"	m	struct:driver_info
name	dev_table.h	/^	char name[64];$/;"	m	struct:coproc_operations
name	dev_table.h	/^	char name[64];$/;"	m	struct:mixer_operations
name	dev_table.h	/^        char name[128];$/;"	m	struct:audio_operations
name	dmasound/dmasound.h	/^    const char *name;$/;"	m	struct:__anon17
name	jz_ac97.c	/^	char *name;$/;"	m	struct:jz_ac97_controller_info	file:
name	jz_i2s.c	/^	char		*name;$/;"	m	struct:jz_i2s_controller_info	file:
name	jz_i2s.c	/^	char	*name;$/;"	m	struct:i2s_codec	file:
name	jz_i2s_4750.c	/^	char *name;$/;"	m	struct:i2s_codec	file:
name	jz_i2s_4750.c	/^	char *name;$/;"	m	struct:jz_i2s_controller_info	file:
name	jz_i2s_dlv_dma_test.c	/^    char *name;$/;"	m	struct:i2s_codec	file:
name	jz_i2s_dlv_dma_test.c	/^    char *name;$/;"	m	struct:jz_i2s_controller_info	file:
name	jz_i2s_for_4750.c	/^	char *name;$/;"	m	struct:i2s_codec	file:
name	jz_i2s_for_4750.c	/^	char *name;$/;"	m	struct:jz_i2s_controller_info	file:
name	jz_pcm_tlv320aic1106_dma.c	/^	char *name;$/;"	m	struct:jz_pcm_controller_info	file:
name	jz_pcm_tlv320aic1106_dma.c	/^	char *name;$/;"	m	struct:pcm_codec	file:
name	msnd.h	/^	char *name;$/;"	m	struct:multisound_dev
name	sound_config.h	/^	char *name;$/;"	m	struct:address_info
name	soundcard.c	/^	char *name;$/;"	m	struct:__anon19	file:
name	via82cxxx_audio.c	/^	const char *name;$/;"	m	struct:via_channel	file:
name2	dmasound/dmasound.h	/^    const char *name2;$/;"	m	struct:__anon17
nbits	ad1848_mixer.h	/^	unsigned int nbits:3;		\/* number of bits in register for volume *\/$/;"	m	struct:mixer_def
nbits	sb.h	/^	unsigned int nbits:4;$/;"	m	struct:mixer_def
nbits	vwsnd.c	/^	char nbits;$/;"	m	struct:ad1843_bitfield	file:
nbufs	dev_table.h	/^	int      nbufs;$/;"	m	struct:dma_buffparms
needs_reorg	dev_table.h	/^        int	 needs_reorg;$/;"	m	struct:dma_buffparms
negative	vwsnd.c	/^	int	negative;		\/* nonzero if gain is negative. *\/$/;"	m	struct:ad1843_gain	file:
netwinder_decode_mixer	waveartist.c	/^netwinder_decode_mixer(wavnc_info *devc, int dev, unsigned char lev_l,$/;"	f	file:
netwinder_get_mixer	waveartist.c	/^static int netwinder_get_mixer(wavnc_info *devc, int dev)$/;"	f	file:
netwinder_mixer	waveartist.c	/^static const struct waveartist_mixer_info netwinder_mixer = {$/;"	v	typeref:struct:waveartist_mixer_info	file:
netwinder_select_input	waveartist.c	/^netwinder_select_input(wavnc_info *devc, unsigned int recmask,$/;"	f	file:
neutral_byte	dev_table.h	/^	char	neutral_byte;$/;"	m	struct:dma_buffparms
next	btaudio.c	/^	struct btaudio *next;$/;"	m	struct:btaudio	typeref:struct:btaudio::btaudio	file:
next	i810_audio.c	/^	struct i810_card *next;$/;"	m	struct:i810_card	typeref:struct:i810_card::i810_card	file:
next	trident.c	/^	struct trident_card *next;$/;"	m	struct:trident_card	typeref:struct:trident_card::trident_card	file:
nextIn	au1550_ac97.c	/^		void		*nextIn;$/;"	m	struct:au1550_state::dmabuf	file:
nextIn	jz_ac97.c	/^	int      nextIn;  \/\/ byte index to next-in to DMA buffer$/;"	m	struct:jz_ac97_controller_info	file:
nextIn	jz_i2s_4750.c	/^	int nextIn;  \/* byte index to next-in to DMA buffer *\/$/;"	m	struct:jz_i2s_controller_info	file:
nextIn	jz_i2s_dlv_dma_test.c	/^    int      nextIn;  \/\/ byte index to next-in to DMA buffer$/;"	m	struct:jz_i2s_controller_info	file:
nextIn	jz_i2s_for_4750.c	/^	int nextIn;  \/* byte index to next-in to DMA buffer *\/$/;"	m	struct:jz_i2s_controller_info	file:
nextIn	jz_pcm_tlv320aic1106_dma.c	/^	int nextIn;  \/\/ byte index to next-in to DMA buffer$/;"	m	struct:jz_pcm_controller_info	file:
nextOut	au1550_ac97.c	/^		void		*nextOut;$/;"	m	struct:au1550_state::dmabuf	file:
nextOut	jz_ac97.c	/^	int      nextOut; \/\/ byte index to next-out from DMA buffer$/;"	m	struct:jz_ac97_controller_info	file:
nextOut	jz_i2s_4750.c	/^	int nextOut; \/* byte index to next-out from DMA buffer *\/$/;"	m	struct:jz_i2s_controller_info	file:
nextOut	jz_i2s_dlv_dma_test.c	/^    int      nextOut; \/\/ byte index to next-out from DMA buffer$/;"	m	struct:jz_i2s_controller_info	file:
nextOut	jz_i2s_for_4750.c	/^	int nextOut; \/* byte index to next-out from DMA buffer *\/$/;"	m	struct:jz_i2s_controller_info	file:
nextOut	jz_pcm_tlv320aic1106_dma.c	/^	int nextOut; \/\/ byte index to next-out from DMA buffer$/;"	m	struct:jz_pcm_controller_info	file:
next_dev	vwsnd.c	/^	struct vwsnd_dev *next_dev;$/;"	m	struct:vwsnd_dev	typeref:struct:vwsnd_dev::vwsnd_dev	file:
next_event_time	mpu401.c	/^static volatile unsigned long next_event_time;$/;"	v	file:
next_event_time	sound_timer.c	/^static volatile unsigned long next_event_time;$/;"	v	file:
next_event_time	sys_timer.c	/^static volatile unsigned long next_event_time;$/;"	v	file:
no_autoselect	waveartist.c	/^	unsigned int	no_autoselect	:1;\/* handset\/telephone autoselects a path *\/$/;"	m	struct:__anon11	file:
no_vra	au1550_ac97.c	/^	int             no_vra;		\/* do not use VRA *\/$/;"	m	struct:au1550_state	file:
nonstandard_microcode	pss.c	/^static int      nonstandard_microcode;$/;"	v	file:
note	sequencer.c	450;"	d	file:
note	sequencer.c	522;"	d	file:
note_to_freq	sequencer.c	/^EXPORT_SYMBOL(note_to_freq);$/;"	v
note_to_freq	sequencer.c	/^int note_to_freq(int note_num)$/;"	f
nr_ac97	i810_audio.c	/^	int16_t      nr_ac97;$/;"	m	struct:__anon10	file:
nr_ad1848_devs	ad1848.c	/^static int nr_ad1848_devs;$/;"	v	file:
nr_voice	opl3.c	/^	int             nr_voice;$/;"	m	struct:opl_devinfo	file:
nr_waveartist_devs	waveartist.c	/^static int		nr_waveartist_devs;$/;"	v	file:
nresets	msnd.h	/^	int nresets;$/;"	m	struct:multisound_dev
null_ops	ac97_codec.c	/^static struct ac97_ops null_ops = { NULL, NULL, NULL };$/;"	v	typeref:struct:ac97_ops	file:
num	i810_audio.c	/^	u32 num;$/;"	m	struct:i810_channel	file:
num	soundcard.c	/^	int *num;$/;"	m	struct:__anon19	file:
num	trident.c	/^	int num; \/* channel number *\/$/;"	m	struct:trident_channel	file:
numBufs	dmasound/dmasound.h	/^    int numBufs;		\/* real limits on what the user can have *\/$/;"	m	struct:sound_queue
numWriteBufs	dmasound/dmasound_core.c	/^static unsigned int numWriteBufs = DEFAULT_N_BUFFERS;$/;"	v	file:
num_audiodevs	dev_table.c	/^EXPORT_SYMBOL(num_audiodevs);$/;"	v
num_audiodevs	dev_table.c	/^int num_audiodevs;$/;"	v
num_channels	au1550_ac97.c	/^		int             num_channels;$/;"	m	struct:au1550_state::dmabuf	file:
num_devs	msnd.c	/^static int			num_devs;$/;"	v	file:
num_midis	dev_table.c	/^EXPORT_SYMBOL(num_midis);$/;"	v
num_midis	dev_table.c	/^int num_midis;$/;"	v
num_mixer_volumes	soundcard.c	/^static int num_mixer_volumes;$/;"	v	file:
num_mixers	dev_table.c	/^EXPORT_SYMBOL(num_mixers);$/;"	v
num_mixers	dev_table.c	/^int num_mixers;$/;"	v
num_sound_timers	dev_table.c	/^int num_sound_timers = 1;$/;"	v
num_synths	dev_table.c	/^int num_synths;$/;"	v
numfrag	au1550_ac97.c	/^		unsigned	numfrag;$/;"	m	struct:au1550_state::dmabuf	file:
numfrag	i810_audio.c	/^		unsigned numfrag;$/;"	m	struct:i810_state::dmabuf	file:
numfrag	swarm_cs4297a.c	/^        unsigned numfrag;	\/\/ # of 'fragments' in the buffer.$/;"	m	struct:serdma_s	file:
numfrag	trident.c	/^		unsigned numfrag;$/;"	m	struct:trident_state::dmabuf	file:
numio	msnd.h	/^	int io, numio;$/;"	m	struct:multisound_dev
nx_ac97_registers	trident.h	/^enum nx_ac97_registers {$/;"	g
nx_spdif_registers	trident.h	/^enum nx_spdif_registers {$/;"	g
obsolete_api_used	sequencer.c	/^static int      obsolete_api_used;$/;"	v	file:
offset	ac97_codec.c	/^	unsigned char offset;$/;"	m	struct:ac97_mixer_hw	file:
offset	i810_audio.c	/^	u32 offset;			\/* 4 *\/$/;"	m	struct:i810_channel	file:
ok	sscape.c	/^	int	ok;	\/* Properly detected *\/$/;"	m	struct:sscape_info	file:
old_hardware	sscape.c	/^static char old_hardware = 1;$/;"	v	file:
old_hardware	sscape.c	/^static char old_hardware;$/;"	v	file:
old_info	jz_i2s_4750.c	/^_old_mixer_info old_info;$/;"	v
old_info	jz_i2s_for_4750.c	/^_old_mixer_info old_info;$/;"	v
old_level	ak4642en.c	/^static int jack_plug_level, old_level;$/;"	v	file:
old_mksound	jz_ac97.c	/^static void (*old_mksound)(unsigned int hz, unsigned int ticks);$/;"	v	file:
old_mksound	jz_i2s_4750.c	/^static void (*old_mksound)(unsigned int hz, unsigned int ticks);$/;"	v	file:
old_mksound	jz_i2s_for_4750.c	/^static void (*old_mksound)(unsigned int hz, unsigned int ticks);$/;"	v	file:
onetrans_bit	jz_i2s.c	/^	int onetrans_bit;$/;"	m	struct:__anon25	file:
op	opl3_hw.h	/^		unsigned char op[4]; \/* Operator offsets *\/$/;"	m	struct:physical_voice_info
open	dev_table.h	/^	int (*open) (int dev, int mode);$/;"	m	struct:audio_driver
open	dev_table.h	/^	int (*open) (int dev, int mode);$/;"	m	struct:synth_operations
open	dev_table.h	/^	int (*open) (int dev, int mode,$/;"	m	struct:midi_operations
open	dev_table.h	/^	int (*open) (void *devc, int sub_device);$/;"	m	struct:coproc_operations
open	dev_table.h	/^	int (*open)(int dev, int mode);$/;"	m	struct:sound_timer_operations
open_devs	midibuf.c	/^static volatile int open_devs;$/;"	v	file:
open_dmap	dmabuf.c	/^static int open_dmap(struct audio_operations *adev, int mode, struct dma_buffparms *dmap)$/;"	f	file:
open_mode	ad1848.c	/^	int             open_mode;$/;"	m	struct:__anon1	file:
open_mode	ad1848.c	/^	int             open_mode;$/;"	m	struct:ad1848_port_info	file:
open_mode	au1550_ac97.c	/^	mode_t          open_mode;$/;"	m	struct:au1550_state	file:
open_mode	dev_table.h	/^	int      open_mode;$/;"	m	struct:dma_buffparms
open_mode	dev_table.h	/^ 	int open_mode;$/;"	m	struct:audio_operations
open_mode	dmasound/dmasound.h	/^    int open_mode;$/;"	m	struct:sound_queue
open_mode	i810_audio.c	/^	mode_t open_mode;$/;"	m	struct:i810_state	file:
open_mode	pas2_pcm.c	/^static int      open_mode;$/;"	v	file:
open_mode	swarm_cs4297a.c	/^	mode_t open_mode;$/;"	m	struct:cs4297a_state	file:
open_mode	trident.c	/^	mode_t open_mode;$/;"	m	struct:trident_state	file:
open_mode	vwsnd.c	/^	mode_t		open_mode;$/;"	m	struct:vwsnd_dev	file:
open_mode	waveartist.c	/^	int		open_mode;$/;"	m	struct:__anon11	file:
open_mode	waveartist.c	/^	int		open_mode;$/;"	m	struct:wavnc_port_info	file:
open_mutex	au1550_ac97.c	/^	struct mutex open_mutex;$/;"	m	struct:au1550_state	typeref:struct:au1550_state::mutex	file:
open_mutex	i810_audio.c	/^	struct mutex open_mutex;$/;"	m	struct:i810_state	typeref:struct:i810_state::mutex	file:
open_mutex	swarm_cs4297a.c	/^	struct mutex open_mutex;$/;"	m	struct:cs4297a_state	typeref:struct:cs4297a_state::mutex	file:
open_mutex	trident.c	/^	struct mutex open_mutex;$/;"	m	struct:trident_card	typeref:struct:trident_card::mutex	file:
open_mutex	via82cxxx_audio.c	/^	struct mutex open_mutex;$/;"	m	struct:via_info	typeref:struct:via_info::mutex	file:
open_mutex	vwsnd.c	/^	struct mutex open_mutex;$/;"	m	struct:vwsnd_dev	typeref:struct:vwsnd_dev::mutex	file:
open_queue	dmasound/dmasound.h	/^    wait_queue_head_t action_queue, open_queue, sync_queue;$/;"	m	struct:sound_queue
open_sem_adc	swarm_cs4297a.c	/^	struct mutex open_sem_adc;$/;"	m	struct:cs4297a_state	typeref:struct:cs4297a_state::mutex	file:
open_sem_dac	swarm_cs4297a.c	/^	struct mutex open_sem_dac;$/;"	m	struct:cs4297a_state	typeref:struct:cs4297a_state::mutex	file:
open_wait	au1550_ac97.c	/^	wait_queue_head_t open_wait;$/;"	m	struct:au1550_state	file:
open_wait	i810_audio.c	/^	wait_queue_head_t open_wait;$/;"	m	struct:i810_state	file:
open_wait	swarm_cs4297a.c	/^	wait_queue_head_t open_wait;$/;"	m	struct:cs4297a_state	file:
open_wait	vwsnd.c	/^	wait_queue_head_t open_wait;$/;"	m	struct:vwsnd_dev	file:
open_wait_adc	swarm_cs4297a.c	/^	wait_queue_head_t open_wait_adc;$/;"	m	struct:cs4297a_state	file:
open_wait_dac	swarm_cs4297a.c	/^	wait_queue_head_t open_wait_dac;$/;"	m	struct:cs4297a_state	file:
opened	mpu401.c	/^	int             opened;	\/*$/;"	m	struct:mpu_config	file:
opened	sb.h	/^ 	   int opened;$/;"	m	struct:sb_devc
opened	sound_timer.c	/^static volatile int initialized, opened, tmr_running;$/;"	v	file:
opened	sscape.c	/^	int	opened;$/;"	m	struct:sscape_info	file:
opened	sys_timer.c	/^static volatile int opened, tmr_running;$/;"	v	file:
opened	uart401.c	/^	int             opened, disabled;$/;"	m	struct:uart401_devc	file:
opened	v_midi.h	/^ 	   int opened;$/;"	m	struct:vmidi_devc
opened1	jz_ac97.c	/^	int opened1;$/;"	m	struct:jz_ac97_controller_info	file:
opened1	jz_i2s_4750.c	/^	int opened1;$/;"	m	struct:jz_i2s_controller_info	file:
opened1	jz_i2s_dlv_dma_test.c	/^    int opened1;$/;"	m	struct:jz_i2s_controller_info	file:
opened1	jz_i2s_for_4750.c	/^	int opened1;$/;"	m	struct:jz_i2s_controller_info	file:
opened1	jz_pcm_tlv320aic1106_dma.c	/^	int opened1;$/;"	m	struct:jz_pcm_controller_info	file:
opened2	jz_ac97.c	/^	int opened2;$/;"	m	struct:jz_ac97_controller_info	file:
opened2	jz_i2s_4750.c	/^	int opened2;$/;"	m	struct:jz_i2s_controller_info	file:
opened2	jz_i2s_dlv_dma_test.c	/^    int opened2;$/;"	m	struct:jz_i2s_controller_info	file:
opened2	jz_i2s_for_4750.c	/^	int opened2;$/;"	m	struct:jz_i2s_controller_info	file:
opened2	jz_pcm_tlv320aic1106_dma.c	/^	int opened2;$/;"	m	struct:jz_pcm_controller_info	file:
opl3_aftertouch	opl3.c	/^static void opl3_aftertouch(int dev, int voice, int pressure)$/;"	f	file:
opl3_alloc_voice	opl3.c	/^static int opl3_alloc_voice(int dev, int chn, int note, struct voice_alloc_info *alloc)$/;"	f	file:
opl3_bender	opl3.c	/^static void opl3_bender(int dev, int voice, int value)$/;"	f	file:
opl3_close	opl3.c	/^static void opl3_close(int dev)$/;"	f	file:
opl3_command	opl3.c	/^static void opl3_command    (int io_addr, unsigned int addr, unsigned int val)$/;"	f	file:
opl3_controller	opl3.c	/^static void opl3_controller (int dev, int voice, int ctrl_num, int value)$/;"	f	file:
opl3_detect	opl3.c	/^static int opl3_detect(int ioaddr)$/;"	f	file:
opl3_hw_control	opl3.c	/^static void opl3_hw_control(int dev, unsigned char *event)$/;"	f	file:
opl3_init	opl3.c	/^static int opl3_init(int ioaddr, struct module *owner)$/;"	f	file:
opl3_ioctl	opl3.c	/^static int opl3_ioctl(int dev, unsigned int cmd, void __user * arg)$/;"	f	file:
opl3_kill_note	opl3.c	/^static int opl3_kill_note  (int devno, int voice, int note, int velocity)$/;"	f	file:
opl3_load_patch	opl3.c	/^static int opl3_load_patch(int dev, int format, const char __user *addr,$/;"	f	file:
opl3_open	opl3.c	/^static int opl3_open(int dev, int mode)$/;"	f	file:
opl3_operations	opl3.c	/^static struct synth_operations opl3_operations =$/;"	v	typeref:struct:synth_operations	file:
opl3_panning	opl3.c	/^static void opl3_panning(int dev, int voice, int value)$/;"	f	file:
opl3_reset	opl3.c	/^static void opl3_reset(int devno)$/;"	f	file:
opl3_set_instr	opl3.c	/^static int opl3_set_instr  (int dev, int voice, int instr_no)$/;"	f	file:
opl3_setup_voice	opl3.c	/^static void opl3_setup_voice(int dev, int voice, int chn)$/;"	f	file:
opl3_start_note	opl3.c	/^static int opl3_start_note (int dev, int voice, int note, int volume)$/;"	f	file:
opl3_volume_method	opl3.c	/^static void opl3_volume_method(int dev, int mode)$/;"	f	file:
opl_devinfo	opl3.c	/^typedef struct opl_devinfo$/;"	s	file:
opl_devinfo	opl3.c	/^} opl_devinfo;$/;"	t	typeref:struct:opl_devinfo	file:
ops	ac97_codec.c	/^	struct ac97_ops *ops;$/;"	m	struct:__anon13	typeref:struct:__anon13::ac97_ops	file:
or	aedsp16.c	/^	int	or;		\/* soft_cfg |= TheStruct.or             *\/$/;"	m	struct:orVals	file:
orVals	aedsp16.c	/^struct orVals {$/;"	s	file:
orig_devices	ad1848.c	/^	int             supported_devices, orig_devices;$/;"	m	struct:__anon1	file:
orig_freq	opl3.c	/^	unsigned long   orig_freq;$/;"	m	struct:voice_info	file:
orig_rec_devices	ad1848.c	/^	int             supported_rec_devices, orig_rec_devices;$/;"	m	struct:__anon1	file:
osp	mpu401.c	/^	  int            *osp;$/;"	m	struct:mpu_config	file:
osp	pss.c	/^	int            *osp;$/;"	m	struct:pss_confdata	file:
osp	sb.h	/^	   int *osp;$/;"	m	struct:sb_devc
osp	sound_config.h	/^	int *osp;	\/* OS specific info *\/$/;"	m	struct:address_info
osp	sscape.c	/^	int	*osp;$/;"	m	struct:sscape_info	file:
osp	uart401.c	/^	int            *osp;$/;"	m	struct:uart401_devc	file:
oss_cleanup	soundcard.c	/^module_exit(oss_cleanup);$/;"	v
oss_cleanup	soundcard.c	/^static void __exit oss_cleanup(void)$/;"	f	file:
oss_init	soundcard.c	/^module_init(oss_init);$/;"	v
oss_init	soundcard.c	/^static int __init oss_init(void)$/;"	f	file:
oss_sound_fops	soundcard.c	/^const struct file_operations oss_sound_fops = {$/;"	v	typeref:struct:file_operations
ossfragshift	au1550_ac97.c	/^		unsigned        ossfragshift;$/;"	m	struct:au1550_state::dmabuf	file:
ossfragshift	swarm_cs4297a.c	/^        unsigned ossfragshift;$/;"	m	struct:serdma_s	file:
ossfragshift	trident.c	/^		unsigned ossfragshift;$/;"	m	struct:trident_state::dmabuf	file:
ossfragsize	i810_audio.c	/^		unsigned ossfragsize;$/;"	m	struct:i810_state::dmabuf	file:
ossmaxfrags	au1550_ac97.c	/^		int             ossmaxfrags;$/;"	m	struct:au1550_state::dmabuf	file:
ossmaxfrags	i810_audio.c	/^		unsigned ossmaxfrags;$/;"	m	struct:i810_state::dmabuf	file:
ossmaxfrags	swarm_cs4297a.c	/^        int ossmaxfrags;$/;"	m	struct:serdma_s	file:
ossmaxfrags	trident.c	/^		int ossmaxfrags;$/;"	m	struct:trident_state::dmabuf	file:
other_states	trident.c	/^	struct trident_state *other_states[4];$/;"	m	struct:trident_state	typeref:struct:trident_state::trident_state	file:
out_busy_queue	jz_ac97.c	/^static buffer_queue_t out_busy_queue;$/;"	v	file:
out_busy_queue	jz_i2s_4750.c	/^static buffer_queue_t out_busy_queue;$/;"	v	file:
out_busy_queue	jz_i2s_dlv_dma_test.c	/^static buffer_queue_t out_busy_queue;$/;"	v	file:
out_busy_queue	jz_i2s_for_4750.c	/^static buffer_queue_t out_busy_queue;$/;"	v	file:
out_busy_queue	jz_pcm_tlv320aic1106_dma.c	/^static buffer_queue_t out_busy_queue;$/;"	v	file:
out_dma_buf	jz_ac97.c	/^static unsigned long *out_dma_buf = NULL;$/;"	v	file:
out_dma_buf	jz_i2s_4750.c	/^static unsigned long *out_dma_buf = NULL;$/;"	v	file:
out_dma_buf	jz_i2s_dlv_dma_test.c	/^static unsigned long *out_dma_buf = NULL;$/;"	v	file:
out_dma_buf	jz_i2s_for_4750.c	/^static unsigned long *out_dma_buf = NULL;$/;"	v	file:
out_dma_buf	jz_pcm_tlv320aic1106_dma.c	/^static unsigned long *out_dma_buf = NULL;$/;"	v	file:
out_dma_buf_data_count	jz_ac97.c	/^static unsigned long *out_dma_buf_data_count = NULL;$/;"	v	file:
out_dma_buf_data_count	jz_i2s_4750.c	/^static unsigned long *out_dma_buf_data_count = NULL;$/;"	v	file:
out_dma_buf_data_count	jz_i2s_dlv_dma_test.c	/^static unsigned long *out_dma_buf_data_count = NULL;$/;"	v	file:
out_dma_buf_data_count	jz_i2s_for_4750.c	/^static unsigned long *out_dma_buf_data_count = NULL;$/;"	v	file:
out_dma_buf_data_count	jz_pcm_tlv320aic1106_dma.c	/^static unsigned long *out_dma_buf_data_count = NULL;$/;"	v	file:
out_dma_pbuf	jz_ac97.c	/^static unsigned long *out_dma_pbuf = NULL;$/;"	v	file:
out_dma_pbuf	jz_i2s_4750.c	/^static unsigned long *out_dma_pbuf = NULL;$/;"	v	file:
out_dma_pbuf	jz_i2s_dlv_dma_test.c	/^static unsigned long *out_dma_pbuf = NULL;$/;"	v	file:
out_dma_pbuf	jz_i2s_for_4750.c	/^static unsigned long *out_dma_pbuf = NULL;$/;"	v	file:
out_dma_pbuf	jz_pcm_tlv320aic1106_dma.c	/^static unsigned long *out_dma_pbuf = NULL;$/;"	v	file:
out_empty_queue	jz_ac97.c	/^static buffer_queue_t out_empty_queue;$/;"	v	file:
out_empty_queue	jz_i2s_4750.c	/^static buffer_queue_t out_empty_queue;$/;"	v	file:
out_empty_queue	jz_i2s_dlv_dma_test.c	/^static buffer_queue_t out_empty_queue;$/;"	v	file:
out_empty_queue	jz_i2s_for_4750.c	/^static buffer_queue_t out_empty_queue;$/;"	v	file:
out_empty_queue	jz_pcm_tlv320aic1106_dma.c	/^static buffer_queue_t out_empty_queue;$/;"	v	file:
out_endpoint	jz_i2s.c	/^static audio_pipe out_endpoint = {$/;"	v	file:
out_full_queue	jz_ac97.c	/^static buffer_queue_t out_full_queue;$/;"	v	file:
out_full_queue	jz_i2s_4750.c	/^static buffer_queue_t out_full_queue;$/;"	v	file:
out_full_queue	jz_i2s_dlv_dma_test.c	/^static buffer_queue_t out_full_queue;$/;"	v	file:
out_full_queue	jz_i2s_for_4750.c	/^static buffer_queue_t out_full_queue;$/;"	v	file:
out_full_queue	jz_pcm_tlv320aic1106_dma.c	/^static buffer_queue_t out_full_queue;$/;"	v	file:
out_sleeper	dev_table.h	/^	wait_queue_head_t out_sleeper;$/;"	m	struct:audio_operations
outmask	sb.h	/^	   int mixer_caps, recmask, outmask, supported_devices;$/;"	m	struct:sb_devc
output_block	dev_table.h	/^	void (*output_block) (int dev, unsigned long buf, $/;"	m	struct:audio_driver
output_ready	mpu401.c	89;"	d	file:
output_ready	uart401.c	56;"	d	file:
output_ready	uart6850.c	48;"	d	file:
output_sleep	dmabuf.c	/^static int output_sleep(int dev, int dontblock)$/;"	f	file:
output_threshold	sequencer.c	/^static int      output_threshold;$/;"	v	file:
outputc	dev_table.h	/^	int (*outputc) (int dev, unsigned char data);$/;"	m	struct:midi_operations
owner	dev_table.h	/^	struct module *owner;$/;"	m	struct:audio_driver	typeref:struct:audio_driver::module
owner	dev_table.h	/^	struct module *owner;$/;"	m	struct:coproc_operations	typeref:struct:coproc_operations::module
owner	dev_table.h	/^	struct module *owner;$/;"	m	struct:midi_operations	typeref:struct:midi_operations::module
owner	dev_table.h	/^	struct module *owner;$/;"	m	struct:mixer_operations	typeref:struct:mixer_operations::module
owner	dev_table.h	/^	struct module *owner;$/;"	m	struct:sound_timer_operations	typeref:struct:sound_timer_operations::module
owner	dev_table.h	/^	struct module *owner;$/;"	m	struct:synth_operations	typeref:struct:synth_operations::module
owner	dmasound/dmasound.h	/^    struct module *owner;$/;"	m	struct:__anon17	typeref:struct:__anon17::module
pBuf	jz_i2s.c	/^	unsigned int pBuf;$/;"	m	struct:__anon23	file:
pBufID	jz_i2s.c	/^	unsigned int pBufID;$/;"	m	struct:__anon23	file:
pack_DAPF_to_DAPQ	msnd_pinnacle.c	/^static __inline__ int pack_DAPF_to_DAPQ(register int start)$/;"	f	file:
pack_DARQ_to_DARF	msnd_pinnacle.c	/^static __inline__ int pack_DARQ_to_DARF(register int bank)$/;"	f	file:
paddr_t	swarm_cs4297a.c	/^typedef unsigned long paddr_t;$/;"	t	file:
page	hal2.h	/^	volatile u32 page;		\/* DOC Page register *\/$/;"	m	struct:hal2_syn_regs
page0	vwsnd.c	/^	void *		page0;		\/* virtual addresses *\/$/;"	m	struct:lithium	file:
page1	vwsnd.c	/^	void *		page1;$/;"	m	struct:lithium	file:
page2	vwsnd.c	/^	void *		page2;$/;"	m	struct:lithium	file:
page_number	via82cxxx_audio.c	/^	unsigned int page_number;$/;"	m	struct:via_channel	file:
pair_mididev	v_midi.h	/^	   int pair_mididev;$/;"	m	struct:vmidi_devc
panning	dev_table.h	/^	void (*panning) (int dev, int voice, int value);$/;"	m	struct:synth_operations
panning	opl3.c	/^	int             panning;	\/* 0xffff means not set *\/$/;"	m	struct:voice_info	file:
parent_dev	dev_table.h	/^	int parent_dev;		\/* 0 -> no parent, 1 to n -> parent=parent_dev+1 *\/$/;"	m	struct:audio_operations
parm	sequencer.c	451;"	d	file:
parm	sequencer.c	523;"	d	file:
parms	midibuf.c	/^static struct midi_parms parms[MAX_MIDI_DEV];$/;"	v	typeref:struct:midi_parms	file:
pas2-objs	Makefile	/^pas2-objs	:= pas2_card.o pas2_midi.o pas2_mixer.o pas2_pcm.o$/;"	m
pas2_mididev	pas2_midi.c	/^int pas2_mididev=-1;$/;"	v
pas_audio_close	pas2_pcm.c	/^static void pas_audio_close(int dev)$/;"	f	file:
pas_audio_driver	pas2_pcm.c	/^static struct audio_driver pas_audio_driver =$/;"	v	typeref:struct:audio_driver	file:
pas_audio_ioctl	pas2_pcm.c	/^static int pas_audio_ioctl(int dev, unsigned int cmd, void __user *arg)$/;"	f	file:
pas_audio_open	pas2_pcm.c	/^static int pas_audio_open(int dev, int mode)$/;"	f	file:
pas_audio_output_block	pas2_pcm.c	/^static void pas_audio_output_block(int dev, unsigned long buf, int count,$/;"	f	file:
pas_audio_prepare_for_input	pas2_pcm.c	/^static int pas_audio_prepare_for_input(int dev, int bsize, int bcount)$/;"	f	file:
pas_audio_prepare_for_output	pas2_pcm.c	/^static int pas_audio_prepare_for_output(int dev, int bsize, int bcount)$/;"	f	file:
pas_audio_reset	pas2_pcm.c	/^static void pas_audio_reset(int dev)$/;"	f	file:
pas_audio_start_input	pas2_pcm.c	/^static void pas_audio_start_input(int dev, unsigned long buf, int count,$/;"	f	file:
pas_audio_trigger	pas2_pcm.c	/^static void pas_audio_trigger(int dev, int state)$/;"	f	file:
pas_audiodev	pas2_pcm.c	/^int             pas_audiodev = -1;$/;"	v
pas_buffer_status	pas2_midi.c	/^static int pas_buffer_status(int dev)$/;"	f	file:
pas_init_mixer	pas2_mixer.c	/^pas_init_mixer(void)$/;"	f
pas_intr_mask	pas2_card.c	/^static int      pas_intr_mask;$/;"	v	file:
pas_irq	pas2_card.c	/^static int      pas_irq;$/;"	v	file:
pas_lock	pas2_card.c	/^DEFINE_SPINLOCK(pas_lock);$/;"	v
pas_midi_close	pas2_midi.c	/^static void pas_midi_close(int dev)$/;"	f	file:
pas_midi_end_read	pas2_midi.c	/^static int pas_midi_end_read(int dev)$/;"	f	file:
pas_midi_init	pas2_midi.c	/^void __init pas_midi_init(void)$/;"	f
pas_midi_interrupt	pas2_midi.c	/^void pas_midi_interrupt(void)$/;"	f
pas_midi_kick	pas2_midi.c	/^static void pas_midi_kick(int dev)$/;"	f	file:
pas_midi_open	pas2_midi.c	/^static int pas_midi_open(int dev, int mode,$/;"	f	file:
pas_midi_operations	pas2_midi.c	/^static struct midi_operations pas_midi_operations =$/;"	v	typeref:struct:midi_operations	file:
pas_midi_out	pas2_midi.c	/^static int pas_midi_out(int dev, unsigned char midi_byte)$/;"	f	file:
pas_midi_start_read	pas2_midi.c	/^static int pas_midi_start_read(int dev)$/;"	f	file:
pas_mixer_ioctl	pas2_mixer.c	/^static int pas_mixer_ioctl(int dev, unsigned int cmd, void __user *arg)$/;"	f	file:
pas_mixer_operations	pas2_mixer.c	/^static struct mixer_operations pas_mixer_operations =$/;"	v	typeref:struct:mixer_operations	file:
pas_mixer_reset	pas2_mixer.c	/^pas_mixer_reset(void)$/;"	f	file:
pas_mixer_set	pas2_mixer.c	/^pas_mixer_set(int whichDev, unsigned int level)$/;"	f	file:
pas_model	pas2_card.c	/^char            pas_model = 0;$/;"	v
pas_model_names	pas2_card.c	/^static char    *pas_model_names[] = {$/;"	v	file:
pas_pcm_init	pas2_pcm.c	/^void __init pas_pcm_init(struct address_info *hw_config)$/;"	f
pas_pcm_interrupt	pas2_pcm.c	/^void pas_pcm_interrupt(unsigned char status, int cause)$/;"	f
pas_read	pas2_card.c	/^unsigned char pas_read(int ioaddr)$/;"	f
pas_remove_intr	pas2_card.c	/^int pas_remove_intr(int mask)$/;"	f
pas_sb_base	pas2_card.c	/^static int      pas_sb_base;$/;"	v	file:
pas_set_intr	pas2_card.c	/^int pas_set_intr(int mask)$/;"	f
pas_translate_code	pas2_card.c	/^int      	pas_translate_code = 0;$/;"	v
pas_write	pas2_card.c	/^void pas_write(unsigned char data, int ioaddr)$/;"	f
pasintr	pas2_card.c	/^static irqreturn_t pasintr(int irq, void *dev_id)$/;"	f	file:
patched	jz_ac97.c	/^	int patched;$/;"	m	struct:jz_ac97_controller_info	file:
pbus	hal2.c	/^	struct hal2_pbus pbus;$/;"	m	struct:hal2_codec	typeref:struct:hal2_codec::hal2_pbus	file:
pbus	hal2.c	/^	struct hpc3_pbus_dmacregs *pbus;$/;"	m	struct:hal2_pbus	typeref:struct:hal2_pbus::hpc3_pbus_dmacregs	file:
pbusnr	hal2.c	/^	int pbusnr;$/;"	m	struct:hal2_pbus	file:
pci	btaudio.c	/^	struct pci_dev *pci;$/;"	m	struct:btaudio	typeref:struct:btaudio::pci_dev	file:
pci_dev	i810_audio.c	/^	struct pci_dev * pci_dev;$/;"	m	struct:i810_card	typeref:struct:i810_card::pci_dev	file:
pci_dev	trident.c	/^	struct pci_dev *pci_dev;$/;"	m	struct:trident_card	typeref:struct:trident_card::pci_dev	file:
pci_id	i810_audio.c	/^	u16 pci_id;$/;"	m	struct:i810_card	file:
pci_id	trident.c	/^	u16 pci_id;$/;"	m	struct:trident_card	file:
pci_id_internal	i810_audio.c	/^	u16 pci_id_internal; \/* used to access card_cap[] *\/$/;"	m	struct:i810_card	file:
pci_intr	sb_common.c	/^static void pci_intr(sb_devc *devc)$/;"	f	file:
pcibase	sb.h	/^	   int pcibase;		\/* For ESS Maestro etc *\/$/;"	m	struct:sb_devc
pcm_bits	pas2_pcm.c	/^static unsigned char pcm_bits = 8;	\/* bits\/sample (8 or 16) *\/$/;"	v	file:
pcm_bitsok	pas2_pcm.c	/^static unsigned short pcm_bitsok = 8;	\/* mask of OK bits *\/$/;"	v	file:
pcm_busy	pas2_pcm.c	/^static int      pcm_busy;$/;"	v	file:
pcm_channels	pas2_pcm.c	/^static unsigned char pcm_channels = 1;	\/* channels (1 or 2) *\/$/;"	v	file:
pcm_codec	jz_pcm_tlv320aic1106_dma.c	/^	struct pcm_codec *pcm_codec[NR_PCM];$/;"	m	struct:jz_pcm_controller_info	typeref:struct:jz_pcm_controller_info::pcm_codec	file:
pcm_codec	jz_pcm_tlv320aic1106_dma.c	/^struct pcm_codec {$/;"	s	file:
pcm_controller	jz_pcm_tlv320aic1106_dma.c	/^static struct jz_pcm_controller_info *pcm_controller = NULL;$/;"	v	typeref:struct:jz_pcm_controller_info	file:
pcm_copy_in	vwsnd.c	/^static void pcm_copy_in(vwsnd_port_t *rport, int swidx, int hwidx, int nb)$/;"	f	file:
pcm_copy_out	vwsnd.c	/^static void pcm_copy_out(vwsnd_port_t *wport, int swidx, int hwidx, int nb)$/;"	f	file:
pcm_count	pas2_pcm.c	/^static unsigned long pcm_count;$/;"	v	file:
pcm_filter	pas2_pcm.c	/^static unsigned char pcm_filter;	\/* filter FLAG *\/$/;"	v	file:
pcm_flush_frag	vwsnd.c	/^static void pcm_flush_frag(vwsnd_dev_t *devc)$/;"	f	file:
pcm_fmt	via82cxxx_audio.c	/^	u8 pcm_fmt;		\/* VIA_PCM_FMT_xxx *\/$/;"	m	struct:via_channel	file:
pcm_input	vwsnd.c	/^static void pcm_input(vwsnd_dev_t *devc, int erflown, int nb)$/;"	f	file:
pcm_mixer_ioctl	jz_pcm_tlv320aic1106_dma.c	/^static int pcm_mixer_ioctl(struct pcm_codec *codec, unsigned int cmd, unsigned long arg)$/;"	f	file:
pcm_mode	pas2_pcm.c	/^static unsigned char pcm_mode = PCM_NON;$/;"	v	file:
pcm_output	vwsnd.c	/^static void pcm_output(vwsnd_dev_t *devc, int erflown, int nb)$/;"	f	file:
pcm_probe_codec	jz_pcm_tlv320aic1106_dma.c	/^int pcm_probe_codec(struct pcm_codec *codec)$/;"	f
pcm_set_bits	pas2_pcm.c	/^static int pcm_set_bits(int arg)$/;"	f	file:
pcm_set_channels	pas2_pcm.c	/^static int pcm_set_channels(int arg)$/;"	f	file:
pcm_set_speed	pas2_pcm.c	/^static int pcm_set_speed(int arg)$/;"	f	file:
pcm_setup	vwsnd.c	/^static int pcm_setup(vwsnd_dev_t *devc,$/;"	f	file:
pcm_shutdown	vwsnd.c	/^static void pcm_shutdown(vwsnd_dev_t *devc,$/;"	f	file:
pcm_shutdown_port	vwsnd.c	/^static void pcm_shutdown_port(vwsnd_dev_t *devc,$/;"	f	file:
pcm_speed	pas2_pcm.c	/^static unsigned long pcm_speed; 	\/* sampling rate *\/$/;"	v	file:
pcm_write_sync	vwsnd.c	/^static void pcm_write_sync(vwsnd_dev_t *devc)$/;"	f	file:
pdev	via82cxxx_audio.c	/^	struct pci_dev *pdev;$/;"	m	struct:via_info	typeref:struct:via_info::pci_dev	file:
pending_timer	sequencer.c	/^static int      pending_timer = -1;	\/* For timer change operation *\/$/;"	v	file:
permini	msnd_pinnacle.c	/^static char				*dspini, *permini;$/;"	v	file:
pgm_num	sound_config.h	/^		int pgm_num;$/;"	m	struct:channel_info
pgtbl	via82cxxx_audio.c	/^	struct via_buffer_pgtbl pgtbl[VIA_MAX_BUFFER_DMA_PAGES];$/;"	m	struct:via_channel	typeref:struct:via_channel::via_buffer_pgtbl	file:
phyaddr	jz_i2s.c	/^	unsigned int phyaddr;$/;"	m	struct:__anon23	file:
physical_voice_info	opl3_hw.h	/^struct physical_voice_info {$/;"	s
pin_endpoint	jz_i2s.c	/^	audio_pipe	*pin_endpoint;$/;"	m	struct:jz_i2s_controller_info	file:
play	dmasound/dmasound.h	/^    void (*play)(void);$/;"	m	struct:__anon17
play_channels	msnd.h	/^	int play_sample_size, play_sample_rate, play_channels;$/;"	m	struct:multisound_dev
play_event	sequencer.c	/^static int play_event(unsigned char *q)$/;"	f	file:
play_ndelay	msnd.h	/^	int play_ndelay;$/;"	m	struct:multisound_dev
play_sample_rate	msnd.h	/^	int play_sample_size, play_sample_rate, play_channels;$/;"	m	struct:multisound_dev
play_sample_size	msnd.h	/^	int play_sample_size, play_sample_rate, play_channels;$/;"	m	struct:multisound_dev
playback_buf_size	jz_ac97.c	/^	unsigned long playback_buf_size;$/;"	m	struct:jz_ac97_controller_info	file:
playback_dev	ad1848.c	/^	int             record_dev, playback_dev;$/;"	m	struct:__anon1	file:
playback_dev	waveartist.c	/^	int		playback_dev;$/;"	m	struct:__anon11	file:
playing	jz_ac97.c	/^	int playing;$/;"	m	struct:jz_ac97_controller_info	file:
pm	jz_ac97.c	/^	struct pm_dev		*pm;$/;"	m	struct:jz_ac97_controller_info	typeref:struct:jz_ac97_controller_info::pm_dev	file:
pm	jz_i2s.c	/^	struct pm_dev	*pm;$/;"	m	struct:jz_i2s_controller_info	typeref:struct:jz_i2s_controller_info::pm_dev	file:
pm	jz_i2s_4750.c	/^	struct pm_dev		*pm;$/;"	m	struct:jz_i2s_controller_info	typeref:struct:jz_i2s_controller_info::pm_dev	file:
pm	jz_i2s_dlv_dma_test.c	/^	struct pm_dev		*pm;$/;"	m	struct:jz_i2s_controller_info	typeref:struct:jz_i2s_controller_info::pm_dev	file:
pm	jz_i2s_for_4750.c	/^	struct pm_dev		*pm;$/;"	m	struct:jz_i2s_controller_info	typeref:struct:jz_i2s_controller_info::pm_dev	file:
pm_saved_adc_rate	i810_audio.c	/^	unsigned int pm_saved_dac_rate,pm_saved_adc_rate;$/;"	m	struct:i810_state	file:
pm_saved_dac_rate	i810_audio.c	/^	unsigned int pm_saved_dac_rate,pm_saved_adc_rate;$/;"	m	struct:i810_state	file:
pm_saved_mixer_settings	i810_audio.c	/^	int pm_saved_mixer_settings[SOUND_MIXER_NRDEVICES][NR_AC97];$/;"	m	struct:i810_card	file:
pm_suspended	i810_audio.c	/^	u16 pm_suspended;$/;"	m	struct:i810_card	file:
pnp	sb_card.c	/^static int __initdata pnp       = 0;$/;"	v	file:
pnp	sb_card.c	/^static int __initdata pnp       = 1;$/;"	v	file:
pnp_registered	sb_card.c	/^static int pnp_registered;$/;"	v	file:
polarity	ad1848_mixer.h	/^	unsigned int polarity:1;	\/* volume polarity: 0=normal, 1=reversed *\/$/;"	m	struct:mixer_def
poll_def_tmr	sys_timer.c	/^poll_def_tmr(unsigned long dummy)$/;"	f	file:
poll_input	dmabuf.c	/^static unsigned int poll_input(struct file * file, int dev, poll_table *wait)$/;"	f	file:
poll_output	dmabuf.c	/^static unsigned int poll_output(struct file * file, int dev, poll_table *wait)$/;"	f	file:
poll_sleeper	dev_table.h	/^	wait_queue_head_t poll_sleeper;$/;"	m	struct:audio_operations
poll_uart6850	uart6850.c	/^static void poll_uart6850(unsigned long dummy)$/;"	f	file:
pop_dma_flag	jz_i2s_4750.c	/^static int              pop_dma_flag;$/;"	v	file:
pop_dma_flag	jz_i2s_for_4750.c	/^static int              pop_dma_flag;$/;"	v	file:
pop_turn_onoff_buf	jz_i2s_4750.c	/^static unsigned long pop_turn_onoff_buf;$/;"	v	file:
pop_turn_onoff_buf	jz_i2s_for_4750.c	/^static unsigned long pop_turn_onoff_buf;$/;"	v	file:
pop_turn_onoff_pbuf	jz_i2s_4750.c	/^static unsigned long pop_turn_onoff_pbuf;$/;"	v	file:
pop_turn_onoff_pbuf	jz_i2s_for_4750.c	/^static unsigned long pop_turn_onoff_pbuf;$/;"	v	file:
port	i810_audio.c	/^	u32 port;			\/* 4 *\/$/;"	m	struct:i810_channel	file:
portc	dev_table.h	/^	void *portc;		\/* Driver specific info *\/$/;"	m	struct:audio_operations
postprocess_write	dev_table.h	/^	void (*postprocess_write)(int dev); 	\/* Device spesific postprocessing for written data *\/$/;"	m	struct:audio_driver
pout_endpoint	jz_i2s.c	/^	audio_pipe	*pout_endpoint;$/;"	m	struct:jz_i2s_controller_info	file:
pre_event_timeout	sequencer.c	/^static long     pre_event_timeout;$/;"	v	file:
prech_timeout	midibuf.c	/^	long prech_timeout;	\/*$/;"	m	struct:midi_parms	file:
prefix_cmd	dev_table.h	/^	int (*prefix_cmd) (int dev, unsigned char status);$/;"	m	struct:midi_operations
prefix_cmd	midi_synth.c	/^prefix_cmd(int midi_dev, unsigned char status)$/;"	f	file:
prepare_for_input	dev_table.h	/^	int (*prepare_for_input) (int dev, int bufsize, int nbufs);$/;"	m	struct:audio_driver
prepare_for_output	dev_table.h	/^	int (*prepare_for_output) (int dev, int bufsize, int nbufs);$/;"	m	struct:audio_driver
preprocess_read	dev_table.h	/^	void (*preprocess_read)(int dev); 	\/* Device spesific preprocessing for read data *\/$/;"	m	struct:audio_driver
prev_event_time	mpu401.c	/^static unsigned long prev_event_time;$/;"	v	file:
prev_event_time	sequencer.c	/^static int      prev_event_time;$/;"	v	file:
prev_event_time	sound_timer.c	/^static unsigned long prev_event_time;$/;"	v	file:
prev_event_time	sys_timer.c	/^static unsigned long prev_event_time;$/;"	v	file:
prev_input_time	sequencer.c	/^static unsigned long prev_input_time;$/;"	v	file:
prev_out_status	midi_synth.c	/^static unsigned char prev_out_status[MAX_MIDI_DEV];$/;"	v	file:
print_pop_duration	jz_i2s_dlv_dma_test.c	/^static void print_pop_duration(void)$/;"	f	file:
printk_codec_files	jz_i2s_dlv_dma_test.c	/^static void printk_codec_files(void)$/;"	f	file:
printk_codec_files	jz_i2s_for_4750.c	/^static void printk_codec_files(void)$/;"	f	file:
priority	dev_table.h	/^	int priority;$/;"	m	struct:sound_lowlev_timer
priority	dev_table.h	/^	int priority;$/;"	m	struct:sound_timer_operations
private_data	jz_i2s.c	/^	void	*private_data;$/;"	m	struct:i2s_codec	file:
private_data	jz_i2s_4750.c	/^	void *private_data;$/;"	m	struct:i2s_codec	file:
private_data	jz_i2s_dlv_dma_test.c	/^    void *private_data;$/;"	m	struct:i2s_codec	file:
private_data	jz_i2s_for_4750.c	/^	void *private_data;$/;"	m	struct:i2s_codec	file:
private_data	jz_pcm_tlv320aic1106_dma.c	/^	void *private_data;$/;"	m	struct:pcm_codec	file:
probe	dev_table.h	/^	int (*probe) (struct address_info *hw_config);$/;"	m	struct:driver_info
probe_cs4232	cs4232.c	/^static int __init probe_cs4232(struct address_info *hw_config, int isapnp_configured)$/;"	f	file:
probe_cs4232_mpu	cs4232.c	/^static int probe_cs4232_mpu(struct address_info *hw_config)$/;"	f	file:
probe_jz_ac97	jz_ac97.c	/^static int __init probe_jz_ac97(struct jz_ac97_controller_info **controller)$/;"	f	file:
probe_jz_i2s	jz_i2s.c	/^static int __init probe_jz_i2s(struct jz_i2s_controller_info **controller)$/;"	f	file:
probe_jz_i2s	jz_i2s_4750.c	/^static int __init probe_jz_i2s(struct jz_i2s_controller_info **controller)$/;"	f	file:
probe_jz_i2s	jz_i2s_dlv_dma_test.c	/^static int __init probe_jz_i2s(struct jz_i2s_controller_info **controller)$/;"	f	file:
probe_jz_i2s	jz_i2s_for_4750.c	/^static int __init probe_jz_i2s(struct jz_i2s_controller_info **controller)$/;"	f	file:
probe_jz_pcm	jz_pcm_tlv320aic1106_dma.c	/^static int __init probe_jz_pcm(struct jz_pcm_controller_info **controller)$/;"	f	file:
probe_mpu401	mpu401.c	/^EXPORT_SYMBOL(probe_mpu401);$/;"	v
probe_mpu401	mpu401.c	/^int probe_mpu401(struct address_info *hw_config, struct resource *ports)$/;"	f
probe_ms_sound	ad1848.c	/^EXPORT_SYMBOL(probe_ms_sound);$/;"	v
probe_ms_sound	ad1848.c	/^int probe_ms_sound(struct address_info *hw_config, struct resource *ports)$/;"	f
probe_multisound	msnd_pinnacle.c	/^static int __init probe_multisound(void)$/;"	f	file:
probe_one	kahlua.c	/^static int __devinit probe_one(struct pci_dev *pdev, const struct pci_device_id *ent)$/;"	f	file:
probe_pas	pas2_card.c	/^static inline int __init probe_pas(struct address_info *hw_config)$/;"	f	file:
probe_pss	pss.c	/^static int __init probe_pss(struct address_info *hw_config)$/;"	f	file:
probe_pss_mpu	pss.c	/^static int __init probe_pss_mpu(struct address_info *hw_config)$/;"	f	file:
probe_pss_mss	pss.c	/^static int __init probe_pss_mss(struct address_info *hw_config)$/;"	f	file:
probe_sbmpu	sb_common.c	/^EXPORT_SYMBOL(probe_sbmpu);$/;"	v
probe_sbmpu	sb_common.c	/^int probe_sbmpu(struct address_info *hw_config, struct module *owner)$/;"	f
probe_sscape	sscape.c	/^static int __init probe_sscape(struct address_info *hw_config)$/;"	f	file:
probe_trix_mpu	trix.c	/^static int __init probe_trix_mpu(struct address_info *hw_config)$/;"	f	file:
probe_trix_sb	trix.c	/^static int __init probe_trix_sb(struct address_info *hw_config)$/;"	f	file:
probe_uart401	uart401.c	/^EXPORT_SYMBOL(probe_uart401);$/;"	v
probe_uart401	uart401.c	/^int probe_uart401(struct address_info *hw_config, struct module *owner)$/;"	f
probe_uart6850	uart6850.c	/^static int __init probe_uart6850(struct address_info *hw_config)$/;"	f	file:
probe_v_midi	v_midi.c	/^static inline int __init probe_v_midi(struct address_info *hw_config)$/;"	f	file:
probe_vidc	vidc.c	/^static int __init probe_vidc(struct address_info *hw_config)$/;"	f	file:
probe_vwsnd	vwsnd.c	/^static int __init probe_vwsnd(struct address_info *hw_config)$/;"	f	file:
probe_waveartist	waveartist.c	/^static int __init probe_waveartist(struct address_info *hw_config)$/;"	f	file:
prog_codec	swarm_cs4297a.c	314;"	d	file:
prog_dmabuf	au1550_ac97.c	/^prog_dmabuf(struct au1550_state *s, struct dmabuf *db)$/;"	f	file:
prog_dmabuf	i810_audio.c	/^static int prog_dmabuf(struct i810_state *state, unsigned rec)$/;"	f	file:
prog_dmabuf	trident.c	/^prog_dmabuf(struct trident_state *state, enum dmabuf_mode rec)$/;"	f	file:
prog_dmabuf_adc	au1550_ac97.c	/^prog_dmabuf_adc(struct au1550_state *s)$/;"	f	file:
prog_dmabuf_adc	swarm_cs4297a.c	/^static int prog_dmabuf_adc(struct cs4297a_state *s)$/;"	f	file:
prog_dmabuf_dac	au1550_ac97.c	/^prog_dmabuf_dac(struct au1550_state *s)$/;"	f	file:
prog_dmabuf_dac	swarm_cs4297a.c	/^static int prog_dmabuf_dac(struct cs4297a_state *s)$/;"	f	file:
prog_dmabuf_playback	trident.c	/^static inline int prog_dmabuf_playback(struct trident_state* state)$/;"	f	file:
prog_dmabuf_record	trident.c	/^static inline int prog_dmabuf_record(struct trident_state* state)$/;"	f	file:
prop_adc	swarm_cs4297a.c	/^	} prop_dac, prop_adc;$/;"	m	struct:cs4297a_state	typeref:struct:cs4297a_state::properties	file:
prop_dac	swarm_cs4297a.c	/^	} prop_dac, prop_adc;$/;"	m	struct:cs4297a_state	typeref:struct:cs4297a_state::properties	file:
properties	swarm_cs4297a.c	/^	struct properties {$/;"	s	struct:cs4297a_state	file:
pss_cdrom_port	pss.c	/^static int	pss_cdrom_port = -1;	\/* Parameter for the PSS cdrom port *\/$/;"	v	file:
pss_confdata	pss.c	/^typedef struct pss_confdata {$/;"	s	file:
pss_confdata	pss.c	/^} pss_confdata;$/;"	t	typeref:struct:pss_confdata	file:
pss_coproc_close	pss.c	/^static void pss_coproc_close(void *dev_info, int sub_device)$/;"	f	file:
pss_coproc_ioctl	pss.c	/^static int pss_coproc_ioctl(void *dev_info, unsigned int cmd, void __user *arg, int local)$/;"	f	file:
pss_coproc_open	pss.c	/^static int pss_coproc_open(void *dev_info, int sub_device)$/;"	f	file:
pss_coproc_operations	pss.c	/^static coproc_operations pss_coproc_operations =$/;"	v	file:
pss_coproc_operations	pss.c	/^static coproc_operations pss_coproc_operations;$/;"	v	file:
pss_coproc_reset	pss.c	/^static void pss_coproc_reset(void *dev_info)$/;"	f	file:
pss_data	pss.c	/^static pss_confdata pss_data;$/;"	v	file:
pss_download_boot	pss.c	/^static int pss_download_boot(pss_confdata * devc, unsigned char *block, int size, int flags)$/;"	f	file:
pss_enable_joystick	pss.c	/^static int	pss_enable_joystick;    \/* Parameter for enabling the joystick *\/$/;"	v	file:
pss_firmware	pss.c	/^static char *pss_firmware = "\/etc\/sound\/pss_synth";$/;"	v	file:
pss_get_dspword	pss.c	/^static int pss_get_dspword(pss_confdata * devc, unsigned short *word)$/;"	f	file:
pss_initialized	pss.c	/^static int      pss_initialized;$/;"	v	file:
pss_keep_settings	pss.c	/^static int pss_keep_settings  = 1;	\/* Keep hardware settings at module exit *\/$/;"	v	file:
pss_mixer	pss.c	/^static int pss_mixer = 1;$/;"	v	file:
pss_mixer	pss.c	/^static int pss_mixer;$/;"	v	file:
pss_mixer_ioctl	pss.c	/^static int pss_mixer_ioctl (int dev, unsigned int cmd, void __user *arg)$/;"	f	file:
pss_mixer_operations	pss.c	/^static struct mixer_operations pss_mixer_operations =$/;"	v	typeref:struct:mixer_operations	file:
pss_mixer_reset	pss.c	/^static void pss_mixer_reset(pss_confdata *devc)$/;"	f	file:
pss_mixerdata	pss.c	/^typedef struct pss_mixerdata {$/;"	s	file:
pss_mixerdata	pss.c	/^} pss_mixerdata;$/;"	t	typeref:struct:pss_mixerdata	file:
pss_no_sound	pss.c	/^static int pss_no_sound = 0;	\/* Just configure non-sound components *\/$/;"	v	file:
pss_put_dspword	pss.c	/^static int pss_put_dspword(pss_confdata * devc, unsigned short word)$/;"	f	file:
pss_reset_dsp	pss.c	/^static int pss_reset_dsp(pss_confdata * devc)$/;"	f	file:
pss_write	pss.c	/^static void pss_write(pss_confdata *devc, int data)$/;"	f	file:
pssmpu	pss.c	/^static int pssmpu = 0, pssmss = 0;$/;"	v	file:
pssmss	pss.c	/^static int pssmpu = 0, pssmss = 0;$/;"	v	file:
ptr	dmasound/dmasound_core.c	/^    int len, ptr;$/;"	m	struct:__anon15	file:
ptr	sound_config.h	/^		int ptr;		\/* For device specific use *\/$/;"	m	struct:voice_alloc_info
put_audio_freenode	jz_i2s.c	/^static inline void put_audio_freenode(unsigned int *mem, audio_node *node)$/;"	f	file:
put_audio_usenode	jz_i2s.c	/^static inline void put_audio_usenode(unsigned int *mem, audio_node *node)$/;"	f	file:
put_buffer_id	jz_ac97.c	/^static inline void put_buffer_id(struct buffer_queue_s *q, int id)$/;"	f	file:
put_buffer_id	jz_i2s_4750.c	/^static inline void put_buffer_id(struct buffer_queue_s *q, int id)$/;"	f	file:
put_buffer_id	jz_i2s_dlv_dma_test.c	/^static inline void put_buffer_id(struct buffer_queue_s *q, int id)$/;"	f	file:
put_buffer_id	jz_i2s_for_4750.c	/^static inline void put_buffer_id(struct buffer_queue_s *q, int id)$/;"	f	file:
put_buffer_id	jz_pcm_tlv320aic1106_dma.c	/^static inline void put_buffer_id(struct buffer_queue_s *q, int id)$/;"	f	file:
pv_map	opl3_hw.h	/^static struct physical_voice_info pv_map[18] =$/;"	v	typeref:struct:physical_voice_info
pwDSPQData	msnd.h	/^	void __iomem *pwDSPQData, *pwMIDQData, *pwMODQData;$/;"	m	struct:multisound_dev
pwMIDQData	msnd.h	/^	void __iomem *pwDSPQData, *pwMIDQData, *pwMODQData;$/;"	m	struct:multisound_dev
pwMODQData	msnd.h	/^	void __iomem *pwDSPQData, *pwMIDQData, *pwMODQData;$/;"	m	struct:multisound_dev
q40_ct_law	dmasound/dmasound_q40.c	/^static ssize_t q40_ct_law(const u_char __user *userPtr, size_t userCount,$/;"	f	file:
q40_ct_s8	dmasound/dmasound_q40.c	/^static ssize_t q40_ct_s8(const u_char __user *userPtr, size_t userCount,$/;"	f	file:
q40_ct_u8	dmasound/dmasound_q40.c	/^static ssize_t q40_ct_u8(const u_char __user *userPtr, size_t userCount,$/;"	f	file:
q40_ctc_law	dmasound/dmasound_q40.c	/^static ssize_t q40_ctc_law(const u_char __user *userPtr, size_t userCount,$/;"	f	file:
q40_ctc_s8	dmasound/dmasound_q40.c	/^static ssize_t q40_ctc_s8(const u_char __user *userPtr, size_t userCount,$/;"	f	file:
q40_ctc_u8	dmasound/dmasound_q40.c	/^static ssize_t q40_ctc_u8(const u_char __user *userPtr, size_t userCount,$/;"	f	file:
q40_ctx_law	dmasound/dmasound_q40.c	/^static ssize_t q40_ctx_law(const u_char __user *userPtr, size_t userCount,$/;"	f	file:
q40_ctx_s8	dmasound/dmasound_q40.c	/^static ssize_t q40_ctx_s8(const u_char __user *userPtr, size_t userCount,$/;"	f	file:
q40_ctx_u8	dmasound/dmasound_q40.c	/^static ssize_t q40_ctx_u8(const u_char __user *userPtr, size_t userCount,$/;"	f	file:
q40_pp	dmasound/dmasound_q40.c	/^static char *q40_pp;$/;"	v	file:
q40_sc	dmasound/dmasound_q40.c	/^static unsigned int q40_sc;$/;"	v	file:
q_full	jz_i2s.c	/^	wait_queue_head_t	q_full;$/;"	m	struct:__audio_pipe	file:
qhead	dev_table.h	/^	int      qhead;$/;"	m	struct:dma_buffparms
qhead	pas2_midi.c	/^static volatile unsigned char qhead, qtail;$/;"	v	file:
qhead	sequencer.c	/^static volatile int qhead, qtail, qlen;$/;"	v	file:
qlen	dev_table.h	/^	int      qlen;$/;"	m	struct:dma_buffparms
qlen	pas2_midi.c	/^static volatile int qlen;$/;"	v	file:
qlen	sequencer.c	/^static volatile int qhead, qtail, qlen;$/;"	v	file:
qtail	dev_table.h	/^	int      qtail;$/;"	m	struct:dma_buffparms
qtail	pas2_midi.c	/^static volatile unsigned char qhead, qtail;$/;"	v	file:
qtail	sequencer.c	/^static volatile int qhead, qtail, qlen;$/;"	v	file:
queue	midibuf.c	/^	unsigned char queue[MAX_QUEUE_SIZE];$/;"	m	struct:midi_buf	file:
queue	sequencer.c	/^static unsigned char *queue;$/;"	v	file:
queue	vwsnd.c	/^	wait_queue_head_t queue;$/;"	m	struct:vwsnd_port	file:
queues_are_quiescent	dmasound/dmasound_core.c	/^static int queues_are_quiescent(void)$/;"	f	file:
ramp_down_end	jz_i2s_4750.c	/^static unsigned long    ramp_down_end;$/;"	v	file:
ramp_down_end	jz_i2s_dlv_dma_test.c	/^static unsigned long    ramp_down_end;$/;"	v	file:
ramp_down_end	jz_i2s_for_4750.c	/^static unsigned long    ramp_down_end;$/;"	v	file:
ramp_down_start	jz_i2s_4750.c	/^static unsigned long    ramp_down_start;$/;"	v	file:
ramp_down_start	jz_i2s_dlv_dma_test.c	/^static unsigned long    ramp_down_start;$/;"	v	file:
ramp_down_start	jz_i2s_for_4750.c	/^static unsigned long    ramp_down_start;$/;"	v	file:
ramp_up_end	jz_i2s_4750.c	/^static unsigned long    ramp_up_end;$/;"	v	file:
ramp_up_end	jz_i2s_dlv_dma_test.c	/^static unsigned long    ramp_up_end;$/;"	v	file:
ramp_up_end	jz_i2s_for_4750.c	/^static unsigned long    ramp_up_end;$/;"	v	file:
ramp_up_start	jz_i2s_4750.c	/^static unsigned long    ramp_up_start;$/;"	v	file:
ramp_up_start	jz_i2s_dlv_dma_test.c	/^static unsigned long    ramp_up_start;$/;"	v	file:
ramp_up_start	jz_i2s_for_4750.c	/^static unsigned long    ramp_up_start;$/;"	v	file:
rate	btaudio.c	/^	int rate;$/;"	m	struct:btaudio	file:
rate	btaudio.c	/^	int rate;$/;"	m	struct:cardinfo	file:
rate	btaudio.c	/^static int rate;$/;"	v	file:
rate	i810_audio.c	/^		unsigned int rate;$/;"	m	struct:i810_state::dmabuf	file:
rate	sh_dac_audio.c	/^static int rate;$/;"	v	file:
rate	swarm_cs4297a.c	/^		unsigned rate;$/;"	m	struct:cs4297a_state::properties	file:
rate	trident.c	/^		unsigned int rate;$/;"	m	struct:trident_state::dmabuf	file:
rate	via82cxxx_audio.c	/^	unsigned rate;		\/* sample rate *\/$/;"	m	struct:via_channel	file:
raw_buf	dev_table.h	/^  	char     *raw_buf;$/;"	m	struct:dma_buffparms
raw_buf	sscape.c	/^	char*	raw_buf;$/;"	m	struct:sscape_info	file:
raw_buf_phys	dev_table.h	/^    	unsigned long   raw_buf_phys;$/;"	m	struct:dma_buffparms
raw_buf_phys	sscape.c	/^	unsigned long	raw_buf_phys;$/;"	m	struct:sscape_info	file:
rawbuf	au1550_ac97.c	/^		void		*rawbuf;$/;"	m	struct:au1550_state::dmabuf	file:
rawbuf	i810_audio.c	/^		void *rawbuf;$/;"	m	struct:i810_state::dmabuf	file:
rawbuf	trident.c	/^		void *rawbuf;$/;"	m	struct:trident_state::dmabuf	file:
rdcodec	au1550_ac97.c	/^rdcodec(struct ac97_codec *codec, u8 addr)$/;"	f	file:
read_channel	i810_audio.c	/^		struct i810_channel *read_channel;$/;"	m	struct:i810_state::dmabuf	typeref:struct:i810_state::dmabuf::i810_channel	file:
read_codec_file	jz_i2s_4750.c	/^static int read_codec_file(int addr)$/;"	f	file:
read_codec_file	jz_i2s_dlv_dma_test.c	/^static int read_codec_file(int addr)$/;"	f	file:
read_codec_file	jz_i2s_for_4750.c	/^static int read_codec_file(int addr)$/;"	f	file:
read_count	btaudio.c	/^	int read_count;$/;"	m	struct:btaudio	file:
read_data	mpu401.c	/^static inline int read_data(struct mpu_config *devc)$/;"	f	file:
read_mixer	jz_i2s_4750.c	/^	int  (*read_mixer) (struct i2s_codec *codec, int oss_channel);$/;"	m	struct:i2s_codec	file:
read_mixer	jz_i2s_dlv_dma_test.c	/^    int  (*read_mixer) (struct i2s_codec *codec, int oss_channel);$/;"	m	struct:i2s_codec	file:
read_mixer	jz_i2s_for_4750.c	/^	int  (*read_mixer) (struct i2s_codec *codec, int oss_channel);$/;"	m	struct:i2s_codec	file:
read_mixer	jz_pcm_tlv320aic1106_dma.c	/^	int  (*read_mixer) (struct pcm_codec *codec, int oss_channel);$/;"	m	struct:pcm_codec	file:
read_offset	btaudio.c	/^	int read_offset;$/;"	m	struct:btaudio	file:
read_reg	swarm_cs4297a.c	/^        volatile u16 read_reg;$/;"	m	struct:cs4297a_state	file:
read_sq_setup	dmasound/dmasound.h	/^    int (*read_sq_setup)(void);		\/* optional *\/$/;"	m	struct:__anon17
read_value	swarm_cs4297a.c	/^        volatile u16 read_value;$/;"	m	struct:cs4297a_state	file:
readblock	msnd.h	/^	wait_queue_head_t readblock;$/;"	m	struct:multisound_dev
readq	btaudio.c	/^	wait_queue_head_t readq;$/;"	m	struct:btaudio	file:
ready	au1550_ac97.c	/^		unsigned        ready:1;$/;"	m	struct:au1550_state::dmabuf	file:
ready	i810_audio.c	/^		unsigned ready:1;$/;"	m	struct:i810_state::dmabuf	file:
ready	swarm_cs4297a.c	/^        unsigned ready:1;	\/\/ prog_dmabuf_dac()\/adc() successful?$/;"	m	struct:serdma_s	file:
ready	trident.c	/^		unsigned ready:1;$/;"	m	struct:trident_state::dmabuf	file:
rear	dmasound/dmasound.h	/^    int front, rear, count;$/;"	m	struct:sound_queue
rear_size	dmasound/dmasound.h	/^    int rear_size;$/;"	m	struct:sound_queue
rec_buf_size	jz_ac97.c	/^	unsigned long rec_buf_size;$/;"	m	struct:jz_ac97_controller_info	file:
rec_channel_use_count	trident.c	/^	int rec_channel_use_count;$/;"	m	struct:trident_card	file:
rec_channels	msnd.h	/^	int rec_sample_size, rec_sample_rate, rec_channels;$/;"	m	struct:multisound_dev
rec_devices	pas2_mixer.c	/^static int      rec_devices = (SOUND_MASK_MIC);		\/* Default recording source *\/$/;"	v	file:
rec_ndelay	msnd.h	/^	int rec_ndelay;$/;"	m	struct:multisound_dev
rec_sample_rate	msnd.h	/^	int rec_sample_size, rec_sample_rate, rec_channels;$/;"	m	struct:multisound_dev
rec_sample_size	msnd.h	/^	int rec_sample_size, rec_sample_rate, rec_channels;$/;"	m	struct:multisound_dev
recmask	ad1848.c	/^	int             recmask;$/;"	m	struct:__anon1	file:
recmask	sb.h	/^	   int mixer_caps, recmask, outmask, supported_devices;$/;"	m	struct:sb_devc
recmask	waveartist.c	/^	int		recmask;	   \/* currently enabled recording device! *\/$/;"	m	struct:__anon11	file:
recmask_io	jz_i2s_4750.c	/^	int  (*recmask_io) (struct i2s_codec *codec, int rw, int mask);$/;"	m	struct:i2s_codec	file:
recmask_io	jz_i2s_dlv_dma_test.c	/^    int  (*recmask_io) (struct i2s_codec *codec, int rw, int mask);$/;"	m	struct:i2s_codec	file:
recmask_io	jz_i2s_for_4750.c	/^	int  (*recmask_io) (struct i2s_codec *codec, int rw, int mask);$/;"	m	struct:i2s_codec	file:
recmask_io	jz_pcm_tlv320aic1106_dma.c	/^	int  (*recmask_io) (struct pcm_codec *codec, int rw, int mask);$/;"	m	struct:pcm_codec	file:
record	dmasound/dmasound.h	/^    void (*record)(void);		\/* optional *\/$/;"	m	struct:__anon17
record_audio_rate	jz_i2s.c	/^	unsigned short	record_audio_rate;$/;"	m	struct:i2s_codec	file:
record_codec_channel	jz_i2s.c	/^	short	record_codec_channel;$/;"	m	struct:i2s_codec	file:
record_dev	ad1848.c	/^	int             record_dev, playback_dev;$/;"	m	struct:__anon1	file:
record_dev	waveartist.c	/^	int		record_dev;$/;"	m	struct:__anon11	file:
record_fill_1x16_s	jz_ac97.c	/^static int record_fill_1x16_s(unsigned long dst_start, int count, int id)$/;"	f	file:
record_fill_1x16_s	jz_i2s_4750.c	/^static int record_fill_1x16_s(unsigned long dst_start, int count, int id)$/;"	f	file:
record_fill_1x16_s	jz_i2s_dlv_dma_test.c	/^static int record_fill_1x16_s(unsigned long dst_start, int count, int id)$/;"	f	file:
record_fill_1x16_s	jz_i2s_for_4750.c	/^static int record_fill_1x16_s(unsigned long dst_start, int count, int id)$/;"	f	file:
record_fill_1x16_s	jz_pcm_tlv320aic1106_dma.c	/^static int record_fill_1x16_s(unsigned long dst_start, int count, int id)$/;"	f	file:
record_fill_1x8_u	jz_ac97.c	/^static int record_fill_1x8_u(unsigned long dst_start, int count, int id)$/;"	f	file:
record_fill_1x8_u	jz_i2s_4750.c	/^static int record_fill_1x8_u(unsigned long dst_start, int count, int id)$/;"	f	file:
record_fill_1x8_u	jz_i2s_dlv_dma_test.c	/^static int record_fill_1x8_u(unsigned long dst_start, int count, int id)$/;"	f	file:
record_fill_1x8_u	jz_i2s_for_4750.c	/^static int record_fill_1x8_u(unsigned long dst_start, int count, int id)$/;"	f	file:
record_fill_1x8_u	jz_pcm_tlv320aic1106_dma.c	/^static int record_fill_1x8_u(unsigned long dst_start, int count, int id)$/;"	f	file:
record_fill_2x16_s	jz_ac97.c	/^static int record_fill_2x16_s(unsigned long dst_start, int count, int id)$/;"	f	file:
record_fill_2x16_s	jz_i2s_4750.c	/^static int record_fill_2x16_s(unsigned long dst_start, int count, int id)$/;"	f	file:
record_fill_2x16_s	jz_i2s_dlv_dma_test.c	/^static int record_fill_2x16_s(unsigned long dst_start, int count, int id)$/;"	f	file:
record_fill_2x16_s	jz_i2s_for_4750.c	/^static int record_fill_2x16_s(unsigned long dst_start, int count, int id)$/;"	f	file:
record_fill_2x16_s	jz_pcm_tlv320aic1106_dma.c	/^static int record_fill_2x16_s(unsigned long dst_start, int count, int id)$/;"	f	file:
record_fill_2x24_s	jz_i2s_dlv_dma_test.c	/^static int record_fill_2x24_s(unsigned long dst_start, int count, int id)$/;"	f	file:
record_fill_2x8_u	jz_ac97.c	/^static int record_fill_2x8_u(unsigned long dst_start, int count, int id)$/;"	f	file:
record_fill_2x8_u	jz_i2s_4750.c	/^static int record_fill_2x8_u(unsigned long dst_start, int count, int id)$/;"	f	file:
record_fill_2x8_u	jz_i2s_dlv_dma_test.c	/^static int record_fill_2x8_u(unsigned long dst_start, int count, int id)$/;"	f	file:
record_fill_2x8_u	jz_i2s_for_4750.c	/^static int record_fill_2x8_u(unsigned long dst_start, int count, int id)$/;"	f	file:
record_fill_2x8_u	jz_pcm_tlv320aic1106_dma.c	/^static int record_fill_2x8_u(unsigned long dst_start, int count, int id)$/;"	f	file:
record_filler	jz_ac97.c	/^(*record_filler)(unsigned long dst_start, int count, int id);$/;"	v	file:
record_filler	jz_i2s_4750.c	/^static int (*record_filler)(unsigned long dst_start, int count, int id);$/;"	v	file:
record_filler	jz_i2s_dlv_dma_test.c	/^static int (*record_filler)(unsigned long dst_start, int count, int id);$/;"	v	file:
record_filler	jz_i2s_for_4750.c	/^static int (*record_filler)(unsigned long dst_start, int count, int id);$/;"	v	file:
record_filler	jz_pcm_tlv320aic1106_dma.c	/^static int (*record_filler)(unsigned long dst_start, int count, int id);$/;"	v	file:
record_format	jz_i2s.c	/^	short	record_format;$/;"	m	struct:i2s_codec	file:
record_sources	jz_i2s_4750.c	/^	int record_sources;$/;"	m	struct:i2s_codec	file:
record_sources	jz_i2s_dlv_dma_test.c	/^    int record_sources;$/;"	m	struct:i2s_codec	file:
record_sources	jz_i2s_for_4750.c	/^	int record_sources;$/;"	m	struct:i2s_codec	file:
record_sources	jz_pcm_tlv320aic1106_dma.c	/^	int record_sources;$/;"	m	struct:pcm_codec	file:
recording	btaudio.c	/^	int recording;$/;"	m	struct:btaudio	file:
recording	jz_ac97.c	/^	int recording;$/;"	m	struct:jz_ac97_controller_info	file:
recording_devs	waveartist.c	/^	unsigned int	recording_devs;	   \/* Recordable devies *\/$/;"	m	struct:waveartist_mixer_info	file:
recpol	ad1848_mixer.h	/^	unsigned int recpol:1;		\/* recording polarity: 0=normal, 1=reversed *\/$/;"	m	struct:mixer_def
recpos	ad1848_mixer.h	/^	unsigned int recpos:4;		\/* position of recording bit in register *\/$/;"	m	struct:mixer_def
recreg	ad1848_mixer.h	/^	unsigned int recreg:6;		\/* register number for recording bit *\/$/;"	m	struct:mixer_def
recsrc	msnd.h	/^	unsigned long recsrc;$/;"	m	struct:multisound_dev
recsrc	swarm_cs4297a.c	/^		unsigned int recsrc;$/;"	m	struct:cs4297a_state::__anon21	file:
reg	vwsnd.c	/^	char reg;$/;"	m	struct:ad1843_bitfield	file:
reg_l	waveartist.c	/^	unsigned char	reg_l;$/;"	m	struct:mix_ent	file:
reg_r	waveartist.c	/^	unsigned char	reg_r;$/;"	m	struct:mix_ent	file:
reg_request	swarm_cs4297a.c	/^        volatile u64 reg_request;$/;"	m	struct:cs4297a_state	file:
reg_wait	swarm_cs4297a.c	/^        wait_queue_head_t reg_wait;$/;"	m	struct:serdma_s	file:
register_jz_codecs	jz_i2s.c	/^void register_jz_codecs(void *func)$/;"	f
regno	ad1848_mixer.h	/^	unsigned int regno:6;		\/* register number for volume *\/$/;"	m	struct:mixer_def
regno	sb.h	/^	unsigned int regno: 8;$/;"	m	struct:mixer_def
regsel	hal2.h	/^	volatile u32 regsel;		\/* DOC Register selection *\/$/;"	m	struct:hal2_syn_regs
releasecodecaccess	trident.c	/^releasecodecaccess(struct trident_card *card)$/;"	f	file:
reload_11025	jz_ac97.c	/^static unsigned int reload_11025[] = {$/;"	v	file:
reload_16000	jz_ac97.c	/^static unsigned int reload_16000[] = {$/;"	v	file:
reload_22050	jz_ac97.c	/^static unsigned int reload_22050[] = {$/;"	v	file:
reload_24000	jz_ac97.c	/^static unsigned int reload_24000[] = {$/;"	v	file:
reload_32000	jz_ac97.c	/^static unsigned int reload_32000[] = {$/;"	v	file:
reload_44100	jz_ac97.c	/^static unsigned int reload_44100[] = {$/;"	v	file:
reload_48000	jz_ac97.c	/^static unsigned int reload_48000[] = {$/;"	v	file:
reload_8000	jz_ac97.c	/^static unsigned int reload_8000[] = {$/;"	v	file:
relocate_Jazz16	sb_common.c	/^static void relocate_Jazz16(sb_devc * devc, struct address_info *hw_config)$/;"	f	file:
relocate_ess1688	sb_common.c	/^static void relocate_ess1688(sb_devc * devc)$/;"	f	file:
remove_one	kahlua.c	/^static void __devexit remove_one(struct pci_dev *pdev)$/;"	f	file:
reorganize_buffers	audio.c	/^void reorganize_buffers(int dev, struct dma_buffparms *dmap, int recording)$/;"	f
replay_audio_rate	jz_i2s.c	/^	unsigned short	replay_audio_rate;$/;"	m	struct:i2s_codec	file:
replay_codec_channel	jz_i2s.c	/^	short	replay_codec_channel;$/;"	m	struct:i2s_codec	file:
replay_fill_1x16_s	jz_ac97.c	/^static void replay_fill_1x16_s(unsigned long src_start, int count, int id)$/;"	f	file:
replay_fill_1x16_s	jz_i2s_4750.c	/^static void replay_fill_1x16_s(signed long src_start, int count, int id)$/;"	f	file:
replay_fill_1x16_s	jz_i2s_dlv_dma_test.c	/^static void replay_fill_1x16_s(signed long src_start, int count, int id)$/;"	f	file:
replay_fill_1x16_s	jz_i2s_for_4750.c	/^static void replay_fill_1x16_s(signed long src_start, int count, int id)$/;"	f	file:
replay_fill_1x16_s	jz_pcm_tlv320aic1106_dma.c	/^static void replay_fill_1x16_s(unsigned long src_start, int count, int id)$/;"	f	file:
replay_fill_1x8_u	jz_ac97.c	/^static void replay_fill_1x8_u(unsigned long src_start, int count, int id)$/;"	f	file:
replay_fill_1x8_u	jz_i2s_4750.c	/^static void replay_fill_1x8_u(signed long src_start, int count, int id)$/;"	f	file:
replay_fill_1x8_u	jz_i2s_dlv_dma_test.c	/^static void replay_fill_1x8_u(unsigned long src_start, int count, int id)$/;"	f	file:
replay_fill_1x8_u	jz_i2s_for_4750.c	/^static void replay_fill_1x8_u(signed long src_start, int count, int id)$/;"	f	file:
replay_fill_1x8_u	jz_pcm_tlv320aic1106_dma.c	/^static void replay_fill_1x8_u(unsigned long src_start, int count, int id)$/;"	f	file:
replay_fill_2x16_s	jz_ac97.c	/^static void replay_fill_2x16_s(unsigned long src_start, int count, int id)$/;"	f	file:
replay_fill_2x16_s	jz_i2s_4750.c	/^static void replay_fill_2x16_s(signed long src_start, int count, int id)$/;"	f	file:
replay_fill_2x16_s	jz_i2s_dlv_dma_test.c	/^static void replay_fill_2x16_s(signed long src_start, int count, int id)$/;"	f	file:
replay_fill_2x16_s	jz_i2s_for_4750.c	/^static void replay_fill_2x16_s(signed long src_start, int count, int id)$/;"	f	file:
replay_fill_2x16_s	jz_pcm_tlv320aic1106_dma.c	/^static void replay_fill_2x16_s(unsigned long src_start, int count, int id)$/;"	f	file:
replay_fill_2x18_s	jz_i2s_dlv_dma_test.c	/^static void replay_fill_2x18_s(unsigned long src_start, int count, int id)$/;"	f	file:
replay_fill_2x24_s	jz_i2s_dlv_dma_test.c	/^static void replay_fill_2x24_s(unsigned long src_start, int count, int id)$/;"	f	file:
replay_fill_2x8_u	jz_ac97.c	/^static void replay_fill_2x8_u(unsigned long src_start, int count, int id)$/;"	f	file:
replay_fill_2x8_u	jz_i2s_4750.c	/^static void replay_fill_2x8_u(signed long src_start, int count, int id)$/;"	f	file:
replay_fill_2x8_u	jz_i2s_dlv_dma_test.c	/^static void replay_fill_2x8_u(unsigned long src_start, int count, int id)$/;"	f	file:
replay_fill_2x8_u	jz_i2s_for_4750.c	/^static void replay_fill_2x8_u(signed long src_start, int count, int id)$/;"	f	file:
replay_fill_2x8_u	jz_pcm_tlv320aic1106_dma.c	/^static void replay_fill_2x8_u(unsigned long src_start, int count, int id)$/;"	f	file:
replay_filler	jz_ac97.c	/^(*replay_filler)(unsigned long src_start, int count, int id);$/;"	v	file:
replay_filler	jz_i2s_4750.c	/^static void (*replay_filler)(signed long src_start, int count, int id);$/;"	v	file:
replay_filler	jz_i2s_dlv_dma_test.c	/^static void (*replay_filler)(signed long src_start, int count, int id);$/;"	v	file:
replay_filler	jz_i2s_for_4750.c	/^static void (*replay_filler)(signed long src_start, int count, int id);$/;"	v	file:
replay_filler	jz_pcm_tlv320aic1106_dma.c	/^static void (*replay_filler)(unsigned long src_start, int count, int id);$/;"	v	file:
replay_format	jz_i2s.c	/^	short	replay_format;$/;"	m	struct:i2s_codec	file:
reprogram_timer	sound_timer.c	/^void reprogram_timer(void)$/;"	f
request_sound_timer	soundcard.c	/^void request_sound_timer(int count)$/;"	f
res	trident.c	/^static struct proc_dir_entry *res;$/;"	v	typeref:struct:proc_dir_entry	file:
reserve_mastervol	jz_ac97.c	/^static int reserve_mastervol, reserve_micvol;$/;"	v	file:
reserve_micvol	jz_ac97.c	/^static int reserve_mastervol, reserve_micvol;$/;"	v	file:
reserve_power1	jz_ac97.c	/^static int reserve_power1, reserve_power2;$/;"	v	file:
reserve_power2	jz_ac97.c	/^static int reserve_power1, reserve_power2;$/;"	v	file:
reserve_power3	jz_ac97.c	/^static int reserve_power3, reserve_power4;$/;"	v	file:
reserve_power4	jz_ac97.c	/^static int reserve_power3, reserve_power4;$/;"	v	file:
reserve_power5	jz_ac97.c	/^static int reserve_power5, reserve_power6;$/;"	v	file:
reserve_power6	jz_ac97.c	/^static int reserve_power5, reserve_power6;$/;"	v	file:
reset	dev_table.h	/^	void (*reset) (int dev);$/;"	m	struct:synth_operations
reset	dev_table.h	/^	void (*reset) (void *devc);$/;"	m	struct:coproc_operations
reset	msnd_pinnacle.c	/^static int reset;$/;"	v	file:
reset_codec	jz_i2s_4750.c	/^void (*reset_codec)(void) = NULL;$/;"	v
reset_codec	jz_i2s_for_4750.c	/^void (*reset_codec)(void) = NULL;$/;"	v
reset_controllers	sequencer.c	/^static void reset_controllers(int dev, unsigned char *controller, int update_dev)$/;"	f	file:
reset_dsp	msnd_pinnacle.c	/^static int reset_dsp(void)$/;"	f	file:
reset_jzcodec	jzcodec.c	/^void reset_jzcodec(void)$/;"	f
reset_jzcodec	jzdlv.c	/^static void reset_jzcodec(void)$/;"	f	file:
reset_mpu401	mpu401.c	/^static int reset_mpu401(struct mpu_config *devc)$/;"	f	file:
reset_play_queue	msnd_pinnacle.c	/^static void reset_play_queue(void)$/;"	f	file:
reset_proteus	msnd_pinnacle.c	/^static void reset_proteus(void)$/;"	f	file:
reset_queues	msnd_pinnacle.c	/^static void reset_queues(void)$/;"	f	file:
reset_record_queue	msnd_pinnacle.c	/^static void reset_record_queue(void)$/;"	f	file:
reset_uart401	uart401.c	/^static int reset_uart401(uart401_devc * devc)$/;"	f	file:
reset_uart6850	uart6850.c	/^static inline int reset_uart6850(void)$/;"	f	file:
resume_ak4642en	ak4642en.c	/^void resume_ak4642en(void)$/;"	f
resume_jzcodec	jzcodec.c	/^void resume_jzcodec(void)$/;"	f
ret_vol_mono	pss.c	/^static int ret_vol_mono(int left)$/;"	f	file:
ret_vol_stereo	pss.c	/^static int ret_vol_stereo(int left, int right)$/;"	f	file:
rev	hal2.h	/^	volatile u32 rev;		\/* 0x20 Revision Register *\/$/;"	m	struct:hal2_ctl_regs
rev_h	via82cxxx_audio.c	/^	unsigned rev_h : 1;$/;"	m	struct:via_info	file:
reverse	ad1848.c	/^static int reverse;$/;"	v	file:
revision	mpu401.c	/^	unsigned char   version, revision;$/;"	m	struct:mpu_config	file:
revision	trident.c	/^	u8 revision;$/;"	m	struct:trident_card	file:
rfield	vwsnd.c	/^	const ad1843_bitfield_t *rfield;$/;"	m	struct:ad1843_gain	file:
right	hal2.h	/^	volatile u32 right;		\/* Right volume *\/$/;"	m	struct:hal2_vol_regs
right	jz_i2s_4750.c	/^	signed long right;$/;"	m	struct:left_right_sample_s	file:
right	jz_i2s_dlv_dma_test.c	/^	signed long right;$/;"	m	struct:left_right_sample_s	file:
right	jz_i2s_for_4750.c	/^	signed long right;$/;"	m	struct:left_right_sample_s	file:
right_io	opl3.c	/^	int             left_io, right_io;$/;"	m	struct:opl_devinfo	file:
right_levels	msnd.h	/^	int right_levels[32];$/;"	m	struct:multisound_dev
ringsz	swarm_cs4297a.c	/^        unsigned         ringsz;$/;"	m	struct:serdma_s	file:
risc_cpu	btaudio.c	/^	unsigned long  *risc_cpu;$/;"	m	struct:btaudio	file:
risc_dma	btaudio.c	/^	dma_addr_t     risc_dma;$/;"	m	struct:btaudio	file:
risc_size	btaudio.c	/^	unsigned int   risc_size;$/;"	m	struct:btaudio	file:
rport	vwsnd.c	/^	vwsnd_port_t	rport;$/;"	m	struct:vwsnd_dev	file:
rw	jz_i2s.c	/^	int rw;$/;"	m	struct:__anon25	file:
rx_bad	swarm_cs4297a.c	/^                unsigned int rx_bad;$/;"	m	struct:cs4297a_state::__anon20	file:
rx_cr	hal2.h	/^	volatile u32 rx_cr[2];		\/* Control registers *\/$/;"	m	struct:hal2_aes_regs
rx_good	swarm_cs4297a.c	/^                unsigned int rx_good;$/;"	m	struct:cs4297a_state::__anon20	file:
rx_overflow	swarm_cs4297a.c	/^                unsigned int rx_overflow; \/* staging buffer *\/$/;"	m	struct:cs4297a_state::__anon20	file:
rx_ovrrn	swarm_cs4297a.c	/^                unsigned int rx_ovrrn; \/* FIFO *\/$/;"	m	struct:cs4297a_state::__anon20	file:
rx_st	hal2.h	/^	volatile u32 rx_st[24];		\/* Channel status data *\/$/;"	m	struct:hal2_aes_regs
rx_stat	hal2.h	/^	volatile u32 rx_stat[2];	\/* Status registers *\/$/;"	m	struct:hal2_aes_regs
rx_ud	hal2.h	/^	volatile u32 rx_ud[4];		\/* User data window *\/$/;"	m	struct:hal2_aes_regs
rx_wait_queue	jz_ac97.c	/^DECLARE_WAIT_QUEUE_HEAD (rx_wait_queue);$/;"	v
s_ops	v_midi.c	/^	struct synth_operations s_ops[2];$/;"	m	struct:vmidi_memory	typeref:struct:vmidi_memory::synth_operations	file:
sample_buf	swarm_cs4297a.c	/^        u16  *sample_buf;		\/\/ tmp buffer for sample conversions$/;"	m	struct:serdma_s	file:
sample_rate	au1550_ac97.c	/^		unsigned        sample_rate;$/;"	m	struct:au1550_state::dmabuf	file:
sample_rate	hal2.c	/^	unsigned int sample_rate;$/;"	m	struct:hal2_codec	file:
sample_shift	i810_audio.c	/^static const unsigned sample_shift[] = { -1, 0, 0, 1 };$/;"	v	file:
sample_shift	trident.c	/^static const unsigned sample_shift[] = { 0, 1, 1, 2 };$/;"	v	file:
sample_size	au1550_ac97.c	/^		unsigned        sample_size;$/;"	m	struct:au1550_state::dmabuf	file:
sample_size	i810_audio.c	/^static const unsigned sample_size[] = { 1, 2, 2, 4 };$/;"	v	file:
sample_size	trident.c	/^static const unsigned sample_size[] = { 1, 2, 2, 4 };$/;"	v	file:
sample_size	vwsnd.c	/^	int		sample_size;$/;"	m	struct:vwsnd_port	file:
sampleshift	btaudio.c	/^	int sampleshift;$/;"	m	struct:btaudio	file:
save_last_samples	jz_i2s_4750.c	/^static left_right_sample_t save_last_samples[64];$/;"	v	file:
save_last_samples	jz_i2s_for_4750.c	/^static left_right_sample_t save_last_samples[64];$/;"	v	file:
saved_heartbeat	dmasound/dmasound_paula.c	/^static void (*saved_heartbeat)(int) = NULL;$/;"	v	file:
saved_regs	ad1848.c	/^	unsigned char   saved_regs[64];	\/* Includes extended register space *\/$/;"	m	struct:__anon1	file:
savenode	jz_i2s.c	/^	audio_node	*savenode;$/;"	m	struct:__audio_pipe	file:
sb	trix.c	/^static int sb;$/;"	v	file:
sb-objs	Makefile	/^sb-objs		:= sb_card.o$/;"	m
sb16_audio_driver	sb_audio.c	/^static struct audio_driver sb16_audio_driver =	\/* SB16 *\/$/;"	v	typeref:struct:audio_driver	file:
sb16_audio_mmap	sb_audio.c	/^sb16_audio_mmap(int dev)$/;"	f	file:
sb16_audio_output_block	sb_audio.c	/^static void sb16_audio_output_block(int dev, unsigned long buf, int count,$/;"	f	file:
sb16_audio_prepare_for_input	sb_audio.c	/^static int sb16_audio_prepare_for_input(int dev, int bsize, int bcount)$/;"	f	file:
sb16_audio_prepare_for_output	sb_audio.c	/^static int sb16_audio_prepare_for_output(int dev, int bsize, int bcount)$/;"	f	file:
sb16_audio_set_bits	sb_audio.c	/^static unsigned int sb16_audio_set_bits(int dev, unsigned int bits)$/;"	f	file:
sb16_audio_set_speed	sb_audio.c	/^static int sb16_audio_set_speed(int dev, int speed)$/;"	f	file:
sb16_audio_start_input	sb_audio.c	/^static void sb16_audio_start_input(int dev, unsigned long buf, int count, int intrflag)$/;"	f	file:
sb16_audio_trigger	sb_audio.c	/^static void sb16_audio_trigger(int dev, int bits)$/;"	f	file:
sb16_copy_from_user	sb_audio.c	/^sb16_copy_from_user(int dev,$/;"	f	file:
sb16_mix	sb_mixer.c	/^static mixer_tab sb16_mix = {$/;"	v	file:
sb16_recmasks_L	sb_mixer.c	/^static unsigned char sb16_recmasks_L[SOUND_MIXER_NRDEVICES] =$/;"	v	file:
sb16_recmasks_R	sb_mixer.c	/^static unsigned char sb16_recmasks_R[SOUND_MIXER_NRDEVICES] =$/;"	v	file:
sb16_set_dma_hw	sb_common.c	/^static int sb16_set_dma_hw(sb_devc * devc)$/;"	f	file:
sb16_set_irq_hw	sb_common.c	/^static int sb16_set_irq_hw(sb_devc * devc, int level)$/;"	f	file:
sb16_set_mpu_port	sb_common.c	/^static void sb16_set_mpu_port(sb_devc * devc, struct address_info *hw_config)$/;"	f	file:
sb1_audio_driver	sb_audio.c	/^static struct audio_driver sb1_audio_driver =	\/* SB1.x *\/$/;"	v	typeref:struct:audio_driver	file:
sb1_audio_halt_xfer	sb_audio.c	/^static void sb1_audio_halt_xfer(int dev)$/;"	f	file:
sb1_audio_output_block	sb_audio.c	/^static void sb1_audio_output_block(int dev, unsigned long buf, int nr_bytes, int intrflag)$/;"	f	file:
sb1_audio_prepare_for_input	sb_audio.c	/^static int sb1_audio_prepare_for_input(int dev, int bsize, int bcount)$/;"	f	file:
sb1_audio_prepare_for_output	sb_audio.c	/^static int sb1_audio_prepare_for_output(int dev, int bsize, int bcount)$/;"	f	file:
sb1_audio_set_bits	sb_audio.c	/^static unsigned int sb1_audio_set_bits(int dev, unsigned int bits)$/;"	f	file:
sb1_audio_set_channels	sb_audio.c	/^static short sb1_audio_set_channels(int dev, short channels)$/;"	f	file:
sb1_audio_set_speed	sb_audio.c	/^static int sb1_audio_set_speed(int dev, int speed)$/;"	f	file:
sb1_audio_start_input	sb_audio.c	/^static void sb1_audio_start_input(int dev, unsigned long buf, int nr_bytes, int intrflag)$/;"	f	file:
sb1_audio_trigger	sb_audio.c	/^static void sb1_audio_trigger(int dev, int bits)$/;"	f	file:
sb201_audio_driver	sb_audio.c	/^static struct audio_driver sb201_audio_driver =		\/* SB2.01 *\/$/;"	v	typeref:struct:audio_driver	file:
sb201_audio_set_speed	sb_audio.c	/^static int sb201_audio_set_speed(int dev, int speed)$/;"	f	file:
sb20_audio_driver	sb_audio.c	/^static struct audio_driver sb20_audio_driver =	\/* SB2.0 *\/$/;"	v	typeref:struct:audio_driver	file:
sb20_audio_output_block	sb_audio.c	/^static void sb20_audio_output_block(int dev, unsigned long buf, int nr_bytes,$/;"	f	file:
sb20_audio_start_input	sb_audio.c	/^static void sb20_audio_start_input(int dev, unsigned long buf, int nr_bytes, int intrflag)$/;"	f	file:
sb20_audio_trigger	sb_audio.c	/^static void sb20_audio_trigger(int dev, int bits)$/;"	f	file:
sb_audio_close	sb_audio.c	/^void sb_audio_close(int dev)$/;"	f
sb_audio_init	sb_audio.c	/^void sb_audio_init(sb_devc * devc, char *name, struct module *owner)$/;"	f
sb_audio_open	sb_audio.c	/^int sb_audio_open(int dev, int mode)$/;"	f
sb_be_quiet	sb_common.c	/^EXPORT_SYMBOL(sb_be_quiet);$/;"	v
sb_be_quiet	sb_common.c	/^int sb_be_quiet;$/;"	v
sb_card_config	sb_card.h	/^struct sb_card_config {$/;"	s
sb_chgmixer	sb_common.c	/^void sb_chgmixer$/;"	f
sb_common_mixer_set	sb_mixer.c	/^int sb_common_mixer_set(sb_devc * devc, int dev, int left, int right)$/;"	f
sb_default_levels	sb_mixer.c	/^static int sb_default_levels[32] =$/;"	v	file:
sb_dev2cfg	sb_card.c	/^static void sb_dev2cfg(struct pnp_dev *dev, struct sb_card_config *scc)$/;"	f	file:
sb_devc	sb.h	/^	} sb_devc;$/;"	t	typeref:struct:sb_devc
sb_devc	sb.h	/^typedef struct sb_devc {$/;"	s
sb_dma	pas2_card.c	/^static int __initdata sb_dma	= -1;$/;"	v	file:
sb_dma	trix.c	/^static int __initdata sb_dma	= -1;$/;"	v	file:
sb_dma16	pas2_card.c	/^static int __initdata sb_dma16	= -1;$/;"	v	file:
sb_dma_bits	pas2_card.c	/^static unsigned char sb_dma_bits[] = {$/;"	v	file:
sb_dsp_command	sb_common.c	/^int sb_dsp_command(sb_devc * devc, unsigned char val)$/;"	f
sb_dsp_detect	sb_common.c	/^EXPORT_SYMBOL(sb_dsp_detect);$/;"	v
sb_dsp_detect	sb_common.c	/^int sb_dsp_detect(struct address_info *hw_config, int pci, int pciio, struct sb_module_options *sbmo)$/;"	f
sb_dsp_get_byte	sb_common.c	/^int sb_dsp_get_byte(sb_devc * devc)$/;"	f
sb_dsp_init	sb_common.c	/^EXPORT_SYMBOL(sb_dsp_init);$/;"	v
sb_dsp_init	sb_common.c	/^int sb_dsp_init(struct address_info *hw_config, struct module *owner)$/;"	f
sb_dsp_midi_init	sb_midi.c	/^void sb_dsp_midi_init(sb_devc * devc, struct module *owner)$/;"	f
sb_dsp_reset	sb_common.c	/^int sb_dsp_reset(sb_devc * devc)$/;"	f
sb_dsp_unload	sb_common.c	/^EXPORT_SYMBOL(sb_dsp_unload);$/;"	v
sb_dsp_unload	sb_common.c	/^void sb_dsp_unload(struct address_info *hw_config, int sbmpu)$/;"	f
sb_end	swarm_cs4297a.c	/^        u16  *sb_end;$/;"	m	struct:serdma_s	file:
sb_exit	sb_card.c	/^module_exit(sb_exit);$/;"	v
sb_exit	sb_card.c	/^static void __exit sb_exit(void)$/;"	f	file:
sb_getmixer	sb_common.c	/^unsigned int sb_getmixer(sb_devc * devc, unsigned int port)$/;"	f
sb_hwptr	swarm_cs4297a.c	/^        u16  *sb_hwptr;$/;"	m	struct:serdma_s	file:
sb_init	sb_card.c	/^module_init(sb_init);$/;"	v
sb_init	sb_card.c	/^static int __init sb_init(void)$/;"	f	file:
sb_init_legacy	sb_card.c	/^static int __init sb_init_legacy(void)$/;"	f	file:
sb_intr	sb_common.c	/^static void sb_intr (sb_devc *devc)$/;"	f	file:
sb_io	pas2_card.c	/^static int __initdata sb_io	= 0;$/;"	v	file:
sb_io	trix.c	/^static int __initdata sb_io	= -1;$/;"	v	file:
sb_irq	pas2_card.c	/^static int __initdata sb_irq	= -1;$/;"	v	file:
sb_irq	trix.c	/^static int __initdata sb_irq	= -1;$/;"	v	file:
sb_irq_bits	pas2_card.c	/^static unsigned char sb_irq_bits[] = {$/;"	v	file:
sb_lib-objs	Makefile	/^sb_lib-objs	:= sb_common.o sb_audio.o sb_midi.o sb_mixer.o sb_ess.o$/;"	m
sb_midi_close	sb_midi.c	/^static void sb_midi_close(int dev)$/;"	f	file:
sb_midi_end_read	sb_midi.c	/^static int sb_midi_end_read(int dev)$/;"	f	file:
sb_midi_interrupt	sb_midi.c	/^void sb_midi_interrupt(sb_devc * devc)$/;"	f
sb_midi_ioctl	sb_midi.c	/^static int sb_midi_ioctl(int dev, unsigned cmd, void __user *arg)$/;"	f	file:
sb_midi_open	sb_midi.c	/^static int sb_midi_open(int dev, int mode,$/;"	f	file:
sb_midi_operations	sb_midi.c	/^static struct midi_operations sb_midi_operations =$/;"	v	typeref:struct:midi_operations	file:
sb_midi_out	sb_midi.c	/^static int sb_midi_out(int dev, unsigned char midi_byte)$/;"	f	file:
sb_midi_start_read	sb_midi.c	/^static int sb_midi_start_read(int dev)$/;"	f	file:
sb_mixer_get	sb_mixer.c	/^static int sb_mixer_get(sb_devc * devc, int dev)$/;"	f	file:
sb_mixer_init	sb_mixer.c	/^int sb_mixer_init(sb_devc * devc, struct module *owner)$/;"	f
sb_mixer_ioctl	sb_mixer.c	/^static int sb_mixer_ioctl(int dev, unsigned int cmd, void __user *arg)$/;"	f	file:
sb_mixer_operations	sb_mixer.c	/^static struct mixer_operations sb_mixer_operations =$/;"	v	typeref:struct:mixer_operations	file:
sb_mixer_reset	sb_mixer.c	/^static void sb_mixer_reset(sb_devc * devc)$/;"	f	file:
sb_mixer_set	sb_mixer.c	/^static int sb_mixer_set(sb_devc * devc, int dev, int value)$/;"	f	file:
sb_mixer_set_stereo	sb_mixer.c	/^void sb_mixer_set_stereo(sb_devc * devc, int mode)$/;"	f
sb_mixer_unload	sb_mixer.c	/^void sb_mixer_unload(sb_devc *devc)$/;"	f
sb_module_options	sb.h	/^struct sb_module_options$/;"	s
sb_pnp_card_table	sb_card.h	/^static struct pnp_card_device_id sb_pnp_card_table[] = {$/;"	v	typeref:struct:pnp_card_device_id
sb_pnp_devices	sb_card.c	/^static unsigned int sb_pnp_devices;$/;"	v	file:
sb_pnp_driver	sb_card.c	/^static struct pnp_card_driver sb_pnp_driver = {$/;"	v	typeref:struct:pnp_card_driver	file:
sb_pnp_probe	sb_card.c	/^static int sb_pnp_probe(struct pnp_card_link *card, const struct pnp_card_device_id *card_id)$/;"	f	file:
sb_pnp_remove	sb_card.c	/^static void sb_pnp_remove(struct pnp_card_link *card)$/;"	f	file:
sb_register_oss	sb_card.c	/^static int sb_register_oss(struct sb_card_config *scc, struct sb_module_options *sbmo)$/;"	f	file:
sb_set_input_parms	sb_audio.c	/^static void sb_set_input_parms(int dev, unsigned long buf, int count, int intrflag)$/;"	f	file:
sb_set_output_parms	sb_audio.c	/^static void sb_set_output_parms(int dev, unsigned long buf, int nr_bytes,$/;"	f	file:
sb_setmixer	sb_common.c	/^void sb_setmixer(sb_devc * devc, unsigned int port, unsigned int value)$/;"	f
sb_swptr	swarm_cs4297a.c	/^        u16  *sb_swptr;$/;"	m	struct:serdma_s	file:
sb_unload	sb_card.c	/^static void sb_unload(struct sb_card_config *scc)$/;"	f	file:
sb_unregister_all	sb_card.c	/^static void sb_unregister_all(void)$/;"	f	file:
sbintr	sb_common.c	/^static irqreturn_t sbintr(int irq, void *dev_id)$/;"	f	file:
sbmixnum	sb.h	/^	   int sbmixnum;$/;"	m	struct:sb_devc
sbmixnum	sb_mixer.c	/^static int      sbmixnum = 1;$/;"	v	file:
sbmo	sb.h	/^	   struct sb_module_options sbmo;	\/* Module options *\/$/;"	m	struct:sb_devc	typeref:struct:sb_devc::sb_module_options
sbpro_audio_driver	sb_audio.c	/^static struct audio_driver sbpro_audio_driver =		\/* SB Pro *\/$/;"	v	typeref:struct:audio_driver	file:
sbpro_audio_prepare_for_input	sb_audio.c	/^static int sbpro_audio_prepare_for_input(int dev, int bsize, int bcount)$/;"	f	file:
sbpro_audio_prepare_for_output	sb_audio.c	/^static int sbpro_audio_prepare_for_output(int dev, int bsize, int bcount)$/;"	f	file:
sbpro_audio_set_channels	sb_audio.c	/^static short sbpro_audio_set_channels(int dev, short channels)$/;"	f	file:
sbpro_audio_set_speed	sb_audio.c	/^static int sbpro_audio_set_speed(int dev, int speed)$/;"	f	file:
sbpro_mix	sb_mixer.c	/^static mixer_tab sbpro_mix = {$/;"	v	file:
sbufsz	swarm_cs4297a.c	/^        unsigned sbufsz;	\/\/ 2**buforder.$/;"	m	struct:serdma_s	file:
scale	ac97_codec.c	/^	int scale;$/;"	m	struct:ac97_mixer_hw	file:
seek_offset	trident.c	506;"	d	file:
select_input	waveartist.c	/^	unsigned int	(*select_input)(wavnc_info *, unsigned int,$/;"	m	struct:waveartist_mixer_info	file:
sem	au1550_ac97.c	/^	struct mutex sem;$/;"	m	struct:au1550_state	typeref:struct:au1550_state::mutex	file:
sem	hal2.c	/^	struct mutex sem;$/;"	m	struct:hal2_codec	typeref:struct:hal2_codec::mutex	file:
sem	trident.c	/^	struct mutex sem;$/;"	m	struct:trident_state	typeref:struct:trident_state::mutex	file:
semitone_tuning	tuning.h	/^static unsigned short semitone_tuning[24] =$/;"	v
send_sysex	dev_table.h	/^	int (*send_sysex)(int dev, unsigned char *bytes, int len);$/;"	m	struct:synth_operations
seq_chn_common_event	sequencer.c	/^static void seq_chn_common_event(unsigned char *event_rec)$/;"	f	file:
seq_chn_voice_event	sequencer.c	/^static void seq_chn_voice_event(unsigned char *event_rec)$/;"	f	file:
seq_copy_to_input	sequencer.c	/^EXPORT_SYMBOL(seq_copy_to_input);$/;"	v
seq_copy_to_input	sequencer.c	/^void seq_copy_to_input(unsigned char *event_rec, int len)$/;"	f
seq_drain_midi_queues	sequencer.c	/^static void seq_drain_midi_queues(void)$/;"	f	file:
seq_input_event	sequencer.c	/^EXPORT_SYMBOL(seq_input_event);$/;"	v
seq_input_event	sequencer.c	/^void seq_input_event(unsigned char *event_rec, int len)$/;"	f
seq_local_event	sequencer.c	/^static void seq_local_event(unsigned char *event_rec)$/;"	f	file:
seq_mode	sequencer.c	/^static int      seq_mode = SEQ_1;$/;"	v	file:
seq_panic	sequencer.c	/^static void seq_panic(void)$/;"	f	file:
seq_playing	sequencer.c	/^static volatile int seq_playing;$/;"	v	file:
seq_queue	sequencer.c	/^static int seq_queue(unsigned char *note, char nonblock)$/;"	f	file:
seq_reset	sequencer.c	/^static void seq_reset(void)$/;"	f	file:
seq_startplay	sequencer.c	/^static void seq_startplay(void)$/;"	f	file:
seq_sync	sequencer.c	/^static int seq_sync(void)$/;"	f	file:
seq_sysex_message	sequencer.c	/^static void seq_sysex_message(unsigned char *event_rec)$/;"	f	file:
seq_time	soundcard.c	/^unsigned long seq_time = 0;	\/* Time for \/dev\/sequencer *\/$/;"	v
seq_timing_event	sequencer.c	/^static int seq_timing_event(unsigned char *event_rec)$/;"	f	file:
sequencer_busy	sequencer.c	/^static volatile int sequencer_busy;$/;"	v	file:
sequencer_init	sequencer.c	/^EXPORT_SYMBOL(sequencer_init);$/;"	v
sequencer_init	sequencer.c	/^void sequencer_init(void)$/;"	f
sequencer_ioctl	sequencer.c	/^int sequencer_ioctl(int dev, struct file *file, unsigned int cmd, void __user *arg)$/;"	f
sequencer_midi_input	sequencer.c	/^static void sequencer_midi_input(int dev, unsigned char data)$/;"	f	file:
sequencer_midi_output	sequencer.c	/^static void sequencer_midi_output(int dev)$/;"	f	file:
sequencer_ok	sequencer.c	/^static int      sequencer_ok;$/;"	v	file:
sequencer_open	sequencer.c	/^int sequencer_open(int dev, struct file *file)$/;"	f
sequencer_poll	sequencer.c	/^unsigned int sequencer_poll(int dev, struct file *file, poll_table * wait)$/;"	f
sequencer_read	sequencer.c	/^int sequencer_read(int dev, struct file *file, char __user *buf, int count)$/;"	f
sequencer_release	sequencer.c	/^void sequencer_release(int dev, struct file *file)$/;"	f
sequencer_timer	sequencer.c	/^EXPORT_SYMBOL(sequencer_timer);$/;"	v
sequencer_timer	sequencer.c	/^void sequencer_timer(unsigned long dummy)$/;"	f
sequencer_unload	sequencer.c	/^void sequencer_unload(void)$/;"	f
sequencer_write	sequencer.c	/^int sequencer_write(int dev, struct file *file, const char __user *buf, int count)$/;"	f
ser_init	swarm_cs4297a.c	/^static int ser_init(struct cs4297a_state *s)$/;"	f	file:
serdma_descr_s	swarm_cs4297a.c	/^typedef struct serdma_descr_s {$/;"	s	file:
serdma_descr_t	swarm_cs4297a.c	/^} serdma_descr_t;$/;"	t	typeref:struct:serdma_descr_s	file:
serdma_reg_access	swarm_cs4297a.c	/^static int serdma_reg_access(struct cs4297a_state *s, u64 data)$/;"	f	file:
serdma_s	swarm_cs4297a.c	/^typedef struct serdma_s {$/;"	s	file:
serdma_t	swarm_cs4297a.c	/^} serdma_t;$/;"	t	typeref:struct:serdma_s	file:
serial_intf_ctrl_bits	trident.h	/^enum serial_intf_ctrl_bits {$/;"	g
setBass	dmasound/dmasound.h	/^    int (*setBass)(int);$/;"	m	struct:__anon17
setFormat	dmasound/dmasound.h	/^    int (*setFormat)(int);$/;"	m	struct:__anon17
setGain	dmasound/dmasound.h	/^    int (*setGain)(int);$/;"	m	struct:__anon17
setTreble	dmasound/dmasound.h	/^    int (*setTreble)(int);$/;"	m	struct:__anon17
setVolume	dmasound/dmasound.h	/^    int (*setVolume)(int);$/;"	m	struct:__anon17
set_adc_rate	au1550_ac97.c	/^set_adc_rate(struct au1550_state *s, unsigned rate)$/;"	f	file:
set_ak4642en_gpio_pin	ak4642en.c	/^void set_ak4642en_gpio_pin(void)$/;"	f
set_ak4642en_mic	ak4642en.c	/^void set_ak4642en_mic(int val)$/;"	f
set_ak4642en_record	ak4642en.c	/^void set_ak4642en_record(void)$/;"	f
set_ak4642en_replay	ak4642en.c	/^void set_ak4642en_replay(void)$/;"	f
set_ak4642en_speed	ak4642en.c	/^void set_ak4642en_speed(int rate)$/;"	f
set_ak4642en_volume	ak4642en.c	/^void set_ak4642en_volume(int val)$/;"	f
set_audio_data_replay	jz_i2s_dlv_dma_test.c	/^static void set_audio_data_replay()$/;"	f	file:
set_audio_data_replay	jz_i2s_for_4750.c	/^static void set_audio_data_replay()$/;"	f	file:
set_bass	pss.c	/^static void set_bass(pss_confdata *devc, int level)$/;"	f	file:
set_bits	dev_table.h	/^	unsigned int (*set_bits)(int dev, unsigned int bits);$/;"	m	struct:audio_driver
set_channels	dev_table.h	/^	short (*set_channels)(int dev, short channels);$/;"	m	struct:audio_driver
set_codec_bass	jz_i2s_4750.c	/^void (*set_codec_bass)(int val) = NULL;$/;"	v
set_codec_bass	jz_i2s_for_4750.c	/^void (*set_codec_bass)(int val) = NULL;$/;"	v
set_codec_direct_mode	jz_i2s_4750.c	/^void (*set_codec_direct_mode)(void) = NULL;$/;"	v
set_codec_direct_mode	jz_i2s_for_4750.c	/^void (*set_codec_direct_mode)(void) = NULL;$/;"	v
set_codec_gpio_pin	jz_i2s_4750.c	/^void (*set_codec_gpio_pin)(void) = NULL;$/;"	v
set_codec_gpio_pin	jz_i2s_for_4750.c	/^void (*set_codec_gpio_pin)(void) = NULL;$/;"	v
set_codec_mic	jz_i2s_4750.c	/^void (*set_codec_mic)(int val) = NULL;$/;"	v
set_codec_mic	jz_i2s_for_4750.c	/^void (*set_codec_mic)(int val) = NULL;$/;"	v
set_codec_mode	jz_i2s_4750.c	/^void (*set_codec_mode)(void) = NULL;$/;"	v
set_codec_mode	jz_i2s_for_4750.c	/^void (*set_codec_mode)(void) = NULL;$/;"	v
set_codec_record	jz_i2s_4750.c	/^void (*set_codec_record)(void) = NULL;$/;"	v
set_codec_record	jz_i2s_for_4750.c	/^void (*set_codec_record)(void) = NULL;$/;"	v
set_codec_replay	jz_i2s_4750.c	/^void (*set_codec_replay)(void) = NULL;$/;"	v
set_codec_replay	jz_i2s_for_4750.c	/^void (*set_codec_replay)(void) = NULL;$/;"	v
set_codec_replay_record	jz_i2s_4750.c	/^void (*set_codec_replay_record)(void);$/;"	v
set_codec_replay_record	jz_i2s_for_4750.c	/^void (*set_codec_replay_record)(void);$/;"	v
set_codec_some_func	jz_i2s_4750.c	/^void (*set_codec_some_func)(void) = NULL;$/;"	v
set_codec_some_func	jz_i2s_for_4750.c	/^void (*set_codec_some_func)(void) = NULL;$/;"	v
set_codec_speed	jz_i2s_4750.c	/^void (*set_codec_speed)(int rate) = NULL;$/;"	v
set_codec_speed	jz_i2s_for_4750.c	/^void (*set_codec_speed)(int rate) = NULL;$/;"	v
set_codec_startup_param	jz_i2s_4750.c	/^int (*set_codec_startup_param)(void) = NULL;$/;"	v
set_codec_startup_param	jz_i2s_for_4750.c	/^int (*set_codec_startup_param)(void) = NULL;$/;"	v
set_codec_volume	jz_i2s_4750.c	/^void (*set_codec_volume)(int val) = NULL;$/;"	v
set_codec_volume	jz_i2s_for_4750.c	/^void (*set_codec_volume)(int val) = NULL;$/;"	v
set_codec_volume_table	jz_i2s_4750.c	/^void (*set_codec_volume_table)(void) = NULL;$/;"	v
set_codec_volume_table	jz_i2s_for_4750.c	/^void (*set_codec_volume_table)(void) = NULL;$/;"	v
set_control	sscape.c	/^static void set_control(struct sscape_info *devc, int ctrl, int value)$/;"	f	file:
set_controller_triger	jz_i2s.c	/^static inline void set_controller_triger(struct jz_i2s_controller_info *controller,$/;"	f	file:
set_dac_rate	au1550_ac97.c	/^set_dac_rate(struct au1550_state *s, unsigned rate)$/;"	f	file:
set_default_audio_parameters	msnd_pinnacle.c	/^static void set_default_audio_parameters(void)$/;"	f	file:
set_default_play_audio_parameters	msnd_pinnacle.c	/^static void set_default_play_audio_parameters(void)$/;"	f	file:
set_default_rec_audio_parameters	msnd_pinnacle.c	/^static void set_default_rec_audio_parameters(void)$/;"	f	file:
set_dma	pss.c	/^static int set_dma(pss_confdata * devc, int dev, int dma)$/;"	f	file:
set_format	audio.c	/^static int set_format(int dev, int fmt)$/;"	f	file:
set_instr	dev_table.h	/^	int (*set_instr) (int dev, int voice, int instr);$/;"	m	struct:synth_operations
set_io_base	pss.c	/^static int set_io_base(pss_confdata * devc, int dev, int base)$/;"	f	file:
set_irq	pss.c	/^static int set_irq(pss_confdata * devc, int dev, int irq)$/;"	f	file:
set_jzcodec_bass	jzcodec.c	/^void set_jzcodec_bass(int val)$/;"	f
set_jzcodec_direct_mode	jzcodec.c	/^void set_jzcodec_direct_mode(void)$/;"	f
set_jzcodec_line	jzcodec.c	/^void set_jzcodec_line(int val)$/;"	f
set_jzcodec_mic	jzcodec.c	/^void set_jzcodec_mic(int val)$/;"	f
set_jzcodec_mode	jzcodec.c	/^void set_jzcodec_mode(void)$/;"	f
set_jzcodec_record	jzcodec.c	/^void set_jzcodec_record(int mode)$/;"	f
set_jzcodec_replay	jzcodec.c	/^void set_jzcodec_replay(void)$/;"	f
set_jzcodec_replay_record	jzcodec.c	/^void set_jzcodec_replay_record(int mode)$/;"	f
set_jzcodec_speed	jzcodec.c	/^void set_jzcodec_speed(int rate)$/;"	f
set_jzcodec_startup_param	jzcodec.c	/^int set_jzcodec_startup_param(void)$/;"	f
set_jzcodec_volume	jzcodec.c	/^void set_jzcodec_volume(int val)$/;"	f
set_jzcodec_volume_table	jzcodec.c	/^void set_jzcodec_volume_table(void)$/;"	f
set_master_volume	pss.c	/^static void set_master_volume(pss_confdata *devc, int left, int right)$/;"	f	file:
set_mixer_info	msnd_pinnacle.c	557;"	d	file:
set_mixer_levels	soundcard.c	/^static int set_mixer_levels(void __user * arg)$/;"	f	file:
set_mode	pas2_mixer.c	/^set_mode(int new_mode)$/;"	f	file:
set_mt32	sscape.c	/^static void set_mt32(struct sscape_info *devc, int value)$/;"	f	file:
set_outmask	sb_mixer.c	/^static int set_outmask(sb_devc * devc, int mask)$/;"	f	file:
set_playback_line_input_audio_direct_only	jz_i2s_dlv_dma_test.c	/^static void set_playback_line_input_audio_direct_only()$/;"	f	file:
set_playback_line_input_audio_direct_only	jz_i2s_for_4750.c	/^static void set_playback_line_input_audio_direct_only()$/;"	f	file:
set_queue_frags	dmasound/dmasound_core.c	/^static int set_queue_frags(struct sound_queue *sq, int bufs, int size)$/;"	f	file:
set_recmask	sb_mixer.c	/^static int set_recmask(sb_devc * devc, int mask)$/;"	f	file:
set_record_line_input_audio_with_audio_data_replay	jz_i2s_dlv_dma_test.c	/^static void set_record_line_input_audio_with_audio_data_replay(void)$/;"	f	file:
set_record_line_input_audio_with_audio_data_replay	jz_i2s_for_4750.c	/^static void set_record_line_input_audio_with_audio_data_replay(void)$/;"	f	file:
set_record_line_input_audio_with_audio_data_replay	jzdlv.c	/^static void set_record_line_input_audio_with_audio_data_replay(void)$/;"	f	file:
set_record_line_input_audio_without_playback	jz_i2s_dlv_dma_test.c	/^static void set_record_line_input_audio_without_playback(void)$/;"	f	file:
set_record_line_input_audio_without_playback	jz_i2s_for_4750.c	/^static void set_record_line_input_audio_without_playback(void)$/;"	f	file:
set_record_mic_input_audio_with_audio_data_replay	jz_i2s_dlv_dma_test.c	/^static void set_record_mic_input_audio_with_audio_data_replay(void)$/;"	f	file:
set_record_mic_input_audio_with_audio_data_replay	jz_i2s_for_4750.c	/^static void set_record_mic_input_audio_with_audio_data_replay(void)$/;"	f	file:
set_record_mic_input_audio_with_audio_data_replay	jzdlv.c	/^static void set_record_mic_input_audio_with_audio_data_replay(void)$/;"	f	file:
set_record_mic_input_audio_with_direct_playback	jz_i2s_dlv_dma_test.c	/^static void set_record_mic_input_audio_with_direct_playback(void)$/;"	f	file:
set_record_mic_input_audio_with_direct_playback	jz_i2s_for_4750.c	/^static void set_record_mic_input_audio_with_direct_playback(void)$/;"	f	file:
set_record_mic_input_audio_without_playback	jz_i2s_dlv_dma_test.c	/^static void set_record_mic_input_audio_without_playback(void)$/;"	f	file:
set_record_mic_input_audio_without_playback	jz_i2s_for_4750.c	/^static void set_record_mic_input_audio_without_playback(void)$/;"	f	file:
set_record_mic_input_audio_without_playback	jzdlv.c	/^static void set_record_mic_input_audio_without_playback(void)$/;"	f	file:
set_record_playing_audio_mixed_with_mic_input_audio	jz_i2s_dlv_dma_test.c	/^static void set_record_playing_audio_mixed_with_mic_input_audio(void)$/;"	f	file:
set_record_playing_audio_mixed_with_mic_input_audio	jz_i2s_for_4750.c	/^static void set_record_playing_audio_mixed_with_mic_input_audio(void)$/;"	f	file:
set_recsrc	msnd_pinnacle.c	/^static unsigned long set_recsrc(unsigned long recsrc)$/;"	f	file:
set_recsrc	sb_mixer.c	/^static void set_recsrc(sb_devc * devc, int src)$/;"	f	file:
set_recv_slots	au1550_ac97.c	/^set_recv_slots(int num_channels)$/;"	f	file:
set_replay_hp_or_speaker	jz_i2s_4750.c	/^void (*set_replay_hp_or_speaker)(void) = NULL;$/;"	v
set_replay_hp_or_speaker	jz_i2s_for_4750.c	/^void (*set_replay_hp_or_speaker)(void) = NULL;$/;"	v
set_speed	dev_table.h	/^	int (*set_speed)(int dev, int speed);$/;"	m	struct:audio_driver
set_synth_volume	pss.c	/^static void set_synth_volume(pss_confdata *devc, int volume)$/;"	f	file:
set_timebase	mpu401.c	/^static void set_timebase(int midi_dev, int val)$/;"	f	file:
set_timer_mode	mpu401.c	/^static void set_timer_mode(int midi_dev)$/;"	f	file:
set_treble	pss.c	/^static void set_treble(pss_confdata *devc, int level)$/;"	f	file:
set_uart_mode	mpu401.c	/^static void set_uart_mode(int dev, struct mpu_config *devc, int arg)$/;"	f	file:
set_voice_volume	opl3.c	/^static void set_voice_volume(int voice, int volume, int main_vol)$/;"	f	file:
set_volume_mono	pss.c	/^static int set_volume_mono(unsigned __user *p, int *aleft)$/;"	f	file:
set_volume_stereo	pss.c	/^static int set_volume_stereo(unsigned __user *p, int *aleft, int *aright)$/;"	f	file:
set_xmit_slots	au1550_ac97.c	/^set_xmit_slots(int num_channels)$/;"	f	file:
setup_ad1848	ad1848.c	/^static int __init setup_ad1848(char *str)$/;"	f	file:
setup_aedsp16	aedsp16.c	/^static int __init setup_aedsp16(char *str)$/;"	f	file:
setup_cs4232	cs4232.c	/^static int __init setup_cs4232(char *str)$/;"	f	file:
setup_metronome	mpu401.c	/^static void setup_metronome(int midi_dev)$/;"	f	file:
setup_mode2	sequencer.c	/^static void setup_mode2(void)$/;"	f	file:
setup_mpu401	mpu401.c	/^static int __init setup_mpu401(char *str)$/;"	f	file:
setup_opl3	opl3.c	/^static int __init setup_opl3(char *str)$/;"	f	file:
setup_pas2	pas2_card.c	/^static int __init setup_pas2(char *str)$/;"	f	file:
setup_pss	pss.c	/^static int __init setup_pss(char *str)$/;"	f	file:
setup_sscape	sscape.c	/^static int __init setup_sscape(char *str)$/;"	f	file:
setup_trix	trix.c	/^static int __init setup_trix (char *str)$/;"	f	file:
setup_uart401	uart401.c	/^static int __init setup_uart401(char *str)$/;"	f	file:
setup_uart6850	uart6850.c	/^static int __init setup_uart6850(char *str)$/;"	f	file:
setup_voice	dev_table.h	/^	void (*setup_voice) (int dev, int voice, int chn);$/;"	m	struct:synth_operations
setup_waveartist	waveartist.c	/^static int __init setup_waveartist(char *str)$/;"	f	file:
sg	i810_audio.c	/^	struct sg_item sg[SG_LEN];	\/* 32*8 *\/$/;"	m	struct:i810_channel	typeref:struct:i810_channel::sg_item	file:
sg_active	via82cxxx_audio.c	/^static int sg_active (long iobase)$/;"	f	file:
sg_begin	via82cxxx_audio.c	/^static inline void sg_begin (struct via_channel *chan)$/;"	f	file:
sg_item	i810_audio.c	/^struct sg_item {$/;"	s	file:
sgd_in_progress	via82cxxx_audio.c	/^	sgd_in_progress = 1,$/;"	e	enum:via_channel_states	file:
sgd_stopped	via82cxxx_audio.c	/^	sgd_stopped = 0,$/;"	e	enum:via_channel_states	file:
sgt_handle	via82cxxx_audio.c	/^	dma_addr_t sgt_handle;$/;"	m	struct:via_channel	file:
sgtable	via82cxxx_audio.c	/^	volatile struct via_sgd_table *sgtable;$/;"	m	struct:via_channel	typeref:struct:via_channel::via_sgd_table	file:
share_irq	uart401.c	/^	int             share_irq;$/;"	m	struct:uart401_devc	file:
shared_irq	mpu401.c	/^	  int             shared_irq;$/;"	m	struct:mpu_config	file:
shared_resource_owner	dmasound/dmasound_core.c	/^static mode_t shared_resource_owner;$/;"	v	file:
shared_resources_are_mine	dmasound/dmasound_core.c	/^static int shared_resources_are_mine(mode_t md)$/;"	f	file:
shared_resources_initialised	dmasound/dmasound_core.c	/^static int shared_resources_initialised;$/;"	v	file:
shift	jz_i2s_4750.c	/^	int shift;$/;"	m	struct:hpvol_shift_s	file:
shift	jz_i2s_dlv_dma_test.c	/^	int shift;$/;"	m	struct:hpvol_shift_s	file:
shift	jz_i2s_for_4750.c	/^	int shift;$/;"	m	struct:hpvol_shift_s	file:
shift	jzcodec.c	/^	int shift;$/;"	m	struct:hpvol_shift_s	file:
shift	waveartist.c	/^	unsigned char	shift;$/;"	m	struct:mix_ent	file:
shut_up	vwsnd.c	/^static int shut_up = 1;$/;"	v	file:
si_ac97_registers	trident.h	/^enum si_ac97_registers {$/;"	g
sigmatel_9708_init	ac97_codec.c	/^static int sigmatel_9708_init(struct ac97_codec * codec)$/;"	f	file:
sigmatel_9708_ops	ac97_codec.c	/^static struct ac97_ops sigmatel_9708_ops = { sigmatel_9708_init, NULL, NULL };$/;"	v	typeref:struct:ac97_ops	file:
sigmatel_9721_init	ac97_codec.c	/^static int sigmatel_9721_init(struct ac97_codec * codec)$/;"	f	file:
sigmatel_9721_ops	ac97_codec.c	/^static struct ac97_ops sigmatel_9721_ops = { sigmatel_9721_init, NULL, NULL };$/;"	v	typeref:struct:ac97_ops	file:
sigmatel_9744_init	ac97_codec.c	/^static int sigmatel_9744_init(struct ac97_codec * codec)$/;"	f	file:
sigmatel_9744_ops	ac97_codec.c	/^static struct ac97_ops sigmatel_9744_ops = { sigmatel_9744_init, NULL, NULL };$/;"	v	typeref:struct:ac97_ops	file:
silence	dmasound/dmasound.h	/^    void (*silence)(void);$/;"	m	struct:__anon17
sis7018_ac97_bits	trident.h	/^enum sis7018_ac97_bits {$/;"	g
sixchannel	via82cxxx_audio.c	/^	unsigned sixchannel: 1;	\/* 8233\/35 with 6 channel support *\/$/;"	m	struct:via_info	file:
size	dmasound/dmasound.h	/^    int size;		\/* 8\/16 bit*\/$/;"	m	struct:__anon16
sizeof_dspini	msnd_pinnacle.c	/^static int				sizeof_dspini, sizeof_permini;$/;"	v	file:
sizeof_permini	msnd_pinnacle.c	/^static int				sizeof_dspini, sizeof_permini;$/;"	v	file:
sleep	cs4232.c	/^static void sleep(unsigned howlong)$/;"	f	file:
sleep	sscape.c	/^static void sleep(unsigned howlong)$/;"	f	file:
slider_vol	waveartist.c	/^	signed int	slider_vol;	   \/* hardware slider volume     *\/$/;"	m	struct:__anon11	file:
slop_len	via82cxxx_audio.c	/^	unsigned int slop_len;$/;"	m	struct:via_channel	file:
slots	sound_config.h	/^	int slots[6];           \/* To remember driver slot ids *\/$/;"	m	struct:address_info
sm_games	sb.h	/^	int  sm_games;	\/* Logitech soundman games? *\/$/;"	m	struct:sb_module_options
sm_games	sb_card.c	/^static int __initdata sm_games 	= 0; \/* Logitech soundman games? *\/$/;"	v	file:
smg_default_levels	sb_mixer.c	/^static int smg_default_levels[32] =$/;"	v	file:
smw_free	sb_common.c	/^EXPORT_SYMBOL(smw_free);$/;"	v
smw_free	sb_common.c	/^void *smw_free;$/;"	v
smw_getmem	sb_common.c	/^static unsigned char smw_getmem(sb_devc * devc, int base, int addr)$/;"	f	file:
smw_midi_init	sb_common.c	/^static int smw_midi_init(sb_devc * devc, struct address_info *hw_config)$/;"	f	file:
smw_mix_regs	sb_mixer.c	/^static char     smw_mix_regs[] =	\/* Left mixer registers *\/$/;"	v	file:
smw_mixer_init	sb_mixer.c	/^void smw_mixer_init(sb_devc * devc)$/;"	f
smw_mixer_set	sb_mixer.c	/^static int smw_mixer_set(sb_devc * devc, int dev, int left, int right)$/;"	f	file:
smw_putmem	sb_common.c	/^static void smw_putmem(sb_devc * devc, int base, int addr, unsigned char val)$/;"	f	file:
smw_ucode	sb_common.c	/^static unsigned char *smw_ucode;$/;"	v	file:
smw_ucodeLen	sb_common.c	/^static int      smw_ucodeLen;$/;"	v	file:
snd_init	jz_i2s.c	/^module_init(snd_init);$/;"	v
snd_init	jz_i2s.c	/^static int __init snd_init(void)$/;"	f	file:
snd_plat_driver	jz_i2s.c	/^static struct platform_driver snd_plat_driver = {$/;"	v	typeref:struct:platform_driver	file:
soft	dmasound/dmasound.h	/^    SETTINGS soft;	\/* software settings *\/$/;"	m	struct:sound_settings
software_input_volume	dmasound/dmasound_core.c	/^EXPORT_SYMBOL(software_input_volume);$/;"	v
software_input_volume	dmasound/dmasound_core.c	/^uint software_input_volume = SW_INPUT_VOLUME_SCALE * SW_INPUT_VOLUME_DEFAULT;$/;"	v
sound-objs	Makefile	/^sound-objs	:= 							\\$/;"	m
sound_alloc_audiodev	dev_table.c	/^static int sound_alloc_audiodev(void)$/;"	f	file:
sound_alloc_dma	soundcard.c	/^EXPORT_SYMBOL(sound_alloc_dma);$/;"	v
sound_alloc_dma	soundcard.c	/^int sound_alloc_dma(int chn, char *deviceID)$/;"	f
sound_alloc_dmap	dmabuf.c	/^static int sound_alloc_dmap(struct dma_buffparms *dmap)$/;"	f	file:
sound_alloc_mididev	dev_table.c	/^EXPORT_SYMBOL(sound_alloc_mididev);$/;"	v
sound_alloc_mididev	dev_table.c	/^int sound_alloc_mididev(void)$/;"	f
sound_alloc_mixerdev	dev_table.c	/^EXPORT_SYMBOL(sound_alloc_mixerdev);$/;"	v
sound_alloc_mixerdev	dev_table.c	/^int sound_alloc_mixerdev(void)$/;"	f
sound_alloc_synthdev	dev_table.c	/^EXPORT_SYMBOL(sound_alloc_synthdev);$/;"	v
sound_alloc_synthdev	dev_table.c	/^int sound_alloc_synthdev(void)$/;"	f
sound_alloc_timerdev	dev_table.c	/^EXPORT_SYMBOL(sound_alloc_timerdev);$/;"	v
sound_alloc_timerdev	dev_table.c	/^int sound_alloc_timerdev(void)$/;"	f
sound_close_dma	soundcard.c	/^EXPORT_SYMBOL(sound_close_dma);$/;"	v
sound_close_dma	soundcard.c	/^void sound_close_dma(int chn)$/;"	f
sound_copy_translate	dmasound/dmasound_core.c	/^static ssize_t sound_copy_translate(TRANS *trans, const u_char __user *userPtr,$/;"	f	file:
sound_dmap_flag	soundcard.c	/^int             sound_dmap_flag = 0;$/;"	v
sound_dmap_flag	soundcard.c	/^int             sound_dmap_flag = 1;$/;"	v
sound_free_dma	soundcard.c	/^EXPORT_SYMBOL(sound_free_dma);$/;"	v
sound_free_dma	soundcard.c	/^void sound_free_dma(int chn)$/;"	f
sound_free_dmap	dmabuf.c	/^static void sound_free_dmap(struct dma_buffparms *dmap)$/;"	f	file:
sound_install_audiodrv	dev_table.c	/^EXPORT_SYMBOL(sound_install_audiodrv);$/;"	v
sound_install_audiodrv	dev_table.c	/^int sound_install_audiodrv(int vers, char *name, struct audio_driver *driver,$/;"	f
sound_install_mixer	dev_table.c	/^EXPORT_SYMBOL(sound_install_mixer);$/;"	v
sound_install_mixer	dev_table.c	/^int sound_install_mixer(int vers, char *name, struct mixer_operations *driver,$/;"	f
sound_ioctl	soundcard.c	/^static int sound_ioctl(struct inode *inode, struct file *file,$/;"	f	file:
sound_lowlev_timer	dev_table.h	/^struct sound_lowlev_timer $/;"	s
sound_mem_blocks	soundcard.c	/^void *          sound_mem_blocks[1024];$/;"	v
sound_mixer_ioctl	soundcard.c	/^static int sound_mixer_ioctl(int mixdev, unsigned int cmd, void __user *arg)$/;"	f	file:
sound_mmap	soundcard.c	/^static int sound_mmap(struct file *file, struct vm_area_struct *vma)$/;"	f	file:
sound_nblocks	soundcard.c	/^int             sound_nblocks = 0;$/;"	v
sound_open	soundcard.c	/^static int sound_open(struct inode *inode, struct file *file)$/;"	f	file:
sound_open_dma	soundcard.c	/^EXPORT_SYMBOL(sound_open_dma);$/;"	v
sound_open_dma	soundcard.c	/^int sound_open_dma(int chn, char *deviceID)$/;"	f
sound_poll	soundcard.c	/^static unsigned int sound_poll(struct file *file, poll_table * wait)$/;"	f	file:
sound_queue	dmasound/dmasound.h	/^struct sound_queue {$/;"	s
sound_read	soundcard.c	/^static ssize_t sound_read(struct file *file, char __user *buf, size_t count, loff_t *ppos)$/;"	f	file:
sound_release	soundcard.c	/^static int sound_release(struct inode *inode, struct file *file)$/;"	f	file:
sound_set_format	dmasound/dmasound_core.c	/^static inline int sound_set_format(int format)$/;"	f	file:
sound_set_speed	dmasound/dmasound_core.c	/^static int sound_set_speed(int speed)$/;"	f	file:
sound_set_stereo	dmasound/dmasound_core.c	/^static int sound_set_stereo(int stereo)$/;"	f	file:
sound_settings	dmasound/dmasound.h	/^struct sound_settings {$/;"	s
sound_silence	dmasound/dmasound_core.c	/^static inline void sound_silence(void)$/;"	f	file:
sound_start_dma	dmabuf.c	/^static int sound_start_dma(struct dma_buffparms *dmap, unsigned long physaddr, int count, int dma_mode)$/;"	f	file:
sound_stop_timer	soundcard.c	/^void sound_stop_timer(void)$/;"	f
sound_timer	sound_timer.c	/^static struct sound_timer_operations sound_timer =$/;"	v	typeref:struct:sound_timer_operations	file:
sound_timer_devs	dev_table.c	/^EXPORT_SYMBOL(sound_timer_devs);$/;"	v
sound_timer_devs	dev_table.c	/^struct sound_timer_operations *sound_timer_devs[MAX_TIMER_DEV] = {$/;"	v	typeref:struct:sound_timer_operations
sound_timer_init	sound_timer.c	/^EXPORT_SYMBOL(sound_timer_init);$/;"	v
sound_timer_init	sound_timer.c	/^void  sound_timer_init(struct sound_lowlev_timer *t, char *name)$/;"	f
sound_timer_interrupt	sound_timer.c	/^EXPORT_SYMBOL(sound_timer_interrupt);$/;"	v
sound_timer_interrupt	sound_timer.c	/^void sound_timer_interrupt(void)$/;"	f
sound_timer_operations	dev_table.h	/^struct sound_timer_operations $/;"	s
sound_timer_syncinterval	sound_timer.c	/^EXPORT_SYMBOL(sound_timer_syncinterval);$/;"	v
sound_timer_syncinterval	sound_timer.c	/^void sound_timer_syncinterval(unsigned int new_usecs)$/;"	f
sound_unload_audiodev	dev_table.c	/^EXPORT_SYMBOL(sound_unload_audiodev);$/;"	v
sound_unload_audiodev	dev_table.c	/^void sound_unload_audiodev(int dev)$/;"	f
sound_unload_mididev	dev_table.c	/^EXPORT_SYMBOL(sound_unload_mididev);$/;"	v
sound_unload_mididev	dev_table.c	/^void sound_unload_mididev(int dev)$/;"	f
sound_unload_mixerdev	dev_table.c	/^EXPORT_SYMBOL(sound_unload_mixerdev);$/;"	v
sound_unload_mixerdev	dev_table.c	/^void sound_unload_mixerdev(int dev)$/;"	f
sound_unload_synthdev	dev_table.c	/^EXPORT_SYMBOL(sound_unload_synthdev);$/;"	v
sound_unload_synthdev	dev_table.c	/^void sound_unload_synthdev(int dev)$/;"	f
sound_unload_timerdev	dev_table.c	/^EXPORT_SYMBOL(sound_unload_timerdev);$/;"	v
sound_unload_timerdev	dev_table.c	/^void sound_unload_timerdev(int dev)$/;"	f
sound_write	soundcard.c	/^static ssize_t sound_write(struct file *file, const char __user *buf, size_t count, loff_t *ppos)$/;"	f	file:
soundpro	ad1848.c	/^static int soundpro;$/;"	v	file:
source	btaudio.c	/^	int source;$/;"	m	struct:btaudio	file:
spdif_locked	i810_audio.c	/^static int spdif_locked;$/;"	v	file:
spea	sscape.c	/^static int __initdata spea = -1;$/;"	v	file:
speed	ad1848.c	/^	int             speed;$/;"	m	struct:ad1848_port_info	file:
speed	dmasound/dmasound.h	/^    int speed;		\/* speed *\/$/;"	m	struct:__anon16
speed	sb.h	/^	   int speed, bits, channels;$/;"	m	struct:sb_devc
speed	waveartist.c	/^	int		speed;$/;"	m	struct:wavnc_port_info	file:
speed_bits	ad1848.c	/^	unsigned char   speed_bits;$/;"	m	struct:ad1848_port_info	file:
spk_hp	ak4642en.c	/^static unsigned int spk_hp = 0;$/;"	v	file:
spkr_mute_state	waveartist.c	/^	unsigned int	spkr_mute_state	:1;\/* set by ioctl or autoselect *\/$/;"	m	struct:__anon11	file:
spro_mix_devices	ad1848_mixer.h	/^static mixer_ents spro_mix_devices[32] = {$/;"	v
sq_allocate_buffers	dmasound/dmasound_core.c	/^static int sq_allocate_buffers(struct sound_queue *sq, int num, int size)$/;"	f	file:
sq_fops	dmasound/dmasound_core.c	/^static const struct file_operations sq_fops =$/;"	v	typeref:struct:file_operations	file:
sq_fsync	dmasound/dmasound_core.c	/^static int sq_fsync(struct file *filp, struct dentry *dentry)$/;"	f	file:
sq_init	dmasound/dmasound_core.c	/^static int sq_init(void)$/;"	f	file:
sq_init_waitqueue	dmasound/dmasound_core.c	/^static inline void sq_init_waitqueue(struct sound_queue *sq)$/;"	f	file:
sq_ioctl	dmasound/dmasound_core.c	/^static int sq_ioctl(struct inode *inode, struct file *file, u_int cmd,$/;"	f	file:
sq_open	dmasound/dmasound.h	/^    int (*sq_open)(mode_t);		\/* optional *\/$/;"	m	struct:__anon17
sq_open	dmasound/dmasound_core.c	/^static int sq_open(struct inode *inode, struct file *file)$/;"	f	file:
sq_open2	dmasound/dmasound_core.c	/^static int sq_open2(struct sound_queue *sq, struct file *file, mode_t mode,$/;"	f	file:
sq_play	dmasound/dmasound_core.c	/^static inline void sq_play(void)$/;"	f	file:
sq_poll	dmasound/dmasound_core.c	/^static unsigned int sq_poll(struct file *file, struct poll_table_struct *wait)$/;"	f	file:
sq_release	dmasound/dmasound_core.c	/^static int sq_release(struct inode *inode, struct file *file)$/;"	f	file:
sq_release_buffers	dmasound/dmasound_core.c	/^static void sq_release_buffers(struct sound_queue *sq)$/;"	f	file:
sq_reset	dmasound/dmasound_core.c	/^static void sq_reset(void)$/;"	f	file:
sq_reset_output	dmasound/dmasound_core.c	/^static void sq_reset_output(void)$/;"	f	file:
sq_setup	dmasound/dmasound_core.c	/^static int sq_setup(struct sound_queue *sq)$/;"	f	file:
sq_unit	dmasound/dmasound_core.c	/^static int sq_unit = -1;$/;"	v	file:
sq_write	dmasound/dmasound_core.c	/^static ssize_t sq_write(struct file *file, const char __user *src, size_t uLeft,$/;"	f	file:
src_factor	au1550_ac97.c	/^		unsigned	src_factor;$/;"	m	struct:au1550_state::dmabuf	file:
sscape_alloc_dma	sscape.c	/^static int sscape_alloc_dma(sscape_info *devc)$/;"	f	file:
sscape_coproc_close	sscape.c	/^static void sscape_coproc_close(void *dev_info, int sub_device)$/;"	f	file:
sscape_coproc_ioctl	sscape.c	/^static int sscape_coproc_ioctl(void *dev_info, unsigned int cmd, void __user *arg, int local)$/;"	f	file:
sscape_coproc_open	sscape.c	/^static int sscape_coproc_open(void *dev_info, int sub_device)$/;"	f	file:
sscape_coproc_operations	sscape.c	/^static coproc_operations sscape_coproc_operations =$/;"	v	file:
sscape_coproc_reset	sscape.c	/^static void sscape_coproc_reset(void *dev_info)$/;"	f	file:
sscape_download_boot	sscape.c	/^static int sscape_download_boot(struct sscape_info *devc, unsigned char *block, int size, int flag)$/;"	f	file:
sscape_free_dma	sscape.c	/^static void sscape_free_dma(sscape_info *devc)$/;"	f	file:
sscape_info	sscape.c	/^typedef struct sscape_info$/;"	s	file:
sscape_info	sscape.c	/^} sscape_info;$/;"	t	typeref:struct:sscape_info	file:
sscape_is_pnp	sscape.c	/^static int sscape_is_pnp;$/;"	v	file:
sscape_mididev	sscape.c	/^static int sscape_mididev = -1;$/;"	v	file:
sscape_pnp_alloc_dma	sscape.c	/^static	int	sscape_pnp_alloc_dma(sscape_info* devc)$/;"	f	file:
sscape_pnp_free_dma	sscape.c	/^static	void	sscape_pnp_free_dma(sscape_info* devc)$/;"	f	file:
sscape_pnp_init_hw	sscape.c	/^static void __init sscape_pnp_init_hw(sscape_info* devc)$/;"	f	file:
sscape_pnp_read_codec	sscape.c	/^static unsigned char sscape_pnp_read_codec(sscape_info* devc, unsigned char reg)$/;"	f	file:
sscape_pnp_start_dma	sscape.c	/^static void sscape_pnp_start_dma(sscape_info* devc, int arg )$/;"	f	file:
sscape_pnp_upload_file	sscape.c	/^static	int	sscape_pnp_upload_file(sscape_info* devc, char* fn)$/;"	f	file:
sscape_pnp_wait_dma	sscape.c	/^static int sscape_pnp_wait_dma (sscape_info* devc, int arg )$/;"	f	file:
sscape_pnp_write_codec	sscape.c	/^static void sscape_pnp_write_codec(sscape_info* devc, unsigned char reg, unsigned char data)$/;"	f	file:
sscape_ports	sscape.c	/^static struct resource *sscape_ports;$/;"	v	typeref:struct:resource	file:
sscape_read	sscape.c	/^static unsigned char sscape_read(struct sscape_info *devc, int reg)$/;"	f	file:
sscape_read_host_ctrl	sscape.c	/^static	int sscape_read_host_ctrl(sscape_info* devc)$/;"	f	file:
sscape_start_dma	sscape.c	/^static int sscape_start_dma(int chan, unsigned long physaddr, int count, int dma_mode)$/;"	f	file:
sscape_write	sscape.c	/^static void sscape_write(struct sscape_info *devc, int reg, int data)$/;"	f	file:
sscape_write_host_ctrl2	sscape.c	/^static	void sscape_write_host_ctrl2(sscape_info *devc, int a, int b)$/;"	f	file:
start	jz_i2s.c	/^	unsigned int start;$/;"	m	struct:__anon23	file:
start	trident.c	/^	u32 start;$/;"	m	struct:trident_pcm_bank_address	file:
start_adc	au1550_ac97.c	/^start_adc(struct au1550_state *s)$/;"	f	file:
start_adc	i810_audio.c	/^static void start_adc(struct i810_state *state)$/;"	f	file:
start_adc	swarm_cs4297a.c	/^static void start_adc(struct cs4297a_state *s)$/;"	f	file:
start_adc	trident.c	/^start_adc(struct trident_state *state)$/;"	f	file:
start_dac	au1550_ac97.c	/^start_dac(struct au1550_state *s)$/;"	f	file:
start_dac	i810_audio.c	/^static void start_dac(struct i810_state *state)$/;"	f	file:
start_dac	swarm_cs4297a.c	/^static void start_dac(struct cs4297a_state *s)$/;"	f	file:
start_dac	trident.c	/^start_dac(struct trident_state *state)$/;"	f	file:
start_input	dev_table.h	/^	void (*start_input) (int dev, unsigned long buf, $/;"	m	struct:audio_driver
start_note	dev_table.h	/^	int (*start_note) (int dev, int voice, int note, int velocity);$/;"	m	struct:synth_operations
start_read	dev_table.h	/^	int (*start_read) (int dev);$/;"	m	struct:midi_operations
start_recording	btaudio.c	/^static int start_recording(struct btaudio *bta)$/;"	f	file:
state	dmasound/dmasound_core.c	/^} state;$/;"	v	typeref:struct:__anon15	file:
state_fops	dmasound/dmasound_core.c	/^static const struct file_operations state_fops = {$/;"	v	typeref:struct:file_operations	file:
state_info	dmasound/dmasound.h	/^    int (*state_info)(char *, size_t);	\/* optional *\/$/;"	m	struct:__anon17
state_init	dmasound/dmasound_core.c	/^static int state_init(void)$/;"	f	file:
state_open	dmasound/dmasound_core.c	/^static int state_open(struct inode *inode, struct file *file)$/;"	f	file:
state_read	dmasound/dmasound_core.c	/^static ssize_t state_read(struct file *file, char __user *buf, size_t count,$/;"	f	file:
state_release	dmasound/dmasound_core.c	/^static int state_release(struct inode *inode, struct file *file)$/;"	f	file:
state_unit	dmasound/dmasound_core.c	/^static int state_unit = -1;$/;"	v	file:
states	i810_audio.c	/^	struct i810_state *states[NR_HW_CH];$/;"	m	struct:i810_card	typeref:struct:i810_card::i810_state	file:
states	trident.c	/^	struct trident_state *states[NR_HW_CH];$/;"	m	struct:trident_card	typeref:struct:trident_card::trident_state	file:
stats	swarm_cs4297a.c	/^        } stats;$/;"	m	struct:cs4297a_state	typeref:struct:cs4297a_state::__anon20	file:
std_midi_synth	midi_synth.h	/^static struct synth_operations std_midi_synth =$/;"	v	typeref:struct:synth_operations
std_synth_info	midi_synth.h	/^static struct synth_info std_synth_info =$/;"	v	typeref:struct:synth_info
stereo	dmasound/dmasound.h	/^    int stereo;		\/* 0 = mono, 1 = stereo *\/$/;"	m	struct:__anon16
stereo_devs	waveartist.c	/^	unsigned int	stereo_devs;	   \/* Stereo devices	*\/$/;"	m	struct:waveartist_mixer_info	file:
stereo_mixers	jz_i2s_4750.c	/^	int stereo_mixers;$/;"	m	struct:i2s_codec	file:
stereo_mixers	jz_i2s_dlv_dma_test.c	/^    int stereo_mixers;$/;"	m	struct:i2s_codec	file:
stereo_mixers	jz_i2s_for_4750.c	/^	int stereo_mixers;$/;"	m	struct:i2s_codec	file:
stereo_mixers	jz_pcm_tlv320aic1106_dma.c	/^	int stereo_mixers;$/;"	m	struct:pcm_codec	file:
stop	trident.c	/^	u32 stop;$/;"	m	struct:trident_pcm_bank_address	file:
stop_adc	au1550_ac97.c	/^stop_adc(struct au1550_state *s)$/;"	f	file:
stop_adc	i810_audio.c	/^static void stop_adc(struct i810_state *state)$/;"	f	file:
stop_adc	swarm_cs4297a.c	/^static void stop_adc(struct cs4297a_state *s)$/;"	f	file:
stop_adc	trident.c	/^stop_adc(struct trident_state *state)$/;"	f	file:
stop_dac	au1550_ac97.c	/^stop_dac(struct au1550_state *s)$/;"	f	file:
stop_dac	i810_audio.c	/^static void stop_dac(struct i810_state *state)$/;"	f	file:
stop_dac	swarm_cs4297a.c	/^static void stop_dac(struct cs4297a_state *s)$/;"	f	file:
stop_dac	trident.c	/^stop_dac(struct trident_state *state)$/;"	f	file:
stop_metronome	mpu401.c	/^static void stop_metronome(int midi_dev)$/;"	f	file:
stop_recording	btaudio.c	/^static void stop_recording(struct btaudio *bta)$/;"	f	file:
stopped	au1550_ac97.c	/^		unsigned        stopped:1;$/;"	m	struct:au1550_state::dmabuf	file:
store_instr	opl3.c	/^static int store_instr(int instr_no, struct sbi_instrument *instr)$/;"	f	file:
str	au1550_ac97.c	/^	const char     *str;$/;"	m	struct:ioctl_str_t	file:
strict_clocking	i810_audio.c	/^static int strict_clocking;$/;"	v	file:
subdivision	au1550_ac97.c	/^		unsigned        subdivision;$/;"	m	struct:au1550_state::dmabuf	file:
subdivision	dev_table.h	/^	int      subdivision;$/;"	m	struct:dma_buffparms
subdivision	i810_audio.c	/^		unsigned subdivision;$/;"	m	struct:i810_state::dmabuf	file:
subdivision	swarm_cs4297a.c	/^        unsigned subdivision;$/;"	m	struct:serdma_s	file:
subdivision	trident.c	/^		unsigned subdivision;$/;"	m	struct:trident_state::dmabuf	file:
submodel	sb.h	/^	   int model, submodel;$/;"	m	struct:sb_devc
subtype	ad1848.c	/^	int 		subtype;$/;"	m	struct:__anon1	file:
supported_devices	ad1848.c	/^	int             supported_devices, orig_devices;$/;"	m	struct:__anon1	file:
supported_devices	sb.h	/^	   int mixer_caps, recmask, outmask, supported_devices;$/;"	m	struct:sb_devc
supported_devs	waveartist.c	/^	unsigned int	supported_devs;	   \/* Supported devices *\/$/;"	m	struct:waveartist_mixer_info	file:
supported_mixers	jz_i2s_4750.c	/^	int supported_mixers;$/;"	m	struct:i2s_codec	file:
supported_mixers	jz_i2s_dlv_dma_test.c	/^    int supported_mixers;$/;"	m	struct:i2s_codec	file:
supported_mixers	jz_i2s_for_4750.c	/^	int supported_mixers;$/;"	m	struct:i2s_codec	file:
supported_mixers	jz_pcm_tlv320aic1106_dma.c	/^	int supported_mixers;$/;"	m	struct:pcm_codec	file:
supported_out_devices	sb.h	/^	   int supported_rec_devices, supported_out_devices;$/;"	m	struct:sb_devc
supported_rec_devices	ad1848.c	/^	int             supported_rec_devices, orig_rec_devices;$/;"	m	struct:__anon1	file:
supported_rec_devices	sb.h	/^	   int supported_rec_devices, supported_out_devices;$/;"	m	struct:sb_devc
suspend_ak4642en	ak4642en.c	/^void suspend_ak4642en(int wr,int rd)$/;"	f
suspend_jzcodec	jzcodec.c	/^void suspend_jzcodec(void)$/;"	f
sw_channels	vwsnd.c	/^	int		sw_channels;$/;"	m	struct:vwsnd_port	file:
sw_fragcount	vwsnd.c	/^	int		sw_fragcount;$/;"	m	struct:vwsnd_port	file:
sw_fragshift	vwsnd.c	/^	int		sw_fragshift;$/;"	m	struct:vwsnd_port	file:
sw_framerate	vwsnd.c	/^	int		sw_framerate;$/;"	m	struct:vwsnd_port	file:
sw_ptr	via82cxxx_audio.c	/^	unsigned int sw_ptr;$/;"	m	struct:via_channel	file:
sw_samplefmt	vwsnd.c	/^	int		sw_samplefmt;$/;"	m	struct:vwsnd_port	file:
sw_subdivshift	vwsnd.c	/^	int		sw_subdivshift;$/;"	m	struct:vwsnd_port	file:
swap_headphone	ac97_codec.c	/^static int swap_headphone(int remove_master)$/;"	f	file:
swb_i_avail	vwsnd.c	/^	unsigned int	swb_i_avail;	\/* # bytes avail to intr *\/$/;"	m	struct:vwsnd_port	file:
swb_i_idx	vwsnd.c	/^	unsigned int	swb_i_idx;	\/* index of next intr byte *\/$/;"	m	struct:vwsnd_port	file:
swb_inc_i	vwsnd.c	/^static __inline__ unsigned int swb_inc_i(vwsnd_port_t *port, int inc)$/;"	f	file:
swb_inc_u	vwsnd.c	/^static __inline__ unsigned int swb_inc_u(vwsnd_port_t *port, int inc)$/;"	f	file:
swb_u_avail	vwsnd.c	/^	unsigned int	swb_u_avail;	\/* # bytes avail to user *\/$/;"	m	struct:vwsnd_port	file:
swb_u_idx	vwsnd.c	/^	unsigned int	swb_u_idx;	\/* index of next user byte *\/$/;"	m	struct:vwsnd_port	file:
swbuf	vwsnd.c	/^	void *		swbuf;$/;"	m	struct:vwsnd_port	file:
swbuf_size	vwsnd.c	/^	unsigned int	swbuf_size;	\/* size in bytes *\/$/;"	m	struct:vwsnd_port	file:
switch_SB_ADC	jzdlv.c	57;"	d	file:
switch_SB_DAC	jzdlv.c	42;"	d	file:
switch_SB_MIX	jzdlv.c	52;"	d	file:
switch_SB_OUT	jzdlv.c	47;"	d	file:
swptr	i810_audio.c	/^		unsigned swptr;		\/* where driver last clear\/filled, updated by read\/write *\/$/;"	m	struct:i810_state::dmabuf	file:
swptr	swarm_cs4297a.c	/^        unsigned hwptr, swptr;$/;"	m	struct:serdma_s	file:
swptr	trident.c	/^		unsigned swptr;	\/* where driver last clear\/filled, updated by read\/write *\/$/;"	m	struct:trident_state::dmabuf	file:
swptrmask	vwsnd.c	/^	unsigned long swptrmask;$/;"	m	struct:dma_chan_desc	file:
swptrreg	vwsnd.c	/^	int swptrreg;$/;"	m	struct:dma_chan_desc	file:
swstate	vwsnd.c	/^	vwsnd_port_swstate_t swstate;$/;"	m	struct:vwsnd_port	file:
symphony	pas2_card.c	/^static int 	symphony = 1;$/;"	v	file:
symphony	pas2_card.c	/^static int 	symphony;$/;"	v	file:
syn_regs	hal2.c	/^	struct hal2_syn_regs *syn_regs;	\/* HAL2 syn registers *\/$/;"	m	struct:hal2_card	typeref:struct:hal2_card::hal2_syn_regs	file:
sync_output	audio.c	/^static void sync_output(int dev)$/;"	f	file:
sync_queue	dmasound/dmasound.h	/^    wait_queue_head_t action_queue, open_queue, sync_queue;$/;"	m	struct:sound_queue
syncing	dmasound/dmasound.h	/^    int busy, syncing, xruns, died;$/;"	m	struct:sound_queue
synth	pss.c	/^	unsigned int synth;$/;"	m	struct:pss_mixerdata	file:
synth_base	cs4232.c	/^static int synth_base, synth_irq;$/;"	v	file:
synth_devs	dev_table.c	/^EXPORT_SYMBOL(synth_devs);$/;"	v
synth_devs	dev_table.c	/^struct synth_operations *synth_devs[MAX_SYNTH_DEV+MAX_MIDI_DEV];$/;"	v	typeref:struct:synth_operations
synth_irq	cs4232.c	/^static int synth_base, synth_irq;$/;"	v	file:
synth_open_mask	sequencer.c	/^static unsigned synth_open_mask;$/;"	v	file:
synth_operations	dev_table.h	/^struct synth_operations $/;"	s
synth_subtype	dev_table.h	/^	int synth_subtype;$/;"	m	struct:synth_operations
synth_type	dev_table.h	/^	int synth_type;$/;"	m	struct:synth_operations
synthio	cs4232.c	/^static int __initdata synthio	= -1;$/;"	v	file:
synthirq	cs4232.c	/^static int __initdata synthirq	= -1;$/;"	v	file:
synthno	mpu401.c	/^	int             synthno;$/;"	m	struct:mpu_config	file:
syscall_mutex	via82cxxx_audio.c	/^	struct mutex syscall_mutex;$/;"	m	struct:via_info	typeref:struct:via_info::mutex	file:
sysex_buf	dev_table.h	/^	unsigned char sysex_buf[MAX_SYSEX_BUF];$/;"	m	struct:synth_operations
sysex_ptr	dev_table.h	/^	int sysex_ptr;$/;"	m	struct:synth_operations
sysex_state	midi_synth.c	/^static int      sysex_state[MAX_MIDI_DEV] =$/;"	v	file:
tail	hal2.c	/^	int tail, head;			\/* tail index, head index *\/$/;"	m	struct:hal2_codec	file:
tail	midibuf.c	/^	int len, head, tail;$/;"	m	struct:midi_buf	file:
tail	msnd.h	/^	int head, tail;$/;"	m	struct:__anon5
tconst	sb.h	/^	   unsigned char tconst;$/;"	m	struct:sb_devc
telephone_detect	waveartist.c	/^	unsigned int	telephone_detect:1;$/;"	m	struct:__anon11	file:
the_codecs	jz_i2s.c	/^static struct i2s_codec the_codecs[NR_I2S];$/;"	v	typeref:struct:i2s_codec	file:
the_hw_config	vwsnd.c	/^static struct address_info the_hw_config = {$/;"	v	typeref:struct:address_info	file:
the_i2s_controller	jz_i2s.c	/^static struct jz_i2s_controller_info *the_i2s_controller = NULL;$/;"	v	typeref:struct:jz_i2s_controller_info	file:
ticks_offs	sound_timer.c	/^static volatile unsigned long ticks_offs;$/;"	v	file:
ticks_offs	sys_timer.c	/^static volatile unsigned long ticks_offs;$/;"	v	file:
timer	trident.c	/^	struct timer_list timer;$/;"	m	struct:trident_card	typeref:struct:trident_card::timer_list	file:
timer1_interrupt	sh_dac_audio.c	/^static irqreturn_t timer1_interrupt(int irq, void *dev)$/;"	f	file:
timer_arm	sound_timer.c	/^static void timer_arm(int dev, long time)$/;"	f	file:
timer_caps	mpu401.c	/^static int      timer_mode = TMR_INTERNAL, timer_caps = TMR_INTERNAL;$/;"	v	file:
timer_close	sound_timer.c	/^static void timer_close(int dev)$/;"	f	file:
timer_event	sound_timer.c	/^static int timer_event(int dev, unsigned char *event)$/;"	f	file:
timer_ext_event	mpu401.c	/^static void timer_ext_event(struct mpu_config *devc, int event, int parm)$/;"	f	file:
timer_flag	mpu401.c	/^	int             timer_flag;$/;"	m	struct:mpu_config	file:
timer_get_time	sound_timer.c	/^static unsigned long timer_get_time(int dev)$/;"	f	file:
timer_initialized	mpu401.c	/^static volatile int timer_initialized = 0, timer_open = 0, tmr_running = 0;$/;"	v	file:
timer_installed	ad1848.c	/^static int timer_installed = -1;$/;"	v	file:
timer_ioctl	sound_timer.c	/^static int timer_ioctl(int dev, unsigned int cmd, void __user *arg)$/;"	f	file:
timer_mode	mpu401.c	/^static int      timer_mode = TMR_INTERNAL, timer_caps = TMR_INTERNAL;$/;"	v	file:
timer_open	mpu401.c	/^static volatile int timer_initialized = 0, timer_open = 0, tmr_running = 0;$/;"	v	file:
timer_open	sound_timer.c	/^static int timer_open(int dev, int mode)$/;"	f	file:
timer_running	ad1848.c	/^	int             timer_running;$/;"	m	struct:__anon1	file:
timer_ticks	ad1848.c	/^	volatile unsigned long timer_ticks;$/;"	m	struct:__anon1	file:
timestamp	sound_config.h	/^		int timestamp;$/;"	m	struct:voice_alloc_info
tmp1	jz_ac97.c	/^        unsigned char *tmp1;  \/* tmp buffer for sample conversions *\/$/;"	m	struct:jz_ac97_controller_info	file:
tmp1	jz_i2s_4750.c	/^	unsigned char *tmp1;  \/* tmp buffer for sample conversions *\/$/;"	m	struct:jz_i2s_controller_info	file:
tmp1	jz_i2s_dlv_dma_test.c	/^    unsigned char *tmp1;  \/* tmp buffer for sample conversions *\/$/;"	m	struct:jz_i2s_controller_info	file:
tmp1	jz_i2s_for_4750.c	/^	unsigned char *tmp1;  \/* tmp buffer for sample conversions *\/$/;"	m	struct:jz_i2s_controller_info	file:
tmp1	jz_pcm_tlv320aic1106_dma.c	/^	unsigned char *tmp1;  \/* tmp buffer for sample conversions *\/$/;"	m	struct:jz_pcm_controller_info	file:
tmp2	jz_ac97.c	/^	unsigned char *tmp2;$/;"	m	struct:jz_ac97_controller_info	file:
tmp2	jz_i2s_4750.c	/^	unsigned char *tmp2;$/;"	m	struct:jz_i2s_controller_info	file:
tmp2	jz_i2s_dlv_dma_test.c	/^    unsigned char *tmp2;$/;"	m	struct:jz_i2s_controller_info	file:
tmp2	jz_i2s_for_4750.c	/^	unsigned char *tmp2;$/;"	m	struct:jz_i2s_controller_info	file:
tmp2	jz_pcm_tlv320aic1106_dma.c	/^	unsigned char *tmp2;$/;"	m	struct:jz_pcm_controller_info	file:
tmp_queue	pas2_midi.c	/^static unsigned char tmp_queue[256];$/;"	v	file:
tmr	sequencer.c	/^static struct sound_timer_operations *tmr;$/;"	v	typeref:struct:sound_timer_operations	file:
tmr	sound_timer.c	/^static struct sound_lowlev_timer *tmr;$/;"	v	typeref:struct:sound_lowlev_timer	file:
tmr2ticks	sound_timer.c	/^static unsigned long tmr2ticks(int tmr_value)$/;"	f	file:
tmr2ticks	sys_timer.c	/^tmr2ticks(int tmr_value)$/;"	f	file:
tmr_ctr	sound_timer.c	/^static volatile time_t tmr_offs, tmr_ctr;$/;"	v	file:
tmr_ctr	sys_timer.c	/^static volatile time_t tmr_offs, tmr_ctr;$/;"	v	file:
tmr_disable	dev_table.h	/^	void (*tmr_disable)(int dev);$/;"	m	struct:sound_lowlev_timer
tmr_no	sequencer.c	/^static int      tmr_no = -1;	\/* Currently selected timer *\/$/;"	v	file:
tmr_offs	sound_timer.c	/^static volatile time_t tmr_offs, tmr_ctr;$/;"	v	file:
tmr_offs	sys_timer.c	/^static volatile time_t tmr_offs, tmr_ctr;$/;"	v	file:
tmr_reset	mpu401.c	/^static void tmr_reset(struct mpu_config *devc)$/;"	f	file:
tmr_reset	sound_timer.c	/^static void tmr_reset(void)$/;"	f	file:
tmr_reset	sys_timer.c	/^tmr_reset(void)$/;"	f	file:
tmr_restart	dev_table.h	/^	void (*tmr_restart)(int dev);$/;"	m	struct:sound_lowlev_timer
tmr_running	mpu401.c	/^static volatile int timer_initialized = 0, timer_open = 0, tmr_running = 0;$/;"	v	file:
tmr_running	sound_timer.c	/^static volatile int initialized, opened, tmr_running;$/;"	v	file:
tmr_running	sys_timer.c	/^static volatile int opened, tmr_running;$/;"	v	file:
tmr_start	dev_table.h	/^	unsigned int (*tmr_start)(int dev, unsigned int usecs);$/;"	m	struct:sound_lowlev_timer
total_bytes	au1550_ac97.c	/^		unsigned        total_bytes;$/;"	m	struct:au1550_state::dmabuf	file:
total_bytes	i810_audio.c	/^		unsigned total_bytes;	\/* total bytes dmaed by hardware *\/$/;"	m	struct:i810_state::dmabuf	file:
total_bytes	jz_ac97.c	/^	unsigned        total_bytes;	\/\/ total bytes written or read$/;"	m	struct:jz_ac97_controller_info	file:
total_bytes	jz_i2s_4750.c	/^	unsigned        total_bytes;	\/* total bytes written or read *\/$/;"	m	struct:jz_i2s_controller_info	file:
total_bytes	jz_i2s_dlv_dma_test.c	/^    unsigned        total_bytes;	\/\/ total bytes written or read$/;"	m	struct:jz_i2s_controller_info	file:
total_bytes	jz_i2s_for_4750.c	/^	unsigned        total_bytes;	\/* total bytes written or read *\/$/;"	m	struct:jz_i2s_controller_info	file:
total_bytes	jz_pcm_tlv320aic1106_dma.c	/^	unsigned long total_bytes;	\/\/ total bytes written or read$/;"	m	struct:jz_pcm_controller_info	file:
total_bytes	swarm_cs4297a.c	/^        unsigned total_bytes;	\/\/ # bytes process since open.$/;"	m	struct:serdma_s	file:
total_bytes	trident.c	/^		unsigned total_bytes;	\/* total bytes dmaed by hardware *\/$/;"	m	struct:trident_state::dmabuf	file:
transAmiga	dmasound/dmasound_paula.c	/^static TRANS transAmiga = {$/;"	v	file:
transFalconExpanding	dmasound/dmasound_atari.c	/^static TRANS transFalconExpanding = {$/;"	v	file:
transFalconNormal	dmasound/dmasound_atari.c	/^static TRANS transFalconNormal = {$/;"	v	file:
transQ40Compressing	dmasound/dmasound_q40.c	/^static TRANS transQ40Compressing = {$/;"	v	file:
transQ40Expanding	dmasound/dmasound_q40.c	/^static TRANS transQ40Expanding = {$/;"	v	file:
transQ40Normal	dmasound/dmasound_q40.c	/^static TRANS transQ40Normal = {$/;"	v	file:
transTTExpanding	dmasound/dmasound_atari.c	/^static TRANS transTTExpanding = {$/;"	v	file:
transTTNormal	dmasound/dmasound_atari.c	/^static TRANS transTTNormal = {$/;"	v	file:
trans_addr	jz_i2s.c	/^	unsigned int *trans_addr;$/;"	m	struct:__anon25	file:
trans_count	jz_i2s.c	/^	unsigned int *trans_count;$/;"	m	struct:__anon25	file:
trans_mode	jz_i2s.c	/^	unsigned int *trans_mode;$/;"	m	struct:__anon25	file:
trans_state	jz_i2s.c	/^	volatile int	trans_state;$/;"	m	struct:__audio_pipe	file:
trans_write	dmasound/dmasound.h	/^    TRANS *trans_write;	\/* supported translations *\/$/;"	m	struct:sound_settings
translate_bytes	audio.c	/^static void translate_bytes(const unsigned char *table, unsigned char *buff, int n)$/;"	f	file:
translate_from_user	au1550_ac97.c	/^translate_from_user(struct dmabuf *db, char* dmabuf, char* userbuf,$/;"	f	file:
translate_mode	sound_config.h	/^static inline int translate_mode(struct file *file)$/;"	f
translate_to_user	au1550_ac97.c	/^translate_to_user(struct dmabuf *db, char* userbuf, char* dmabuf,$/;"	f	file:
treble	dmasound/dmasound.h	/^    int treble;$/;"	m	struct:sound_settings
treble	pss.c	/^	unsigned int treble;$/;"	m	struct:pss_mixerdata	file:
trg_buf	sb.h	/^	   unsigned long trg_buf;$/;"	m	struct:sb_devc
trg_buf_16	sb.h	/^	   unsigned long trg_buf_16;$/;"	m	struct:sb_devc
trg_bytes	sb.h	/^	   int      trg_bytes;$/;"	m	struct:sb_devc
trg_bytes_16	sb.h	/^	   int      trg_bytes_16;$/;"	m	struct:sb_devc
trg_intrflag	sb.h	/^	   int      trg_intrflag;$/;"	m	struct:sb_devc
trg_intrflag_16	sb.h	/^	   int      trg_intrflag_16;$/;"	m	struct:sb_devc
trg_restart	sb.h	/^	   int      trg_restart;$/;"	m	struct:sb_devc
trg_restart_16	sb.h	/^	   int      trg_restart_16;$/;"	m	struct:sb_devc
trident_ac97_get	trident.c	/^trident_ac97_get(struct ac97_codec *codec, u8 reg)$/;"	f	file:
trident_ac97_init	trident.c	/^trident_ac97_init(struct trident_card *card)$/;"	f	file:
trident_ac97_set	trident.c	/^trident_ac97_set(struct ac97_codec *codec, u8 reg, u16 val)$/;"	f	file:
trident_ack_channel_interrupt	trident.c	/^trident_ack_channel_interrupt(struct trident_card *card, unsigned int channel)$/;"	f	file:
trident_address_interrupt	trident.c	/^trident_address_interrupt(struct trident_card *card)$/;"	f	file:
trident_alloc_pcm_channel	trident.c	/^trident_alloc_pcm_channel(struct trident_card *card)$/;"	f	file:
trident_audio_fops	trident.c	/^static \/*const *\/ struct file_operations trident_audio_fops = {$/;"	v	typeref:struct:file_operations	file:
trident_card	trident.c	/^struct trident_card {$/;"	s	file:
trident_channel	trident.c	/^struct trident_channel {$/;"	s	file:
trident_check_channel_interrupt	trident.c	/^trident_check_channel_interrupt(struct trident_card *card, unsigned int channel)$/;"	f	file:
trident_cleanup_module	trident.c	/^module_exit(trident_cleanup_module);$/;"	v
trident_cleanup_module	trident.c	/^trident_cleanup_module(void)$/;"	f	file:
trident_clear_tail	trident.c	/^trident_clear_tail(struct trident_state *state)$/;"	f	file:
trident_disable_loop_interrupts	trident.c	/^trident_disable_loop_interrupts(struct trident_card *card)$/;"	f	file:
trident_disable_voice_irq	trident.c	/^trident_disable_voice_irq(struct trident_card *card, unsigned int channel)$/;"	f	file:
trident_dx_ac97_bits	trident.h	/^enum trident_dx_ac97_bits {$/;"	g
trident_enable_loop_interrupts	trident.c	/^trident_enable_loop_interrupts(struct trident_card *card)$/;"	f	file:
trident_enable_voice_irq	trident.c	/^trident_enable_voice_irq(struct trident_card *card, unsigned int channel)$/;"	f	file:
trident_free_pcm_channel	trident.c	/^trident_free_pcm_channel(struct trident_card *card, unsigned int channel)$/;"	f	file:
trident_game_cooked_read	trident.c	/^static int trident_game_cooked_read(struct gameport *gameport,$/;"	f	file:
trident_game_open	trident.c	/^static int trident_game_open(struct gameport *gameport, int mode)$/;"	f	file:
trident_game_read	trident.c	/^static unsigned char trident_game_read(struct gameport *gameport)$/;"	f	file:
trident_game_trigger	trident.c	/^static void trident_game_trigger(struct gameport *gameport)$/;"	f	file:
trident_get_dma_addr	trident.c	/^trident_get_dma_addr(struct trident_state *state)$/;"	f	file:
trident_get_interrupt_mask	trident.c	/^trident_get_interrupt_mask(struct trident_card *card, unsigned int channel)$/;"	f	file:
trident_init_module	trident.c	/^module_init(trident_init_module);$/;"	v
trident_init_module	trident.c	/^trident_init_module(void)$/;"	f	file:
trident_interrupt	trident.c	/^trident_interrupt(int irq, void *dev_id)$/;"	f	file:
trident_ioctl	trident.c	/^trident_ioctl(struct inode *inode, struct file *file,$/;"	f	file:
trident_ioctl_mixdev	trident.c	/^trident_ioctl_mixdev(struct inode *inode, struct file *file, unsigned int cmd,$/;"	f	file:
trident_load_channel_registers	trident.c	/^trident_load_channel_registers(struct trident_card *card, u32 * data,$/;"	f	file:
trident_mixer_fops	trident.c	/^static \/*const *\/ struct file_operations trident_mixer_fops = {$/;"	v	typeref:struct:file_operations	file:
trident_mmap	trident.c	/^trident_mmap(struct file *file, struct vm_area_struct *vma)$/;"	f	file:
trident_nx_ac97_bits	trident.h	/^enum trident_nx_ac97_bits {$/;"	g
trident_op_registers	trident.h	/^enum trident_op_registers {$/;"	g
trident_open	trident.c	/^trident_open(struct inode *inode, struct file *file)$/;"	f	file:
trident_open_mixdev	trident.c	/^trident_open_mixdev(struct inode *inode, struct file *file)$/;"	f	file:
trident_pci_driver	trident.c	/^static struct pci_driver trident_pci_driver = {$/;"	v	typeref:struct:pci_driver	file:
trident_pci_tbl	trident.c	/^static struct pci_device_id trident_pci_tbl[] = {$/;"	v	typeref:struct:pci_device_id	file:
trident_pcm_bank	trident.c	/^struct trident_pcm_bank {$/;"	s	file:
trident_pcm_bank_address	trident.c	/^struct trident_pcm_bank_address {$/;"	s	file:
trident_play_setup	trident.c	/^trident_play_setup(struct trident_state *state)$/;"	f	file:
trident_poll	trident.c	/^trident_poll(struct file *file, struct poll_table_struct *wait)$/;"	f	file:
trident_probe	trident.c	/^trident_probe(struct pci_dev *pci_dev, const struct pci_device_id *pci_id)$/;"	f	file:
trident_read	trident.c	/^trident_read(struct file *file, char __user *buffer, size_t count, loff_t * ppos)$/;"	f	file:
trident_rec_setup	trident.c	/^trident_rec_setup(struct trident_state *state)$/;"	f	file:
trident_register_gameport	trident.c	/^static inline int trident_register_gameport(struct trident_card *card) { return -ENOSYS; }$/;"	f	file:
trident_register_gameport	trident.c	/^static int __devinit trident_register_gameport(struct trident_card *card)$/;"	f	file:
trident_release	trident.c	/^trident_release(struct inode *inode, struct file *file)$/;"	f	file:
trident_remove	trident.c	/^trident_remove(struct pci_dev *pci_dev)$/;"	f	file:
trident_resume	trident.c	/^trident_resume(struct pci_dev *dev)$/;"	f	file:
trident_set_adc_rate	trident.c	/^trident_set_adc_rate(struct trident_state *state, unsigned int rate)$/;"	f	file:
trident_set_dac_rate	trident.c	/^trident_set_dac_rate(struct trident_state *state, unsigned int rate)$/;"	f	file:
trident_start_voice	trident.c	/^trident_start_voice(struct trident_card *card, unsigned int channel)$/;"	f	file:
trident_state	trident.c	/^struct trident_state {$/;"	s	file:
trident_stop_voice	trident.c	/^trident_stop_voice(struct trident_card *card, unsigned int channel)$/;"	f	file:
trident_suspend	trident.c	/^trident_suspend(struct pci_dev *dev, pm_message_t unused)$/;"	f	file:
trident_unregister_gameport	trident.c	/^static inline void trident_unregister_gameport(struct trident_card *card) { }$/;"	f	file:
trident_unregister_gameport	trident.c	/^static inline void trident_unregister_gameport(struct trident_card *card)$/;"	f	file:
trident_update_ptr	trident.c	/^trident_update_ptr(struct trident_state *state)$/;"	f	file:
trident_write	trident.c	/^trident_write(struct file *file, const char __user *buffer, size_t count, loff_t * ppos)$/;"	f	file:
trident_write_voice_regs	trident.c	/^trident_write_voice_regs(struct trident_state *state)$/;"	f	file:
trigger	dev_table.h	/^	void (*trigger) (int dev, int bits);$/;"	m	struct:audio_driver
trigger	i810_audio.c	/^		unsigned char fmt, enable, trigger;$/;"	m	struct:i810_state::dmabuf	file:
trigger_bits	sb.h	/^	   int      trigger_bits;$/;"	m	struct:sb_devc
trigger_bits_16	sb.h	/^	   int      trigger_bits_16;$/;"	m	struct:sb_devc
tritech_init	ac97_codec.c	/^static int tritech_init(struct ac97_codec * codec)$/;"	f	file:
tritech_m_ops	ac97_codec.c	/^static struct ac97_ops tritech_m_ops = { tritech_maestro_init, NULL, NULL };$/;"	v	typeref:struct:ac97_ops	file:
tritech_maestro_init	ac97_codec.c	/^static int tritech_maestro_init(struct ac97_codec * codec)$/;"	f	file:
tritech_ops	ac97_codec.c	/^static struct ac97_ops tritech_ops = { tritech_init, NULL, NULL };$/;"	v	typeref:struct:ac97_ops	file:
trix_read	trix.c	/^static unsigned char trix_read(int addr)$/;"	f	file:
trix_set_wss_port	trix.c	/^static int trix_set_wss_port(struct address_info *hw_config)$/;"	f	file:
trix_write	trix.c	/^static void trix_write(int addr, int data)$/;"	f	file:
trystart_endpoint_in	jz_i2s.c	/^static inline int trystart_endpoint_in(struct jz_i2s_controller_info *controller, audio_node *node)$/;"	f	file:
trystart_endpoint_out	jz_i2s.c	/^static inline int trystart_endpoint_out(struct jz_i2s_controller_info *controller, audio_node *node)$/;"	f	file:
turn_off_codec	jz_i2s_4750.c	/^void (*turn_off_codec)(void) = NULL;$/;"	v
turn_off_codec	jz_i2s_for_4750.c	/^void (*turn_off_codec)(void) = NULL;$/;"	v
turn_off_jzcodec	jzcodec.c	/^void turn_off_jzcodec(void)$/;"	f
turn_on_codec	jz_i2s_4750.c	/^void (*turn_on_codec)(void) = NULL;$/;"	v
turn_on_codec	jz_i2s_for_4750.c	/^void (*turn_on_codec)(void) = NULL;$/;"	v
turn_on_jzcodec	jzcodec.c	/^void turn_on_jzcodec(void)$/;"	f
tx_cr	hal2.h	/^	volatile u32 tx_cr[3];		\/* Control registers *\/$/;"	m	struct:hal2_aes_regs
tx_st	hal2.h	/^	volatile u32 tx_st[24];		\/* Channel status data *\/$/;"	m	struct:hal2_aes_regs
tx_stat	hal2.h	/^	volatile u32 tx_stat[1];	\/* Status register *\/$/;"	m	struct:hal2_aes_regs
tx_ud	hal2.h	/^	volatile u32 tx_ud[4];		\/* User data window *\/$/;"	m	struct:hal2_aes_regs
tx_underrun	swarm_cs4297a.c	/^                unsigned int tx_underrun;$/;"	m	struct:cs4297a_state::__anon20	file:
tx_wait_queue	jz_ac97.c	/^DECLARE_WAIT_QUEUE_HEAD (tx_wait_queue);$/;"	v
type	ad1848.c	/^        int type;$/;"	m	struct:__anon3	file:
type	ad1848.c	/^static int __initdata type = 0;$/;"	v	file:
type	msnd.h	/^	enum { msndClassic, msndPinnacle } type;$/;"	m	struct:multisound_dev	typeref:enum:multisound_dev::__anon6
type	sb.h	/^	   int type;$/;"	m	struct:sb_devc
type	sb_card.c	/^static int __initdata type	= 0; \/* Can set this to a specific card type *\/$/;"	v	file:
type	swarm_cs4297a.c	/^        unsigned type:1;	\/\/ adc or dac buffer (CS_TYPE_XXX)$/;"	m	struct:serdma_s	file:
uart401_buffer_status	uart401.c	/^static inline int uart401_buffer_status(int dev)$/;"	f	file:
uart401_close	uart401.c	/^static void uart401_close(int dev)$/;"	f	file:
uart401_cmd	uart401.c	/^static void uart401_cmd(uart401_devc * devc, unsigned char cmd)$/;"	f	file:
uart401_devc	uart401.c	/^typedef struct uart401_devc$/;"	s	file:
uart401_devc	uart401.c	/^uart401_devc;$/;"	t	typeref:struct:uart401_devc	file:
uart401_end_read	uart401.c	/^static inline int uart401_end_read(int dev)$/;"	f	file:
uart401_input_loop	uart401.c	/^static void uart401_input_loop(uart401_devc * devc)$/;"	f	file:
uart401_kick	uart401.c	/^static inline void uart401_kick(int dev)$/;"	f	file:
uart401_open	uart401.c	/^uart401_open(int dev, int mode,$/;"	f	file:
uart401_operations	uart401.c	/^static const struct midi_operations uart401_operations =$/;"	v	typeref:struct:midi_operations	file:
uart401_out	uart401.c	/^static int uart401_out(int dev, unsigned char midi_byte)$/;"	f	file:
uart401_read	uart401.c	/^static int uart401_read(uart401_devc * devc)$/;"	f	file:
uart401_start_read	uart401.c	/^static inline int uart401_start_read(int dev)$/;"	f	file:
uart401_status	uart401.c	/^static int uart401_status(uart401_devc * devc)$/;"	f	file:
uart401_write	uart401.c	/^static void uart401_write(uart401_devc * devc, unsigned char byte)$/;"	f	file:
uart401intr	uart401.c	/^EXPORT_SYMBOL(uart401intr);$/;"	v
uart401intr	uart401.c	/^irqreturn_t uart401intr(int irq, void *dev_id)$/;"	f
uart6850_base	uart6850.c	/^static int uart6850_base = 0x330;$/;"	v	file:
uart6850_buffer_status	uart6850.c	/^static inline int uart6850_buffer_status(int dev)$/;"	f	file:
uart6850_close	uart6850.c	/^static void uart6850_close(int dev)$/;"	f	file:
uart6850_cmd	uart6850.c	/^static void uart6850_cmd(unsigned char cmd)$/;"	f	file:
uart6850_command	uart6850.c	/^static inline int uart6850_command(int dev, unsigned char *midi_byte)$/;"	f	file:
uart6850_detected	uart6850.c	/^static int uart6850_detected;$/;"	v	file:
uart6850_end_read	uart6850.c	/^static inline int uart6850_end_read(int dev)$/;"	f	file:
uart6850_input_loop	uart6850.c	/^static void uart6850_input_loop(void)$/;"	f	file:
uart6850_irq	uart6850.c	/^static int uart6850_irq;$/;"	v	file:
uart6850_kick	uart6850.c	/^static inline void uart6850_kick(int dev)$/;"	f	file:
uart6850_open	uart6850.c	/^static int uart6850_open(int dev, int mode,$/;"	f	file:
uart6850_opened	uart6850.c	/^static int uart6850_opened;$/;"	v	file:
uart6850_operations	uart6850.c	/^static struct midi_operations uart6850_operations =$/;"	v	typeref:struct:midi_operations	file:
uart6850_osp	uart6850.c	/^static int *uart6850_osp;$/;"	v	file:
uart6850_out	uart6850.c	/^static int uart6850_out(int dev, unsigned char midi_byte)$/;"	f	file:
uart6850_read	uart6850.c	/^static int uart6850_read(void)$/;"	f	file:
uart6850_start_read	uart6850.c	/^static inline int uart6850_start_read(int dev)$/;"	f	file:
uart6850_status	uart6850.c	/^static int uart6850_status(void)$/;"	f	file:
uart6850_write	uart6850.c	/^static void uart6850_write(unsigned char byte)$/;"	f	file:
uart_mode	mpu401.c	/^	int             uart_mode;$/;"	m	struct:mpu_config	file:
ulaw_dsp	ulaw.h	/^static unsigned char ulaw_dsp[] = {$/;"	v
underrun	swarm_cs4297a.c	/^        unsigned underrun;	\/\/ underrun flag$/;"	m	struct:serdma_s	file:
underrun_count	dev_table.h	/^	int	 underrun_count;$/;"	m	struct:dma_buffparms
uninit_aedsp16	aedsp16.c	/^static void __exit uninit_aedsp16(void)$/;"	f	file:
uninit_aedsp16_mpu	aedsp16.c	/^static void uninit_aedsp16_mpu(void)$/;"	f	file:
uninit_aedsp16_mss	aedsp16.c	/^static void uninit_aedsp16_mss(void)$/;"	f	file:
uninit_aedsp16_sb	aedsp16.c	/^static void uninit_aedsp16_sb(void)$/;"	f	file:
unload	dev_table.h	/^	void (*unload) (struct address_info *hw_config);$/;"	m	struct:driver_info
unload_cs4232	cs4232.c	/^static void __devexit unload_cs4232(struct address_info *hw_config)$/;"	f	file:
unload_jz_ac97	jz_ac97.c	/^static void __exit unload_jz_ac97(struct jz_ac97_controller_info *controller)$/;"	f	file:
unload_jz_i2s	jz_i2s.c	/^static void __exit unload_jz_i2s(struct jz_i2s_controller_info *controller)$/;"	f	file:
unload_jz_i2s	jz_i2s_4750.c	/^static void __exit unload_jz_i2s(struct jz_i2s_controller_info *controller)$/;"	f	file:
unload_jz_i2s	jz_i2s_dlv_dma_test.c	/^static void __exit unload_jz_i2s(struct jz_i2s_controller_info *controller)$/;"	f	file:
unload_jz_i2s	jz_i2s_for_4750.c	/^static void __exit unload_jz_i2s(struct jz_i2s_controller_info *controller)$/;"	f	file:
unload_jz_pcm	jz_pcm_tlv320aic1106_dma.c	/^static void __exit unload_jz_pcm(struct jz_pcm_controller_info *controller)$/;"	f	file:
unload_mpu401	mpu401.c	/^EXPORT_SYMBOL(unload_mpu401);$/;"	v
unload_mpu401	mpu401.c	/^void unload_mpu401(struct address_info *hw_config)$/;"	f
unload_ms_sound	ad1848.c	/^EXPORT_SYMBOL(unload_ms_sound);$/;"	v
unload_ms_sound	ad1848.c	/^void unload_ms_sound(struct address_info *hw_config)$/;"	f
unload_multisound	msnd_pinnacle.c	/^static void __exit unload_multisound(void)$/;"	f	file:
unload_pas	pas2_card.c	/^static void __exit unload_pas(struct address_info *hw_config)$/;"	f	file:
unload_pss	pss.c	/^static inline void __exit unload_pss(struct address_info *hw_config)$/;"	f	file:
unload_pss_mpu	pss.c	/^static inline void __exit unload_pss_mpu(struct address_info *hw_config)$/;"	f	file:
unload_pss_mss	pss.c	/^static inline void __exit unload_pss_mss(struct address_info *hw_config)$/;"	f	file:
unload_sbmpu	sb_common.c	/^EXPORT_SYMBOL(unload_sbmpu);$/;"	v
unload_sbmpu	sb_common.c	/^void unload_sbmpu(struct address_info *hw_config)$/;"	f
unload_ss_ms_sound	sscape.c	/^static void __exit unload_ss_ms_sound(struct address_info *hw_config)$/;"	f	file:
unload_sscape	sscape.c	/^static void __exit unload_sscape(struct address_info *hw_config)$/;"	f	file:
unload_trix_mpu	trix.c	/^static inline void __exit unload_trix_mpu(struct address_info *hw_config)$/;"	f	file:
unload_trix_sb	trix.c	/^static inline void __exit unload_trix_sb(struct address_info *hw_config)$/;"	f	file:
unload_trix_wss	trix.c	/^static void __exit unload_trix_wss(struct address_info *hw_config)$/;"	f	file:
unload_uart401	uart401.c	/^EXPORT_SYMBOL(unload_uart401);$/;"	v
unload_uart401	uart401.c	/^void unload_uart401(struct address_info *hw_config)$/;"	f
unload_uart6850	uart6850.c	/^static void __exit unload_uart6850(struct address_info *hw_config)$/;"	f	file:
unload_v_midi	v_midi.c	/^static void __exit unload_v_midi(struct address_info *hw_config)$/;"	f	file:
unload_vidc	vidc.c	/^static void __exit unload_vidc(struct address_info *hw_config)$/;"	f	file:
unload_vwsnd	vwsnd.c	/^static int __exit unload_vwsnd(struct address_info *hw_config)$/;"	f	file:
unload_waveartist	waveartist.c	/^static void __exit unload_waveartist(struct address_info *hw)$/;"	f	file:
unlock_set_fmt	trident.c	/^static inline void unlock_set_fmt(struct trident_state* state)$/;"	f	file:
unset_audio_data_replay	jz_i2s_4750.c	/^static void unset_audio_data_replay(void)$/;"	f	file:
unset_audio_data_replay	jz_i2s_dlv_dma_test.c	/^static void unset_audio_data_replay(void)$/;"	f	file:
unset_audio_data_replay	jz_i2s_for_4750.c	/^static void unset_audio_data_replay(void)$/;"	f	file:
unset_playback_line_input_audio_direct_only	jz_i2s_dlv_dma_test.c	/^static void unset_playback_line_input_audio_direct_only()$/;"	f	file:
unset_playback_line_input_audio_direct_only	jz_i2s_for_4750.c	/^static void unset_playback_line_input_audio_direct_only()$/;"	f	file:
unset_record_line_input_audio_with_audio_data_replay	jz_i2s_dlv_dma_test.c	/^static void unset_record_line_input_audio_with_audio_data_replay(void)$/;"	f	file:
unset_record_line_input_audio_with_audio_data_replay	jz_i2s_for_4750.c	/^static void unset_record_line_input_audio_with_audio_data_replay(void)$/;"	f	file:
unset_record_line_input_audio_with_audio_data_replay	jzdlv.c	/^static void unset_record_line_input_audio_with_audio_data_replay(void)$/;"	f	file:
unset_record_line_input_audio_without_playback	jz_i2s_dlv_dma_test.c	/^static void unset_record_line_input_audio_without_playback(void)$/;"	f	file:
unset_record_line_input_audio_without_playback	jz_i2s_for_4750.c	/^static void unset_record_line_input_audio_without_playback(void)$/;"	f	file:
unset_record_mic_input_audio_with_audio_data_replay	jz_i2s_dlv_dma_test.c	/^static void unset_record_mic_input_audio_with_audio_data_replay(void)$/;"	f	file:
unset_record_mic_input_audio_with_audio_data_replay	jz_i2s_for_4750.c	/^static void unset_record_mic_input_audio_with_audio_data_replay(void)$/;"	f	file:
unset_record_mic_input_audio_with_audio_data_replay	jzdlv.c	/^static void unset_record_mic_input_audio_with_audio_data_replay(void)$/;"	f	file:
unset_record_mic_input_audio_with_direct_playback	jz_i2s_dlv_dma_test.c	/^static void unset_record_mic_input_audio_with_direct_playback(void)$/;"	f	file:
unset_record_mic_input_audio_with_direct_playback	jz_i2s_for_4750.c	/^static void unset_record_mic_input_audio_with_direct_playback(void)$/;"	f	file:
unset_record_mic_input_audio_without_playback	jz_i2s_dlv_dma_test.c	/^static void unset_record_mic_input_audio_without_playback(void)$/;"	f	file:
unset_record_mic_input_audio_without_playback	jz_i2s_for_4750.c	/^static void unset_record_mic_input_audio_without_playback(void)$/;"	f	file:
unset_record_playing_audio_mixed_with_mic_input_audio	jz_i2s_dlv_dma_test.c	/^static void unset_record_playing_audio_mixed_with_mic_input_audio(void)$/;"	f	file:
unset_record_playing_audio_mixed_with_mic_input_audio	jz_i2s_for_4750.c	/^static void unset_record_playing_audio_mixed_with_mic_input_audio(void)$/;"	f	file:
update_flag	i810_audio.c	/^		unsigned update_flag;$/;"	m	struct:i810_state::dmabuf	file:
update_flag	trident.c	/^		unsigned update_flag;$/;"	m	struct:trident_state::dmabuf	file:
update_pot	msnd_pinnacle.c	420;"	d	file:
update_potm	msnd_pinnacle.c	410;"	d	file:
update_volm	msnd_pinnacle.c	402;"	d	file:
upload_dsp_code	msnd_pinnacle.c	/^static int upload_dsp_code(void)$/;"	f	file:
use	jz_i2s.c	/^	struct list_head use;$/;"	m	struct:__anon24	typeref:struct:__anon24::list_head	file:
use_mic_line_flag	jz_i2s.c	/^	int	use_mic_line_flag;$/;"	m	struct:i2s_codec	file:
use_mic_line_flag	jz_i2s_dlv_dma_test.c	/^static int              use_mic_line_flag;$/;"	v	file:
use_mmio	i810_audio.c	/^	int           use_mmio;$/;"	m	struct:i810_card	file:
use_slider	waveartist.c	/^	unsigned int	use_slider	:1;\/* use slider setting for o\/p vol *\/$/;"	m	struct:__anon11	file:
usecount	hal2.c	/^	int usecount;			\/* recording and playback are$/;"	m	struct:hal2_codec	file:
usecs_per_tmr	sound_timer.c	/^static volatile unsigned long usecs_per_tmr;	\/* Length of the current interval *\/$/;"	v	file:
used	i810_audio.c	/^	u32 used;$/;"	m	struct:i810_channel	file:
used_voices	sound_config.h	/^		int used_voices;$/;"	m	struct:voice_alloc_info
user_bytes_per_sample	au1550_ac97.c	/^		int		user_bytes_per_sample;$/;"	m	struct:au1550_state::dmabuf	file:
user_counter	dev_table.h	/^	unsigned long	 user_counter;$/;"	m	struct:dma_buffparms
user_frag_size	dmasound/dmasound.h	/^    int user_frag_size ;	\/* of this size *\/$/;"	m	struct:sound_queue
user_frags	dmasound/dmasound.h	/^    int user_frags ;		\/* user requests this many *\/$/;"	m	struct:sound_queue
user_need_mono	jz_i2s.c	/^	int	user_need_mono;$/;"	m	struct:i2s_codec	file:
userfrags	i810_audio.c	/^		unsigned userfrags;$/;"	m	struct:i810_state::dmabuf	file:
userfragsize	i810_audio.c	/^		unsigned userfragsize;$/;"	m	struct:i810_state::dmabuf	file:
users	btaudio.c	/^	int            users;$/;"	m	struct:btaudio	file:
ust	vwsnd.c	/^	unsigned long long ust;$/;"	m	struct:ustmsc	file:
ustmsc	vwsnd.c	/^typedef struct ustmsc {$/;"	s	file:
ustmsc_t	vwsnd.c	/^} ustmsc_t;$/;"	t	typeref:struct:ustmsc	file:
ustreg	vwsnd.c	/^	int ustreg;$/;"	m	struct:dma_chan_desc	file:
v_alloc	opl3.c	/^	struct voice_alloc_info *v_alloc;$/;"	m	struct:opl_devinfo	typeref:struct:opl_devinfo::voice_alloc_info	file:
v_devc	v_midi.c	/^static vmidi_devc *v_devc[2] = { NULL, NULL};$/;"	v	file:
v_midi_close	v_midi.c	/^static void v_midi_close (int dev)$/;"	f	file:
v_midi_end_read	v_midi.c	/^static int v_midi_end_read (int dev)$/;"	f	file:
v_midi_ioctl	v_midi.c	/^static inline int v_midi_ioctl (int dev, unsigned cmd, void __user *arg)$/;"	f	file:
v_midi_open	v_midi.c	/^static int v_midi_open (int dev, int mode,$/;"	f	file:
v_midi_operations	v_midi.c	/^static struct midi_operations v_midi_operations =$/;"	v	typeref:struct:midi_operations	file:
v_midi_operations2	v_midi.c	/^static struct midi_operations v_midi_operations2 =$/;"	v	typeref:struct:midi_operations	file:
v_midi_out	v_midi.c	/^static int v_midi_out (int dev, unsigned char midi_byte)$/;"	f	file:
v_midi_start_read	v_midi.c	/^static inline int v_midi_start_read (int dev)$/;"	f	file:
v_ops	v_midi.c	/^	struct vmidi_devc v_ops[2];$/;"	m	struct:vmidi_memory	typeref:struct:vmidi_memory::vmidi_devc	file:
val	aedsp16.c	/^	int	val;		\/* irq|mirq|dma                         *\/$/;"	m	struct:orVals	file:
valid_dma	soundcard.c	53;"	d	file:
valid_interrupts	sscape.c	/^static char *valid_interrupts = valid_interrupts_new;$/;"	v	file:
valid_interrupts_new	sscape.c	/^static char valid_interrupts_new[] = {$/;"	v	file:
valid_interrupts_old	sscape.c	/^static char valid_interrupts_old[] = {$/;"	v	file:
value	ac97_codec.c	/^	unsigned int value;$/;"	m	struct:mixer_defaults	file:
vendor	ad1848.c	/^			vendor, function;$/;"	m	struct:__anon3	file:
verify_mpu	sscape.c	/^static int verify_mpu(struct sscape_info *devc)$/;"	f	file:
version	dmasound/dmasound.h	/^    int version ;$/;"	m	struct:__anon17
version	mpu401.c	/^	unsigned char   version, revision;$/;"	m	struct:mpu_config	file:
via_ac97_cleanup	via82cxxx_audio.c	/^static void via_ac97_cleanup (struct via_info *card)$/;"	f	file:
via_ac97_codec_wait	via82cxxx_audio.c	/^static void via_ac97_codec_wait (struct ac97_codec *codec)$/;"	f	file:
via_ac97_init	via82cxxx_audio.c	/^static int __devinit via_ac97_init (struct via_info *card)$/;"	f	file:
via_ac97_read_reg	via82cxxx_audio.c	/^static u16 via_ac97_read_reg (struct ac97_codec *codec, u8 reg)$/;"	f	file:
via_ac97_reset	via82cxxx_audio.c	/^static int __devinit via_ac97_reset (struct via_info *card)$/;"	f	file:
via_ac97_wait_idle	via82cxxx_audio.c	/^static u8 via_ac97_wait_idle (struct via_info *card)$/;"	f	file:
via_ac97_write_reg	via82cxxx_audio.c	/^static void via_ac97_write_reg (struct ac97_codec *codec, u8 reg, u16 value)$/;"	f	file:
via_buffer_pgtbl	via82cxxx_audio.c	/^struct via_buffer_pgtbl {$/;"	s	file:
via_chan_buffer_free	via82cxxx_audio.c	/^static void via_chan_buffer_free (struct via_info *card, struct via_channel *chan)$/;"	f	file:
via_chan_buffer_init	via82cxxx_audio.c	/^static int via_chan_buffer_init (struct via_info *card, struct via_channel *chan)$/;"	f	file:
via_chan_clear	via82cxxx_audio.c	/^static void via_chan_clear (struct via_info *card, struct via_channel *chan)$/;"	f	file:
via_chan_dump_bufs	via82cxxx_audio.c	/^static void via_chan_dump_bufs (struct via_channel *chan)$/;"	f	file:
via_chan_flush_frag	via82cxxx_audio.c	/^static void via_chan_flush_frag (struct via_channel *chan)$/;"	f	file:
via_chan_free	via82cxxx_audio.c	/^static void via_chan_free (struct via_info *card, struct via_channel *chan)$/;"	f	file:
via_chan_init	via82cxxx_audio.c	/^static void via_chan_init (struct via_info *card, struct via_channel *chan)$/;"	f	file:
via_chan_init_defaults	via82cxxx_audio.c	/^static void via_chan_init_defaults (struct via_info *card, struct via_channel *chan)$/;"	f	file:
via_chan_maybe_start	via82cxxx_audio.c	/^static inline void via_chan_maybe_start (struct via_channel *chan)$/;"	f	file:
via_chan_pcm_fmt	via82cxxx_audio.c	/^static void via_chan_pcm_fmt (struct via_channel *chan, int reset)$/;"	f	file:
via_chan_set_buffering	via82cxxx_audio.c	/^static int via_chan_set_buffering (struct via_info *card,$/;"	f	file:
via_chan_set_fmt	via82cxxx_audio.c	/^static int via_chan_set_fmt (struct via_info *card,$/;"	f	file:
via_chan_set_speed	via82cxxx_audio.c	/^static int via_chan_set_speed (struct via_info *card,$/;"	f	file:
via_chan_set_stereo	via82cxxx_audio.c	/^static int via_chan_set_stereo (struct via_info *card,$/;"	f	file:
via_chan_status_clear	via82cxxx_audio.c	/^static inline void via_chan_status_clear (long iobase)$/;"	f	file:
via_chan_stop	via82cxxx_audio.c	/^static inline void via_chan_stop (long iobase)$/;"	f	file:
via_channel	via82cxxx_audio.c	/^struct via_channel {$/;"	s	file:
via_channel_states	via82cxxx_audio.c	/^enum via_channel_states {$/;"	g	file:
via_driver	via82cxxx_audio.c	/^static struct pci_driver via_driver = {$/;"	v	typeref:struct:pci_driver	file:
via_dsp_cleanup	via82cxxx_audio.c	/^static void via_dsp_cleanup (struct via_info *card)$/;"	f	file:
via_dsp_do_read	via82cxxx_audio.c	/^static ssize_t via_dsp_do_read (struct via_info *card,$/;"	f	file:
via_dsp_do_write	via82cxxx_audio.c	/^static ssize_t via_dsp_do_write (struct via_info *card,$/;"	f	file:
via_dsp_drain_playback	via82cxxx_audio.c	/^static int via_dsp_drain_playback (struct via_info *card,$/;"	f	file:
via_dsp_fops	via82cxxx_audio.c	/^static const struct file_operations via_dsp_fops = {$/;"	v	typeref:struct:file_operations	file:
via_dsp_init	via82cxxx_audio.c	/^static int __devinit via_dsp_init (struct via_info *card)$/;"	f	file:
via_dsp_ioctl	via82cxxx_audio.c	/^static int via_dsp_ioctl (struct inode *inode, struct file *file,$/;"	f	file:
via_dsp_ioctl_ptr	via82cxxx_audio.c	/^static int via_dsp_ioctl_ptr (struct via_info *card,$/;"	f	file:
via_dsp_ioctl_space	via82cxxx_audio.c	/^static int via_dsp_ioctl_space (struct via_info *card,$/;"	f	file:
via_dsp_ioctl_trigger	via82cxxx_audio.c	/^static int via_dsp_ioctl_trigger (struct via_channel *chan, int val)$/;"	f	file:
via_dsp_mmap	via82cxxx_audio.c	/^static int via_dsp_mmap(struct file *file, struct vm_area_struct *vma)$/;"	f	file:
via_dsp_open	via82cxxx_audio.c	/^static int via_dsp_open (struct inode *inode, struct file *file)$/;"	f	file:
via_dsp_poll	via82cxxx_audio.c	/^static unsigned int via_dsp_poll(struct file *file, struct poll_table_struct *wait)$/;"	f	file:
via_dsp_read	via82cxxx_audio.c	/^static ssize_t via_dsp_read(struct file *file, char __user *buffer, size_t count, loff_t *ppos)$/;"	f	file:
via_dsp_release	via82cxxx_audio.c	/^static int via_dsp_release(struct inode *inode, struct file *file)$/;"	f	file:
via_dsp_write	via82cxxx_audio.c	/^static ssize_t via_dsp_write(struct file *file, const char __user *buffer, size_t count, loff_t *ppos)$/;"	f	file:
via_info	via82cxxx_audio.c	/^struct via_info {$/;"	s	file:
via_init_one	via82cxxx_audio.c	/^static int __devinit via_init_one (struct pci_dev *pdev, const struct pci_device_id *id)$/;"	f	file:
via_interrupt	via82cxxx_audio.c	/^static irqreturn_t  via_interrupt(int irq, void *dev_id)$/;"	f	file:
via_interrupt_init	via82cxxx_audio.c	/^static int via_interrupt_init (struct via_info *card)$/;"	f	file:
via_intr_channel	via82cxxx_audio.c	/^static void via_intr_channel (struct via_info *card, struct via_channel *chan)$/;"	f	file:
via_mixer_fops	via82cxxx_audio.c	/^static const struct file_operations via_mixer_fops = {$/;"	v	typeref:struct:file_operations	file:
via_mixer_ioctl	via82cxxx_audio.c	/^static int via_mixer_ioctl (struct inode *inode, struct file *file, unsigned int cmd,$/;"	f	file:
via_mixer_open	via82cxxx_audio.c	/^static int via_mixer_open (struct inode *inode, struct file *file)$/;"	f	file:
via_mm_nopage	via82cxxx_audio.c	/^static struct page * via_mm_nopage (struct vm_area_struct * vma,$/;"	f	file:
via_mm_ops	via82cxxx_audio.c	/^static struct vm_operations_struct via_mm_ops = {$/;"	v	typeref:struct:vm_operations_struct	file:
via_mm_swapout	via82cxxx_audio.c	/^static int via_mm_swapout (struct page *page, struct file *filp)$/;"	f	file:
via_new_interrupt	via82cxxx_audio.c	/^static irqreturn_t via_new_interrupt(int irq, void *dev_id)$/;"	f	file:
via_num_cards	via82cxxx_audio.c	/^static unsigned via_num_cards;$/;"	v	file:
via_pci_tbl	via82cxxx_audio.c	/^static struct pci_device_id via_pci_tbl[] = {$/;"	v	typeref:struct:pci_device_id	file:
via_remove_one	via82cxxx_audio.c	/^static void __devexit via_remove_one (struct pci_dev *pdev)$/;"	f	file:
via_set_rate	via82cxxx_audio.c	/^static int via_set_rate (struct ac97_codec *ac97,$/;"	f	file:
via_sg_offset	via82cxxx_audio.c	/^static int via_sg_offset(struct via_channel *chan)$/;"	f	file:
via_sgd_table	via82cxxx_audio.c	/^struct via_sgd_table {$/;"	s	file:
via_stop_everything	via82cxxx_audio.c	/^static void via_stop_everything (struct via_info *card)$/;"	f	file:
via_syscall_down	via82cxxx_audio.c	/^static inline int via_syscall_down (struct via_info *card, int nonblock)$/;"	f	file:
vidc_adev	vidc.c	/^static int		vidc_adev;$/;"	v	file:
vidc_audio_channels	vidc.c	/^static char		vidc_audio_channels;$/;"	v	file:
vidc_audio_close	vidc.c	/^static void vidc_audio_close(int dev)$/;"	f	file:
vidc_audio_dma_interrupt	vidc.c	/^static irqreturn_t vidc_audio_dma_interrupt(void)$/;"	f	file:
vidc_audio_driver	vidc.c	/^static struct audio_driver vidc_audio_driver =$/;"	v	typeref:struct:audio_driver	file:
vidc_audio_format	vidc.c	/^static char		vidc_audio_format;$/;"	v	file:
vidc_audio_local_qlen	vidc.c	/^static int vidc_audio_local_qlen(int dev)$/;"	f	file:
vidc_audio_open	vidc.c	/^static int vidc_audio_open(int dev, int mode)$/;"	f	file:
vidc_audio_output_block	vidc.c	/^vidc_audio_output_block(int dev, unsigned long buf, int total_count, int one)$/;"	f	file:
vidc_audio_prepare_for_input	vidc.c	/^static int vidc_audio_prepare_for_input(int dev, int bsize, int bcount)$/;"	f	file:
vidc_audio_prepare_for_output	vidc.c	/^static int vidc_audio_prepare_for_output(int dev, int bsize, int bcount)$/;"	f	file:
vidc_audio_rate	vidc.c	/^static int		vidc_audio_rate;$/;"	v	file:
vidc_audio_reset	vidc.c	/^static void vidc_audio_reset(int dev)$/;"	f	file:
vidc_audio_set_channels	vidc.c	/^static short vidc_audio_set_channels(int dev, short channels)$/;"	f	file:
vidc_audio_set_format	vidc.c	/^static unsigned int vidc_audio_set_format(int dev, unsigned int fmt)$/;"	f	file:
vidc_audio_set_speed	vidc.c	/^static int vidc_audio_set_speed(int dev, int rate)$/;"	f	file:
vidc_audio_start_input	vidc.c	/^vidc_audio_start_input(int dev, unsigned long buf, int count, int intrflag)$/;"	f	file:
vidc_audio_trigger	vidc.c	/^static void vidc_audio_trigger(int dev, int enable_bits)$/;"	f	file:
vidc_audio_volume_l	vidc.c	/^static unsigned int	vidc_audio_volume_l;	\/* left PCM vol, 0 - 65536 *\/$/;"	v	file:
vidc_audio_volume_r	vidc.c	/^static unsigned int	vidc_audio_volume_r;	\/* right PCM vol, 0 - 65536 *\/$/;"	v	file:
vidc_busy	vidc.c	/^static int		vidc_busy;$/;"	v	file:
vidc_filler	vidc_fill.S	/^vidc_filler:$/;"	l
vidc_level_l	vidc.c	/^static unsigned char	vidc_level_l[SOUND_MIXER_NRDEVICES] = {$/;"	v	file:
vidc_level_r	vidc.c	/^static unsigned char	vidc_level_r[SOUND_MIXER_NRDEVICES] = {$/;"	v	file:
vidc_mixer_ioctl	vidc.c	/^static int vidc_mixer_ioctl(int dev, unsigned int cmd, void __user *arg)$/;"	f	file:
vidc_mixer_operations	vidc.c	/^static struct mixer_operations vidc_mixer_operations = {$/;"	v	typeref:struct:mixer_operations	file:
vidc_mixer_set	vidc.c	/^vidc_mixer_set(int mdev, unsigned int level)$/;"	f	file:
vidc_mod-objs	Makefile	/^vidc_mod-objs	:= vidc.o vidc_fill.o$/;"	m
vidc_update_filler	vidc.c	/^void vidc_update_filler(int format, int channels)$/;"	f
virt	i810_audio.c	/^	int virt;$/;"	m	struct:i810_state	file:
virt	trident.c	/^	int virt;$/;"	m	struct:trident_state	file:
vmidi_devc	v_midi.h	/^	} vmidi_devc;$/;"	t	typeref:struct:vmidi_devc
vmidi_devc	v_midi.h	/^typedef struct vmidi_devc {$/;"	s
vmidi_memory	v_midi.c	/^struct vmidi_memory$/;"	s	file:
vnc_configure_mixer	waveartist.c	/^vnc_configure_mixer(wavnc_info *devc, unsigned int recmask)$/;"	f	file:
vnc_mute_lout	waveartist.c	/^vnc_mute_lout(wavnc_info *devc)$/;"	f	file:
vnc_mute_spkr	waveartist.c	/^vnc_mute_spkr(wavnc_info *devc)$/;"	f	file:
vnc_private_ioctl	waveartist.c	/^vnc_private_ioctl(int dev, unsigned int cmd, int __user * arg)$/;"	f	file:
vnc_slider	waveartist.c	/^vnc_slider(wavnc_info *devc)$/;"	f	file:
vnc_slider_tick	waveartist.c	/^vnc_slider_tick(unsigned long data)$/;"	f	file:
vnc_timer	waveartist.c	/^static struct timer_list vnc_timer;$/;"	v	typeref:struct:timer_list	file:
vnc_volume_slider	waveartist.c	/^vnc_volume_slider(wavnc_info *devc)$/;"	f	file:
voc	opl3.c	/^	struct voice_info voc[MAX_VOICE];$/;"	m	struct:opl_devinfo	typeref:struct:opl_devinfo::voice_info	file:
voice_alloc_info	sound_config.h	/^struct voice_alloc_info {$/;"	s
voice_info	opl3.c	/^struct voice_info$/;"	s	file:
voice_mode	opl3_hw.h	/^		unsigned char voice_mode; \/* 0=unavailable, 2=2 OP, 4=4 OP *\/$/;"	m	struct:physical_voice_info
voice_num	opl3_hw.h	/^		unsigned char voice_num;$/;"	m	struct:physical_voice_info
voices	hal2.c	/^	int voices;			\/* mono\/stereo *\/$/;"	m	struct:hal2_codec	file:
vol	swarm_cs4297a.c	/^		unsigned short vol[10];$/;"	m	struct:cs4297a_state::__anon21	file:
vol_regs	hal2.c	/^	struct hal2_vol_regs *vol_regs;	\/* HAL2 vol registers *\/$/;"	m	struct:hal2_card	typeref:struct:hal2_card::hal2_vol_regs	file:
volume	hal2.c	/^	unsigned int volume[H2_MIXERS];$/;"	m	struct:hal2_mixer	file:
volume	opl3.c	/^	int             volume;$/;"	m	struct:voice_info	file:
volume	via82cxxx_audio.c	/^	unsigned volume: 1;$/;"	m	struct:via_info	file:
volume_l	pss.c	/^	unsigned int volume_l;$/;"	m	struct:pss_mixerdata	file:
volume_left	dmasound/dmasound.h	/^    int volume_left;	\/* volume (range is machine dependent) *\/$/;"	m	struct:sound_settings
volume_method	dev_table.h	/^	void (*volume_method) (int dev, int mode);$/;"	m	struct:synth_operations
volume_r	pss.c	/^	unsigned int volume_r;$/;"	m	struct:pss_mixerdata	file:
volume_right	dmasound/dmasound.h	/^    int volume_right;$/;"	m	struct:sound_settings
vra	au1550_ac97.c	/^static int      vra = 1;$/;"	v	file:
vwsnd_audio_do_ioctl	vwsnd.c	/^static int vwsnd_audio_do_ioctl(struct inode *inode,$/;"	f	file:
vwsnd_audio_do_read	vwsnd.c	/^static ssize_t vwsnd_audio_do_read(struct file *file,$/;"	f	file:
vwsnd_audio_do_write	vwsnd.c	/^static ssize_t vwsnd_audio_do_write(struct file *file,$/;"	f	file:
vwsnd_audio_fops	vwsnd.c	/^static const struct file_operations vwsnd_audio_fops = {$/;"	v	typeref:struct:file_operations	file:
vwsnd_audio_intr	vwsnd.c	/^static irqreturn_t vwsnd_audio_intr(int irq, void *dev_id)$/;"	f	file:
vwsnd_audio_ioctl	vwsnd.c	/^static int vwsnd_audio_ioctl(struct inode *inode,$/;"	f	file:
vwsnd_audio_mmap	vwsnd.c	/^static int vwsnd_audio_mmap(struct file *file, struct vm_area_struct *vma)$/;"	f	file:
vwsnd_audio_open	vwsnd.c	/^static int vwsnd_audio_open(struct inode *inode, struct file *file)$/;"	f	file:
vwsnd_audio_poll	vwsnd.c	/^static unsigned int vwsnd_audio_poll(struct file *file,$/;"	f	file:
vwsnd_audio_read	vwsnd.c	/^static ssize_t vwsnd_audio_read(struct file *file,$/;"	f	file:
vwsnd_audio_read_intr	vwsnd.c	/^static void vwsnd_audio_read_intr(vwsnd_dev_t *devc, unsigned int status)$/;"	f	file:
vwsnd_audio_release	vwsnd.c	/^static int vwsnd_audio_release(struct inode *inode, struct file *file)$/;"	f	file:
vwsnd_audio_write	vwsnd.c	/^static ssize_t vwsnd_audio_write(struct file *file,$/;"	f	file:
vwsnd_audio_write_intr	vwsnd.c	/^static void vwsnd_audio_write_intr(vwsnd_dev_t *devc, unsigned int status)$/;"	f	file:
vwsnd_dev	vwsnd.c	/^typedef struct vwsnd_dev {$/;"	s	file:
vwsnd_dev_list	vwsnd.c	/^static vwsnd_dev_t *vwsnd_dev_list;	\/* linked list of all devices *\/$/;"	v	file:
vwsnd_dev_t	vwsnd.c	/^} vwsnd_dev_t;$/;"	t	typeref:struct:vwsnd_dev	file:
vwsnd_mixer_fops	vwsnd.c	/^static const struct file_operations vwsnd_mixer_fops = {$/;"	v	typeref:struct:file_operations	file:
vwsnd_mixer_ioctl	vwsnd.c	/^static int vwsnd_mixer_ioctl(struct inode *ioctl,$/;"	f	file:
vwsnd_mixer_open	vwsnd.c	/^static int vwsnd_mixer_open(struct inode *inode, struct file *file)$/;"	f	file:
vwsnd_mixer_release	vwsnd.c	/^static int vwsnd_mixer_release(struct inode *inode, struct file *file)$/;"	f	file:
vwsnd_port	vwsnd.c	/^typedef struct vwsnd_port {$/;"	s	file:
vwsnd_port_flags	vwsnd.c	/^typedef enum vwsnd_port_flags {$/;"	g	file:
vwsnd_port_flags_t	vwsnd.c	/^} vwsnd_port_flags_t;$/;"	t	typeref:enum:vwsnd_port_flags	file:
vwsnd_port_hwstate	vwsnd.c	/^typedef enum vwsnd_port_hwstate {	\/* hardware state *\/$/;"	g	file:
vwsnd_port_hwstate_t	vwsnd.c	/^} vwsnd_port_hwstate_t;$/;"	t	typeref:enum:vwsnd_port_hwstate	file:
vwsnd_port_swstate	vwsnd.c	/^typedef enum vwsnd_port_swstate {	\/* software state *\/$/;"	g	file:
vwsnd_port_swstate_t	vwsnd.c	/^} vwsnd_port_swstate_t;$/;"	t	typeref:enum:vwsnd_port_swstate	file:
vwsnd_port_t	vwsnd.c	/^} vwsnd_port_t;$/;"	t	typeref:struct:vwsnd_port	file:
vwsnd_use_count	vwsnd.c	/^static atomic_t vwsnd_use_count = ATOMIC_INIT(0);$/;"	v	file:
wait	au1550_ac97.c	/^		wait_queue_head_t wait;$/;"	m	struct:au1550_state::dmabuf	file:
wait	i810_audio.c	/^		wait_queue_head_t wait;	\/* put process on wait queue when no more space in buffer *\/$/;"	m	struct:i810_state::dmabuf	file:
wait	swarm_cs4297a.c	/^        wait_queue_head_t wait;$/;"	m	struct:serdma_s	file:
wait	trident.c	/^		wait_queue_head_t wait;$/;"	m	struct:trident_state::dmabuf	file:
wait	via82cxxx_audio.c	/^	wait_queue_head_t wait;$/;"	m	struct:via_channel	file:
wait_for_calibration	ad1848.c	/^static void wait_for_calibration(ad1848_info * devc)$/;"	f	file:
waitcodec	au1550_ac97.c	/^waitcodec(struct ac97_codec *codec)$/;"	f	file:
waitforstimertick	trident.c	/^waitforstimertick(struct trident_card *card)$/;"	f	file:
wakeup	swarm_cs4297a.c	/^        unsigned wakeup;	\/\/ interrupt occurred on block $/;"	m	struct:serdma_s	file:
waveartist_audio_driver	waveartist.c	/^static struct audio_driver waveartist_audio_driver = {$/;"	v	typeref:struct:audio_driver	file:
waveartist_close	waveartist.c	/^waveartist_close(int dev)$/;"	f	file:
waveartist_cmd	waveartist.c	/^waveartist_cmd(wavnc_info *devc,$/;"	f	file:
waveartist_cmd1	waveartist.c	/^waveartist_cmd1(wavnc_info *devc, unsigned int cmd)$/;"	f	file:
waveartist_cmd1_r	waveartist.c	/^waveartist_cmd1_r(wavnc_info *devc, unsigned int cmd)$/;"	f	file:
waveartist_cmd2	waveartist.c	/^waveartist_cmd2(wavnc_info *devc, unsigned int cmd, unsigned int arg)$/;"	f	file:
waveartist_cmd3	waveartist.c	/^waveartist_cmd3(wavnc_info *devc, unsigned int cmd,$/;"	f	file:
waveartist_decode_mixer	waveartist.c	/^waveartist_decode_mixer(wavnc_info *devc, int dev, unsigned char lev_l,$/;"	f	file:
waveartist_get_bits	waveartist.c	/^waveartist_get_bits(wavnc_port_info *portc)$/;"	f	file:
waveartist_get_mixer	waveartist.c	/^static int waveartist_get_mixer(wavnc_info *devc, int dev)$/;"	f	file:
waveartist_get_speed	waveartist.c	/^waveartist_get_speed(wavnc_port_info *portc)$/;"	f	file:
waveartist_getrev	waveartist.c	/^waveartist_getrev(wavnc_info *devc, char *rev)$/;"	f	file:
waveartist_halt	waveartist.c	/^waveartist_halt(int dev)$/;"	f	file:
waveartist_halt_input	waveartist.c	/^waveartist_halt_input(int dev)$/;"	f	file:
waveartist_halt_output	waveartist.c	/^waveartist_halt_output(int dev)$/;"	f	file:
waveartist_iack	waveartist.c	/^waveartist_iack(wavnc_info *devc)$/;"	f	file:
waveartist_init	waveartist.c	/^static int __init waveartist_init(wavnc_info *devc)$/;"	f	file:
waveartist_intr	waveartist.c	/^waveartist_intr(int irq, void *dev_id)$/;"	f	file:
waveartist_ioctl	waveartist.c	/^waveartist_ioctl(int dev, unsigned int cmd, void __user * arg)$/;"	f	file:
waveartist_mixer	waveartist.c	/^static const struct waveartist_mixer_info waveartist_mixer = {$/;"	v	typeref:struct:waveartist_mixer_info	file:
waveartist_mixer_info	waveartist.c	/^struct waveartist_mixer_info {$/;"	s	file:
waveartist_mixer_ioctl	waveartist.c	/^waveartist_mixer_ioctl(int dev, unsigned int cmd, void __user * arg)$/;"	f	file:
waveartist_mixer_operations	waveartist.c	/^static struct mixer_operations waveartist_mixer_operations =$/;"	v	typeref:struct:mixer_operations	file:
waveartist_mixer_reset	waveartist.c	/^waveartist_mixer_reset(wavnc_info *devc)$/;"	f	file:
waveartist_mixer_update	waveartist.c	/^waveartist_mixer_update(wavnc_info *devc, int whichDev)$/;"	f	file:
waveartist_open	waveartist.c	/^waveartist_open(int dev, int mode)$/;"	f	file:
waveartist_output_block	waveartist.c	/^waveartist_output_block(int dev, unsigned long buf, int __count, int intrflag)$/;"	f	file:
waveartist_prepare_for_input	waveartist.c	/^waveartist_prepare_for_input(int dev, int bsize, int bcount)$/;"	f	file:
waveartist_prepare_for_output	waveartist.c	/^waveartist_prepare_for_output(int dev, int bsize, int bcount)$/;"	f	file:
waveartist_reset	waveartist.c	/^waveartist_reset(wavnc_info *devc)$/;"	f	file:
waveartist_select_input	waveartist.c	/^waveartist_select_input(wavnc_info *devc, unsigned int recmask,$/;"	f	file:
waveartist_set_adc_mux	waveartist.c	/^waveartist_set_adc_mux(wavnc_info *devc, char left_dev, char right_dev)$/;"	f	file:
waveartist_set_bits	waveartist.c	/^waveartist_set_bits(int dev, unsigned int arg)$/;"	f	file:
waveartist_set_channels	waveartist.c	/^waveartist_set_channels(int dev, short arg)$/;"	f	file:
waveartist_set_ctlr	waveartist.c	/^waveartist_set_ctlr(struct address_info *hw, unsigned char clear, unsigned char set)$/;"	f	file:
waveartist_set_mixer	waveartist.c	/^waveartist_set_mixer(wavnc_info *devc, int dev, unsigned int level)$/;"	f	file:
waveartist_set_recmask	waveartist.c	/^waveartist_set_recmask(wavnc_info *devc, unsigned int recmask)$/;"	f	file:
waveartist_set_speed	waveartist.c	/^waveartist_set_speed(int dev, int arg)$/;"	f	file:
waveartist_sleep	waveartist.c	/^waveartist_sleep(int timeout_ms)$/;"	f	file:
waveartist_start_input	waveartist.c	/^waveartist_start_input(int dev, unsigned long buf, int __count, int intrflag)$/;"	f	file:
waveartist_trigger	waveartist.c	/^waveartist_trigger(int dev, int state)$/;"	f	file:
wavnc_info	waveartist.c	/^} wavnc_info;$/;"	t	typeref:struct:__anon11	file:
wavnc_port_info	waveartist.c	/^typedef struct wavnc_port_info {$/;"	s	file:
wavnc_port_info	waveartist.c	/^} wavnc_port_info;$/;"	t	typeref:struct:wavnc_port_info	file:
wolfson_init03	ac97_codec.c	/^static int wolfson_init03(struct ac97_codec * codec)$/;"	f	file:
wolfson_init04	ac97_codec.c	/^static int wolfson_init04(struct ac97_codec * codec)$/;"	f	file:
wolfson_init05	ac97_codec.c	/^static int wolfson_init05(struct ac97_codec * codec)$/;"	f	file:
wolfson_init11	ac97_codec.c	/^static int wolfson_init11(struct ac97_codec * codec)$/;"	f	file:
wolfson_init13	ac97_codec.c	/^static int wolfson_init13(struct ac97_codec * codec)$/;"	f	file:
wolfson_ops03	ac97_codec.c	/^static struct ac97_ops wolfson_ops03 = { wolfson_init03, NULL, NULL };$/;"	v	typeref:struct:ac97_ops	file:
wolfson_ops04	ac97_codec.c	/^static struct ac97_ops wolfson_ops04 = { wolfson_init04, NULL, NULL };$/;"	v	typeref:struct:ac97_ops	file:
wolfson_ops05	ac97_codec.c	/^static struct ac97_ops wolfson_ops05 = { wolfson_init05, NULL, NULL };$/;"	v	typeref:struct:ac97_ops	file:
wolfson_ops11	ac97_codec.c	/^static struct ac97_ops wolfson_ops11 = { wolfson_init11, NULL, NULL };$/;"	v	typeref:struct:ac97_ops	file:
wolfson_ops13	ac97_codec.c	/^static struct ac97_ops wolfson_ops13 = { wolfson_init13, NULL, NULL };$/;"	v	typeref:struct:ac97_ops	file:
work	jz_i2s.c	/^	struct work_struct	work;$/;"	m	struct:__audio_pipe	typeref:struct:__audio_pipe::work_struct	file:
wport	vwsnd.c	/^	vwsnd_port_t	wport;$/;"	m	struct:vwsnd_dev	file:
wrcodec	au1550_ac97.c	/^wrcodec(struct ac97_codec *codec, u8 addr, u16 data)$/;"	f	file:
writeBufSize	dmasound/dmasound_core.c	/^static unsigned int writeBufSize = DEFAULT_BUFF_SIZE ;	\/* in bytes *\/$/;"	v	file:
write_channel	i810_audio.c	/^		struct i810_channel *write_channel;$/;"	m	struct:i810_state::dmabuf	typeref:struct:i810_state::dmabuf::i810_channel	file:
write_codec_file	jz_i2s_4750.c	/^static void write_codec_file(int addr, int val)$/;"	f	file:
write_codec_file	jz_i2s_dlv_dma_test.c	/^static void write_codec_file(int addr, int val)$/;"	f	file:
write_codec_file	jz_i2s_for_4750.c	/^static void write_codec_file(int addr, int val)$/;"	f	file:
write_codec_file_bit	jz_i2s_4750.c	/^static int write_codec_file_bit(int addr, int bitval, int mask_bit)$/;"	f	file:
write_codec_file_bit	jz_i2s_dlv_dma_test.c	/^static int write_codec_file_bit(int addr, int bitval, int mask_bit)$/;"	f	file:
write_codec_file_bit	jz_i2s_for_4750.c	/^static int write_codec_file_bit(int addr, int bitval, int mask_bit)$/;"	f	file:
write_command	mpu401.c	/^static inline void write_command(struct mpu_config *devc, unsigned char cmd)$/;"	f	file:
write_data	mpu401.c	/^static inline void write_data(struct mpu_config *devc, unsigned char byte)$/;"	f	file:
write_mixer	jz_i2s_4750.c	/^	void (*write_mixer)(struct i2s_codec *codec, int oss_channel,$/;"	m	struct:i2s_codec	file:
write_mixer	jz_i2s_dlv_dma_test.c	/^    void (*write_mixer)(struct i2s_codec *codec, int oss_channel,$/;"	m	struct:i2s_codec	file:
write_mixer	jz_i2s_for_4750.c	/^	void (*write_mixer)(struct i2s_codec *codec, int oss_channel,$/;"	m	struct:i2s_codec	file:
write_mixer	jz_pcm_tlv320aic1106_dma.c	/^	void (*write_mixer)(struct pcm_codec *codec, int oss_channel,$/;"	m	struct:pcm_codec	file:
write_mute_to_dma_buffer	jz_i2s_4750.c	/^static void write_mute_to_dma_buffer(signed long l_sample, signed long r_sample)$/;"	f	file:
write_mute_to_dma_buffer	jz_i2s_for_4750.c	/^static void write_mute_to_dma_buffer(signed long l_sample, signed long r_sample)$/;"	f	file:
write_reg	ak4642en.c	/^static void write_reg(u8 reg, u8 val)$/;"	f	file:
write_sq	dmasound/dmasound.h	246;"	d
write_sq_block_size_half	dmasound/dmasound_paula.c	/^static int write_sq_block_size_half, write_sq_block_size_quarter;$/;"	v	file:
write_sq_block_size_quarter	dmasound/dmasound_paula.c	/^static int write_sq_block_size_half, write_sq_block_size_quarter;$/;"	v	file:
write_sq_ignore_int	dmasound/dmasound_atari.c	/^static int write_sq_ignore_int;	\/* ++TeSche: used for Falcon *\/$/;"	v	file:
write_sq_init_waitqueue	dmasound/dmasound_core.c	730;"	d	file:
write_sq_open	dmasound/dmasound_core.c	735;"	d	file:
write_sq_release_buffers	dmasound/dmasound_core.c	734;"	d	file:
write_sq_setup	dmasound/dmasound.h	/^    int (*write_sq_setup)(void);	\/* optional *\/$/;"	m	struct:__anon17
writeblock	msnd.h	/^	wait_queue_head_t writeblock;$/;"	m	struct:multisound_dev
writeflush	msnd.h	/^	wait_queue_head_t writeflush;$/;"	m	struct:multisound_dev
wssbase	aedsp16.c	/^	int wssbase;$/;"	m	struct:d_hcfg	file:
xfer_count	ad1848.c	/^	int             xfer_count;$/;"	m	struct:__anon1	file:
xfer_count	waveartist.c	/^	int		xfer_count;$/;"	m	struct:__anon11	file:
xruns	dmasound/dmasound.h	/^    int busy, syncing, xruns, died;$/;"	m	struct:sound_queue
zero_word	vwsnd.c	/^	unsigned int	zero_word;	\/* zero for the sample format *\/$/;"	m	struct:vwsnd_port	file:
