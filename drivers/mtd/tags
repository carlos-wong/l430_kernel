!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A0	devices/docecc.c	68;"	d	file:
ABORT_ARGP	mtd-utils/ubi-utils/src/pddcustomize.c	62;"	d	file:
ABORT_ARGP	mtd-utils/ubi-utils/src/ubimirror.c	47;"	d	file:
ACTION_CPY	nand/nandsim.c	236;"	d	file:
ACTION_HALFOFF	nand/nandsim.c	240;"	d	file:
ACTION_MASK	nand/nandsim.c	242;"	d	file:
ACTION_OOBOFF	nand/nandsim.c	241;"	d	file:
ACTION_PRGPAGE	nand/nandsim.c	237;"	d	file:
ACTION_SECERASE	nand/nandsim.c	238;"	d	file:
ACTION_ZEROOFF	nand/nandsim.c	239;"	d	file:
ACT_ARGP_ABORT	mtd-utils/ubi-utils/src/pddcustomize.c	/^	ACT_ARGP_ABORT,$/;"	e	enum:action_t	file:
ACT_ARGP_ABORT	mtd-utils/ubi-utils/src/ubimirror.c	/^	ACT_ARGP_ABORT,$/;"	e	enum:action_t	file:
ACT_ARGP_ERR	mtd-utils/ubi-utils/src/pddcustomize.c	/^	ACT_ARGP_ERR,$/;"	e	enum:action_t	file:
ACT_ARGP_ERR	mtd-utils/ubi-utils/src/ubimirror.c	/^	ACT_ARGP_ERR,$/;"	e	enum:action_t	file:
ACT_BROKEN_UPDATE	mtd-utils/ubi-utils/src/ubigen.c	/^	ACT_BROKEN_UPDATE    = 0x00000002,$/;"	e	enum:action_t	file:
ACT_LIST	mtd-utils/ubi-utils/src/pddcustomize.c	/^	ACT_LIST,$/;"	e	enum:action_t	file:
ACT_NORMAL	mtd-utils/ubi-utils/src/bin2nand.c	/^	ACT_NORMAL	    = 0x00000001,$/;"	e	enum:action_t	file:
ACT_NORMAL	mtd-utils/ubi-utils/src/pddcustomize.c	/^	ACT_NORMAL   = 0,$/;"	e	enum:action_t	file:
ACT_NORMAL	mtd-utils/ubi-utils/src/ubigen.c	/^	ACT_NORMAL	     = 0x00000001,$/;"	e	enum:action_t	file:
ACT_NORMAL	mtd-utils/ubi-utils/src/ubimirror.c	/^	ACT_NORMAL = 0,$/;"	e	enum:action_t	file:
ACT_NOTHING	mtd-utils/ubi-utils/src/pfi2bin.c	/^	ACT_NOTHING   = 0x00000000,$/;"	e	enum:action_t	file:
ACT_RAW	mtd-utils/ubi-utils/src/pfi2bin.c	/^	ACT_RAW	   = 0x00000001,$/;"	e	enum:action_t	file:
ADDRESS_NAME_LEN	maps/amd76xrom.c	27;"	d	file:
ADDRESS_NAME_LEN	maps/ck804xrom.c	27;"	d	file:
ADDRESS_NAME_LEN	maps/esb2rom.c	29;"	d	file:
ADDRESS_NAME_LEN	maps/ichxrom.c	25;"	d	file:
ADDR_TO_FLASH_U2	devices/lart.c	223;"	d	file:
ADDR_TO_FLASH_U3	devices/lart.c	249;"	d	file:
ADNP_WINDOW_SIZE	maps/dilnetpc.c	251;"	d	file:
ALAUDA_ACK_XD_MEDIA_CHANGE	nand/alauda.c	26;"	d	file:
ALAUDA_BULK_CMD	nand/alauda.c	30;"	d	file:
ALAUDA_BULK_ERASE_BLOCK	nand/alauda.c	40;"	d	file:
ALAUDA_BULK_READ_BLOCK	nand/alauda.c	39;"	d	file:
ALAUDA_BULK_READ_OOB	nand/alauda.c	38;"	d	file:
ALAUDA_BULK_READ_PAGE	nand/alauda.c	37;"	d	file:
ALAUDA_BULK_RESET_MEDIA	nand/alauda.c	43;"	d	file:
ALAUDA_BULK_WRITE_BLOCK	nand/alauda.c	42;"	d	file:
ALAUDA_BULK_WRITE_PAGE	nand/alauda.c	41;"	d	file:
ALAUDA_GET_XD_MEDIA_SIG	nand/alauda.c	27;"	d	file:
ALAUDA_GET_XD_MEDIA_STATUS	nand/alauda.c	25;"	d	file:
ALAUDA_PORT_SM	nand/alauda.c	34;"	d	file:
ALAUDA_PORT_XD	nand/alauda.c	33;"	d	file:
ALIGNMENTS	mtd-utils/tests/ubi-tests/common.h	77;"	d
AM29DL800BB	chips/jedec_probe.c	43;"	d	file:
AM29DL800BT	chips/jedec_probe.c	44;"	d	file:
AM29F002T	chips/jedec_probe.c	60;"	d	file:
AM29F016D	chips/jedec_probe.c	55;"	d	file:
AM29F017D	chips/jedec_probe.c	54;"	d	file:
AM29F032B	chips/jedec_probe.c	59;"	d	file:
AM29F040	chips/jedec_probe.c	57;"	d	file:
AM29F080	chips/jedec_probe.c	56;"	d	file:
AM29F800BB	chips/jedec_probe.c	46;"	d	file:
AM29F800BT	chips/jedec_probe.c	47;"	d	file:
AM29LV040B	chips/jedec_probe.c	58;"	d	file:
AM29LV160DB	chips/jedec_probe.c	53;"	d	file:
AM29LV160DT	chips/jedec_probe.c	52;"	d	file:
AM29LV400BB	chips/jedec_probe.c	48;"	d	file:
AM29LV400BT	chips/jedec_probe.c	49;"	d	file:
AM29LV800BB	chips/jedec_probe.c	50;"	d	file:
AM29LV800BT	chips/jedec_probe.c	51;"	d	file:
AMD_BOOTLOC_BUG	chips/cfi_cmdset_0002.c	42;"	d	file:
AMD_BUSWIDTH	maps/nettel.c	32;"	d	file:
AMD_WINDOW_MAXSIZE	maps/nettel.c	31;"	d	file:
ANAC	mtd-utils/include/mtd/inftl-user.h	/^	uint8_t ANAC;$/;"	m	struct:inftl_unithead1
ANAC	mtd-utils/include/mtd/inftl-user.h	/^	uint8_t ANAC;$/;"	m	struct:inftl_unithead2
APP_PARTITION_SIZE_KiB	maps/mbx860.c	32;"	d	file:
APP_PARTITION_SIZE_KiB	maps/sbc_gxx.c	82;"	d	file:
AREA_MAXSIZE	maps/bast-flash.c	50;"	d	file:
AREA_MAXSIZE	maps/bast-flash.c	52;"	d	file:
ARRAY_SIZE	mtd-utils/ubi-utils/new-utils/src/common.h	31;"	d
ARRAY_SIZE	mtd-utils/ubi-utils/src/pfi.c	116;"	d	file:
ASCIILINESZ	mtd-utils/ubi-utils/new-utils/src/libiniparser.c	21;"	d	file:
AT29LV512	chips/jedec_probe.c	64;"	d	file:
AT49BV16X	chips/jedec_probe.c	65;"	d	file:
AT49BV16XT	chips/jedec_probe.c	66;"	d	file:
AT49BV32X	chips/jedec_probe.c	67;"	d	file:
AT49BV32XT	chips/jedec_probe.c	68;"	d	file:
AT49BV512	chips/jedec_probe.c	63;"	d	file:
AT49BV6416	chips/cfi_cmdset_0002.c	53;"	d	file:
AUTORESETTING	mtd-utils/tests/jittertest/JitterTest.c	/^        AUTORESETTING$/;"	e	enum:timerActions	file:
AlarmHandler	mtd-utils/tests/jittertest/JitterTest.c	/^void AlarmHandler($/;"	f
AltEUHOffset	mtd-utils/include/mtd/ftl-user.h	/^    u_int32_t	AltEUHOffset;$/;"	m	struct:erase_unit_header_t
B0	devices/docecc.c	43;"	d	file:
B0	devices/docecc.c	47;"	d	file:
BAMOffset	mtd-utils/include/mtd/ftl-user.h	/^    u_int32_t	BAMOffset;$/;"	m	struct:erase_unit_header_t
BANK_WIDTH	maps/sharpsl-flash.c	35;"	d	file:
BBT_PAGE_MASK	nand/nand_base.c	2235;"	d	file:
BIOSID_BASE	maps/dilnetpc.c	59;"	d	file:
BIOS_CNTL	maps/esb2rom.c	33;"	d	file:
BIOS_CNTL	maps/ichxrom.c	29;"	d	file:
BIOS_LOCK_ENABLE	maps/esb2rom.c	34;"	d	file:
BIOS_WRITE_ENABLE	maps/esb2rom.c	35;"	d	file:
BLK_STATE_ALLDIRTY	mtd-utils/summary.h	39;"	d
BLK_STATE_ALLFF	mtd-utils/summary.h	35;"	d
BLK_STATE_BADBLOCK	mtd-utils/summary.h	40;"	d
BLK_STATE_CLEAN	mtd-utils/summary.h	36;"	d
BLK_STATE_CLEANMARKER	mtd-utils/summary.h	38;"	d
BLK_STATE_PARTDIRTY	mtd-utils/summary.h	37;"	d
BLOB_LEN	devices/lart.c	86;"	d	file:
BLOB_START	devices/lart.c	85;"	d	file:
BLOCK_ADDRESS	mtd-utils/include/mtd/ftl-user.h	69;"	d
BLOCK_BAD	mtd-utils/include/mtd/ftl-user.h	74;"	d
BLOCK_CONTROL	mtd-utils/include/mtd/ftl-user.h	71;"	d
BLOCK_DATA	mtd-utils/include/mtd/ftl-user.h	72;"	d
BLOCK_DELETED	mtd-utils/include/mtd/ftl-user.h	66;"	d
BLOCK_ERASED	rfd_ftl.c	/^		BLOCK_ERASED,$/;"	e	enum:block::__anon2	file:
BLOCK_ERASING	rfd_ftl.c	/^		BLOCK_ERASING,$/;"	e	enum:block::__anon2	file:
BLOCK_FAILED	rfd_ftl.c	/^		BLOCK_FAILED$/;"	e	enum:block::__anon2	file:
BLOCK_FREE	mtd-utils/include/mtd/ftl-user.h	65;"	d
BLOCK_NUMBER	mtd-utils/include/mtd/ftl-user.h	70;"	d
BLOCK_OK	rfd_ftl.c	/^		BLOCK_OK,$/;"	e	enum:block::__anon2	file:
BLOCK_REPLACEMENT	mtd-utils/include/mtd/ftl-user.h	73;"	d
BLOCK_SIZE	mtd-utils/jffs-dump.c	17;"	d	file:
BLOCK_SIZE	mtd-utils/tests/fs-tests/stress/atoms/rndwrite00.c	34;"	d	file:
BLOCK_TYPE	mtd-utils/include/mtd/ftl-user.h	68;"	d
BLOCK_UNUSED	rfd_ftl.c	/^		BLOCK_UNUSED,$/;"	e	enum:block::__anon2	file:
BOARD_FLASH_SIZE	maps/alchemy-flash.c	20;"	d	file:
BOARD_FLASH_SIZE	maps/alchemy-flash.c	26;"	d	file:
BOARD_FLASH_SIZE	maps/alchemy-flash.c	32;"	d	file:
BOARD_FLASH_SIZE	maps/alchemy-flash.c	38;"	d	file:
BOARD_FLASH_SIZE	maps/alchemy-flash.c	44;"	d	file:
BOARD_FLASH_SIZE	maps/alchemy-flash.c	50;"	d	file:
BOARD_FLASH_SIZE	maps/alchemy-flash.c	56;"	d	file:
BOARD_FLASH_SIZE	maps/alchemy-flash.c	62;"	d	file:
BOARD_FLASH_SIZE	maps/alchemy-flash.c	68;"	d	file:
BOARD_FLASH_SIZE	maps/alchemy-flash.c	74;"	d	file:
BOARD_FLASH_SIZE	maps/alchemy-flash.c	80;"	d	file:
BOARD_FLASH_SIZE	maps/alchemy-flash.c	86;"	d	file:
BOARD_FLASH_WIDTH	maps/alchemy-flash.c	21;"	d	file:
BOARD_FLASH_WIDTH	maps/alchemy-flash.c	27;"	d	file:
BOARD_FLASH_WIDTH	maps/alchemy-flash.c	33;"	d	file:
BOARD_FLASH_WIDTH	maps/alchemy-flash.c	39;"	d	file:
BOARD_FLASH_WIDTH	maps/alchemy-flash.c	45;"	d	file:
BOARD_FLASH_WIDTH	maps/alchemy-flash.c	51;"	d	file:
BOARD_FLASH_WIDTH	maps/alchemy-flash.c	57;"	d	file:
BOARD_FLASH_WIDTH	maps/alchemy-flash.c	63;"	d	file:
BOARD_FLASH_WIDTH	maps/alchemy-flash.c	69;"	d	file:
BOARD_FLASH_WIDTH	maps/alchemy-flash.c	75;"	d	file:
BOARD_FLASH_WIDTH	maps/alchemy-flash.c	81;"	d	file:
BOARD_FLASH_WIDTH	maps/alchemy-flash.c	87;"	d	file:
BOARD_MAP_NAME	maps/alchemy-flash.c	19;"	d	file:
BOARD_MAP_NAME	maps/alchemy-flash.c	25;"	d	file:
BOARD_MAP_NAME	maps/alchemy-flash.c	31;"	d	file:
BOARD_MAP_NAME	maps/alchemy-flash.c	37;"	d	file:
BOARD_MAP_NAME	maps/alchemy-flash.c	43;"	d	file:
BOARD_MAP_NAME	maps/alchemy-flash.c	49;"	d	file:
BOARD_MAP_NAME	maps/alchemy-flash.c	55;"	d	file:
BOARD_MAP_NAME	maps/alchemy-flash.c	61;"	d	file:
BOARD_MAP_NAME	maps/alchemy-flash.c	67;"	d	file:
BOARD_MAP_NAME	maps/alchemy-flash.c	73;"	d	file:
BOARD_MAP_NAME	maps/alchemy-flash.c	79;"	d	file:
BOARD_MAP_NAME	maps/alchemy-flash.c	85;"	d	file:
BOOTENV_EBADENTRY	mtd-utils/ubi-utils/src/bootenv.h	103;"	d
BOOTENV_ECOPY	mtd-utils/ubi-utils/src/bootenv.h	108;"	d
BOOTENV_EFMT	mtd-utils/ubi-utils/src/bootenv.h	102;"	d
BOOTENV_EINVAL	mtd-utils/ubi-utils/src/bootenv.h	104;"	d
BOOTENV_EMAX	mtd-utils/ubi-utils/src/bootenv.h	110;"	d
BOOTENV_ENOPDD	mtd-utils/ubi-utils/src/bootenv.h	105;"	d
BOOTENV_ENOTFOUND	mtd-utils/ubi-utils/src/bootenv.h	109;"	d
BOOTENV_ENOTIMPL	mtd-utils/ubi-utils/src/bootenv.h	107;"	d
BOOTENV_EPDDINVAL	mtd-utils/ubi-utils/src/bootenv.h	106;"	d
BOOTENV_ETOOBIG	mtd-utils/ubi-utils/src/bootenv.h	101;"	d
BOOTENV_MAXLINE	mtd-utils/ubi-utils/src/bootenv.c	38;"	d	file:
BOOTENV_MAXSIZE	mtd-utils/ubi-utils/src/bootenv.h	77;"	d
BOOTENV_W	mtd-utils/ubi-utils/src/bootenv.h	121;"	d
BOOTENV_WMAX	mtd-utils/ubi-utils/src/bootenv.h	123;"	d
BOOTENV_WPDD_STRING_DIFFERS	mtd-utils/ubi-utils/src/bootenv.h	122;"	d
BOOTIMAGE_PART_SIZE	maps/dmv182.c	52;"	d	file:
BOOT_PARTITION_SIZE_KiB	maps/ceiva.c	59;"	d	file:
BOOT_PARTITION_SIZE_KiB	maps/mbx860.c	30;"	d	file:
BOOT_PARTITION_SIZE_KiB	maps/sbc_gxx.c	80;"	d	file:
BROKEN_DATA_CRC	mtd-utils/ubi-utils/src/ubigen.h	/^	BROKEN_DATA_CRC	 = 0x00000002,$/;"	e	enum:action
BROKEN_DATA_SIZE	mtd-utils/ubi-utils/src/ubigen.h	/^	BROKEN_DATA_SIZE = 0x00000004,$/;"	e	enum:action
BROKEN_HDR_CRC	mtd-utils/ubi-utils/src/ubigen.h	/^	BROKEN_HDR_CRC	 = 0x00000001,$/;"	e	enum:action
BROKEN_OMIT_BLK	mtd-utils/ubi-utils/src/ubigen.h	/^	BROKEN_OMIT_BLK	 = 0x00000008,$/;"	e	enum:action
BUFFER_SIZE	mtd-utils/tests/fs-tests/integrity/integck.c	468;"	d	file:
BUFFER_SIZE	mtd-utils/tests/fs-tests/stress/atoms/rndwrite00.c	35;"	d	file:
BUFSIZE	mtd-utils/flashcp.c	64;"	d	file:
BUFSIZE	mtd-utils/ubi-utils/new-utils/src/ubicrc32.c	35;"	d	file:
BUFSIZE	mtd-utils/ubi-utils/src/bin2nand.c	68;"	d	file:
BUF_SIZE	mtd-utils/mtd_debug.c	123;"	d	file:
BUF_SIZE	mtd-utils/ubi-utils/new-utils/src/ubicrcsf.c	42;"	d	file:
BUILDDIR	mtd-utils/Makefile	/^  BUILDDIR := .#$(CROSS:-=)$/;"	m
BUILDDIR	mtd-utils/Makefile	/^  BUILDDIR := .$/;"	m
BUSWIDTH	devices/lart.c	80;"	d	file:
BUSWIDTH	maps/edb7312.c	27;"	d	file:
BUSWIDTH	maps/impa7.c	30;"	d	file:
BUSWIDTH	maps/l440gx.c	21;"	d	file:
BUSWIDTH0	maps/sbc8240.c	45;"	d	file:
BUSWIDTH1	maps/sbc8240.c	49;"	d	file:
BYTE0	maps/ixp4xx.c	71;"	d	file:
BYTE0	maps/ixp4xx.c	86;"	d	file:
BYTE1	maps/ixp4xx.c	72;"	d	file:
BYTE1	maps/ixp4xx.c	87;"	d	file:
BadUnitTable	mtd-utils/nftl_format.c	/^unsigned char BadUnitTable[MAX_ERASE_ZONES];$/;"	v
BadUnitTable	mtd-utils/nftldump.c	/^static unsigned char BadUnitTable[MAX_ERASE_ZONES];$/;"	v	file:
BlockId	udc_cache.c	/^	unsigned int BlockId;$/;"	m	struct:__anon27	file:
BlockMultiplierBits	mtd-utils/include/mtd/inftl-user.h	/^	__u32 BlockMultiplierBits;$/;"	m	struct:INFTLMediaHeader
BlockSize	mtd-utils/include/mtd/ftl-user.h	/^    u_int8_t	BlockSize;$/;"	m	struct:erase_unit_header_t
BlocksPerUnit	ftl.c	/^    u_int32_t		BlocksPerUnit;$/;"	m	struct:partition_t	file:
CACHE_MAX_NUM	udc_cache.c	16;"	d	file:
CACHE_TO_UNCATCH	udc_cache.c	41;"	d	file:
CAFE_GLOBAL_CTRL	nand/cafe_nand.c	45;"	d	file:
CAFE_GLOBAL_IRQ	nand/cafe_nand.c	46;"	d	file:
CAFE_GLOBAL_IRQ_MASK	nand/cafe_nand.c	47;"	d	file:
CAFE_NAND_ADDR1	nand/cafe_nand.c	28;"	d	file:
CAFE_NAND_ADDR2	nand/cafe_nand.c	29;"	d	file:
CAFE_NAND_CTRL1	nand/cafe_nand.c	21;"	d	file:
CAFE_NAND_CTRL2	nand/cafe_nand.c	22;"	d	file:
CAFE_NAND_CTRL3	nand/cafe_nand.c	23;"	d	file:
CAFE_NAND_DATA_LEN	nand/cafe_nand.c	27;"	d	file:
CAFE_NAND_DMA_ADDR0	nand/cafe_nand.c	36;"	d	file:
CAFE_NAND_DMA_ADDR1	nand/cafe_nand.c	37;"	d	file:
CAFE_NAND_DMA_CTRL	nand/cafe_nand.c	35;"	d	file:
CAFE_NAND_ECC_RESULT	nand/cafe_nand.c	34;"	d	file:
CAFE_NAND_ECC_SYN01	nand/cafe_nand.c	38;"	d	file:
CAFE_NAND_ECC_SYN23	nand/cafe_nand.c	39;"	d	file:
CAFE_NAND_ECC_SYN45	nand/cafe_nand.c	40;"	d	file:
CAFE_NAND_ECC_SYN67	nand/cafe_nand.c	41;"	d	file:
CAFE_NAND_IRQ	nand/cafe_nand.c	25;"	d	file:
CAFE_NAND_IRQ_MASK	nand/cafe_nand.c	26;"	d	file:
CAFE_NAND_NONMEM	nand/cafe_nand.c	33;"	d	file:
CAFE_NAND_READ_DATA	nand/cafe_nand.c	42;"	d	file:
CAFE_NAND_RESET	nand/cafe_nand.c	48;"	d	file:
CAFE_NAND_STATUS	nand/cafe_nand.c	24;"	d	file:
CAFE_NAND_TIMING1	nand/cafe_nand.c	30;"	d	file:
CAFE_NAND_TIMING2	nand/cafe_nand.c	31;"	d	file:
CAFE_NAND_TIMING3	nand/cafe_nand.c	32;"	d	file:
CAFE_NAND_WRITE_DATA	nand/cafe_nand.c	43;"	d	file:
CAP_CS5535	nand/cs553x_nand.c	34;"	d	file:
CAP_CS5536	nand/cs553x_nand.c	35;"	d	file:
CC	mtd-utils/Makefile	/^CC := $(CROSS)gcc$/;"	m
CC	mtd-utils/tests/fs-tests/integrity/Makefile	/^CC = gcc$/;"	m
CC	mtd-utils/tests/fs-tests/lib/Makefile	/^CC = gcc$/;"	m
CC	mtd-utils/tests/fs-tests/simple/Makefile	/^CC = gcc$/;"	m
CC	mtd-utils/tests/fs-tests/stress/atoms/Makefile	/^CC = gcc$/;"	m
CC	mtd-utils/tests/fs-tests/utils/Makefile	/^CC = gcc$/;"	m
CC	mtd-utils/tests/jittertest/Makefile	/^CC=gcc$/;"	m
CC	mtd-utils/tests/ubi-tests/Makefile	/^CC := $(CROSS)gcc$/;"	m
CC	mtd-utils/ubi-utils/Makefile	/^CC := $(CROSS)gcc$/;"	m
CC	mtd-utils/ubi-utils/new-utils/Makefile	/^CC := $(CROSS)gcc$/;"	m
CCFLAGS	mtd-utils/tests/jittertest/Makefile	/^CCFLAGS=-O3 -Wall -m486 -fomit-frame-pointer$/;"	m
CDSNControl	nand/diskonchip.c	/^	u_char CDSNControl;$/;"	m	struct:doc_priv	file:
CDSN_CTRL_FR_B_MASK	devices/doc2001plus.c	60;"	d	file:
CDSN_CTRL_FR_B_MASK	nand/diskonchip.c	242;"	d	file:
CDSN_CTRL_MSK	nand/diskonchip.c	697;"	d	file:
CFLAGS	mtd-utils/Makefile	/^CFLAGS := -I.\/include $(OPTFLAGS)$/;"	m
CFLAGS	mtd-utils/tests/fs-tests/integrity/Makefile	/^CFLAGS := $(CFLAGS) -Wall -g -O2 -I..\/lib$/;"	m
CFLAGS	mtd-utils/tests/fs-tests/lib/Makefile	/^CFLAGS := $(CFLAGS) -Wall -g -O2$/;"	m
CFLAGS	mtd-utils/tests/fs-tests/simple/Makefile	/^CFLAGS := $(CFLAGS) -Wall -g -O2 -I..\/lib$/;"	m
CFLAGS	mtd-utils/tests/fs-tests/stress/atoms/Makefile	/^CFLAGS := $(CFLAGS) -Wall -g -O2 -I..\/..\/lib$/;"	m
CFLAGS	mtd-utils/tests/fs-tests/utils/Makefile	/^CFLAGS := $(CFLAGS) -Wall -g -O2 -I..\/lib$/;"	m
CFLAGS	mtd-utils/ubi-utils/Makefile	/^CFLAGS := -I.\/inc -I.\/src -I$(KERNELHDR) $(OPTFLAGS) -Werror \\$/;"	m
CFLAGS	mtd-utils/ubi-utils/new-utils/Makefile	/^CFLAGS := -Iinclude -Isrc -I$(KERNELHDR) $(OPTFLAGS) -Werror -Wall$/;"	m
CHECK	mtd-utils/tests/fs-tests/lib/tests.h	27;"	d
CHECK_ENDP	mtd-utils/ubi-utils/src/bin2nand.c	52;"	d	file:
CHECK_ENDP	mtd-utils/ubi-utils/src/ubigen.c	115;"	d	file:
CLEAR	devices/docecc.c	83;"	d	file:
CMDLINE_HELPLONG	mtd-utils/tests/checkfs/checkfs.c	102;"	d	file:
CMDLINE_HELPSHORT	mtd-utils/tests/checkfs/checkfs.c	101;"	d	file:
CMDLINE_MAXERROR	mtd-utils/tests/checkfs/checkfs.c	100;"	d	file:
CMDLINE_MAXFILEBYTES	mtd-utils/tests/checkfs/checkfs.c	99;"	d	file:
CMDLINE_PORT	mtd-utils/tests/checkfs/checkfs.c	98;"	d	file:
COMPARE_BUFFER_SIZE	mtd-utils/ubi-utils/src/libpfiflash.c	60;"	d	file:
COMPARE_BUF_SIZE	mtd-utils/ubi-utils/src/libubimirror.c	29;"	d	file:
CONCAT	mtdconcat.c	47;"	d	file:
CONFIG_DATAFLASH_WRITE_VERIFY	devices/mtd_dataflash.c	35;"	d	file:
CONFIG_JFFS2_LZO	mtd-utils/compr.h	21;"	d
CONFIG_JFFS2_RTIME	mtd-utils/compr.h	20;"	d
CONFIG_JFFS2_ZLIB	mtd-utils/compr.h	19;"	d
CONFIG_MTD_CEIVA_STATICMAP	maps/ceiva.c	37;"	d	file:
CONFIG_MTD_DOCPROBE_ADDRESS	devices/docprobe.c	59;"	d	file:
CONFIG_MTD_NAND_DISKONCHIP_PROBE_ADDRESS	nand/diskonchip.c	39;"	d	file:
CONFIG_NANDSIM_ACCESS_DELAY	nand/nandsim.c	55;"	d	file:
CONFIG_NANDSIM_BUS_WIDTH	nand/nandsim.c	70;"	d	file:
CONFIG_NANDSIM_DBG	nand/nandsim.c	79;"	d	file:
CONFIG_NANDSIM_DO_DELAYS	nand/nandsim.c	73;"	d	file:
CONFIG_NANDSIM_ERASE_DELAY	nand/nandsim.c	61;"	d	file:
CONFIG_NANDSIM_FIRST_ID_BYTE	nand/nandsim.c	48;"	d	file:
CONFIG_NANDSIM_FOURTH_ID_BYTE	nand/nandsim.c	51;"	d	file:
CONFIG_NANDSIM_INPUT_CYCLE	nand/nandsim.c	67;"	d	file:
CONFIG_NANDSIM_LOG	nand/nandsim.c	76;"	d	file:
CONFIG_NANDSIM_OUTPUT_CYCLE	nand/nandsim.c	64;"	d	file:
CONFIG_NANDSIM_PROGRAMM_DELAY	nand/nandsim.c	58;"	d	file:
CONFIG_NANDSIM_SECOND_ID_BYTE	nand/nandsim.c	49;"	d	file:
CONFIG_NANDSIM_THIRD_ID_BYTE	nand/nandsim.c	50;"	d	file:
CONFIG_NAND_WORKAROUND	nand/toto.c	35;"	d	file:
CONFIG_ONENAND_SIM_DEVICE_ID	onenand/onenand_sim.c	28;"	d	file:
CONFIG_ONENAND_SIM_MANUFACTURER	onenand/onenand_sim.c	25;"	d	file:
CONFIG_ONENAND_SIM_VERSION_ID	onenand/onenand_sim.c	31;"	d	file:
CONTACT	mtd-utils/ubi-utils/src/unubi.c	59;"	d	file:
COPY	devices/docecc.c	89;"	d	file:
COPY	mtd-utils/ubi-utils/src/eb_chain.c	33;"	d	file:
COPYDOWN	devices/docecc.c	95;"	d	file:
CORRUPT_EC	mtd-utils/ubi-utils/new-utils/include/libscan.h	42;"	d
CRC32_H	mtd-utils/crc32.h	2;"	d
CRC32_H	mtd-utils/ubi-utils/new-utils/src/crc32.h	2;"	d
CRC_POLY	mtd-utils/ubi-utils/src/crc32.c	34;"	d	file:
CROSS	mtd-utils/Makefile	/^CROSS=mipsel-linux-$/;"	m
CROSS	mtd-utils/ubi-utils/Makefile	/^CROSS=mipsel-linux-$/;"	m
CROSS	mtd-utils/ubi-utils/new-utils/Makefile	/^CROSS=mipsel-linux-$/;"	m
CS0_SIZE	maps/intel_vr_nor.c	55;"	d	file:
CS0_START	maps/intel_vr_nor.c	57;"	d	file:
CSB5_FCR	maps/scb2_flash.c	134;"	d	file:
CSB5_FCR_DECODE_ALL	maps/scb2_flash.c	135;"	d	file:
CSC_CR	maps/dilnetpc.c	80;"	d	file:
CSC_DATA	maps/dilnetpc.c	73;"	d	file:
CSC_INDEX	maps/dilnetpc.c	72;"	d	file:
CSC_MMSWAR	maps/dilnetpc.c	75;"	d	file:
CSC_MMSWDSR	maps/dilnetpc.c	76;"	d	file:
CSC_PCCMDCR	maps/dilnetpc.c	83;"	d	file:
CSC_RBWR	maps/dilnetpc.c	78;"	d	file:
CS_CHECK	maps/pcmciamtd.c	487;"	d	file:
CS_NAND_CMD_COMP	nand/cs553x_nand.c	88;"	d	file:
CS_NAND_CTLR_BUSY	nand/cs553x_nand.c	87;"	d	file:
CS_NAND_CTL_ALE	nand/cs553x_nand.c	82;"	d	file:
CS_NAND_CTL_CE	nand/cs553x_nand.c	84;"	d	file:
CS_NAND_CTL_CLE	nand/cs553x_nand.c	83;"	d	file:
CS_NAND_CTL_DIST_EN	nand/cs553x_nand.c	80;"	d	file:
CS_NAND_CTL_RDY_INT_MASK	nand/cs553x_nand.c	81;"	d	file:
CS_NAND_DIST_ST	nand/cs553x_nand.c	89;"	d	file:
CS_NAND_ECC_CLRECC	nand/cs553x_nand.c	92;"	d	file:
CS_NAND_ECC_ENECC	nand/cs553x_nand.c	93;"	d	file:
CS_NAND_ECC_PARITY	nand/cs553x_nand.c	91;"	d	file:
CS_NAND_STS_FLASH_RDY	nand/cs553x_nand.c	86;"	d	file:
CTRL1_CHIPSELECT	nand/cafe_nand.c	51;"	d	file:
CTRL_DEV	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	45;"	d
CacheChange	udc_cache.c	/^	unsigned short  CacheChange;$/;"	m	struct:__anon27	file:
CacheReserve	udc_cache.c	/^	unsigned short  CacheReserve;	$/;"	m	struct:__anon27	file:
CacheState	udc_cache.c	/^	unsigned short  CacheState;$/;"	m	struct:__anon27	file:
Cfd	mtd-utils/tests/jittertest/JitterTest.c	/^static int Cfd;                        \/* fd to console (or file specified) *\/$/;"	v	file:
ChipID	nand/diskonchip.c	/^	u_char ChipID;$/;"	m	struct:doc_priv	file:
CmdSet	chips/jedec_probe.c	/^	const int CmdSet;$/;"	m	struct:amd_flash_info	file:
Code	mtd-utils/include/mtd/ftl-user.h	/^    u_int8_t	Code;$/;"	m	struct:erase_unit_header_t
Cur_CacheCount	udc_cache.c	/^static unsigned short Cur_CacheCount = 0;$/;"	v	file:
CurrTimeVal	mtd-utils/tests/jittertest/JitterTest.c	/^static struct timeval CurrTimeVal;     \/* current time structure      *\/$/;"	v	typeref:struct:timeval	file:
CycleCount	mtd-utils/tests/checkfs/checkfs.c	/^int CycleCount;$/;"	v
DATA_PARTITION_SIZE_KiB	maps/sbc_gxx.c	81;"	d	file:
DATA_TO_FLASH	devices/lart.c	147;"	d	file:
DBG_DISABLE_BGT	ubi/debug.h	35;"	d
DBG_DISABLE_BGT	ubi/debug.h	37;"	d
DDB	mtd-utils/fec.c	68;"	d	file:
DDB	mtd-utils/fec.c	99;"	d	file:
DEB	mtd-utils/fec.c	67;"	d	file:
DEB	mtd-utils/fec.c	98;"	d	file:
DEBUG	maps/pcmciamtd.c	33;"	d	file:
DEBUG	maps/pcmciamtd.c	34;"	d	file:
DEBUG	maps/pcmciamtd.c	40;"	d	file:
DEBUG	maps/pcmciamtd.c	41;"	d	file:
DEBUG	maps/sbc8240.c	34;"	d	file:
DEBUG	mtd-utils/fec.c	69;"	d	file:
DEBUG	mtd-utils/flashcp.c	53;"	d	file:
DEBUG	mtd-utils/flashcp.c	54;"	d	file:
DEBUG	mtd-utils/flashcp.c	56;"	d	file:
DEBUG	mtd-utils/flashcp.c	57;"	d	file:
DEBUG	mtd-utils/ubi-utils/src/pfiflash.c	43;"	d	file:
DEBUG	nand/cafe_nand.c	11;"	d	file:
DEBUG	nand/cafe_nand.c	8;"	d	file:
DEBUG	nand/s3c2410.c	41;"	d	file:
DEBUG1	nand/jz4750_nand.c	36;"	d	file:
DEBUG_ECC	devices/docecc.c	41;"	d	file:
DEBUG_MARKER	maps/pmcmsp-flash.c	49;"	d	file:
DEFAULT_BLOCKSIZE	mtd-utils/ubi-utils/src/ubigen.h	33;"	d
DEFAULT_BUCKETS	mtd-utils/ubi-utils/src/hashmap.c	27;"	d	file:
DEFAULT_DEV_PATTERN	mtd-utils/ubi-utils/src/libpfiflash.c	62;"	d	file:
DEFAULT_DEV_PATTERN	mtd-utils/ubi-utils/src/libubimirror.c	31;"	d	file:
DEFAULT_DEV_PATTERN	mtd-utils/ubi-utils/src/pddcustomize.c	52;"	d	file:
DEFAULT_ERASE_COUNT	mtd-utils/ubi-utils/src/pfi2bin.c	52;"	d	file:
DEFAULT_NUM_PARTITIONS	nand/sharpsl.c	57;"	d	file:
DEFAULT_PAGESIZE	mtd-utils/ubi-utils/src/ubigen.h	34;"	d
DEFAULT_VID_OFFSET	mtd-utils/ubi-utils/src/libubigen.c	36;"	d	file:
DEFAULT_VOL_PATTERN	mtd-utils/ubi-utils/src/libpfiflash.c	63;"	d	file:
DEFAULT_VOL_PATTERN	mtd-utils/ubi-utils/src/libubimirror.c	32;"	d	file:
DEFAULT_VOL_PATTERN	mtd-utils/ubi-utils/src/pddcustomize.c	53;"	d	file:
DEFAULT_WRITE_BYTES	mtd-utils/tests/jittertest/JitterTest.c	133;"	d	file:
DEF_INT_PERIOD_MILLISEC	mtd-utils/tests/jittertest/JitterTest.c	124;"	d	file:
DEF_WINDOW_ADDR_PHY	maps/fortunet.c	21;"	d	file:
DEF_WINDOW_SIZE	maps/fortunet.c	22;"	d	file:
DESTDIR	mtd-utils/ubi-utils/Makefile	/^DESTDIR := \/usr\/local$/;"	m
DESTDIR	mtd-utils/ubi-utils/new-utils/Makefile	/^DESTDIR := \/nfsroot\/user\/yrtan$/;"	m
DEVICE_ENABLE	maps/sbc_gxx.c	75;"	d	file:
DEV_AVAIL_EBS	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	51;"	d
DEV_AVAIL_EBS	mtd-utils/ubi-utils/src/libubi_int.h	40;"	d
DEV_BAD_COUNT	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	53;"	d
DEV_BAD_COUNT	mtd-utils/ubi-utils/src/libubi_int.h	42;"	d
DEV_DEV	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	50;"	d
DEV_DEV	mtd-utils/ubi-utils/src/libubi_int.h	38;"	d
DEV_EB_SIZE	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	54;"	d
DEV_EB_SIZE	mtd-utils/ubi-utils/src/libubi_int.h	43;"	d
DEV_MAX_EC	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	55;"	d
DEV_MAX_EC	mtd-utils/ubi-utils/src/libubi_int.h	44;"	d
DEV_MAX_RSVD	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	56;"	d
DEV_MAX_RSVD	mtd-utils/ubi-utils/src/libubi_int.h	45;"	d
DEV_MAX_VOLS	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	57;"	d
DEV_MAX_VOLS	mtd-utils/ubi-utils/src/libubi_int.h	46;"	d
DEV_MIN_IO_SIZE	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	58;"	d
DEV_MIN_IO_SIZE	mtd-utils/ubi-utils/src/libubi_int.h	47;"	d
DEV_MTD_NUM	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	59;"	d
DEV_REMOVED	maps/pcmciamtd.c	241;"	d	file:
DEV_TOTAL_EBS	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	52;"	d
DEV_TOTAL_EBS	mtd-utils/ubi-utils/src/libubi_int.h	41;"	d
DICTMINSZ	mtd-utils/ubi-utils/new-utils/src/dictionary.c	33;"	d	file:
DICT_INVALID_KEY	mtd-utils/ubi-utils/new-utils/src/dictionary.c	36;"	d	file:
DIFF_T	mtd-utils/fec.c	76;"	d	file:
DIFF_T	mtd-utils/fec.c	81;"	d	file:
DIRENT_INO	mtd-utils/jffs2reader.c	91;"	d	file:
DIRENT_PINO	mtd-utils/jffs2reader.c	92;"	d	file:
DIRTY_SPACE	mtd-utils/summary.h	18;"	d
DIR_FMT	mtd-utils/ubi-utils/src/unubi.c	112;"	d	file:
DIV_DS_BCH	nand/jz4750_nand.c	34;"	d	file:
DIV_DS_NAND	nand/jz4750_nand.c	31;"	d	file:
DMAC_DCMD_DS_BCH	nand/jz4750_nand.c	33;"	d	file:
DMAC_DCMD_DS_NAND	nand/jz4750_nand.c	30;"	d	file:
DMA_CHANNEL	udc_cache.c	61;"	d	file:
DMA_ENABLE	udc_cache.c	58;"	d	file:
DNPC_BIOS_BLOCKS_WRITEPROTECTED	maps/dilnetpc.c	53;"	d	file:
DNP_WINDOW_SIZE	maps/dilnetpc.c	250;"	d	file:
DOC_SINGLE_DRIVER	devices/docprobe.c	41;"	d	file:
DOC_SUPPORT_2000	devices/doc2000.c	28;"	d	file:
DOC_SUPPORT_2000TSOP	devices/doc2000.c	29;"	d	file:
DOC_SUPPORT_MILLENNIUM	devices/doc2000.c	30;"	d	file:
DOUBLE_BAI	mtd-utils/include/mtd/ftl-user.h	61;"	d
DO_XXLOCK_ONEBLOCK_LOCK	chips/cfi_cmdset_0001.c	1892;"	d	file:
DO_XXLOCK_ONEBLOCK_UNLOCK	chips/cfi_cmdset_0001.c	1893;"	d	file:
DPRINTK	onenand/onenand_sim.c	83;"	d	file:
DRAIN_WB	nand/cmx270_nand.c	40;"	d	file:
DRIVER_DESC	maps/pcmciamtd.c	/^MODULE_DESCRIPTION(DRIVER_DESC);$/;"	v
DRIVER_DESC	maps/pcmciamtd.c	50;"	d	file:
DRIVER_NAME	onenand/generic.c	/^MODULE_ALIAS(DRIVER_NAME);$/;"	v
DRIVER_NAME	onenand/generic.c	26;"	d	file:
DRIVER_VERSION	maps/pcmciamtd.c	51;"	d	file:
DROPS	mtd-utils/fectest.c	16;"	d	file:
DRV_AUTHOR	nand/bf5xx_nand.c	/^MODULE_AUTHOR(DRV_AUTHOR);$/;"	v
DRV_AUTHOR	nand/bf5xx_nand.c	68;"	d	file:
DRV_DESC	nand/bf5xx_nand.c	/^MODULE_DESCRIPTION(DRV_DESC);$/;"	v
DRV_DESC	nand/bf5xx_nand.c	69;"	d	file:
DRV_NAME	maps/intel_vr_nor.c	40;"	d	file:
DRV_NAME	nand/bf5xx_nand.c	66;"	d	file:
DRV_VERSION	nand/bf5xx_nand.c	67;"	d	file:
DataOrg	mtd-utils/ftl_format.c	/^static const char DataOrg[] = {$/;"	v	file:
DataOrgID	mtd-utils/include/mtd/nftl-user.h	/^	char DataOrgID[6];$/;"	m	struct:NFTLMediaHeader
DataOrgTuple	mtd-utils/include/mtd/ftl-user.h	/^    u_int8_t	DataOrgTuple[10];$/;"	m	struct:erase_unit_header_t
DataUnits	ftl.c	/^    u_int16_t		DataUnits;$/;"	m	struct:partition_t	file:
Debug	mtd-utils/tests/jittertest/plotJittervsFill.c	/^static int Debug = 0; \/* Debug level. Each "-d" on the cmd line increases the level *\/$/;"	v	file:
Deleted	ftl.c	/^	u_int32_t		Deleted;$/;"	m	struct:partition_t::eun_info_t	file:
DevSize	chips/jedec_probe.c	/^	const int DevSize;$/;"	m	struct:amd_flash_info	file:
DoC2k_init	devices/doc2000.c	/^EXPORT_SYMBOL_GPL(DoC2k_init);$/;"	v
DoC2k_init	devices/doc2000.c	/^void DoC2k_init(struct mtd_info *mtd)$/;"	f
DoC2k_is_alias	devices/doc2000.c	/^static int DoC2k_is_alias(struct DiskOnChip *doc1, struct DiskOnChip *doc2)$/;"	f	file:
DoCMilPlus_init	devices/doc2001plus.c	/^EXPORT_SYMBOL_GPL(DoCMilPlus_init);$/;"	v
DoCMilPlus_init	devices/doc2001plus.c	/^void DoCMilPlus_init(struct mtd_info *mtd)$/;"	f
DoCMilPlus_is_alias	devices/doc2001plus.c	/^static int DoCMilPlus_is_alias(struct DiskOnChip *doc1, struct DiskOnChip *doc2)$/;"	f	file:
DoCMil_init	devices/doc2001.c	/^EXPORT_SYMBOL_GPL(DoCMil_init);$/;"	v
DoCMil_init	devices/doc2001.c	/^void DoCMil_init(struct mtd_info *mtd)$/;"	f
DoCMil_is_alias	devices/doc2001.c	/^static int DoCMil_is_alias(struct DiskOnChip *doc1, struct DiskOnChip *doc2)$/;"	f	file:
DoC_Address	devices/doc2000.c	/^static int DoC_Address(struct DiskOnChip *doc, int numbytes, unsigned long ofs,$/;"	f	file:
DoC_Address	devices/doc2001.c	/^static inline void DoC_Address(void __iomem * docptr, int numbytes, unsigned long ofs,$/;"	f	file:
DoC_Address	devices/doc2001plus.c	/^static inline void DoC_Address(struct DiskOnChip *doc, int numbytes,$/;"	f	file:
DoC_CheckASIC	devices/doc2001plus.c	/^static inline void DoC_CheckASIC(void __iomem * docptr)$/;"	f	file:
DoC_Command	devices/doc2000.c	/^static int DoC_Command(struct DiskOnChip *doc, unsigned char command,$/;"	f	file:
DoC_Command	devices/doc2001.c	/^static void DoC_Command(void __iomem * docptr, unsigned char command,$/;"	f	file:
DoC_Command	devices/doc2001plus.c	/^static void DoC_Command(void __iomem * docptr, unsigned char command,$/;"	f	file:
DoC_Delay	devices/doc2000.c	/^static void DoC_Delay(struct DiskOnChip *doc, unsigned short cycles)$/;"	f	file:
DoC_Delay	devices/doc2001.c	/^static void DoC_Delay(void __iomem * docptr, unsigned short cycles)$/;"	f	file:
DoC_Delay	devices/doc2001plus.c	/^static void DoC_Delay(void __iomem * docptr, int cycles)$/;"	f	file:
DoC_Delay	nand/diskonchip.c	/^static void DoC_Delay(struct doc_priv *doc, unsigned short cycles)$/;"	f	file:
DoC_GetDataOffset	devices/doc2001plus.c	/^static unsigned int DoC_GetDataOffset(struct mtd_info *mtd, loff_t *from)$/;"	f	file:
DoC_GetECCOffset	devices/doc2001plus.c	/^static unsigned int DoC_GetECCOffset(struct mtd_info *mtd, loff_t *from)$/;"	f	file:
DoC_GetFlagsOffset	devices/doc2001plus.c	/^static unsigned int DoC_GetFlagsOffset(struct mtd_info *mtd, loff_t *from)$/;"	f	file:
DoC_GetHdrOffset	devices/doc2001plus.c	/^static unsigned int DoC_GetHdrOffset(struct mtd_info *mtd, loff_t *from)$/;"	f	file:
DoC_IdentChip	devices/doc2000.c	/^static int DoC_IdentChip(struct DiskOnChip *doc, int floor, int chip)$/;"	f	file:
DoC_IdentChip	devices/doc2001.c	/^static int DoC_IdentChip(struct DiskOnChip *doc, int floor, int chip)$/;"	f	file:
DoC_IdentChip	devices/doc2001plus.c	/^static int DoC_IdentChip(struct DiskOnChip *doc, int floor, int chip)$/;"	f	file:
DoC_Probe	devices/docprobe.c	/^static void __init DoC_Probe(unsigned long physadr)$/;"	f	file:
DoC_ReadBuf	devices/doc2000.c	/^static void DoC_ReadBuf(struct DiskOnChip *doc, u_char * buf, int len)$/;"	f	file:
DoC_ScanChips	devices/doc2000.c	/^static void DoC_ScanChips(struct DiskOnChip *this, int maxchips)$/;"	f	file:
DoC_ScanChips	devices/doc2001.c	/^static void DoC_ScanChips(struct DiskOnChip *this)$/;"	f	file:
DoC_ScanChips	devices/doc2001plus.c	/^static void DoC_ScanChips(struct DiskOnChip *this)$/;"	f	file:
DoC_SelectChip	devices/doc2000.c	/^static inline int DoC_SelectChip(struct DiskOnChip *doc, int chip)$/;"	f	file:
DoC_SelectChip	devices/doc2001.c	/^static int DoC_SelectChip(void __iomem * docptr, int chip)$/;"	f	file:
DoC_SelectChip	devices/doc2001plus.c	/^static int DoC_SelectChip(void __iomem * docptr, int chip)$/;"	f	file:
DoC_SelectFloor	devices/doc2000.c	/^static inline int DoC_SelectFloor(struct DiskOnChip *doc, int floor)$/;"	f	file:
DoC_SelectFloor	devices/doc2001.c	/^static int DoC_SelectFloor(void __iomem * docptr, int floor)$/;"	f	file:
DoC_SelectFloor	devices/doc2001plus.c	/^static int DoC_SelectFloor(void __iomem * docptr, int floor)$/;"	f	file:
DoC_WaitReady	devices/doc2000.c	/^static inline int DoC_WaitReady(struct DiskOnChip *doc)$/;"	f	file:
DoC_WaitReady	devices/doc2001.c	/^static inline int DoC_WaitReady(void __iomem * docptr)$/;"	f	file:
DoC_WaitReady	devices/doc2001plus.c	/^static inline int DoC_WaitReady(void __iomem * docptr)$/;"	f	file:
DoC_WaitReady	nand/diskonchip.c	/^static inline int DoC_WaitReady(struct doc_priv *doc)$/;"	f	file:
DoC_WriteBuf	devices/doc2000.c	/^static void DoC_WriteBuf(struct DiskOnChip *doc, const u_char * buf, int len)$/;"	f	file:
DoC_is_2000	devices/doc2000.c	33;"	d	file:
DoC_is_2000	devices/doc2000.c	35;"	d	file:
DoC_is_2000	nand/diskonchip.c	91;"	d	file:
DoC_is_Millennium	devices/doc2000.c	39;"	d	file:
DoC_is_Millennium	devices/doc2000.c	41;"	d	file:
DoC_is_Millennium	nand/diskonchip.c	90;"	d	file:
DoC_is_MillenniumPlus	nand/diskonchip.c	89;"	d	file:
DoRead	mtd-utils/tests/jittertest/JitterTest.c	/^static int DoRead = FALSE;             \/* should we attempt to ReadFile?*\/$/;"	v	file:
E	devices/slram.c	55;"	d	file:
EBA_RESERVED_PEBS	ubi/eba.c	50;"	d	file:
EBUF	mtd-utils/ubi-utils/src/libpfiflash.c	69;"	d	file:
EBUF	mtd-utils/ubi-utils/src/libubimirror.c	34;"	d	file:
EBUF	mtd-utils/ubi-utils/src/reader.c	47;"	d	file:
EBUF_PFI	mtd-utils/ubi-utils/src/reader.c	42;"	d	file:
EBUF_PREPEND	mtd-utils/ubi-utils/src/libpfiflash.c	73;"	d	file:
EB_ALIEN	mtd-utils/ubi-utils/new-utils/include/libscan.h	/^	EB_ALIEN     = 0xFFFFFFFD,$/;"	e	enum:__anon5
EB_BAD	mtd-utils/ubi-utils/new-utils/include/libscan.h	/^	EB_BAD       = 0xFFFFFFFC,$/;"	e	enum:__anon5
EB_CORRUPTED	mtd-utils/ubi-utils/new-utils/include/libscan.h	/^	EB_CORRUPTED = 0xFFFFFFFE,$/;"	e	enum:__anon5
EB_EMPTY	mtd-utils/ubi-utils/new-utils/include/libscan.h	/^	EB_EMPTY     = 0xFFFFFFFF,$/;"	e	enum:__anon5
ECCBUF_DIV	chips/cfi_cmdset_0020.c	668;"	d	file:
ECCBUF_MOD	chips/cfi_cmdset_0020.c	669;"	d	file:
ECCBUF_SIZE	chips/cfi_cmdset_0020.c	667;"	d	file:
ECCCLRR	nand/sharpsl.c	37;"	d	file:
ECCCNTR	nand/sharpsl.c	36;"	d	file:
ECCCP	nand/sharpsl.c	35;"	d	file:
ECCGETLAYOUT	mtd-utils/include/mtd/mtd-abi.h	111;"	d
ECCGETSTATS	mtd-utils/include/mtd/mtd-abi.h	112;"	d
ECCLPLB	nand/sharpsl.c	33;"	d	file:
ECCLPUB	nand/sharpsl.c	34;"	d	file:
ECCSig	mtd-utils/include/mtd/nftl-user.h	/^	unsigned char ECCSig[6];$/;"	m	struct:nftl_bci
ECC_FAILD_RETRY	mtdblock-jz.c	41;"	d	file:
ECCsig	mtd-utils/include/mtd/inftl-user.h	/^	uint8_t ECCsig[6];$/;"	m	struct:inftl_bci
EC_MAX	mtd-utils/ubi-utils/new-utils/include/libscan.h	/^	EC_MAX       = UBI_MAX_ERASECOUNTER,$/;"	e	enum:__anon5
EC_X_INT	mtd-utils/ubi-utils/src/unubi_analyze.c	43;"	d	file:
ENDIAN_BIG	mtd-utils/jffs-dump.c	77;"	d	file:
ENDIAN_HOST	mtd-utils/jffs-dump.c	76;"	d	file:
ENDIAN_LITTLE	mtd-utils/jffs-dump.c	78;"	d	file:
EP7312_FIO_PBASE	nand/edb7312.c	40;"	d	file:
EP7312_PXDDR	nand/edb7312.c	46;"	d	file:
EP7312_PXDR	nand/edb7312.c	41;"	d	file:
ERASEINFO	chips/jedec_probe.c	261;"	d	file:
ERASESIZE	mtd-utils/nftldump.c	63;"	d	file:
ERASE_CONFIRM	devices/lart.c	104;"	d	file:
ERASE_MARK	mtd-utils/include/mtd/nftl-user.h	63;"	d
ERASE_SETUP	devices/lart.c	103;"	d	file:
ERASE_SIZE	mtd-utils/fectest.c	13;"	d	file:
ERR	mtd-utils/ubi-utils/perl/mkpfi	/^sub ERR($) {$/;"	s
ERROR	devices/block2mtd.c	26;"	d	file:
ERROR	devices/phram.c	28;"	d	file:
ERRP	cmdlinepart.c	34;"	d	file:
ERRS_SIZE	nand/jz4750_nand.c	46;"	d	file:
ERRS_SIZE	nand/jz4750_nand.c	50;"	d	file:
ERR_ARGP	mtd-utils/ubi-utils/src/pddcustomize.c	66;"	d	file:
ERR_ARGP	mtd-utils/ubi-utils/src/ubimirror.c	51;"	d	file:
ERR_BUF_SIZE	mtd-utils/ubi-utils/src/pfi2bin.c	53;"	d	file:
ERR_MSG	mtd-utils/ubi-utils/src/unubi.c	106;"	d	file:
ERR_STAT_ECC_AVAILABLE	nand/rtc_from4.c	87;"	d	file:
EUBIGEN_INVALID_ALIGNMENT	mtd-utils/ubi-utils/src/ubigen.h	38;"	d
EUBIGEN_INVALID_HDR_OFFSET	mtd-utils/ubi-utils/src/ubigen.h	37;"	d
EUBIGEN_INVALID_TYPE	mtd-utils/ubi-utils/src/ubigen.h	36;"	d
EUBIGEN_MAX_ERROR	mtd-utils/ubi-utils/src/ubigen.h	40;"	d
EUBIGEN_TOO_SMALL_EB	mtd-utils/ubi-utils/src/ubigen.h	39;"	d
EUBIMIRROR_NO_DST	mtd-utils/ubi-utils/src/ubimirror.h	43;"	d
EUBIMIRROR_NO_SRC	mtd-utils/ubi-utils/src/ubimirror.h	37;"	d
EUBIMIRROR_SRC_EQ_DST	mtd-utils/ubi-utils/src/ubimirror.h	31;"	d
EUNInfo	ftl.c	/^    } *EUNInfo;$/;"	m	struct:partition_t	typeref:struct:partition_t::eun_info_t	file:
EXAMPLE_BOOTENV_VOL_ID_1	mtd-utils/ubi-utils/src/example_ubi.h	25;"	d
EXAMPLE_BOOTENV_VOL_ID_2	mtd-utils/ubi-utils/src/example_ubi.h	26;"	d
EXAMPLE_UBI_DEVICE	mtd-utils/ubi-utils/src/example_ubi.h	24;"	d
EXCITE_NANDFLASH_ADDR_BYTE	nand/excite_nandflash.c	46;"	d	file:
EXCITE_NANDFLASH_CMD_BYTE	nand/excite_nandflash.c	47;"	d	file:
EXCITE_NANDFLASH_DATA_BYTE	nand/excite_nandflash.c	44;"	d	file:
EXCITE_NANDFLASH_STATUS_BYTE	nand/excite_nandflash.c	45;"	d	file:
EXCITE_NANDFLASH_VERSION	nand/excite_nandflash.c	41;"	d	file:
EXEC	mtd-utils/ubi-utils/src/unubi.c	58;"	d	file:
EXIT_FAILURE	mtd-utils/flashcp.c	48;"	d	file:
EXIT_FILE_OPEN_ERR	mtd-utils/tests/jittertest/JitterTest.c	107;"	d	file:
EXIT_INV_INT_PERIOD	mtd-utils/tests/jittertest/JitterTest.c	110;"	d	file:
EXIT_INV_SCHED_PRIORITY	mtd-utils/tests/jittertest/JitterTest.c	113;"	d	file:
EXIT_MAX_PRIORITY_ERR	mtd-utils/tests/jittertest/JitterTest.c	112;"	d	file:
EXIT_MIN_PRIORITY_ERR	mtd-utils/tests/jittertest/JitterTest.c	111;"	d	file:
EXIT_PREV_TIME_OF_DAY_ERR	mtd-utils/tests/jittertest/JitterTest.c	115;"	d	file:
EXIT_REG_SIGALRM_ERR	mtd-utils/tests/jittertest/JitterTest.c	108;"	d	file:
EXIT_REG_SIGINT_ERR	mtd-utils/tests/jittertest/JitterTest.c	109;"	d	file:
EXIT_SET_SCHEDULER_ERR	mtd-utils/tests/jittertest/JitterTest.c	114;"	d	file:
EXIT_SUCCESS	mtd-utils/flashcp.c	49;"	d	file:
EXP_CSR_MBAR	maps/intel_vr_nor.c	51;"	d	file:
EXP_TIMING_CS0	maps/intel_vr_nor.c	59;"	d	file:
EXP_WIN_MBAR	maps/intel_vr_nor.c	53;"	d	file:
EndTuple	mtd-utils/include/mtd/ftl-user.h	/^    u_int8_t	EndTuple[2];$/;"	m	struct:erase_unit_header_t
EraseCount	ftl.c	/^	u_int32_t		EraseCount;$/;"	m	struct:partition_t::eun_info_t	file:
EraseCount	ftl.c	/^	u_int32_t		EraseCount;$/;"	m	struct:partition_t::xfer_info_t	file:
EraseCount	mtd-utils/include/mtd/ftl-user.h	/^    u_int32_t	EraseCount;$/;"	m	struct:erase_unit_header_t
EraseMark	mtd-utils/include/mtd/inftl-user.h	/^	uint16_t EraseMark;$/;"	m	struct:inftl_unittail
EraseMark	mtd-utils/include/mtd/nftl-user.h	/^	uint16_t EraseMark;$/;"	m	struct:nftl_uci1
EraseMark1	mtd-utils/include/mtd/inftl-user.h	/^	uint16_t EraseMark1;$/;"	m	struct:inftl_unittail
EraseMark1	mtd-utils/include/mtd/nftl-user.h	/^	uint16_t EraseMark1;$/;"	m	struct:nftl_uci1
EraseUnitSize	mtd-utils/include/mtd/ftl-user.h	/^    u_int8_t	EraseUnitSize;$/;"	m	struct:erase_unit_header_t
FALSE	mtd-utils/tests/checkfs/common.h	5;"	d
FALSE	mtd-utils/tests/jittertest/JitterTest.c	155;"	d	file:
FALSE	mtd-utils/tests/jittertest/plotJittervsFill.c	72;"	d	file:
FAVOUR_LZO_PERCENT	mtd-utils/compr.c	16;"	d	file:
FCR	nand/diskonchip.c	130;"	d	file:
FEC_MAGIC	mtd-utils/fec.c	638;"	d	file:
FILESIZE_MAX	mtd-utils/tests/checkfs/makefiles.c	34;"	d	file:
FLAG_DEVICE	mtd-utils/flashcp.c	71;"	d	file:
FLAG_FILENAME	mtd-utils/flashcp.c	70;"	d	file:
FLAG_HELP	mtd-utils/flashcp.c	69;"	d	file:
FLAG_NONE	mtd-utils/flashcp.c	67;"	d	file:
FLAG_VERBOSE	mtd-utils/flashcp.c	68;"	d	file:
FLALE	nand/sharpsl.c	45;"	d	file:
FLASHCTL	nand/sharpsl.c	39;"	d	file:
FLASHIO	nand/sharpsl.c	38;"	d	file:
FLASH_ADDR	maps/tqm8xxl.c	37;"	d	file:
FLASH_BANK_MAX	maps/tqm8xxl.c	39;"	d	file:
FLASH_BANK_SIZE	maps/dmv182.c	40;"	d	file:
FLASH_BASE	maps/dilnetpc.c	67;"	d	file:
FLASH_BASE	maps/integrator-flash.c	47;"	d	file:
FLASH_BASE_ADDR	maps/dmv182.c	39;"	d	file:
FLASH_BLOCKSIZE_MAIN	devices/lart.c	71;"	d	file:
FLASH_BLOCKSIZE_MAIN	maps/edb7312.c	28;"	d	file:
FLASH_BLOCKSIZE_PARAM	devices/lart.c	63;"	d	file:
FLASH_DEVICE_16mbit_BOTTOM	devices/lart.c	119;"	d	file:
FLASH_DEVICE_16mbit_TOP	devices/lart.c	118;"	d	file:
FLASH_DEVICE_8mbit_BOTTOM	devices/lart.c	117;"	d	file:
FLASH_DEVICE_8mbit_TOP	devices/lart.c	116;"	d	file:
FLASH_DISABLE_BYTE	maps/tsunami_flash.c	15;"	d	file:
FLASH_ENABLE_BYTE	maps/tsunami_flash.c	14;"	d	file:
FLASH_ENABLE_PORT	maps/tsunami_flash.c	13;"	d	file:
FLASH_MANUFACTURER	devices/lart.c	115;"	d	file:
FLASH_NUMBLOCKS_16m_MAIN	devices/lart.c	72;"	d	file:
FLASH_NUMBLOCKS_16m_PARAM	devices/lart.c	64;"	d	file:
FLASH_NUMBLOCKS_8m_MAIN	devices/lart.c	73;"	d	file:
FLASH_NUMBLOCKS_8m_PARAM	devices/lart.c	65;"	d	file:
FLASH_NUMBLOCKS_MAIN	maps/edb7312.c	29;"	d	file:
FLASH_OFFSET	devices/lart.c	81;"	d	file:
FLASH_PAGESIZE	devices/m25p80.c	31;"	d	file:
FLASH_PARTITION0_ADDR	maps/cfi_flagadm.c	47;"	d	file:
FLASH_PARTITION0_SIZE	maps/cfi_flagadm.c	48;"	d	file:
FLASH_PARTITION1_ADDR	maps/cfi_flagadm.c	50;"	d	file:
FLASH_PARTITION1_SIZE	maps/cfi_flagadm.c	51;"	d	file:
FLASH_PARTITION2_ADDR	maps/cfi_flagadm.c	53;"	d	file:
FLASH_PARTITION2_SIZE	maps/cfi_flagadm.c	54;"	d	file:
FLASH_PARTITION3_ADDR	maps/cfi_flagadm.c	56;"	d	file:
FLASH_PARTITION3_SIZE	maps/cfi_flagadm.c	57;"	d	file:
FLASH_PHYS_ADDR	maps/cfi_flagadm.c	44;"	d	file:
FLASH_SIZE	maps/cfi_flagadm.c	45;"	d	file:
FLASH_SIZE	maps/integrator-flash.c	48;"	d	file:
FLASH_SIZE	maps/tqm8xxl.c	38;"	d	file:
FLASH_TO_DATA	devices/lart.c	166;"	d	file:
FLASH_U2_TO_ADDR	devices/lart.c	236;"	d	file:
FLASH_U3_TO_ADDR	devices/lart.c	261;"	d	file:
FLCE0	nand/sharpsl.c	47;"	d	file:
FLCE1	nand/sharpsl.c	43;"	d	file:
FLCLE	nand/sharpsl.c	46;"	d	file:
FLRYBY	nand/sharpsl.c	42;"	d	file:
FLSH_LBAR_EN	nand/cs553x_nand.c	48;"	d	file:
FLSH_MEM_IO	nand/cs553x_nand.c	50;"	d	file:
FLSH_NOR_NAND	nand/cs553x_nand.c	49;"	d	file:
FLWP	nand/sharpsl.c	44;"	d	file:
FN_EH_DATA	mtd-utils/ubi-utils/src/unubi_analyze.h	54;"	d
FN_EH_PLOT	mtd-utils/ubi-utils/src/unubi_analyze.h	55;"	d
FN_EH_STAT	mtd-utils/ubi-utils/src/unubi_analyze.h	53;"	d
FN_INVAL	mtd-utils/ubi-utils/src/unubi.c	118;"	d	file:
FN_NSURE	mtd-utils/ubi-utils/src/unubi.c	119;"	d	file:
FN_VALID	mtd-utils/ubi-utils/src/unubi.c	120;"	d	file:
FN_VH_DATA	mtd-utils/ubi-utils/src/unubi_analyze.h	56;"	d
FN_VH_PLOT	mtd-utils/ubi-utils/src/unubi_analyze.h	57;"	d
FN_VITBL	mtd-utils/ubi-utils/src/unubi.c	123;"	d	file:
FN_VOLSP	mtd-utils/ubi-utils/src/unubi.c	121;"	d	file:
FN_VOLWH	mtd-utils/ubi-utils/src/unubi.c	122;"	d	file:
FOLD_MARK_IN_PROGRESS	mtd-utils/include/mtd/nftl-user.h	69;"	d
FORCE_WORD_WRITE	chips/cfi_cmdset_0001.c	46;"	d	file:
FORCE_WORD_WRITE	chips/cfi_cmdset_0002.c	43;"	d	file:
FREE_CACHE	udc_cache.c	36;"	d	file:
FROM_LE16	mtd-utils/ftl_check.c	66;"	d	file:
FROM_LE16	mtd-utils/ftl_format.c	66;"	d	file:
FROM_LE32	mtd-utils/ftl_check.c	65;"	d	file:
FROM_LE32	mtd-utils/ftl_format.c	65;"	d	file:
FTL_FORMATTED	ftl.c	142;"	d	file:
FTL_MAJOR	ftl.c	88;"	d	file:
FWH_0_5MiB	maps/esb2rom.c	93;"	d	file:
FWH_1MiB	maps/esb2rom.c	91;"	d	file:
FWH_1_5MiB	maps/esb2rom.c	89;"	d	file:
FWH_2MiB	maps/esb2rom.c	87;"	d	file:
FWH_2_5MiB	maps/esb2rom.c	84;"	d	file:
FWH_3MiB	maps/esb2rom.c	81;"	d	file:
FWH_3_5MiB	maps/esb2rom.c	78;"	d	file:
FWH_40_EN	maps/esb2rom.c	53;"	d	file:
FWH_4MiB	maps/esb2rom.c	75;"	d	file:
FWH_50_EN	maps/esb2rom.c	52;"	d	file:
FWH_5MiB	maps/esb2rom.c	71;"	d	file:
FWH_60_EN	maps/esb2rom.c	51;"	d	file:
FWH_6MiB	maps/esb2rom.c	67;"	d	file:
FWH_70_EN	maps/esb2rom.c	50;"	d	file:
FWH_7MiB	maps/esb2rom.c	63;"	d	file:
FWH_8MiB	maps/esb2rom.c	59;"	d	file:
FWH_C0_EN	maps/esb2rom.c	46;"	d	file:
FWH_C8_EN	maps/esb2rom.c	45;"	d	file:
FWH_D0_EN	maps/esb2rom.c	44;"	d	file:
FWH_D8_EN	maps/esb2rom.c	43;"	d	file:
FWH_DEC_EN1	maps/esb2rom.c	38;"	d	file:
FWH_DEC_EN1	maps/ichxrom.c	30;"	d	file:
FWH_DEC_EN2	maps/ichxrom.c	31;"	d	file:
FWH_DENY_READ	chips/fwh_lock.h	/^	FWH_DENY_READ  = 4,$/;"	e	enum:fwh_lock_state
FWH_DENY_WRITE	chips/fwh_lock.h	/^	FWH_DENY_WRITE = 1,$/;"	e	enum:fwh_lock_state
FWH_E0_EN	maps/esb2rom.c	42;"	d	file:
FWH_E8_EN	maps/esb2rom.c	41;"	d	file:
FWH_F0_EN	maps/esb2rom.c	40;"	d	file:
FWH_F8_EN	maps/esb2rom.c	39;"	d	file:
FWH_IMMUTABLE	chips/fwh_lock.h	/^	FWH_IMMUTABLE  = 2,$/;"	e	enum:fwh_lock_state
FWH_LEGACY_E_EN	maps/esb2rom.c	48;"	d	file:
FWH_LEGACY_F_EN	maps/esb2rom.c	47;"	d	file:
FWH_LOCK_H	chips/fwh_lock.h	2;"	d
FWH_SEL1	maps/esb2rom.c	56;"	d	file:
FWH_SEL1	maps/ichxrom.c	32;"	d	file:
FWH_SEL2	maps/esb2rom.c	57;"	d	file:
FWH_SEL2	maps/ichxrom.c	33;"	d	file:
FWH_UNLOCKED	chips/fwh_lock.h	/^        FWH_UNLOCKED   = 0,$/;"	e	enum:fwh_lock_state
FWH_XXLOCK_ONEBLOCK_LOCK	chips/fwh_lock.h	18;"	d
FWH_XXLOCK_ONEBLOCK_UNLOCK	chips/fwh_lock.h	19;"	d
Fd1	mtd-utils/tests/jittertest/JitterTest.c	/^static int Fd1;                        \/* fd where the above buffer if o\/p *\/$/;"	v	file:
Fd2	mtd-utils/tests/jittertest/JitterTest.c	/^static int Fd2;                        \/* fd for the ReadFile         *\/$/;"	v	file:
FileSizeMax	mtd-utils/tests/checkfs/checkfs.c	/^float FileSizeMax = 1024.0; \/*= (file size in bytes), MUST be float*\/$/;"	v
FirstPhysicalEUN	mtd-utils/include/mtd/ftl-user.h	/^    u_int16_t	FirstPhysicalEUN;$/;"	m	struct:erase_unit_header_t
FirstPhysicalEUN	mtd-utils/include/mtd/nftl-user.h	/^	uint16_t FirstPhysicalEUN;$/;"	m	struct:NFTLMediaHeader
FirstVMAddress	mtd-utils/include/mtd/ftl-user.h	/^    u_int32_t	FirstVMAddress;$/;"	m	struct:erase_unit_header_t
Flags	mtd-utils/include/mtd/ftl-user.h	/^    u_int8_t	Flags;$/;"	m	struct:erase_unit_header_t
FlushDataState	udc_cache.c	/^EXPORT_SYMBOL_GPL(FlushDataState);$/;"	v
FlushDataState	udc_cache.c	/^int FlushDataState = 0;$/;"	v
FoldMark	mtd-utils/include/mtd/nftl-user.h	/^        uint16_t FoldMark;$/;"	m	struct:nftl_uci2
FoldMark1	mtd-utils/include/mtd/nftl-user.h	/^        uint16_t FoldMark1;$/;"	m	struct:nftl_uci2
FormatFlags	mtd-utils/include/mtd/inftl-user.h	/^	__u32 FormatFlags;$/;"	m	struct:INFTLMediaHeader
FormattedSize	mtd-utils/include/mtd/ftl-user.h	/^    u_int32_t	FormattedSize;$/;"	m	struct:erase_unit_header_t
FormattedSize	mtd-utils/include/mtd/nftl-user.h	/^	uint32_t FormattedSize;$/;"	m	struct:NFTLMediaHeader
Free	ftl.c	/^	u_int32_t		Free;$/;"	m	struct:partition_t::eun_info_t	file:
FreeTotal	ftl.c	/^    u_int32_t		FreeTotal;$/;"	m	struct:partition_t	file:
GCTaskPID	mtd-utils/tests/jittertest/JitterTest.c	/^static int GCTaskPID;$/;"	v	file:
GETCWD_SIZE	mtd-utils/mkfs.jffs2.c	478;"	d	file:
GETCWD_SIZE	mtd-utils/mkfs.jffs2.c	482;"	d	file:
GFP_KERNEL	mtd-utils/compr.h	37;"	d
GF_ADDMULC	mtd-utils/fec.c	198;"	d	file:
GF_ADDMULC	mtd-utils/fec.c	223;"	d	file:
GF_BITS	mtd-utils/fec.c	42;"	d	file:
GF_MULC0	mtd-utils/fec.c	197;"	d	file:
GF_MULC0	mtd-utils/fec.c	222;"	d	file:
GF_SIZE	mtd-utils/fec.c	124;"	d	file:
GPIO_CS2_N	nand/jz4740_nand.c	395;"	d	file:
GPIO_CS2_N	nand/jz4750_nand.c	501;"	d	file:
GPIO_CS3_N	nand/jz4740_nand.c	396;"	d	file:
GPIO_CS3_N	nand/jz4750_nand.c	502;"	d	file:
GPIO_CS4_N	nand/jz4740_nand.c	397;"	d	file:
GPIO_CS4_N	nand/jz4750_nand.c	503;"	d	file:
GPIO_NAND_CS	nand/cmx270_nand.c	30;"	d	file:
GPIO_NAND_RB	nand/cmx270_nand.c	31;"	d	file:
Get_NAND_CacheFreeCount	udc_cache.c	/^inline static int Get_NAND_CacheFreeCount(void)$/;"	f	file:
GrabKProfile	mtd-utils/tests/jittertest/JitterTest.c	/^static int GrabKProfile = FALSE; \/* To help determine system bottle necks$/;"	v	file:
HAVE_PARTITIONS	devices/lart.c	40;"	d	file:
HEADER_MAP_OFFSET	mtd-utils/rfddump.c	30;"	d	file:
HEADER_MAP_OFFSET	rfd_ftl.c	50;"	d	file:
HELPERS	mtd-utils/tests/ubi-tests/Makefile	/^HELPERS=$(addprefix helpers\/, $(HELPER_NAMES))$/;"	m
HELPER_NAMES	mtd-utils/tests/ubi-tests/Makefile	/^HELPER_NAMES=ubiupdatevol$/;"	m
HIDDEN_AREA	mtd-utils/include/mtd/ftl-user.h	59;"	d
HOLE_BLOCK_SIZE	mtd-utils/tests/fs-tests/stress/atoms/fwrite00.c	35;"	d	file:
HY29F002T	chips/jedec_probe.c	84;"	d	file:
HandleCmdLineArgs	mtd-utils/tests/jittertest/JitterTest.c	/^void HandleCmdLineArgs($/;"	f
HandleCmdLineArgs	mtd-utils/tests/jittertest/plotJittervsFill.c	/^void HandleCmdLineArgs($/;"	f
I28F004B3B	chips/jedec_probe.c	88;"	d	file:
I28F004B3T	chips/jedec_probe.c	87;"	d	file:
I28F008B3B	chips/jedec_probe.c	95;"	d	file:
I28F008B3T	chips/jedec_probe.c	94;"	d	file:
I28F008S5	chips/jedec_probe.c	91;"	d	file:
I28F008SA	chips/jedec_probe.c	93;"	d	file:
I28F016B3B	chips/jedec_probe.c	100;"	d	file:
I28F016B3T	chips/jedec_probe.c	99;"	d	file:
I28F016S3	chips/jedec_probe.c	98;"	d	file:
I28F016S5	chips/jedec_probe.c	92;"	d	file:
I28F160B3B	chips/jedec_probe.c	102;"	d	file:
I28F160B3T	chips/jedec_probe.c	101;"	d	file:
I28F320B3B	chips/jedec_probe.c	104;"	d	file:
I28F320B3T	chips/jedec_probe.c	103;"	d	file:
I28F400B3B	chips/jedec_probe.c	90;"	d	file:
I28F400B3T	chips/jedec_probe.c	89;"	d	file:
I28F640B3B	chips/jedec_probe.c	106;"	d	file:
I28F640B3T	chips/jedec_probe.c	105;"	d	file:
I28F800B3B	chips/jedec_probe.c	97;"	d	file:
I28F800B3T	chips/jedec_probe.c	96;"	d	file:
I82802AB	chips/cfi_cmdset_0001.c	49;"	d	file:
I82802AB	chips/jedec_probe.c	107;"	d	file:
I82802AC	chips/cfi_cmdset_0001.c	50;"	d	file:
I82802AC	chips/jedec_probe.c	108;"	d	file:
ID_ADNP	maps/dilnetpc.c	62;"	d	file:
ID_DNPC	maps/dilnetpc.c	61;"	d	file:
IGNORE	mtd-utils/Makefile	/^IGNORE=${wildcard $(BUILDDIR)\/.*.c.dep}$/;"	m
IGNORE	mtd-utils/ubi-utils/Makefile	/^IGNORE=${wildcard .*.c.dep}$/;"	m
INCLUDEDIR	mtd-utils/Makefile	/^INCLUDEDIR=\/usr\/include$/;"	m
INCLUDEDIR	mtd-utils/ubi-utils/Makefile	/^INCLUDEDIR=\/usr\/include$/;"	m
INCLUDEDIR	mtd-utils/ubi-utils/new-utils/Makefile	/^INCLUDEDIR=\/usr\/include$/;"	m
INFO	devices/block2mtd.c	27;"	d	file:
INFO	mtd-utils/ubi-utils/perl/mkpfi	/^sub INFO($) {$/;"	s
INFO_MSG	mtd-utils/ubi-utils/src/hashmap.c	34;"	d	file:
INFTLMediaHeader	mtd-utils/include/mtd/inftl-user.h	/^struct INFTLMediaHeader {$/;"	s
INFTLPartition	mtd-utils/include/mtd/inftl-user.h	/^struct INFTLPartition {$/;"	s
INFTL_BBT_RESERVED_BLOCKS	nand/diskonchip.c	87;"	d	file:
INFTL_BDTL	mtd-utils/include/mtd/inftl-user.h	86;"	d
INFTL_BINARY	mtd-utils/include/mtd/inftl-user.h	85;"	d
INFTL_LAST	mtd-utils/include/mtd/inftl-user.h	87;"	d
INFTL_deleteblock	inftlcore.c	/^static int INFTL_deleteblock(struct INFTLrecord *inftl, unsigned block)$/;"	f	file:
INFTL_dumpVUchains	inftlmount.c	/^void INFTL_dumpVUchains(struct INFTLrecord *s)$/;"	f
INFTL_dumptables	inftlmount.c	/^void INFTL_dumptables(struct INFTLrecord *s)$/;"	f
INFTL_findfreeblock	inftlcore.c	/^static u16 INFTL_findfreeblock(struct INFTLrecord *inftl, int desperate)$/;"	f	file:
INFTL_findwriteunit	inftlcore.c	/^static inline u16 INFTL_findwriteunit(struct INFTLrecord *inftl, unsigned block)$/;"	f	file:
INFTL_foldchain	inftlcore.c	/^static u16 INFTL_foldchain(struct INFTLrecord *inftl, unsigned thisVUC, unsigned pendingblock)$/;"	f	file:
INFTL_formatblock	inftlmount.c	/^int INFTL_formatblock(struct INFTLrecord *inftl, int block)$/;"	f
INFTL_makefreeblock	inftlcore.c	/^static u16 INFTL_makefreeblock(struct INFTLrecord *inftl, unsigned pendingblock)$/;"	f	file:
INFTL_mount	inftlmount.c	/^int INFTL_mount(struct INFTLrecord *s)$/;"	f
INFTL_trydeletechain	inftlcore.c	/^static void INFTL_trydeletechain(struct INFTLrecord *inftl, unsigned thisVUC)$/;"	f	file:
INFTLhdr	mtd-utils/nftl_format.c	/^struct INFTLMediaHeader *INFTLhdr;$/;"	v	typeref:struct:INFTLMediaHeader
INITRD_LEN	devices/lart.c	96;"	d	file:
INITRD_START	devices/lart.c	95;"	d	file:
INI_INVALID_KEY	mtd-utils/ubi-utils/new-utils/src/libiniparser.c	22;"	d	file:
INTEL_BUSWIDTH	maps/nettel.c	30;"	d	file:
INVALIDATE_CACHE_UDELAY	chips/cfi_cmdset_0002.c	774;"	d	file:
INVALIDATE_CACHE_UDELAY	chips/cfi_cmdset_0002.c	807;"	d	file:
INVAL_CACHE_AND_WAIT	chips/cfi_cmdset_0001.c	1066;"	d	file:
INVAL_CACHE_AND_WAIT	chips/cfi_cmdset_0001.c	1074;"	d	file:
IOBASE	maps/l440gx.c	24;"	d	file:
IO_NAND_CTL	nand/cs553x_nand.c	71;"	d	file:
IO_NAND_DATA	nand/cs553x_nand.c	70;"	d	file:
IO_NAND_ECC_COL	nand/cs553x_nand.c	77;"	d	file:
IO_NAND_ECC_CTL	nand/cs553x_nand.c	74;"	d	file:
IO_NAND_ECC_LSB	nand/cs553x_nand.c	75;"	d	file:
IO_NAND_ECC_MSB	nand/cs553x_nand.c	76;"	d	file:
IO_NAND_IO	nand/cs553x_nand.c	72;"	d	file:
IO_NAND_LAC	nand/cs553x_nand.c	78;"	d	file:
IO_NAND_STS	nand/cs553x_nand.c	73;"	d	file:
IPAQ_MAP_INIT	maps/ipaq-flash.c	65;"	d	file:
ITERATIONS	mtd-utils/tests/ubi-tests/io_paral.c	37;"	d	file:
ITERATIONS	mtd-utils/tests/ubi-tests/mkvol_paral.c	32;"	d	file:
ITimer	mtd-utils/tests/jittertest/JitterTest.c	/^static struct itimerval ITimer;        \/* interrupt timer structure   *\/$/;"	v	typeref:struct:itimerval	file:
InitITimer	mtd-utils/tests/jittertest/JitterTest.c	/^void InitITimer($/;"	f
InterruptPeriodMilliSec	mtd-utils/tests/jittertest/JitterTest.c	/^static long InterruptPeriodMilliSec;   \/* interrupt period, millisec  *\/$/;"	v	file:
JFFS2_ACL_VERSION	mtd-utils/include/linux/jffs2.h	79;"	d
JFFS2_BUFFER_FILL	mtd-utils/compr.c	111;"	d	file:
JFFS2_COMPAT_MASK	mtd-utils/include/linux/jffs2.h	51;"	d
JFFS2_COMPR_COPY	mtd-utils/include/linux/jffs2.h	46;"	d
JFFS2_COMPR_DYNRUBIN	mtd-utils/include/linux/jffs2.h	47;"	d
JFFS2_COMPR_LZO	mtd-utils/include/linux/jffs2.h	49;"	d
JFFS2_COMPR_MODE_FAVOURLZO	mtd-utils/compr.h	32;"	d
JFFS2_COMPR_MODE_NONE	mtd-utils/compr.h	29;"	d
JFFS2_COMPR_MODE_PRIORITY	mtd-utils/compr.h	30;"	d
JFFS2_COMPR_MODE_SIZE	mtd-utils/compr.h	31;"	d
JFFS2_COMPR_NONE	mtd-utils/include/linux/jffs2.h	42;"	d
JFFS2_COMPR_RTIME	mtd-utils/include/linux/jffs2.h	44;"	d
JFFS2_COMPR_RUBINMIPS	mtd-utils/include/linux/jffs2.h	45;"	d
JFFS2_COMPR_ZERO	mtd-utils/include/linux/jffs2.h	43;"	d
JFFS2_COMPR_ZLIB	mtd-utils/include/linux/jffs2.h	48;"	d
JFFS2_DIRTY_BITMASK	mtd-utils/include/linux/jffs2.h	29;"	d
JFFS2_DYNRUBIN_PRIORITY	mtd-utils/compr.h	24;"	d
JFFS2_EMPTY_BITMASK	mtd-utils/include/linux/jffs2.h	28;"	d
JFFS2_FEATURE_INCOMPAT	mtd-utils/include/linux/jffs2.h	54;"	d
JFFS2_FEATURE_ROCOMPAT	mtd-utils/include/linux/jffs2.h	56;"	d
JFFS2_FEATURE_RWCOMPAT_COPY	mtd-utils/include/linux/jffs2.h	58;"	d
JFFS2_FEATURE_RWCOMPAT_DELETE	mtd-utils/include/linux/jffs2.h	60;"	d
JFFS2_INO_FLAG_PREREAD	mtd-utils/include/linux/jffs2.h	86;"	d
JFFS2_INO_FLAG_USERCOMPR	mtd-utils/include/linux/jffs2.h	89;"	d
JFFS2_LZO_PRIORITY	mtd-utils/compr.h	27;"	d
JFFS2_MAGIC_BITMASK	mtd-utils/include/linux/jffs2.h	26;"	d
JFFS2_MAX_FILE_SIZE	mtd-utils/mkfs.jffs2.c	691;"	d	file:
JFFS2_MAX_NAME_LEN	mtd-utils/include/linux/jffs2.h	37;"	d
JFFS2_MAX_SYMLINK_LEN	mtd-utils/mkfs.jffs2.c	693;"	d	file:
JFFS2_MIN_DATA_LEN	mtd-utils/include/linux/jffs2.h	40;"	d
JFFS2_NODETYPE_CLEANMARKER	mtd-utils/include/linux/jffs2.h	64;"	d
JFFS2_NODETYPE_DIRENT	mtd-utils/include/linux/jffs2.h	62;"	d
JFFS2_NODETYPE_INODE	mtd-utils/include/linux/jffs2.h	63;"	d
JFFS2_NODETYPE_PADDING	mtd-utils/include/linux/jffs2.h	65;"	d
JFFS2_NODETYPE_SUMMARY	mtd-utils/include/linux/jffs2.h	67;"	d
JFFS2_NODETYPE_XATTR	mtd-utils/include/linux/jffs2.h	69;"	d
JFFS2_NODETYPE_XREF	mtd-utils/include/linux/jffs2.h	70;"	d
JFFS2_NODE_ACCURATE	mtd-utils/include/linux/jffs2.h	52;"	d
JFFS2_OLD_MAGIC_BITMASK	mtd-utils/include/linux/jffs2.h	25;"	d
JFFS2_RTIME_PRIORITY	mtd-utils/compr.h	25;"	d
JFFS2_RUBINMIPS_PRIORITY	mtd-utils/compr.h	23;"	d
JFFS2_STAT_BUF_SIZE	mtd-utils/compr.c	378;"	d	file:
JFFS2_SUMMARY_DIRENT_SIZE	mtd-utils/summary.h	44;"	d
JFFS2_SUMMARY_FRAME_SIZE	mtd-utils/summary.h	176;"	d
JFFS2_SUMMARY_H	mtd-utils/summary.h	13;"	d
JFFS2_SUMMARY_INODE_SIZE	mtd-utils/summary.h	43;"	d
JFFS2_SUMMARY_NOSUM_SIZE	mtd-utils/summary.h	42;"	d
JFFS2_SUMMARY_XATTR_SIZE	mtd-utils/summary.h	45;"	d
JFFS2_SUMMARY_XREF_SIZE	mtd-utils/summary.h	46;"	d
JFFS2_SUM_MAGIC	mtd-utils/include/linux/jffs2.h	32;"	d
JFFS2_SUPER_MAGIC	mtd-utils/include/linux/jffs2.h	22;"	d
JFFS2_XPREFIX_ACL_ACCESS	mtd-utils/include/linux/jffs2.h	75;"	d
JFFS2_XPREFIX_ACL_DEFAULT	mtd-utils/include/linux/jffs2.h	76;"	d
JFFS2_XPREFIX_SECURITY	mtd-utils/include/linux/jffs2.h	74;"	d
JFFS2_XPREFIX_TRUSTED	mtd-utils/include/linux/jffs2.h	77;"	d
JFFS2_XPREFIX_USER	mtd-utils/include/linux/jffs2.h	73;"	d
JFFS2_ZLIB_PRIORITY	mtd-utils/compr.h	26;"	d
JFFS_ALIGN_SIZE	mtd-utils/jffs-dump.c	22;"	d	file:
JFFS_DIRTY_BITMASK	mtd-utils/jffs-dump.c	33;"	d	file:
JFFS_EMPTY_BITMASK	mtd-utils/jffs-dump.c	31;"	d	file:
JFFS_GET_PAD_BYTES	mtd-utils/jffs-dump.c	27;"	d	file:
JFFS_MAGIC	mtd-utils/jffs-dump.c	18;"	d	file:
JFFS_MAGIC_BITMASK	mtd-utils/jffs-dump.c	32;"	d	file:
JFFS_MAX_NAME_LEN	mtd-utils/jffs-dump.c	19;"	d	file:
JFFS_MIN_INO	mtd-utils/jffs-dump.c	20;"	d	file:
JFFS_TRACE_INDENT	mtd-utils/jffs-dump.c	21;"	d	file:
JitterThreshold_ms	mtd-utils/tests/jittertest/plotJittervsFill.c	/^static int JitterThreshold_ms = 1000;$/;"	v	file:
KB	mtd-utils/flashcp.c	60;"	d	file:
KERNELHDR	mtd-utils/ubi-utils/Makefile	/^KERNELHDR := ..\/include$/;"	m
KERNELHDR	mtd-utils/ubi-utils/new-utils/Makefile	/^KERNELHDR := ..\/..\/include$/;"	m
KERNEL_LEN	devices/lart.c	91;"	d	file:
KERNEL_PARTITION_SIZE_KiB	maps/ceiva.c	61;"	d	file:
KERNEL_PARTITION_SIZE_KiB	maps/mbx860.c	31;"	d	file:
KERNEL_START	devices/lart.c	90;"	d	file:
KERN_ALERT	mtd-utils/compr.h	46;"	d
KERN_CRIT	mtd-utils/compr.h	47;"	d
KERN_DEBUG	mtd-utils/compr.h	52;"	d
KERN_EMERG	mtd-utils/compr.h	45;"	d
KERN_ERR	mtd-utils/compr.h	48;"	d
KERN_INFO	mtd-utils/compr.h	51;"	d
KERN_NOTICE	mtd-utils/compr.h	50;"	d
KERN_WARNING	mtd-utils/compr.h	49;"	d
KIB	mtd-utils/ubi-utils/src/unubi.c	113;"	d	file:
KK	devices/docecc.c	46;"	d	file:
KSAMTIB_CIGAM_2SFFJ	mtd-utils/include/linux/jffs2.h	27;"	d
KiB	ssfdc.c	45;"	d	file:
LDFLAGS	mtd-utils/tests/fs-tests/integrity/Makefile	/^LDFLAGS := $(LDFLAGS)$/;"	m
LDFLAGS	mtd-utils/tests/fs-tests/lib/Makefile	/^LDFLAGS := $(LDFLAGS)$/;"	m
LDFLAGS	mtd-utils/tests/fs-tests/simple/Makefile	/^LDFLAGS := $(LDFLAGS)$/;"	m
LDFLAGS	mtd-utils/tests/fs-tests/stress/atoms/Makefile	/^LDFLAGS := $(LDFLAGS)$/;"	m
LDFLAGS	mtd-utils/tests/fs-tests/utils/Makefile	/^LDFLAGS := $(LDFLAGS)$/;"	m
LENGTHES	mtd-utils/tests/ubi-tests/io_read.c	41;"	d	file:
LH28F640BF	chips/jedec_probe.c	129;"	d	file:
LIBS	mtd-utils/ubi-utils/new-utils/Makefile	/^LIBS = libubi libmtd libubigen libiniparser libscan$/;"	m
LIBUBI_HEADER_PATH	mtd-utils/tests/ubi-tests/Makefile	/^LIBUBI_HEADER_PATH=..\/..\/ubi-utils\/new-utils\/include$/;"	m
LIBUBI_PATH	mtd-utils/tests/ubi-tests/Makefile	/^LIBUBI_PATH=..\/..\/ubi-utils\/new-utils\/$/;"	m
LIBUBI_SRC_PATH	mtd-utils/tests/ubi-tests/Makefile	/^LIBUBI_SRC_PATH=..\/..\/ubi-utils\/new-utils\/src\/$/;"	m
LIBUBI_UBI_VERSION	mtd-utils/ubi-utils/inc/libubi.h	36;"	d
LIBUBI_UBI_VERSION	mtd-utils/ubi-utils/new-utils/include/libubi.h	36;"	d
LINE_COMMENT	mtd-utils/ubi-utils/new-utils/src/libiniparser.c	/^    LINE_COMMENT,$/;"	e	enum:_line_status_	file:
LINE_EMPTY	mtd-utils/ubi-utils/new-utils/src/libiniparser.c	/^    LINE_EMPTY,$/;"	e	enum:_line_status_	file:
LINE_ERROR	mtd-utils/ubi-utils/new-utils/src/libiniparser.c	/^    LINE_ERROR,$/;"	e	enum:_line_status_	file:
LINE_SECTION	mtd-utils/ubi-utils/new-utils/src/libiniparser.c	/^    LINE_SECTION,$/;"	e	enum:_line_status_	file:
LINE_UNPROCESSED	mtd-utils/ubi-utils/new-utils/src/libiniparser.c	/^    LINE_UNPROCESSED,$/;"	e	enum:_line_status_	file:
LINE_VALUE	mtd-utils/ubi-utils/new-utils/src/libiniparser.c	/^    LINE_VALUE$/;"	e	enum:_line_status_	file:
LIST_HEAD	mtd-utils/compr.c	24;"	d	file:
LIST_HEAD_INIT	mtd-utils/compr.c	22;"	d	file:
LOG_ERROR	mtd-utils/flashcp.c	75;"	d	file:
LOG_NORMAL	mtd-utils/flashcp.c	74;"	d	file:
LP_OPTIONS	nand/nand_ids.c	75;"	d	file:
LP_OPTIONS16	nand/nand_ids.c	76;"	d	file:
LT_PROTECTION	ubi/wl.c	91;"	d	file:
LastMaxDiff	mtd-utils/tests/jittertest/JitterTest.c	/^static long LastMaxDiff = 0; \/* keeps track of worst jitter encountered *\/$/;"	v	file:
Ldec	devices/docecc.c	101;"	d	file:
Left	mtdblock-jz.c	45;"	d	file:
LinkTarget	mtd-utils/ftl_format.c	/^static const char LinkTarget[] = {$/;"	v	file:
LinkTargetTuple	mtd-utils/include/mtd/ftl-user.h	/^    u_int8_t	LinkTargetTuple[5];$/;"	m	struct:erase_unit_header_t
LogFile	mtd-utils/tests/jittertest/JitterTest.c	/^static char LogFile[MAX_FILE_NAME_LEN+1] = "\/dev\/console"; \/* default *\/$/;"	v	file:
LogFile	mtd-utils/tests/jittertest/plotJittervsFill.c	/^static char LogFile[250] = "InputLogFile.log";$/;"	v	file:
LogicalEUN	mtd-utils/include/mtd/ftl-user.h	/^    u_int16_t	LogicalEUN;$/;"	m	struct:erase_unit_header_t
M29F800AB	chips/jedec_probe.c	132;"	d	file:
M29W040B	chips/jedec_probe.c	137;"	d	file:
M29W160DB	chips/jedec_probe.c	136;"	d	file:
M29W160DT	chips/jedec_probe.c	135;"	d	file:
M29W800DB	chips/jedec_probe.c	134;"	d	file:
M29W800DT	chips/jedec_probe.c	133;"	d	file:
M50FW016	chips/jedec_probe.c	140;"	d	file:
M50FW040	chips/jedec_probe.c	138;"	d	file:
M50FW080	chips/jedec_probe.c	139;"	d	file:
M50LPW080	chips/cfi_cmdset_0001.c	52;"	d	file:
M50LPW080	chips/jedec_probe.c	141;"	d	file:
MAJOR	mtd-utils/jffs2reader.c	86;"	d	file:
MANDIR	mtd-utils/Makefile	/^MANDIR=\/usr\/share\/man$/;"	m
MANDIR	mtd-utils/ubi-utils/Makefile	/^MANDIR=\/usr\/share\/man$/;"	m
MANDIR	mtd-utils/ubi-utils/new-utils/Makefile	/^MANDIR=\/usr\/man$/;"	m
MANUFACTURER_AMD	chips/cfi_cmdset_0002.c	47;"	d	file:
MANUFACTURER_AMD	chips/jedec_probe.c	27;"	d	file:
MANUFACTURER_ATMEL	chips/cfi_cmdset_0002.c	48;"	d	file:
MANUFACTURER_ATMEL	chips/jedec_probe.c	28;"	d	file:
MANUFACTURER_FUJITSU	chips/jedec_probe.c	29;"	d	file:
MANUFACTURER_HYUNDAI	chips/jedec_probe.c	30;"	d	file:
MANUFACTURER_INTEL	chips/cfi_cmdset_0001.c	48;"	d	file:
MANUFACTURER_INTEL	chips/jedec_probe.c	31;"	d	file:
MANUFACTURER_MACRONIX	chips/jedec_probe.c	32;"	d	file:
MANUFACTURER_NEC	chips/jedec_probe.c	33;"	d	file:
MANUFACTURER_PMC	chips/jedec_probe.c	34;"	d	file:
MANUFACTURER_SHARP	chips/jedec_probe.c	35;"	d	file:
MANUFACTURER_SST	chips/cfi_cmdset_0002.c	49;"	d	file:
MANUFACTURER_SST	chips/jedec_probe.c	36;"	d	file:
MANUFACTURER_ST	chips/cfi_cmdset_0001.c	51;"	d	file:
MANUFACTURER_ST	chips/jedec_probe.c	37;"	d	file:
MANUFACTURER_TOSHIBA	chips/jedec_probe.c	38;"	d	file:
MANUFACTURER_WINBOND	chips/jedec_probe.c	39;"	d	file:
MARK_AS_UPDATE	mtd-utils/ubi-utils/src/ubigen.h	/^	MARK_AS_UPDATE	 = 0x00000010,$/;"	e	enum:action
MAXLINE	mtd-utils/ubi-utils/src/error.c	27;"	d	file:
MAXPATH	mtd-utils/ubi-utils/src/nand2bin.c	49;"	d	file:
MAXPATH	mtd-utils/ubi-utils/src/unubi.c	115;"	d	file:
MAXSCAN	mtd-utils/docfdisk.c	43;"	d	file:
MAXVALSZ	mtd-utils/ubi-utils/new-utils/src/dictionary.c	30;"	d	file:
MAXWIDTH	mtd-utils/ubi-utils/src/error.c	28;"	d	file:
MAX_ASCII	mtd-utils/tests/jittertest/JitterTest.c	138;"	d	file:
MAX_CHUNK_SIZE	mtd-utils/jffs-dump.c	23;"	d	file:
MAX_DEV	ftl.c	95;"	d	file:
MAX_ERASE	ftl.c	104;"	d	file:
MAX_ERASE_ZONES	mtd-utils/include/mtd/nftl-user.h	61;"	d
MAX_FILE_NAME_LEN	mtd-utils/tests/jittertest/JitterTest.c	118;"	d	file:
MAX_FNAME	mtd-utils/ubi-utils/src/pfi2bin.c	51;"	d	file:
MAX_INTS_ALLOW	mtd-utils/tests/checkfs/checkfs.c	110;"	d	file:
MAX_INT_PERIOD_MILLISEC	mtd-utils/tests/jittertest/JitterTest.c	123;"	d	file:
MAX_IPAQ_CS	maps/ipaq-flash.c	63;"	d	file:
MAX_KMALLOC_SIZE	mtdchar.c	149;"	d	file:
MAX_LOGIC_BLK_PER_ZONE	ssfdc.c	42;"	d	file:
MAX_LOOPS	inftlcore.c	48;"	d	file:
MAX_LOOPS	nftlcore.c	35;"	d	file:
MAX_NAME_SIZE	maps/fortunet.c	26;"	d	file:
MAX_NAME_SIZE	mtd-utils/tests/fs-tests/stress/atoms/gcd_hupper.c	37;"	d	file:
MAX_NUM_FILES	mtd-utils/tests/checkfs/common.h	7;"	d
MAX_NUM_PARTITIONS	maps/fortunet.c	19;"	d	file:
MAX_NUM_REGIONS	maps/fortunet.c	18;"	d	file:
MAX_ONENAND_PAGESIZE	onenand/onenand_sim.c	60;"	d	file:
MAX_OOB_SIZE	mtd-utils/nandwrite.c	43;"	d	file:
MAX_OOB_SIZE	mtd-utils/nandwrite_mlc.c	43;"	d	file:
MAX_ORPHANS	mtd-utils/tests/fs-tests/simple/orph.c	33;"	d	file:
MAX_PAGE_SIZE	mtd-utils/nandwrite.c	42;"	d	file:
MAX_PAGE_SIZE	mtd-utils/nandwrite_mlc.c	42;"	d	file:
MAX_PCMCIA_ADDR	maps/pcmciamtd.c	54;"	d	file:
MAX_PHYS_BLK_PER_ZONE	ssfdc.c	43;"	d	file:
MAX_READY_WAIT_COUNT	devices/m25p80.c	54;"	d	file:
MAX_REGION	ftl.c	98;"	d	file:
MAX_SAVE_BUFFER	mtd-utils/tests/jittertest/plotJittervsFill.c	185;"	d	file:
MAX_SIZE_KiB	maps/ceiva.c	58;"	d	file:
MAX_SIZE_KiB	maps/mbx860.c	29;"	d	file:
MAX_SIZE_KiB	maps/sbc_gxx.c	79;"	d	file:
MAX_TIG_FLASH_SIZE	maps/tsunami_flash.c	17;"	d	file:
MAX_UBI_DEVICES	mtd-utils/tests/ubi-tests/integ.c	73;"	d	file:
MAX_UBI_MTD_NAME_LEN	mtd-utils/include/mtd/ubi-user.h	135;"	d
MAX_WORD_RETRIES	chips/cfi_cmdset_0002.c	45;"	d	file:
MAX_WRITE_BYTES	mtd-utils/tests/jittertest/JitterTest.c	134;"	d	file:
MBIT	mtd-utils/jffs2reader.c	/^static const mode_t MBIT[] = {$/;"	v	file:
MBM29F040C	chips/jedec_probe.c	71;"	d	file:
MBM29F800BA	chips/jedec_probe.c	72;"	d	file:
MBM29LV160BE	chips/jedec_probe.c	77;"	d	file:
MBM29LV160TE	chips/jedec_probe.c	76;"	d	file:
MBM29LV320BE	chips/jedec_probe.c	75;"	d	file:
MBM29LV320TE	chips/jedec_probe.c	74;"	d	file:
MBM29LV400BC	chips/jedec_probe.c	81;"	d	file:
MBM29LV400TC	chips/jedec_probe.c	80;"	d	file:
MBM29LV650UE	chips/jedec_probe.c	73;"	d	file:
MBM29LV800BA	chips/jedec_probe.c	78;"	d	file:
MBM29LV800TA	chips/jedec_probe.c	79;"	d	file:
MEMERASE	mtd-utils/include/mtd/mtd-abi.h	96;"	d
MEMGETBADBLOCK	mtd-utils/include/mtd/mtd-abi.h	105;"	d
MEMGETINFO	mtd-utils/include/mtd/mtd-abi.h	95;"	d
MEMGETOOBSEL	mtd-utils/include/mtd/mtd-abi.h	104;"	d
MEMGETREGIONCOUNT	mtd-utils/include/mtd/mtd-abi.h	101;"	d
MEMGETREGIONINFO	mtd-utils/include/mtd/mtd-abi.h	102;"	d
MEMLOCK	mtd-utils/include/mtd/mtd-abi.h	99;"	d
MEMREADOOB	mtd-utils/include/mtd/mtd-abi.h	98;"	d
MEMSETBADBLOCK	mtd-utils/include/mtd/mtd-abi.h	106;"	d
MEMSETOOBSEL	mtd-utils/include/mtd/mtd-abi.h	103;"	d
MEMUNLOCK	mtd-utils/include/mtd/mtd-abi.h	100;"	d
MEMWRITEOOB	mtd-utils/include/mtd/mtd-abi.h	97;"	d
MEMWRITEPAGE	mtd-utils/include/mtd/mtd-abi.h	114;"	d
MIB	mtd-utils/ubi-utils/src/unubi.c	114;"	d	file:
MICROSEC_PER_MILLISEC	mtd-utils/tests/jittertest/JitterTest.c	159;"	d	file:
MICROSEC_PER_SEC	mtd-utils/tests/jittertest/JitterTest.c	160;"	d	file:
MILLISEC_PER_SEC	mtd-utils/tests/jittertest/JitterTest.c	158;"	d	file:
MIN	mtd-utils/ubi-utils/new-utils/src/common.h	30;"	d
MIN	mtd-utils/ubi-utils/src/libubigen.c	37;"	d	file:
MIN	mtd-utils/ubi-utils/src/nand2bin.c	50;"	d	file:
MIN	mtd-utils/ubi-utils/src/pfi2bin.c	55;"	d	file:
MINOR	mtd-utils/jffs2reader.c	87;"	d	file:
MIN_ASCII	mtd-utils/tests/jittertest/JitterTest.c	137;"	d	file:
MIN_AVAIL_EBS	mtd-utils/tests/ubi-tests/common.h	33;"	d
MIN_INT_PERIOD_MILLISEC	mtd-utils/tests/jittertest/JitterTest.c	122;"	d	file:
MIN_JITTER_THRESHOLD	mtd-utils/tests/jittertest/plotJittervsFill.c	74;"	d	file:
MIN_RESEVED_PEBS	ubi/ubi.h	62;"	d
MIN_WRITE_BYTES	mtd-utils/tests/jittertest/JitterTest.c	132;"	d	file:
MM	devices/docecc.c	45;"	d	file:
MM_NAND_CTL	nand/cs553x_nand.c	60;"	d	file:
MM_NAND_DATA	nand/cs553x_nand.c	59;"	d	file:
MM_NAND_ECC_COL	nand/cs553x_nand.c	65;"	d	file:
MM_NAND_ECC_CTL	nand/cs553x_nand.c	67;"	d	file:
MM_NAND_ECC_LSB	nand/cs553x_nand.c	63;"	d	file:
MM_NAND_ECC_MSB	nand/cs553x_nand.c	64;"	d	file:
MM_NAND_IO	nand/cs553x_nand.c	61;"	d	file:
MM_NAND_LAC	nand/cs553x_nand.c	66;"	d	file:
MM_NAND_STS	nand/cs553x_nand.c	62;"	d	file:
MODE0	mtd-utils/jffs2reader.c	/^static const char MODE0[] = "---------";$/;"	v	file:
MODE1	mtd-utils/jffs2reader.c	/^static const char MODE1[] = "rwxrwxrwx";$/;"	v	file:
MODNAME	maps/scb2_flash.c	59;"	d	file:
MOD_NAME	maps/amd76xrom.c	25;"	d	file:
MOD_NAME	maps/ck804xrom.c	25;"	d	file:
MOD_NAME	maps/esb2rom.c	27;"	d	file:
MOD_NAME	maps/ichxrom.c	23;"	d	file:
MS02NV_CSR	devices/ms02-nv.h	66;"	d
MS02NV_CSR_BATT_OFF	devices/ms02-nv.h	70;"	d
MS02NV_CSR_BATT_OK	devices/ms02-nv.h	69;"	d
MS02NV_DIAG	devices/ms02-nv.h	74;"	d
MS02NV_DIAG_FAIL	devices/ms02-nv.h	83;"	d
MS02NV_DIAG_RO	devices/ms02-nv.h	81;"	d
MS02NV_DIAG_RW	devices/ms02-nv.h	82;"	d
MS02NV_DIAG_SIZE_MASK	devices/ms02-nv.h	84;"	d
MS02NV_DIAG_SIZE_SHIFT	devices/ms02-nv.h	85;"	d
MS02NV_DIAG_TEST	devices/ms02-nv.h	80;"	d
MS02NV_ID	devices/ms02-nv.h	88;"	d
MS02NV_MAGIC	devices/ms02-nv.h	75;"	d
MS02NV_RAM	devices/ms02-nv.h	77;"	d
MS02NV_SLOT_SIZE	devices/ms02-nv.h	90;"	d
MS02NV_VALID	devices/ms02-nv.h	76;"	d
MS02NV_VALID_ID	devices/ms02-nv.h	89;"	d
MSG_PREFIX	maps/edb7312.c	33;"	d	file:
MSG_PREFIX	maps/impa7.c	35;"	d	file:
MSG_PREFIX	maps/sbc8240.c	51;"	d	file:
MSR_DIVIL_BALL_OPTS	nand/cs553x_nand.c	55;"	d	file:
MSR_DIVIL_GLD_CAP	nand/cs553x_nand.c	33;"	d	file:
MSR_DIVIL_LBAR_FLSH0	nand/cs553x_nand.c	43;"	d	file:
MSR_DIVIL_LBAR_FLSH1	nand/cs553x_nand.c	44;"	d	file:
MSR_DIVIL_LBAR_FLSH2	nand/cs553x_nand.c	45;"	d	file:
MSR_DIVIL_LBAR_FLSH3	nand/cs553x_nand.c	46;"	d	file:
MSR_NANDF_CTL	nand/cs553x_nand.c	39;"	d	file:
MSR_NANDF_DATA	nand/cs553x_nand.c	38;"	d	file:
MSR_NANDF_RSVD	nand/cs553x_nand.c	40;"	d	file:
MTDBLOCK_BIT_BAD_BLOCK	mtdblock-jz.c	36;"	d	file:
MTDBLOCK_BIT_BLOCK_ADDR	mtdblock-jz.c	33;"	d	file:
MTDBLOCK_BIT_EMPTY_BLOCK	mtdblock-jz.c	37;"	d	file:
MTDBLOCK_BIT_FREE_BLOCK	mtdblock-jz.c	35;"	d	file:
MTDBLOCK_BIT_VALID_ENTRY	mtdblock-jz.c	32;"	d	file:
MTDBLOCK_NAND_BLK_STATUS_NORMAL	mtdblock-jz.c	38;"	d	file:
MTDFILEMODE	mtd-utils/include/mtd/mtd-abi.h	113;"	d
MTDID	maps/edb7312.c	34;"	d	file:
MTDID	maps/impa7.c	36;"	d	file:
MTDID	maps/sbc8240.c	52;"	d	file:
MTDRAM_ERASE_SIZE	devices/mtdram.c	24;"	d	file:
MTDRAM_TOTAL_SIZE	devices/mtdram.c	23;"	d	file:
MTD_ABSENT	mtd-utils/include/mtd/mtd-abi.h	37;"	d
MTD_BIT_WRITEABLE	mtd-utils/include/mtd/mtd-abi.h	46;"	d
MTD_CAP_NANDFLASH	mtd-utils/include/mtd/mtd-abi.h	54;"	d
MTD_CAP_NORFLASH	mtd-utils/include/mtd/mtd-abi.h	53;"	d
MTD_CAP_RAM	mtd-utils/include/mtd/mtd-abi.h	52;"	d
MTD_CAP_ROM	mtd-utils/include/mtd/mtd-abi.h	51;"	d
MTD_DATAFLASH	mtd-utils/include/mtd/mtd-abi.h	42;"	d
MTD_DEV_MAJOR	mtd-utils/ubi-utils/new-utils/src/libmtd.c	34;"	d	file:
MTD_FORTUNET_PK	maps/fortunet.c	24;"	d	file:
MTD_MAX_OOBFREE_ENTRIES	mtd-utils/include/mtd/mtd-abi.h	133;"	d
MTD_MODE_NORMAL	mtd-utils/include/mtd/mtd-abi.h	/^	MTD_MODE_NORMAL = MTD_OTP_OFF,$/;"	e	enum:mtd_file_modes
MTD_MODE_OTP_FACTORY	mtd-utils/include/mtd/mtd-abi.h	/^	MTD_MODE_OTP_FACTORY = MTD_OTP_FACTORY,$/;"	e	enum:mtd_file_modes
MTD_MODE_OTP_USER	mtd-utils/include/mtd/mtd-abi.h	/^	MTD_MODE_OTP_USER = MTD_OTP_USER,$/;"	e	enum:mtd_file_modes
MTD_MODE_RAW	mtd-utils/include/mtd/mtd-abi.h	/^	MTD_MODE_RAW,$/;"	e	enum:mtd_file_modes
MTD_NANDECC_AUTOPLACE	mtd-utils/include/mtd/mtd-abi.h	59;"	d
MTD_NANDECC_AUTOPL_USR	mtd-utils/include/mtd/mtd-abi.h	61;"	d
MTD_NANDECC_OFF	mtd-utils/include/mtd/mtd-abi.h	57;"	d
MTD_NANDECC_PLACE	mtd-utils/include/mtd/mtd-abi.h	58;"	d
MTD_NANDECC_PLACEONLY	mtd-utils/include/mtd/mtd-abi.h	60;"	d
MTD_NANDFLASH	mtd-utils/include/mtd/mtd-abi.h	41;"	d
MTD_NORFLASH	mtd-utils/include/mtd/mtd-abi.h	40;"	d
MTD_NO_ERASE	mtd-utils/include/mtd/mtd-abi.h	47;"	d
MTD_New_Partition	maps/fortunet.c	/^static int __init MTD_New_Partition(char *line)$/;"	f	file:
MTD_New_Region	maps/fortunet.c	/^static int __init MTD_New_Region(char *line)$/;"	f	file:
MTD_OTP_FACTORY	mtd-utils/include/mtd/mtd-abi.h	65;"	d
MTD_OTP_OFF	mtd-utils/include/mtd/mtd-abi.h	64;"	d
MTD_OTP_USER	mtd-utils/include/mtd/mtd-abi.h	66;"	d
MTD_PARAM_LEN_MAX	ubi/build.c	48;"	d	file:
MTD_RAM	mtd-utils/include/mtd/mtd-abi.h	38;"	d
MTD_ROM	mtd-utils/include/mtd/mtd-abi.h	39;"	d
MTD_STUPID_LOCK	mtd-utils/include/mtd/mtd-abi.h	48;"	d
MTD_SWAB_H	mtd-utils/include/mtd_swab.h	2;"	d
MTD_UADDR_0x0555_0x02AA	chips/jedec_probe.c	/^	MTD_UADDR_0x0555_0x02AA,$/;"	e	enum:uaddr	file:
MTD_UADDR_0x0555_0x0AAA	chips/jedec_probe.c	/^	MTD_UADDR_0x0555_0x0AAA,$/;"	e	enum:uaddr	file:
MTD_UADDR_0x0AAA_0x0555	chips/jedec_probe.c	/^	MTD_UADDR_0x0AAA_0x0555,$/;"	e	enum:uaddr	file:
MTD_UADDR_0x5555_0x2AAA	chips/jedec_probe.c	/^	MTD_UADDR_0x5555_0x2AAA,$/;"	e	enum:uaddr	file:
MTD_UADDR_DONT_CARE	chips/jedec_probe.c	/^	MTD_UADDR_DONT_CARE,		\/* Requires an arbitrary address *\/$/;"	e	enum:uaddr	file:
MTD_UADDR_NOT_SUPPORTED	chips/jedec_probe.c	/^	MTD_UADDR_NOT_SUPPORTED = 0,	\/* data width not supported *\/$/;"	e	enum:uaddr	file:
MTD_UADDR_UNNECESSARY	chips/jedec_probe.c	/^	MTD_UADDR_UNNECESSARY,		\/* Does not require any address *\/$/;"	e	enum:uaddr	file:
MTD_UBIVOLUME	mtd-utils/include/mtd/mtd-abi.h	43;"	d
MTD_WRITEABLE	mtd-utils/include/mtd/mtd-abi.h	45;"	d
MX29F002T	chips/jedec_probe.c	116;"	d	file:
MX29F004B	chips/jedec_probe.c	118;"	d	file:
MX29F004T	chips/jedec_probe.c	117;"	d	file:
MX29F016	chips/jedec_probe.c	115;"	d	file:
MX29F040	chips/jedec_probe.c	114;"	d	file:
MX29LV040C	chips/jedec_probe.c	111;"	d	file:
MX29LV160B	chips/jedec_probe.c	113;"	d	file:
MX29LV160T	chips/jedec_probe.c	112;"	d	file:
MaxErrAllowed	mtd-utils/tests/checkfs/checkfs.c	/^int MaxErrAllowed = 1; \/* default, can ge changed thru cmd line*\/$/;"	v
MaxPriority	mtd-utils/tests/jittertest/JitterTest.c	/^static int MaxPriority;                \/* maximum scheduler priority  *\/$/;"	v	file:
MedHead	mtd-utils/nftldump.c	/^static struct NFTLMediaHeader MedHead[2];$/;"	v	typeref:struct:NFTLMediaHeader	file:
MemReadDOC	devices/doc2001plus.c	/^static inline void MemReadDOC(void __iomem * docptr, unsigned char *buf, int len)$/;"	f	file:
MemWriteDOC	devices/doc2001plus.c	/^static inline void MemWriteDOC(void __iomem * docptr, unsigned char *buf, int len)$/;"	f	file:
MiB	ssfdc.c	46;"	d	file:
MinPriority	mtd-utils/tests/jittertest/JitterTest.c	/^static int MinPriority;                \/* minimum scheduler priority  *\/$/;"	v	file:
NACs	mtd-utils/include/mtd/inftl-user.h	/^	uint8_t NACs;$/;"	m	struct:inftl_unithead1
NACs	mtd-utils/include/mtd/inftl-user.h	/^	uint8_t NACs;$/;"	m	struct:inftl_unithead2
NAME	maps/scx200_docflash.c	22;"	d	file:
NAND2048_DEFAULT_VID_HDR_OFF	mtd-utils/ubi-utils/src/reader.c	38;"	d	file:
NAND512_DEFAULT_VID_HDR_OFF	mtd-utils/ubi-utils/src/reader.c	39;"	d	file:
NAND_ADDR_OFFSET0	nand/jz4750_nand.c	58;"	d	file:
NAND_ADDR_OFFSET1	nand/jz4750_nand.c	60;"	d	file:
NAND_ALE_GPIO_PIN	nand/ppchameleonevb.c	50;"	d	file:
NAND_BIG_DELAY_US	nand/ppchameleonevb.c	38;"	d	file:
NAND_CLE_GPIO_PIN	nand/ppchameleonevb.c	49;"	d	file:
NAND_CMD_OFFSET0	nand/jz4750_nand.c	59;"	d	file:
NAND_CMD_OFFSET1	nand/jz4750_nand.c	61;"	d	file:
NAND_CTL_CLRALE	nand/au1550nd.c	258;"	d	file:
NAND_CTL_CLRCLE	nand/au1550nd.c	254;"	d	file:
NAND_CTL_CLRNCE	nand/au1550nd.c	250;"	d	file:
NAND_CTL_SETALE	nand/au1550nd.c	256;"	d	file:
NAND_CTL_SETCLE	nand/au1550nd.c	252;"	d	file:
NAND_CTL_SETNCE	nand/au1550nd.c	248;"	d	file:
NAND_DATA_PORT	nand/jz4730_nand.c	27;"	d	file:
NAND_DATA_PORT1	nand/jz4740_nand.c	28;"	d	file:
NAND_DATA_PORT1	nand/jz4750_nand.c	53;"	d	file:
NAND_DATA_PORT2	nand/jz4740_nand.c	29;"	d	file:
NAND_DATA_PORT2	nand/jz4750_nand.c	54;"	d	file:
NAND_DATA_PORT3	nand/jz4740_nand.c	30;"	d	file:
NAND_DATA_PORT3	nand/jz4750_nand.c	55;"	d	file:
NAND_DATA_PORT4	nand/jz4740_nand.c	31;"	d	file:
NAND_DATA_PORT4	nand/jz4750_nand.c	56;"	d	file:
NAND_EVB_ALE_GPIO_PIN	nand/ppchameleonevb.c	55;"	d	file:
NAND_EVB_CLE_GPIO_PIN	nand/ppchameleonevb.c	54;"	d	file:
NAND_EVB_MTD_NAME	nand/ppchameleonevb.c	45;"	d	file:
NAND_EVB_RB_GPIO_PIN	nand/ppchameleonevb.c	56;"	d	file:
NAND_EVB_nCE_GPIO_PIN	nand/ppchameleonevb.c	53;"	d	file:
NAND_FLASH	mtd-utils/ubi-utils/src/reader.h	/^	NAND_FLASH = 0,$/;"	e	enum:flash_type_t
NAND_LB_FLASHCACHE	udc_cache.c	/^EXPORT_SYMBOL_GPL(NAND_LB_FLASHCACHE);$/;"	v
NAND_LB_FLASHCACHE	udc_cache.c	/^int NAND_LB_FLASHCACHE(void) $/;"	f
NAND_LB_Init	udc_cache.c	/^EXPORT_SYMBOL_GPL(NAND_LB_Init);$/;"	v
NAND_LB_Init	udc_cache.c	/^int NAND_LB_Init(void) $/;"	f
NAND_LB_MultiRead	udc_cache.c	/^static int NAND_LB_MultiRead(unsigned int Sector, void *pBuffer,unsigned int SectorCount) $/;"	f	file:
NAND_LB_MultiWrite	udc_cache.c	/^static int NAND_LB_MultiWrite(unsigned int Sector, void *pBuffer,unsigned int SectorCount) $/;"	f	file:
NAND_LB_Read	udc_cache.c	/^static int NAND_LB_Read(unsigned int Sector, void *pBuffer) $/;"	f	file:
NAND_LB_Write	udc_cache.c	/^static int NAND_LB_Write(unsigned int Sector, void *pBuffer) $/;"	f	file:
NAND_MASK	nand/ams-delta.c	35;"	d	file:
NAND_MTD_FLASHCACHE	udc_cache.c	/^EXPORT_SYMBOL_GPL(NAND_MTD_FLASHCACHE);$/;"	v
NAND_MTD_FLASHCACHE	udc_cache.c	/^int NAND_MTD_FLASHCACHE(void) $/;"	f
NAND_MTD_NAME	nand/ppchameleonevb.c	44;"	d	file:
NAND_NONE	nand/jz4750_nand.c	/^	NAND_NONE,$/;"	e	enum:__anon19	file:
NAND_PROG	nand/jz4750_nand.c	/^	NAND_PROG,$/;"	e	enum:__anon19	file:
NAND_RB_GPIO_PIN	nand/ppchameleonevb.c	51;"	d	file:
NAND_READ	nand/jz4750_nand.c	/^	NAND_READ$/;"	e	enum:__anon19	file:
NAND_SMALL_DELAY_US	nand/ppchameleonevb.c	39;"	d	file:
NAND_SMALL_SIZE	nand/ppchameleonevb.c	43;"	d	file:
NAND_nCE_GPIO_PIN	nand/ppchameleonevb.c	48;"	d	file:
NB_DATA	devices/docecc.c	435;"	d	file:
NB_DATA	nand/diskonchip.c	126;"	d	file:
NEED_BCOPY	mtd-utils/fec.c	53;"	d	file:
NEW_BOOTIMAGE_PART_SIZE	maps/dmv182.c	55;"	d	file:
NEW_BOOTLOADER_PART_SIZE	maps/dmv182.c	57;"	d	file:
NEW_GF_MATRIX	mtd-utils/fec.c	252;"	d	file:
NEW_RFS_PART_SIZE	maps/dmv182.c	59;"	d	file:
NFTLMediaHeader	mtd-utils/include/mtd/nftl-user.h	/^struct NFTLMediaHeader {$/;"	s
NFTL_findfreeblock	nftlcore.c	/^static u16 NFTL_findfreeblock(struct NFTLrecord *nftl, int desperate )$/;"	f	file:
NFTL_findwriteunit	nftlcore.c	/^static inline u16 NFTL_findwriteunit(struct NFTLrecord *nftl, unsigned block)$/;"	f	file:
NFTL_foldchain	nftlcore.c	/^static u16 NFTL_foldchain (struct NFTLrecord *nftl, unsigned thisVUC, unsigned pendingblock )$/;"	f	file:
NFTL_formatblock	nftlmount.c	/^int NFTL_formatblock(struct NFTLrecord *nftl, int block)$/;"	f
NFTL_makefreeblock	nftlcore.c	/^static u16 NFTL_makefreeblock( struct NFTLrecord *nftl , unsigned pendingblock)$/;"	f	file:
NFTL_mount	nftlmount.c	/^int NFTL_mount(struct NFTLrecord *s)$/;"	f
NFTLhdr	mtd-utils/nftl_format.c	/^struct NFTLMediaHeader *NFTLhdr;$/;"	v	typeref:struct:NFTLMediaHeader
NN	devices/docecc.c	49;"	d	file:
NN	nand/diskonchip.c	132;"	d	file:
NOR_DEFAULT_VID_HDR_OFF	mtd-utils/ubi-utils/src/reader.c	40;"	d	file:
NOR_FLASH	mtd-utils/ubi-utils/src/reader.h	/^	NOR_FLASH,$/;"	e	enum:flash_type_t
NOTALIGNED	nand/nand_base.c	1925;"	d	file:
NOTALIGNED	onenand/onenand_base.c	1274;"	d	file:
NO_EC	mtd-utils/ubi-utils/new-utils/include/libscan.h	36;"	d
NO_ERROR	mtd-utils/ubi-utils/src/ubigen.h	/^	NO_ERROR	 = 0x00000000,$/;"	e	enum:action
NROOTS	nand/diskonchip.c	128;"	d	file:
NR_CS553X_CONTROLLERS	nand/cs553x_nand.c	31;"	d	file:
NR_PKTS	mtd-utils/fectest.c	15;"	d	file:
NR_SUBMTD	maps/ceiva.c	112;"	d	file:
NS_DBG	nand/nandsim.c	167;"	d	file:
NS_ERR	nand/nandsim.c	171;"	d	file:
NS_GET_PAGE	nand/nandsim.c	/^static inline union ns_mem *NS_GET_PAGE(struct nandsim *ns)$/;"	f	file:
NS_INFO	nand/nandsim.c	173;"	d	file:
NS_IN_KHZ	nand/s3c2410.c	155;"	d	file:
NS_IS_INITIALIZED	nand/nandsim.c	183;"	d	file:
NS_LARGEST_PAGE_SIZE	nand/nandsim.c	159;"	d	file:
NS_LOG	nand/nandsim.c	165;"	d	file:
NS_MAX_PREVSTATES	nand/nandsim.c	265;"	d	file:
NS_MDELAY	nand/nandsim.c	179;"	d	file:
NS_OPER_NUM	nand/nandsim.c	244;"	d	file:
NS_OPER_STATES	nand/nandsim.c	245;"	d	file:
NS_OUTPUT_PREFIX	nand/nandsim.c	162;"	d	file:
NS_PAGE_BYTE_OFF	nand/nandsim.c	/^static inline u_char *NS_PAGE_BYTE_OFF(struct nandsim *ns)$/;"	f	file:
NS_RAW_OFFSET	nand/nandsim.c	192;"	d	file:
NS_RAW_OFFSET_OOB	nand/nandsim.c	196;"	d	file:
NS_STATE	nand/nandsim.c	258;"	d	file:
NS_STATUS_FAILED	nand/nandsim.c	189;"	d	file:
NS_STATUS_OK	nand/nandsim.c	186;"	d	file:
NS_UDELAY	nand/nandsim.c	177;"	d	file:
NS_WARN	nand/nandsim.c	169;"	d	file:
NTARGETS	mtd-utils/ubi-utils/Makefile	/^NTARGETS = ubiattach ubicrc32 ubidetach ubimkvol ubinfo ubinize \\$/;"	m
NUMVUNITS	mtd-utils/nftldump.c	64;"	d	file:
NUM_AMD_PARTITIONS	maps/nettel.c	134;"	d	file:
NUM_BLOB_BLOCKS	devices/lart.c	84;"	d	file:
NUM_FLASHBANKS	maps/impa7.c	29;"	d	file:
NUM_FLASH_BANKS	maps/netsc520.c	91;"	d	file:
NUM_FLASH_BANKS	maps/sbc8240.c	68;"	d	file:
NUM_FLASH_BANKS	maps/sc520cdp.c	109;"	d	file:
NUM_HIGHLVL_PARTITIONS	maps/dilnetpc.c	347;"	d	file:
NUM_INITRD_BLOCKS	devices/lart.c	94;"	d	file:
NUM_KERNEL_BLOCKS	devices/lart.c	89;"	d	file:
NUM_PARTITIONS	maps/dbox2-flash.c	59;"	d	file:
NUM_PARTITIONS	maps/dilnetpc.c	302;"	d	file:
NUM_PARTITIONS	maps/h720x-flash.c	61;"	d	file:
NUM_PARTITIONS	maps/mbx860.c	34;"	d	file:
NUM_PARTITIONS	maps/netsc520.c	79;"	d	file:
NUM_PARTITIONS	maps/sbc_gxx.c	104;"	d	file:
NUM_PARTITIONS	maps/scx200_docflash.c	72;"	d	file:
NUM_PARTITIONS	maps/ts5500_flash.c	66;"	d	file:
NUM_PARTITIONS	maps/uclinux.c	38;"	d	file:
NUM_PARTITIONS	nand/cmx270_nand.c	63;"	d	file:
NUM_PARTITIONS	nand/edb7312.c	70;"	d	file:
NUM_PARTITIONS	nand/h1910.c	53;"	d	file:
NUM_PARTITIONS	nand/ppchameleonevb.c	103;"	d	file:
NUM_PARTITIONS	nand/rtc_from4.c	107;"	d	file:
NUM_PARTITIONS	nand/spia.c	81;"	d	file:
NUM_PARTITIONS	nand/ts7250.c	42;"	d	file:
NUM_PARTITIONS128K	nand/autcpu12.c	89;"	d	file:
NUM_PARTITIONS16K	nand/autcpu12.c	86;"	d	file:
NUM_PARTITIONS32K	nand/autcpu12.c	87;"	d	file:
NUM_PARTITIONS32M	nand/toto.c	75;"	d	file:
NUM_PARTITIONS64K	nand/autcpu12.c	88;"	d	file:
NUM_PARTITIONS64M	nand/toto.c	76;"	d	file:
NUM_REDWOOD_FLASH_PARTITIONS	maps/redwood.c	123;"	d	file:
NUM_SC520_PAR	maps/sc520cdp.c	124;"	d	file:
NVALS	mtd-utils/ubi-utils/new-utils/src/dictionary.c	366;"	d	file:
NoOfBDTLPartitions	mtd-utils/include/mtd/inftl-user.h	/^	__u32 NoOfBDTLPartitions;$/;"	m	struct:INFTLMediaHeader
NoOfBinaryPartitions	mtd-utils/include/mtd/inftl-user.h	/^	__u32 NoOfBinaryPartitions;$/;"	m	struct:INFTLMediaHeader
NoOfBootImageBlocks	mtd-utils/include/mtd/inftl-user.h	/^	__u32 NoOfBootImageBlocks;$/;"	m	struct:INFTLMediaHeader
NumEraseRegions	chips/jedec_probe.c	/^	const int NumEraseRegions;$/;"	m	struct:amd_flash_info	file:
NumEraseUnits	mtd-utils/include/mtd/ftl-user.h	/^    u_int16_t	NumEraseUnits;$/;"	m	struct:erase_unit_header_t
NumEraseUnits	mtd-utils/include/mtd/nftl-user.h	/^	uint16_t NumEraseUnits;$/;"	m	struct:NFTLMediaHeader
NumMedHeads	mtd-utils/nftldump.c	/^static int NumMedHeads;$/;"	v	file:
NumTransferUnits	mtd-utils/include/mtd/ftl-user.h	/^    u_int8_t	NumTransferUnits;$/;"	m	struct:erase_unit_header_t
NumVMPages	mtd-utils/include/mtd/ftl-user.h	/^    u_int16_t	NumVMPages;$/;"	m	struct:erase_unit_header_t
OFFSETS	mtd-utils/tests/ubi-tests/io_read.c	51;"	d	file:
OFFSET_CONTINUOUS	cmdlinepart.c	46;"	d	file:
OFTEN_USE_CACHE	udc_cache.c	38;"	d	file:
OF_FLASH_PARTS	maps/physmap_of.c	142;"	d	file:
OF_FLASH_PARTS	maps/physmap_of.c	36;"	d	file:
OMAP_TOTO_FLASH_BASE	maps/omap-toto-flash.c	31;"	d	file:
OMAP_TOTO_FLASH_SIZE	maps/omap-toto-flash.c	32;"	d	file:
ONENAND_CORE	onenand/onenand_sim.c	43;"	d	file:
ONENAND_CORE_SPARE	onenand/onenand_sim.c	44;"	d	file:
ONENAND_GET_WP_STATUS	onenand/onenand_sim.c	53;"	d	file:
ONENAND_MAIN_AREA	onenand/onenand_sim.c	47;"	d	file:
ONENAND_SET_WP_STATUS	onenand/onenand_sim.c	56;"	d	file:
ONENAND_SPARE_AREA	onenand/onenand_sim.c	50;"	d	file:
ONESHOT	mtd-utils/tests/jittertest/JitterTest.c	/^        ONESHOT,$/;"	e	enum:timerActions	file:
OOB_SIZE	ssfdc.c	40;"	d	file:
OOPS_PAGE_SIZE	mtdoops.c	33;"	d	file:
OPCODE_BE_32K	devices/m25p80.c	40;"	d	file:
OPCODE_BE_4K	devices/m25p80.c	39;"	d	file:
OPCODE_FAST_READ	devices/m25p80.c	37;"	d	file:
OPCODE_PP	devices/m25p80.c	38;"	d	file:
OPCODE_RDID	devices/m25p80.c	42;"	d	file:
OPCODE_RDSR	devices/m25p80.c	35;"	d	file:
OPCODE_READ	devices/m25p80.c	36;"	d	file:
OPCODE_SE	devices/m25p80.c	41;"	d	file:
OPCODE_WREN	devices/m25p80.c	34;"	d	file:
OPTFLAGS	mtd-utils/Makefile	/^OPTFLAGS := -O2 -Wall$/;"	m
OPTFLAGS	mtd-utils/ubi-utils/Makefile	/^OPTFLAGS := -O2 -g -Wall$/;"	m
OPTFLAGS	mtd-utils/ubi-utils/new-utils/Makefile	/^OPTFLAGS := -O2 -Wall$/;"	m
OPT_ANY	nand/nandsim.c	247;"	d	file:
OPT_AUTOINCR	nand/nandsim.c	252;"	d	file:
OPT_ERASE	mtd-utils/mtd_debug.c	367;"	d	file:
OPT_INFO	mtd-utils/mtd_debug.c	364;"	d	file:
OPT_LARGEPAGE	nand/nandsim.c	254;"	d	file:
OPT_PAGE2048	nand/nandsim.c	250;"	d	file:
OPT_PAGE256	nand/nandsim.c	248;"	d	file:
OPT_PAGE512	nand/nandsim.c	249;"	d	file:
OPT_PAGE512_8BIT	nand/nandsim.c	253;"	d	file:
OPT_READ	mtd-utils/mtd_debug.c	365;"	d	file:
OPT_SMALLPAGE	nand/nandsim.c	255;"	d	file:
OPT_SMARTMEDIA	nand/nandsim.c	251;"	d	file:
OPT_WRITE	mtd-utils/mtd_debug.c	366;"	d	file:
OP_COMPARE_BUF1	devices/mtd_dataflash.c	69;"	d	file:
OP_COMPARE_BUF2	devices/mtd_dataflash.c	70;"	d	file:
OP_ERASE_BLOCK	devices/mtd_dataflash.c	52;"	d	file:
OP_ERASE_PAGE	devices/mtd_dataflash.c	51;"	d	file:
OP_MREAD_BUFFER1	devices/mtd_dataflash.c	57;"	d	file:
OP_MREAD_BUFFER2	devices/mtd_dataflash.c	58;"	d	file:
OP_MWERASE_BUFFER1	devices/mtd_dataflash.c	59;"	d	file:
OP_MWERASE_BUFFER2	devices/mtd_dataflash.c	60;"	d	file:
OP_MWRITE_BUFFER1	devices/mtd_dataflash.c	61;"	d	file:
OP_MWRITE_BUFFER2	devices/mtd_dataflash.c	62;"	d	file:
OP_PROGRAM_VIA_BUF1	devices/mtd_dataflash.c	65;"	d	file:
OP_PROGRAM_VIA_BUF2	devices/mtd_dataflash.c	66;"	d	file:
OP_READ_BUFFER1	devices/mtd_dataflash.c	45;"	d	file:
OP_READ_BUFFER2	devices/mtd_dataflash.c	46;"	d	file:
OP_READ_CONTINUOUS	devices/mtd_dataflash.c	38;"	d	file:
OP_READ_ID	devices/mtd_dataflash.c	79;"	d	file:
OP_READ_PAGE	devices/mtd_dataflash.c	39;"	d	file:
OP_READ_SECURITY	devices/mtd_dataflash.c	80;"	d	file:
OP_READ_STATUS	devices/mtd_dataflash.c	42;"	d	file:
OP_REWRITE_VIA_BUF1	devices/mtd_dataflash.c	73;"	d	file:
OP_REWRITE_VIA_BUF2	devices/mtd_dataflash.c	74;"	d	file:
OP_TRANSFER_BUF1	devices/mtd_dataflash.c	55;"	d	file:
OP_TRANSFER_BUF2	devices/mtd_dataflash.c	56;"	d	file:
OP_WRITE_BUFFER1	devices/mtd_dataflash.c	47;"	d	file:
OP_WRITE_BUFFER2	devices/mtd_dataflash.c	48;"	d	file:
OP_WRITE_SECURITY	devices/mtd_dataflash.c	81;"	d	file:
OSAK_VERSION	mtd-utils/include/mtd/inftl-user.h	11;"	d
OTPGETREGIONCOUNT	mtd-utils/include/mtd/mtd-abi.h	108;"	d
OTPGETREGIONINFO	mtd-utils/include/mtd/mtd-abi.h	109;"	d
OTPLOCK	mtd-utils/include/mtd/mtd-abi.h	110;"	d
OTPSELECT	mtd-utils/include/mtd/mtd-abi.h	107;"	d
OctProbe	maps/octagon-5066.c	/^static int __init OctProbe(void)$/;"	f	file:
Offset	ftl.c	/^	u_int32_t		Offset;$/;"	m	struct:partition_t::eun_info_t	file:
Offset	ftl.c	/^	u_int32_t		Offset;$/;"	m	struct:partition_t::xfer_info_t	file:
OsakVersion	mtd-utils/include/mtd/inftl-user.h	/^	__u32 OsakVersion;$/;"	m	struct:INFTLMediaHeader
OutFileName	mtd-utils/tests/jittertest/JitterTest.c	/^static char OutFileName[MAX_FILE_NAME_LEN+1];  \/* output file name            *\/$/;"	v	file:
PACKAGE_BUGREPORT	mtd-utils/ubi-utils/src/config.h	23;"	d
PAD	mtd-utils/jffs2dump.c	40;"	d	file:
PAD	mtd-utils/mkfs.jffs2.c	86;"	d	file:
PAD	mtd-utils/sumtool.c	50;"	d	file:
PADDING	mtd-utils/ubi-utils/src/bin2nand.c	67;"	d	file:
PAGESIZE	mtd-utils/ubi-utils/src/bin2nand.c	66;"	d	file:
PAGE_IO	maps/octagon-5066.c	40;"	d	file:
PAGE_IO	maps/sbc_gxx.c	71;"	d	file:
PAGE_IO_SIZE	maps/sbc_gxx.c	72;"	d	file:
PAGE_SIZE	mtd-utils/tests/ubi-tests/common.h	34;"	d
PARAMS_PARTITION_SIZE_KiB	maps/ceiva.c	60;"	d	file:
PART	mtdpart.c	41;"	d	file:
PARTITION_COUNT	maps/cfi_flagadm.c	89;"	d	file:
PART_BITS	ftl.c	101;"	d	file:
PART_BITS	rfd_ftl.c	40;"	d	file:
PAR_SIZE	nand/jz4740_nand.c	33;"	d	file:
PATH	mtd-utils/ubi-utils/scripts/Makefile	/^PATH := $(PATH):\/opt\/ppc\/usr\/bin:..\/perl:..$/;"	m
PBA_HI	nand/alauda.c	47;"	d	file:
PBA_LO	nand/alauda.c	46;"	d	file:
PBA_ZONE	nand/alauda.c	48;"	d	file:
PCC_AWER_B	maps/dilnetpc.c	93;"	d	file:
PCC_DATA	maps/dilnetpc.c	91;"	d	file:
PCC_INDEX	maps/dilnetpc.c	90;"	d	file:
PCC_MWAOR_1_Hi	maps/dilnetpc.c	99;"	d	file:
PCC_MWAOR_1_Lo	maps/dilnetpc.c	98;"	d	file:
PCC_MWEAR_1_Hi	maps/dilnetpc.c	97;"	d	file:
PCC_MWEAR_1_Lo	maps/dilnetpc.c	96;"	d	file:
PCC_MWSAR_1_Hi	maps/dilnetpc.c	95;"	d	file:
PCC_MWSAR_1_Lo	maps/dilnetpc.c	94;"	d	file:
PDD_HANDLING_NUM	mtd-utils/ubi-utils/src/pfiflash.h	/^	PDD_HANDLING_NUM, \/* always the last item *\/$/;"	e	enum:pdd_handling_t
PDD_KEEP	mtd-utils/ubi-utils/src/pfiflash.h	/^	PDD_KEEP = 0,$/;"	e	enum:pdd_handling_t
PDD_MERGE	mtd-utils/ubi-utils/src/pfiflash.h	/^	PDD_MERGE,$/;"	e	enum:pdd_handling_t
PDD_OVERWRITE	mtd-utils/ubi-utils/src/pfiflash.h	/^	PDD_OVERWRITE,$/;"	e	enum:pdd_handling_t
PERCENTAGE	mtd-utils/flashcp.c	61;"	d	file:
PERCENTUSED	mtd-utils/include/mtd/inftl-user.h	12;"	d
PERLPROGS	mtd-utils/ubi-utils/Makefile	/^PERLPROGS = mkpfi ubicrc32.pl$/;"	m
PFIFLASH_CMP_DIFF	mtd-utils/ubi-utils/src/pfiflash_error.h	/^	PFIFLASH_CMP_DIFF$/;"	e	enum:pfiflash_err
PFIFLASH_ERRSTR	mtd-utils/ubi-utils/src/pfiflash_error.h	/^const char *const PFIFLASH_ERRSTR[] = {$/;"	v
PFIFLASH_ERR_BOOTENV_CREATE	mtd-utils/ubi-utils/src/pfiflash_error.h	/^	PFIFLASH_ERR_BOOTENV_CREATE,$/;"	e	enum:pfiflash_err
PFIFLASH_ERR_BOOTENV_READ	mtd-utils/ubi-utils/src/pfiflash_error.h	/^	PFIFLASH_ERR_BOOTENV_READ,$/;"	e	enum:pfiflash_err
PFIFLASH_ERR_BOOTENV_SIZE	mtd-utils/ubi-utils/src/pfiflash_error.h	/^	PFIFLASH_ERR_BOOTENV_SIZE,$/;"	e	enum:pfiflash_err
PFIFLASH_ERR_BOOTENV_WRITE	mtd-utils/ubi-utils/src/pfiflash_error.h	/^	PFIFLASH_ERR_BOOTENV_WRITE,$/;"	e	enum:pfiflash_err
PFIFLASH_ERR_COMPARE	mtd-utils/ubi-utils/src/pfiflash_error.h	/^	PFIFLASH_ERR_COMPARE,$/;"	e	enum:pfiflash_err
PFIFLASH_ERR_CRC_CHECK	mtd-utils/ubi-utils/src/pfiflash_error.h	/^	PFIFLASH_ERR_CRC_CHECK,$/;"	e	enum:pfiflash_err
PFIFLASH_ERR_EOF	mtd-utils/ubi-utils/src/pfiflash_error.h	/^	PFIFLASH_ERR_EOF = 1,$/;"	e	enum:pfiflash_err
PFIFLASH_ERR_FIO	mtd-utils/ubi-utils/src/pfiflash_error.h	/^	PFIFLASH_ERR_FIO,$/;"	e	enum:pfiflash_err
PFIFLASH_ERR_MTD_CLOSE	mtd-utils/ubi-utils/src/pfiflash_error.h	/^	PFIFLASH_ERR_MTD_CLOSE,$/;"	e	enum:pfiflash_err
PFIFLASH_ERR_MTD_ERASE	mtd-utils/ubi-utils/src/pfiflash_error.h	/^	PFIFLASH_ERR_MTD_ERASE,$/;"	e	enum:pfiflash_err
PFIFLASH_ERR_MTD_OPEN	mtd-utils/ubi-utils/src/pfiflash_error.h	/^	PFIFLASH_ERR_MTD_OPEN,$/;"	e	enum:pfiflash_err
PFIFLASH_ERR_PDD_UNKNOWN	mtd-utils/ubi-utils/src/pfiflash_error.h	/^	PFIFLASH_ERR_PDD_UNKNOWN,$/;"	e	enum:pfiflash_err
PFIFLASH_ERR_UBI_CLOSE	mtd-utils/ubi-utils/src/pfiflash_error.h	/^	PFIFLASH_ERR_UBI_CLOSE,$/;"	e	enum:pfiflash_err
PFIFLASH_ERR_UBI_MKVOL	mtd-utils/ubi-utils/src/pfiflash_error.h	/^	PFIFLASH_ERR_UBI_MKVOL,$/;"	e	enum:pfiflash_err
PFIFLASH_ERR_UBI_OPEN	mtd-utils/ubi-utils/src/pfiflash_error.h	/^	PFIFLASH_ERR_UBI_OPEN,$/;"	e	enum:pfiflash_err
PFIFLASH_ERR_UBI_RMVOL	mtd-utils/ubi-utils/src/pfiflash_error.h	/^	PFIFLASH_ERR_UBI_RMVOL,$/;"	e	enum:pfiflash_err
PFIFLASH_ERR_UBI_UNKNOWN	mtd-utils/ubi-utils/src/pfiflash_error.h	/^	PFIFLASH_ERR_UBI_UNKNOWN,$/;"	e	enum:pfiflash_err
PFIFLASH_ERR_UBI_VID_OOB	mtd-utils/ubi-utils/src/pfiflash_error.h	/^	PFIFLASH_ERR_UBI_VID_OOB,$/;"	e	enum:pfiflash_err
PFIFLASH_ERR_UBI_VOL_FOPEN	mtd-utils/ubi-utils/src/pfiflash_error.h	/^	PFIFLASH_ERR_UBI_VOL_FOPEN,$/;"	e	enum:pfiflash_err
PFIFLASH_ERR_UBI_VOL_UPDATE	mtd-utils/ubi-utils/src/pfiflash_error.h	/^	PFIFLASH_ERR_UBI_VOL_UPDATE,$/;"	e	enum:pfiflash_err
PFIFLASH_MAX_ERR_BUF_SIZE	mtd-utils/ubi-utils/src/pfiflash.h	33;"	d
PFI_DATA	mtd-utils/ubi-utils/src/pfi.c	43;"	d	file:
PFI_DATA_START	mtd-utils/ubi-utils/src/pfi.h	58;"	d
PFI_EBADTYPE	mtd-utils/ubi-utils/src/pfi.h	52;"	d
PFI_EFILE	mtd-utils/ubi-utils/src/pfi.h	53;"	d
PFI_EFILEINVAL	mtd-utils/ubi-utils/src/pfi.h	54;"	d
PFI_EINSUFF	mtd-utils/ubi-utils/src/pfi.h	49;"	d
PFI_EINVAL	mtd-utils/ubi-utils/src/pfi.h	55;"	d
PFI_EMAX	mtd-utils/ubi-utils/src/pfi.h	59;"	d
PFI_EMODE	mtd-utils/ubi-utils/src/pfi.h	57;"	d
PFI_ENOHEADER	mtd-utils/ubi-utils/src/pfi.h	48;"	d
PFI_ENOMEM	mtd-utils/ubi-utils/src/pfi.h	51;"	d
PFI_ENOVERSION	mtd-utils/ubi-utils/src/pfi.h	47;"	d
PFI_ERANGE	mtd-utils/ubi-utils/src/pfi.h	56;"	d
PFI_EUNDEF	mtd-utils/ubi-utils/src/pfi.h	50;"	d
PFI_FLAG_PROTECTED	mtd-utils/ubi-utils/src/pfi.h	74;"	d
PFI_HDRVERSION	mtd-utils/ubi-utils/src/pfi.h	45;"	d
PFI_IS_RAW	mtd-utils/ubi-utils/src/pfi.c	126;"	d	file:
PFI_IS_UBI	mtd-utils/ubi-utils/src/pfi.c	123;"	d	file:
PFI_KEYWORD_LEN	mtd-utils/ubi-utils/src/pfi.h	64;"	d
PFI_LABEL_LEN	mtd-utils/ubi-utils/src/pfi.h	62;"	d
PFI_LISTVALUE	mtd-utils/ubi-utils/src/pfi.c	80;"	d	file:
PFI_MAGIC	mtd-utils/ubi-utils/src/pfi.c	42;"	d	file:
PFI_MAGIC_LEN	mtd-utils/ubi-utils/src/pfi.c	44;"	d	file:
PFI_MANDATORY	mtd-utils/ubi-utils/src/pfi.c	78;"	d	file:
PFI_MANDATORY_RAW	mtd-utils/ubi-utils/src/pfi.c	82;"	d	file:
PFI_MANDATORY_UBI	mtd-utils/ubi-utils/src/pfi.c	81;"	d	file:
PFI_STRING	mtd-utils/ubi-utils/src/pfi.c	79;"	d	file:
PFI_UBI_MAX_VOLUMES	mtd-utils/ubi-utils/src/pfi.h	67;"	d
PFI_UBI_VOL_NAME_LEN	mtd-utils/ubi-utils/src/pfi.h	68;"	d
PFX	maps/bast-flash.c	55;"	d	file:
PGM_SETUP	devices/lart.c	105;"	d	file:
PHYSADDR	udc_cache.c	62;"	d	file:
PHYSMAP_COMPAT	maps/physmap.c	205;"	d	file:
PID_BUF_SIZE	mtd-utils/tests/fs-tests/lib/tests.c	1068;"	d	file:
PIIXE_IOBASE_RESOURCE	maps/l440gx.c	17;"	d	file:
PIN_OPT_IDE	nand/cs553x_nand.c	56;"	d	file:
PKT_SIZE	mtd-utils/mcast_image.h	3;"	d
PM49FL002	chips/jedec_probe.c	124;"	d	file:
PM49FL004	chips/jedec_probe.c	125;"	d	file:
PM49FL008	chips/jedec_probe.c	126;"	d	file:
PMC551_VERSION	devices/pmc551.c	/^MODULE_DESCRIPTION(PMC551_VERSION);$/;"	v
POSIX_ACL_XATTR_ACCESS	mtd-utils/include/mtd/jffs2-user.h	46;"	d
POSIX_ACL_XATTR_ACCESS_LEN	mtd-utils/include/mtd/jffs2-user.h	47;"	d
POSIX_ACL_XATTR_DEFAULT	mtd-utils/include/mtd/jffs2-user.h	48;"	d
POSIX_ACL_XATTR_DEFAULT_LEN	mtd-utils/include/mtd/jffs2-user.h	49;"	d
POSIX_ACL_XATTR_VERSION	mtd-utils/include/mtd/jffs2-user.h	69;"	d
PREFIX	rfd_ftl.c	32;"	d	file:
PRERELEASE	nftlcore.c	12;"	d	file:
PREWRITE_CACHE	udc_cache.c	37;"	d	file:
PRIM	devices/docecc.c	48;"	d	file:
PRIORITY_POLICY	mtd-utils/tests/jittertest/JitterTest.c	162;"	d	file:
PROBETYPES	maps/edb7312.c	31;"	d	file:
PROBETYPES	maps/impa7.c	33;"	d	file:
PROGRAM	mtd-utils/flash_eraseall.c	43;"	d	file:
PROGRAM	mtd-utils/jffs2dump.c	37;"	d	file:
PROGRAM	mtd-utils/nanddump.c	32;"	d	file:
PROGRAM	mtd-utils/nanddump_vfat.c	32;"	d	file:
PROGRAM	mtd-utils/nandwrite.c	39;"	d	file:
PROGRAM	mtd-utils/nandwrite_mlc.c	39;"	d	file:
PROGRAM	mtd-utils/rfddump.c	54;"	d	file:
PROGRAM	mtd-utils/rfdformat.c	29;"	d	file:
PROGRAM_NAME	mtd-utils/ubi-utils/new-utils/src/libmtd.c	33;"	d	file:
PROGRAM_NAME	mtd-utils/ubi-utils/new-utils/src/libscan.c	38;"	d	file:
PROGRAM_NAME	mtd-utils/ubi-utils/new-utils/src/libubi.c	37;"	d	file:
PROGRAM_NAME	mtd-utils/ubi-utils/new-utils/src/libubigen.c	38;"	d	file:
PROGRAM_NAME	mtd-utils/ubi-utils/new-utils/src/ubiattach.c	34;"	d	file:
PROGRAM_NAME	mtd-utils/ubi-utils/new-utils/src/ubicrc32.c	38;"	d	file:
PROGRAM_NAME	mtd-utils/ubi-utils/new-utils/src/ubicrcsf.c	40;"	d	file:
PROGRAM_NAME	mtd-utils/ubi-utils/new-utils/src/ubicrcvol.c	43;"	d	file:
PROGRAM_NAME	mtd-utils/ubi-utils/new-utils/src/ubidetach.c	34;"	d	file:
PROGRAM_NAME	mtd-utils/ubi-utils/new-utils/src/ubidumpvol.c	42;"	d	file:
PROGRAM_NAME	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	42;"	d	file:
PROGRAM_NAME	mtd-utils/ubi-utils/new-utils/src/ubimkvol.c	36;"	d	file:
PROGRAM_NAME	mtd-utils/ubi-utils/new-utils/src/ubinfo.c	34;"	d	file:
PROGRAM_NAME	mtd-utils/ubi-utils/new-utils/src/ubinize.c	42;"	d	file:
PROGRAM_NAME	mtd-utils/ubi-utils/new-utils/src/ubirefimg.c	19;"	d	file:
PROGRAM_NAME	mtd-utils/ubi-utils/new-utils/src/ubirmvol.c	36;"	d	file:
PROGRAM_NAME	mtd-utils/ubi-utils/new-utils/src/ubiupdatevol.c	41;"	d	file:
PROGRAM_VERSION	mtd-utils/ubi-utils/new-utils/src/ubiattach.c	33;"	d	file:
PROGRAM_VERSION	mtd-utils/ubi-utils/new-utils/src/ubicrc32.c	37;"	d	file:
PROGRAM_VERSION	mtd-utils/ubi-utils/new-utils/src/ubicrcsf.c	39;"	d	file:
PROGRAM_VERSION	mtd-utils/ubi-utils/new-utils/src/ubicrcvol.c	42;"	d	file:
PROGRAM_VERSION	mtd-utils/ubi-utils/new-utils/src/ubidetach.c	33;"	d	file:
PROGRAM_VERSION	mtd-utils/ubi-utils/new-utils/src/ubidumpvol.c	41;"	d	file:
PROGRAM_VERSION	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	41;"	d	file:
PROGRAM_VERSION	mtd-utils/ubi-utils/new-utils/src/ubimkvol.c	35;"	d	file:
PROGRAM_VERSION	mtd-utils/ubi-utils/new-utils/src/ubinfo.c	33;"	d	file:
PROGRAM_VERSION	mtd-utils/ubi-utils/new-utils/src/ubinize.c	41;"	d	file:
PROGRAM_VERSION	mtd-utils/ubi-utils/new-utils/src/ubirefimg.c	18;"	d	file:
PROGRAM_VERSION	mtd-utils/ubi-utils/new-utils/src/ubirmvol.c	35;"	d	file:
PROGRAM_VERSION	mtd-utils/ubi-utils/new-utils/src/ubiupdatevol.c	40;"	d	file:
PROGRAM_VERSION	mtd-utils/ubi-utils/src/bin2nand.c	50;"	d	file:
PROGRAM_VERSION	mtd-utils/ubi-utils/src/mkbootenv.c	38;"	d	file:
PROGRAM_VERSION	mtd-utils/ubi-utils/src/nand2bin.c	47;"	d	file:
PROGRAM_VERSION	mtd-utils/ubi-utils/src/pddcustomize.c	50;"	d	file:
PROGRAM_VERSION	mtd-utils/ubi-utils/src/pfi2bin.c	49;"	d	file:
PROGRAM_VERSION	mtd-utils/ubi-utils/src/pfiflash.c	47;"	d	file:
PROGRAM_VERSION	mtd-utils/ubi-utils/src/ubigen.c	39;"	d	file:
PROGRAM_VERSION	mtd-utils/ubi-utils/src/ubimirror.c	39;"	d	file:
Partitions	mtd-utils/include/mtd/inftl-user.h	/^	struct INFTLPartition Partitions[4];$/;"	m	struct:INFTLMediaHeader	typeref:struct:INFTLMediaHeader::INFTLPartition
PercentUsed	mtd-utils/include/mtd/inftl-user.h	/^	__u32 PercentUsed;$/;"	m	struct:INFTLMediaHeader
Pp	devices/docecc.c	/^static const int Pp[MM+1] = { 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1 };$/;"	v	file:
PrevTimeVal	mtd-utils/tests/jittertest/JitterTest.c	/^static struct timeval PrevTimeVal;     \/* previous time structure     *\/$/;"	v	typeref:struct:timeval	file:
PrintHelpInfo	mtd-utils/tests/jittertest/JitterTest.c	/^void PrintHelpInfo(void)$/;"	f
PrintHelpInfo	mtd-utils/tests/jittertest/plotJittervsFill.c	/^void PrintHelpInfo(void)$/;"	f
PrintVersionInfo	mtd-utils/tests/jittertest/JitterTest.c	/^void PrintVersionInfo(void)$/;"	f
ProfileTriggerMSecs	mtd-utils/tests/jittertest/JitterTest.c	/^static long ProfileTriggerMSecs = 15000l; \/* Jitter time in seconds that triggers$/;"	v	file:
RANDOMDROP	mtd-utils/serve_image.c	25;"	d	file:
RAWTARGETS	mtd-utils/Makefile	/^RAWTARGETS = flash_erase flash_eraseall nanddump nanddump_vfat \\$/;"	m
RB_BLACK	mtd-utils/rbtree.h	104;"	d
RB_CLEAR_NODE	mtd-utils/rbtree.h	144;"	d
RB_EMPTY_NODE	mtd-utils/rbtree.h	143;"	d
RB_EMPTY_ROOT	mtd-utils/rbtree.h	142;"	d
RB_RED	mtd-utils/rbtree.h	103;"	d
RB_ROOT	mtd-utils/rbtree.h	132;"	d
READ_ARRAY	devices/lart.c	101;"	d	file:
READ_FILE_MESSAGE	mtd-utils/tests/jittertest/JitterTest.c	126;"	d	file:
READ_ID_CODES	devices/lart.c	102;"	d	file:
REPROGRAM_PAR	maps/sc520cdp.c	59;"	d	file:
REVERSE_POLARITY	mtd-utils/include/mtd/ftl-user.h	60;"	d
RFD_FTL_MAJOR	rfd_ftl.c	36;"	d	file:
RFD_MAGIC	mtd-utils/rfddump.c	29;"	d	file:
RFD_MAGIC	rfd_ftl.c	43;"	d	file:
ROM_PROBE_STEP_SIZE	maps/amd76xrom.c	29;"	d	file:
ROM_PROBE_STEP_SIZE	maps/ck804xrom.c	29;"	d	file:
ROM_PROBE_STEP_SIZE	maps/esb2rom.c	31;"	d	file:
ROM_PROBE_STEP_SIZE	maps/ichxrom.c	27;"	d	file:
ROOT_PARTITION_SIZE_KiB	maps/ceiva.c	63;"	d	file:
RTC_FROM4_ALE	nand/rtc_from4.c	59;"	d	file:
RTC_FROM4_CLE	nand/rtc_from4.c	58;"	d	file:
RTC_FROM4_DEVICE_READY	nand/rtc_from4.c	70;"	d	file:
RTC_FROM4_FIO_BASE	nand/rtc_from4.c	55;"	d	file:
RTC_FROM4_FPGA_SR	nand/rtc_from4.c	69;"	d	file:
RTC_FROM4_HWECC	nand/rtc_from4.c	90;"	d	file:
RTC_FROM4_MAX_CHIPS	nand/rtc_from4.c	40;"	d	file:
RTC_FROM4_NAND_ADDR_FPGA	nand/rtc_from4.c	64;"	d	file:
RTC_FROM4_NAND_ADDR_MASK	nand/rtc_from4.c	66;"	d	file:
RTC_FROM4_NAND_ADDR_SLOT3	nand/rtc_from4.c	62;"	d	file:
RTC_FROM4_NAND_ADDR_SLOT4	nand/rtc_from4.c	63;"	d	file:
RTC_FROM4_NO_VIRTBLOCKS	nand/rtc_from4.c	93;"	d	file:
RTC_FROM4_RS_ECC	nand/rtc_from4.c	80;"	d	file:
RTC_FROM4_RS_ECCN	nand/rtc_from4.c	81;"	d	file:
RTC_FROM4_RS_ECC_CHK	nand/rtc_from4.c	84;"	d	file:
RTC_FROM4_RS_ECC_CHK_ERROR	nand/rtc_from4.c	85;"	d	file:
RTC_FROM4_RS_ECC_CTL	nand/rtc_from4.c	74;"	d	file:
RTC_FROM4_RS_ECC_CTL_CLR	nand/rtc_from4.c	75;"	d	file:
RTC_FROM4_RS_ECC_CTL_FD_E	nand/rtc_from4.c	77;"	d	file:
RTC_FROM4_RS_ECC_CTL_GEN	nand/rtc_from4.c	76;"	d	file:
RW_PART0_OF	maps/redwood.c	32;"	d	file:
RW_PART0_OF	maps/redwood.c	79;"	d	file:
RW_PART0_SZ	maps/redwood.c	33;"	d	file:
RW_PART0_SZ	maps/redwood.c	80;"	d	file:
RW_PART1_OF	maps/redwood.c	34;"	d	file:
RW_PART1_OF	maps/redwood.c	81;"	d	file:
RW_PART1_SZ	maps/redwood.c	35;"	d	file:
RW_PART1_SZ	maps/redwood.c	82;"	d	file:
RW_PART2_OF	maps/redwood.c	36;"	d	file:
RW_PART2_OF	maps/redwood.c	83;"	d	file:
RW_PART2_SZ	maps/redwood.c	37;"	d	file:
RW_PART2_SZ	maps/redwood.c	84;"	d	file:
RW_PART3_OF	maps/redwood.c	38;"	d	file:
RW_PART3_OF	maps/redwood.c	85;"	d	file:
RW_PART3_SZ	maps/redwood.c	39;"	d	file:
RW_PART3_SZ	maps/redwood.c	86;"	d	file:
RW_PART4_OF	maps/redwood.c	40;"	d	file:
RW_PART4_SZ	maps/redwood.c	41;"	d	file:
ReadFile	mtd-utils/tests/jittertest/JitterTest.c	/^static char ReadFile[MAX_FILE_NAME_LEN+1]; \/* This file is read. Should$/;"	v	file:
ReplUnitNum	mtd-utils/include/mtd/nftl-user.h	/^	uint16_t ReplUnitNum;$/;"	m	struct:nftl_uci0
RequestedPriority	mtd-utils/tests/jittertest/JitterTest.c	/^static int RequestedPriority;          \/* requested priority          *\/$/;"	v	file:
Reserved	mtd-utils/include/mtd/ftl-user.h	/^    u_int8_t	Reserved[12];$/;"	m	struct:erase_unit_header_t
Reserved	mtd-utils/include/mtd/inftl-user.h	/^	uint8_t Reserved[4];$/;"	m	struct:inftl_unittail
Reserved0	mtd-utils/include/mtd/inftl-user.h	/^	__u32 Reserved0;$/;"	m	struct:INFTLPartition
Reserved1	mtd-utils/include/mtd/inftl-user.h	/^	__u32 Reserved1;$/;"	m	struct:INFTLPartition
Right	mtdblock-jz.c	46;"	d	file:
RunAsRTTask	mtd-utils/tests/jittertest/JitterTest.c	/^static int RunAsRTTask = FALSE; \/* default action unless priority is$/;"	v	file:
SBINDIR	mtd-utils/Makefile	/^SBINDIR=\/usr\/sbin$/;"	m
SBINDIR	mtd-utils/ubi-utils/Makefile	/^SBINDIR=\/usr\/sbin$/;"	m
SBINDIR	mtd-utils/ubi-utils/new-utils/Makefile	/^SBINDIR=\/usr\/sbin$/;"	m
SBIT	mtd-utils/jffs2reader.c	/^static const mode_t SBIT[] = {$/;"	v	file:
SC520_MMCR_BASE	maps/sc520cdp.c	121;"	d	file:
SC520_MMCR_EXTENT	maps/sc520cdp.c	122;"	d	file:
SC520_PAR	maps/nettel.c	47;"	d	file:
SC520_PAR	maps/sc520cdp.c	123;"	d	file:
SC520_PAR_ADDR_MASK	maps/nettel.c	37;"	d	file:
SC520_PAR_ADDR_SHIFT	maps/nettel.c	38;"	d	file:
SC520_PAR_BOOTCS	maps/nettel.c	52;"	d	file:
SC520_PAR_BOOTCS	maps/sc520cdp.c	131;"	d	file:
SC520_PAR_ENTRY	maps/sc520cdp.c	155;"	d	file:
SC520_PAR_NOCACHE	maps/sc520cdp.c	141;"	d	file:
SC520_PAR_NOEXEC	maps/sc520cdp.c	142;"	d	file:
SC520_PAR_PG_SIZ4	maps/sc520cdp.c	148;"	d	file:
SC520_PAR_PG_SIZ64	maps/sc520cdp.c	149;"	d	file:
SC520_PAR_ROMCS0	maps/sc520cdp.c	132;"	d	file:
SC520_PAR_ROMCS1	maps/nettel.c	53;"	d	file:
SC520_PAR_ROMCS1	maps/sc520cdp.c	133;"	d	file:
SC520_PAR_ROMCS2	maps/nettel.c	54;"	d	file:
SC520_PAR_SIZE_MASK	maps/nettel.c	42;"	d	file:
SC520_PAR_SIZE_SHIFT	maps/nettel.c	43;"	d	file:
SC520_PAR_TO_ADDR	maps/nettel.c	39;"	d	file:
SC520_PAR_TO_SIZE	maps/nettel.c	44;"	d	file:
SC520_PAR_TRGDEV	maps/sc520cdp.c	134;"	d	file:
SC520_PAR_WRPROT	maps/sc520cdp.c	140;"	d	file:
SCANF_PREFIX	mtd-utils/mkfs.jffs2.c	476;"	d	file:
SCANF_PREFIX	mtd-utils/mkfs.jffs2.c	480;"	d	file:
SCANF_STRING	mtd-utils/mkfs.jffs2.c	477;"	d	file:
SCANF_STRING	mtd-utils/mkfs.jffs2.c	481;"	d	file:
SCB2_ADDR	maps/scb2_flash.c	60;"	d	file:
SCB2_WINDOW	maps/scb2_flash.c	61;"	d	file:
SCRATCH_SIZE	mtd-utils/jffs2reader.c	81;"	d	file:
SECTORSIZE	mtd-utils/include/mtd/inftl-user.h	14;"	d
SECTORSIZE	nftlmount.c	32;"	d	file:
SECTORS_PER_TRACK	mtd-utils/rfddump.c	37;"	d	file:
SECTORS_PER_TRACK	rfd_ftl.c	57;"	d	file:
SECTOR_DELETED	mtd-utils/include/mtd/nftl-user.h	67;"	d
SECTOR_DELETED	mtd-utils/rfddump.c	31;"	d	file:
SECTOR_DELETED	rfd_ftl.c	51;"	d	file:
SECTOR_FREE	mtd-utils/include/mtd/nftl-user.h	64;"	d
SECTOR_FREE	mtd-utils/rfddump.c	33;"	d	file:
SECTOR_FREE	rfd_ftl.c	53;"	d	file:
SECTOR_IGNORE	mtd-utils/include/mtd/nftl-user.h	66;"	d
SECTOR_SHIFT	mtdblock-jz.c	43;"	d	file:
SECTOR_SHIFT	ssfdc.c	39;"	d	file:
SECTOR_SHIFT	udc_cache.c	39;"	d	file:
SECTOR_SIZE	devices/docecc.c	433;"	d	file:
SECTOR_SIZE	ftl.c	107;"	d	file:
SECTOR_SIZE	mtd-utils/rfddump.c	35;"	d	file:
SECTOR_SIZE	mtdblock-jz.c	42;"	d	file:
SECTOR_SIZE	nand/diskonchip.c	124;"	d	file:
SECTOR_SIZE	rfd_ftl.c	55;"	d	file:
SECTOR_SIZE	ssfdc.c	38;"	d	file:
SECTOR_SIZE	udc_cache.c	17;"	d	file:
SECTOR_USED	mtd-utils/include/mtd/nftl-user.h	65;"	d
SECTOR_ZERO	mtd-utils/rfddump.c	32;"	d	file:
SECTOR_ZERO	rfd_ftl.c	52;"	d	file:
SECT_4K	devices/m25p80.c	423;"	d	file:
SEQUENCES	mtd-utils/tests/ubi-tests/io_update.c	41;"	d	file:
SEQ_SZ	mtd-utils/tests/ubi-tests/io_update.c	65;"	d	file:
SH77X9_BCR1	nand/rtc_from4.c	43;"	d	file:
SH77X9_BCR2	nand/rtc_from4.c	44;"	d	file:
SH77X9_FRQCR	nand/rtc_from4.c	49;"	d	file:
SH77X9_MCR	nand/rtc_from4.c	47;"	d	file:
SH77X9_PCR	nand/rtc_from4.c	48;"	d	file:
SH77X9_WCR1	nand/rtc_from4.c	45;"	d	file:
SH77X9_WCR2	nand/rtc_from4.c	46;"	d	file:
SIZEOF_STRUCT_MTD_CONCAT	mtdconcat.c	40;"	d	file:
SIZE_128KiB	chips/jedec_probe.c	264;"	d	file:
SIZE_1MiB	chips/jedec_probe.c	267;"	d	file:
SIZE_256KiB	chips/jedec_probe.c	265;"	d	file:
SIZE_2MiB	chips/jedec_probe.c	268;"	d	file:
SIZE_4MiB	chips/jedec_probe.c	269;"	d	file:
SIZE_512KiB	chips/jedec_probe.c	266;"	d	file:
SIZE_64KiB	chips/jedec_probe.c	263;"	d	file:
SIZE_8MiB	chips/jedec_probe.c	270;"	d	file:
SIZE_REMAINING	cmdlinepart.c	45;"	d	file:
SLRAM_BLK_SZ	devices/slram.c	52;"	d	file:
SLRAM_MAX_DEVICES_PARAMS	devices/slram.c	51;"	d	file:
SMCR_VAL	nand/jz4740_nand.c	398;"	d	file:
SMCR_VAL	nand/jz4750_nand.c	504;"	d	file:
SMODE0	mtd-utils/jffs2reader.c	/^static const char SMODE0[] = "..S..S..T";$/;"	v	file:
SMODE1	mtd-utils/jffs2reader.c	/^static const char SMODE1[] = "..s..s..t";$/;"	v	file:
SPIA_FIO_BASE	nand/spia.c	41;"	d	file:
SPIA_IO_BASE	nand/spia.c	40;"	d	file:
SPIA_PEDDR	nand/spia.c	47;"	d	file:
SPIA_PEDR	nand/spia.c	42;"	d	file:
SPLIT_DATA	mtd-utils/ubi-utils/src/unubi.c	109;"	d	file:
SPLIT_RAW	mtd-utils/ubi-utils/src/unubi.c	110;"	d	file:
SR_BP0	devices/m25p80.c	48;"	d	file:
SR_BP1	devices/m25p80.c	49;"	d	file:
SR_BP2	devices/m25p80.c	50;"	d	file:
SR_SRWD	devices/m25p80.c	51;"	d	file:
SR_WEL	devices/m25p80.c	46;"	d	file:
SR_WIP	devices/m25p80.c	45;"	d	file:
SSFDCR_MAJOR	ssfdc.c	35;"	d	file:
SSFDCR_PARTN_BITS	ssfdc.c	36;"	d	file:
SSFDC__LB_CACHE	udc_cache.c	/^} SSFDC__LB_CACHE;$/;"	t	typeref:struct:__anon27	file:
SST29EE020	chips/jedec_probe.c	144;"	d	file:
SST29EE512	chips/jedec_probe.c	146;"	d	file:
SST29LE020	chips/jedec_probe.c	145;"	d	file:
SST29LE512	chips/jedec_probe.c	147;"	d	file:
SST39LF010	chips/jedec_probe.c	152;"	d	file:
SST39LF020	chips/jedec_probe.c	153;"	d	file:
SST39LF040	chips/jedec_probe.c	154;"	d	file:
SST39LF160	chips/jedec_probe.c	149;"	d	file:
SST39LF512	chips/jedec_probe.c	151;"	d	file:
SST39LF800	chips/jedec_probe.c	148;"	d	file:
SST39SF010A	chips/jedec_probe.c	155;"	d	file:
SST39SF020A	chips/jedec_probe.c	156;"	d	file:
SST39VF1601	chips/jedec_probe.c	150;"	d	file:
SST49LF004B	chips/cfi_cmdset_0002.c	50;"	d	file:
SST49LF004B	chips/jedec_probe.c	157;"	d	file:
SST49LF008A	chips/cfi_cmdset_0002.c	52;"	d	file:
SST49LF008A	chips/jedec_probe.c	159;"	d	file:
SST49LF030A	chips/jedec_probe.c	160;"	d	file:
SST49LF040A	chips/jedec_probe.c	161;"	d	file:
SST49LF040B	chips/cfi_cmdset_0002.c	51;"	d	file:
SST49LF040B	chips/jedec_probe.c	158;"	d	file:
SST49LF080A	chips/jedec_probe.c	162;"	d	file:
STATE_ADDR_MASK	nand/nandsim.c	217;"	d	file:
STATE_ADDR_PAGE	nand/nandsim.c	214;"	d	file:
STATE_ADDR_SEC	nand/nandsim.c	215;"	d	file:
STATE_ADDR_ZERO	nand/nandsim.c	216;"	d	file:
STATE_CLEAN	mtdblock.c	/^	enum { STATE_EMPTY, STATE_CLEAN, STATE_DIRTY } cache_state;$/;"	e	enum:mtdblk_dev::__anon1	file:
STATE_CMD_ERASE1	nand/nandsim.c	204;"	d	file:
STATE_CMD_ERASE2	nand/nandsim.c	209;"	d	file:
STATE_CMD_MASK	nand/nandsim.c	211;"	d	file:
STATE_CMD_PAGEPROG	nand/nandsim.c	202;"	d	file:
STATE_CMD_READ0	nand/nandsim.c	199;"	d	file:
STATE_CMD_READ1	nand/nandsim.c	200;"	d	file:
STATE_CMD_READID	nand/nandsim.c	208;"	d	file:
STATE_CMD_READOOB	nand/nandsim.c	203;"	d	file:
STATE_CMD_READSTART	nand/nandsim.c	201;"	d	file:
STATE_CMD_RESET	nand/nandsim.c	210;"	d	file:
STATE_CMD_SEQIN	nand/nandsim.c	207;"	d	file:
STATE_CMD_STATUS	nand/nandsim.c	205;"	d	file:
STATE_CMD_STATUS_M	nand/nandsim.c	206;"	d	file:
STATE_DATAIN	nand/nandsim.c	220;"	d	file:
STATE_DATAIN_MASK	nand/nandsim.c	221;"	d	file:
STATE_DATAOUT	nand/nandsim.c	223;"	d	file:
STATE_DATAOUT_ID	nand/nandsim.c	224;"	d	file:
STATE_DATAOUT_MASK	nand/nandsim.c	227;"	d	file:
STATE_DATAOUT_STATUS	nand/nandsim.c	225;"	d	file:
STATE_DATAOUT_STATUS_M	nand/nandsim.c	226;"	d	file:
STATE_DIRTY	mtdblock.c	/^	enum { STATE_EMPTY, STATE_CLEAN, STATE_DIRTY } cache_state;$/;"	e	enum:mtdblk_dev::__anon1	file:
STATE_EMPTY	mtdblock.c	/^	enum { STATE_EMPTY, STATE_CLEAN, STATE_DIRTY } cache_state;$/;"	e	enum:mtdblk_dev::__anon1	file:
STATE_READY	nand/nandsim.c	230;"	d	file:
STATE_UNKNOWN	nand/nandsim.c	233;"	d	file:
STATE_UNUSED	mtdblock-jz.c	/^	enum { STATE_UNUSED, STATE_USED } block_cache_state;$/;"	e	enum:mtdblk_dev::__anon3	file:
STATE_UNUSED	ubi/ubiblk.h	/^	enum { STATE_UNUSED, STATE_USED } read_cache_state, write_cache_state;$/;"	e	enum:ubiblk_dev::__anon26
STATE_USED	mtdblock-jz.c	/^	enum { STATE_UNUSED, STATE_USED } block_cache_state;$/;"	e	enum:mtdblk_dev::__anon3	file:
STATE_USED	ubi/ubiblk.h	/^	enum { STATE_UNUSED, STATE_USED } read_cache_state, write_cache_state;$/;"	e	enum:ubiblk_dev::__anon26
STATUS_BUSY	devices/lart.c	108;"	d	file:
STATUS_CLEAR	devices/lart.c	107;"	d	file:
STATUS_ERASE_ERR	devices/lart.c	109;"	d	file:
STATUS_PGM_ERR	devices/lart.c	110;"	d	file:
STATUS_READ	devices/lart.c	106;"	d	file:
STREAM_END_SPACE	mtd-utils/compr_zlib.c	51;"	d	file:
STRINGS_EQUAL	mtd-utils/tests/jittertest/JitterTest.c	120;"	d	file:
ST_PROTECTION	ubi/wl.c	89;"	d	file:
SUBDIRS	mtd-utils/tests/fs-tests/Makefile	/^SUBDIRS = lib simple stress integrity utils$/;"	m
SUBDIRS	mtd-utils/tests/fs-tests/stress/Makefile	/^SUBDIRS = atoms$/;"	m
SWAP	mtd-utils/fec.c	179;"	d	file:
SWAP16	mtd-utils/nftldump.c	52;"	d	file:
SWAP16	mtd-utils/nftldump.c	55;"	d	file:
SWAP32	mtd-utils/nftldump.c	53;"	d	file:
SWAP32	mtd-utils/nftldump.c	56;"	d	file:
SYMLINKS	mtd-utils/Makefile	/^SYMLINKS =$/;"	m
SYSFS_CTRL	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	43;"	d
SYSFS_FILE	mtd-utils/tests/ubi-tests/volrefcnt.c	35;"	d	file:
SYSFS_UBI	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	42;"	d
SYSFS_UBI	mtd-utils/ubi-utils/src/libubi_int.h	35;"	d
SZ_4M	nand/ppchameleonevb.c	42;"	d	file:
SerialDevice	mtd-utils/tests/checkfs/checkfs.c	/^char SerialDevice[255] = "\/dev\/ttyS0"; \/* default, can be changed$/;"	v
SerialNumber	mtd-utils/include/mtd/ftl-user.h	/^    u_int32_t	SerialNumber;$/;"	m	struct:erase_unit_header_t
SetFileName	mtd-utils/tests/jittertest/JitterTest.c	/^void SetFileName($/;"	f
SetInterruptPeriod	mtd-utils/tests/jittertest/JitterTest.c	/^void SetInterruptPeriod($/;"	f
SetSchedulerPriority	mtd-utils/tests/jittertest/JitterTest.c	/^void SetSchedulerPriority($/;"	f
SignalGCTask	mtd-utils/tests/jittertest/JitterTest.c	/^static int SignalGCTask = FALSE; \/* should be signal SIGSTOP\/SIGCONT to gc task?*\/$/;"	v	file:
SignalHandler	mtd-utils/tests/jittertest/JitterTest.c	/^void SignalHandler($/;"	f
SpareReplUnitNum	mtd-utils/include/mtd/nftl-user.h	/^	uint16_t SpareReplUnitNum;$/;"	m	struct:nftl_uci0
SpareVirtUnitNum	mtd-utils/include/mtd/nftl-user.h	/^	uint16_t SpareVirtUnitNum;$/;"	m	struct:nftl_uci0
Status	mtd-utils/include/mtd/inftl-user.h	/^	uint8_t Status;$/;"	m	struct:inftl_bci
Status	mtd-utils/include/mtd/nftl-user.h	/^	uint8_t Status;$/;"	m	struct:nftl_bci
Status1	mtd-utils/include/mtd/inftl-user.h	/^	uint8_t Status1;$/;"	m	struct:inftl_bci
Status1	mtd-utils/include/mtd/nftl-user.h	/^	uint8_t Status1;$/;"	m	struct:nftl_bci
T	devices/slram.c	54;"	d	file:
TARGETS	mtd-utils/Makefile	/^TARGETS = $(foreach target,$(RAWTARGETS),$(BUILDDIR)\/$(target))$/;"	m
TARGETS	mtd-utils/tests/fs-tests/integrity/Makefile	/^TARGETS = integck$/;"	m
TARGETS	mtd-utils/tests/fs-tests/simple/Makefile	/^TARGETS = test_1 \\$/;"	m
TARGETS	mtd-utils/tests/fs-tests/stress/atoms/Makefile	/^TARGETS = stress_1 \\$/;"	m
TARGETS	mtd-utils/tests/fs-tests/utils/Makefile	/^TARGETS = fstest_monitor free_space$/;"	m
TARGETS	mtd-utils/ubi-utils/Makefile	/^TARGETS = pfiflash pddcustomize ubimirror bin2nand nand2bin ubigen \\$/;"	m
TC58FVB160	chips/jedec_probe.c	166;"	d	file:
TC58FVB321	chips/jedec_probe.c	168;"	d	file:
TC58FVB641	chips/jedec_probe.c	170;"	d	file:
TC58FVT160	chips/jedec_probe.c	165;"	d	file:
TC58FVT321	chips/jedec_probe.c	167;"	d	file:
TC58FVT641	chips/jedec_probe.c	169;"	d	file:
TESTNAME	mtd-utils/tests/ubi-tests/io_basic.c	32;"	d	file:
TESTNAME	mtd-utils/tests/ubi-tests/io_paral.c	33;"	d	file:
TESTNAME	mtd-utils/tests/ubi-tests/io_read.c	32;"	d	file:
TESTNAME	mtd-utils/tests/ubi-tests/io_update.c	34;"	d	file:
TESTNAME	mtd-utils/tests/ubi-tests/mkvol_bad.c	28;"	d	file:
TESTNAME	mtd-utils/tests/ubi-tests/mkvol_basic.c	27;"	d	file:
TESTNAME	mtd-utils/tests/ubi-tests/mkvol_paral.c	28;"	d	file:
TESTNAME	mtd-utils/tests/ubi-tests/rsvol.c	32;"	d	file:
TESTNAME	mtd-utils/tests/ubi-tests/volrefcnt.c	32;"	d	file:
TESTS	mtd-utils/tests/ubi-tests/Makefile	/^TESTS=io_update volrefcnt integ io_paral io_read io_basic \\$/;"	m
TESTS_DEFAULT_FILE_SYSTEM_MOUNT_DIR	mtd-utils/tests/fs-tests/lib/tests.h	30;"	d
TESTS_DEFAULT_FILE_SYSTEM_TYPE	mtd-utils/tests/fs-tests/lib/tests.h	33;"	d
TESTS_EMPTY_DIR_SIZE	mtd-utils/tests/fs-tests/lib/tests.h	36;"	d
THREADS_NUM	mtd-utils/tests/ubi-tests/io_paral.c	36;"	d	file:
THREADS_NUM	mtd-utils/tests/ubi-tests/mkvol_paral.c	31;"	d	file:
TICK	mtd-utils/fec.c	100;"	d	file:
TICK	mtd-utils/fec.c	85;"	d	file:
TIMEOUT	nand/alauda.c	50;"	d	file:
TIMING_BOOT_ACCEL_DIS	maps/intel_vr_nor.c	61;"	d	file:
TIMING_BYTE_EN	maps/intel_vr_nor.c	63;"	d	file:
TIMING_CS_EN	maps/intel_vr_nor.c	60;"	d	file:
TIMING_MASK	maps/intel_vr_nor.c	64;"	d	file:
TIMING_WR_EN	maps/intel_vr_nor.c	62;"	d	file:
TOCK	mtd-utils/fec.c	101;"	d	file:
TOCK	mtd-utils/fec.c	90;"	d	file:
TO_LE16	mtd-utils/ftl_check.c	57;"	d	file:
TO_LE16	mtd-utils/ftl_check.c	60;"	d	file:
TO_LE16	mtd-utils/ftl_format.c	57;"	d	file:
TO_LE16	mtd-utils/ftl_format.c	60;"	d	file:
TO_LE32	mtd-utils/ftl_check.c	56;"	d	file:
TO_LE32	mtd-utils/ftl_check.c	59;"	d	file:
TO_LE32	mtd-utils/ftl_format.c	56;"	d	file:
TO_LE32	mtd-utils/ftl_format.c	59;"	d	file:
TRIBUF_PORT	maps/l440gx.c	25;"	d	file:
TRUE	mtd-utils/tests/checkfs/common.h	4;"	d
TRUE	mtd-utils/tests/jittertest/JitterTest.c	154;"	d	file:
TRUE	mtd-utils/tests/jittertest/plotJittervsFill.c	71;"	d	file:
TYPECHAR	mtd-utils/jffs2reader.c	253;"	d	file:
TYPEINDEX	mtd-utils/jffs2reader.c	252;"	d	file:
TYPE_S3C2410	nand/s3c2410.c	/^	TYPE_S3C2410,$/;"	e	enum:s3c_cpu_type	file:
TYPE_S3C2412	nand/s3c2410.c	/^	TYPE_S3C2412,$/;"	e	enum:s3c_cpu_type	file:
TYPE_S3C2440	nand/s3c2410.c	/^	TYPE_S3C2440,$/;"	e	enum:s3c_cpu_type	file:
UBIBLK_SECTOR_SIZE	ubi/ubiblk.c	29;"	d	file:
UBIBLK_UNMAPPED	ubi/ubiblk.c	28;"	d	file:
UBIUTILS_PATH	mtd-utils/tests/ubi-tests/Makefile	/^UBIUTILS_PATH=..\/..\/ubi-utils\/new-utils\/$/;"	m
UBI_BGT_NAME_PATTERN	ubi/ubi.h	65;"	d
UBI_COMPARE	mtd-utils/ubi-utils/src/libpfiflash.c	/^	UBI_COMPARE,$/;"	e	enum:ubi_update_process_t	file:
UBI_COMPAT_DELETE	mtd-utils/include/mtd/ubi-header.h	/^	UBI_COMPAT_DELETE   = 1,$/;"	e	enum:__anon14
UBI_COMPAT_DELETE	ubi/ubi-media.h	/^	UBI_COMPAT_DELETE   = 1,$/;"	e	enum:__anon23
UBI_COMPAT_PRESERVE	mtd-utils/include/mtd/ubi-header.h	/^	UBI_COMPAT_PRESERVE = 4,$/;"	e	enum:__anon14
UBI_COMPAT_PRESERVE	ubi/ubi-media.h	/^	UBI_COMPAT_PRESERVE = 4,$/;"	e	enum:__anon23
UBI_COMPAT_REJECT	mtd-utils/include/mtd/ubi-header.h	/^	UBI_COMPAT_REJECT   = 5$/;"	e	enum:__anon14
UBI_COMPAT_REJECT	ubi/ubi-media.h	/^	UBI_COMPAT_REJECT   = 5$/;"	e	enum:__anon23
UBI_COMPAT_RO	mtd-utils/include/mtd/ubi-header.h	/^	UBI_COMPAT_RO       = 2,$/;"	e	enum:__anon14
UBI_COMPAT_RO	ubi/ubi-media.h	/^	UBI_COMPAT_RO       = 2,$/;"	e	enum:__anon23
UBI_CRC32_INIT	mtd-utils/include/mtd/ubi-header.h	42;"	d
UBI_CRC32_INIT	ubi/ubi-media.h	42;"	d
UBI_CTRL_IOC_MAGIC	mtd-utils/include/mtd/ubi-user.h	114;"	d
UBI_DEV_NAME_PATT	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	48;"	d
UBI_DEV_NAME_PATT	mtd-utils/ubi-utils/src/libubi_int.h	36;"	d
UBI_DEV_NUM_AUTO	mtd-utils/include/mtd/ubi-user.h	96;"	d
UBI_DYNAMIC_VOLUME	mtd-utils/include/mtd/ubi-user.h	/^	UBI_DYNAMIC_VOLUME = 3,$/;"	e	enum:__anon16
UBI_EC_HDR_MAGIC	mtd-utils/include/mtd/ubi-header.h	45;"	d
UBI_EC_HDR_MAGIC	ubi/ubi-media.h	45;"	d
UBI_EC_HDR_SIZE	mtd-utils/include/mtd/ubi-header.h	115;"	d
UBI_EC_HDR_SIZE	ubi/ubi-media.h	115;"	d
UBI_EC_HDR_SIZE_CRC	mtd-utils/include/mtd/ubi-header.h	119;"	d
UBI_EC_HDR_SIZE_CRC	ubi/ubi-media.h	119;"	d
UBI_HEADERS_PATH	mtd-utils/tests/ubi-tests/Makefile	/^UBI_HEADERS_PATH=..\/..\/include\/$/;"	m
UBI_INTERNAL_VOL_START	mtd-utils/include/mtd/ubi-header.h	298;"	d
UBI_INTERNAL_VOL_START	ubi/ubi-media.h	298;"	d
UBI_INT_VOL_COUNT	mtd-utils/include/mtd/ubi-header.h	292;"	d
UBI_INT_VOL_COUNT	ubi/ubi-media.h	292;"	d
UBI_IOCATT	mtd-utils/include/mtd/ubi-user.h	117;"	d
UBI_IOCDET	mtd-utils/include/mtd/ubi-user.h	119;"	d
UBI_IOCEBCH	mtd-utils/include/mtd/ubi-user.h	130;"	d
UBI_IOCEBER	mtd-utils/include/mtd/ubi-user.h	128;"	d
UBI_IOCLEBREAD	mtd-utils/include/mtd/ubi-user.h	132;"	d
UBI_IOCMKVOL	mtd-utils/include/mtd/ubi-user.h	106;"	d
UBI_IOCRMVOL	mtd-utils/include/mtd/ubi-user.h	108;"	d
UBI_IOCRSVOL	mtd-utils/include/mtd/ubi-user.h	110;"	d
UBI_IOCVOLUP	mtd-utils/include/mtd/ubi-user.h	126;"	d
UBI_IOC_MAGIC	mtd-utils/include/mtd/ubi-user.h	103;"	d
UBI_IO_BAD_EC_HDR	ubi/ubi.h	/^	UBI_IO_BAD_EC_HDR,$/;"	e	enum:__anon24
UBI_IO_BAD_VID_HDR	ubi/ubi.h	/^	UBI_IO_BAD_VID_HDR,$/;"	e	enum:__anon24
UBI_IO_BITFLIPS	ubi/ubi.h	/^	UBI_IO_BITFLIPS$/;"	e	enum:__anon24
UBI_IO_DEBUG	ubi/debug.h	102;"	d
UBI_IO_DEBUG	ubi/debug.h	105;"	d
UBI_IO_PEB_EMPTY	ubi/ubi.h	/^	UBI_IO_PEB_EMPTY = 1,$/;"	e	enum:__anon24
UBI_IO_PEB_FREE	ubi/ubi.h	/^	UBI_IO_PEB_FREE,$/;"	e	enum:__anon24
UBI_IO_RETRIES	ubi/ubi.h	74;"	d
UBI_LAYOUT_VOLUME_ALIGN	mtd-utils/include/mtd/ubi-header.h	304;"	d
UBI_LAYOUT_VOLUME_ALIGN	ubi/ubi-media.h	304;"	d
UBI_LAYOUT_VOLUME_COMPAT	mtd-utils/include/mtd/ubi-header.h	307;"	d
UBI_LAYOUT_VOLUME_COMPAT	ubi/ubi-media.h	307;"	d
UBI_LAYOUT_VOLUME_EBS	mtd-utils/include/mtd/ubi-header.h	305;"	d
UBI_LAYOUT_VOLUME_EBS	ubi/ubi-media.h	305;"	d
UBI_LAYOUT_VOLUME_ID	mtd-utils/include/mtd/ubi-header.h	302;"	d
UBI_LAYOUT_VOLUME_ID	ubi/ubi-media.h	302;"	d
UBI_LAYOUT_VOLUME_NAME	mtd-utils/include/mtd/ubi-header.h	306;"	d
UBI_LAYOUT_VOLUME_NAME	ubi/ubi-media.h	306;"	d
UBI_LAYOUT_VOLUME_TYPE	mtd-utils/include/mtd/ubi-header.h	303;"	d
UBI_LAYOUT_VOLUME_TYPE	ubi/ubi-media.h	303;"	d
UBI_LEB_SIZE	mtd-utils/ubi-utils/new-utils/src/ubicrcsf.c	41;"	d	file:
UBI_LEB_SIZE	mtd-utils/ubi-utils/new-utils/src/ubirefimg.c	20;"	d	file:
UBI_LEB_UNMAPPED	ubi/ubi.h	68;"	d
UBI_LONGTERM	mtd-utils/include/mtd/ubi-user.h	/^	UBI_LONGTERM  = 1,$/;"	e	enum:__anon15
UBI_MAX_DEVICES	ubi/ubi.h	47;"	d
UBI_MAX_ERASECOUNTER	mtd-utils/include/mtd/ubi-header.h	39;"	d
UBI_MAX_ERASECOUNTER	ubi/ubi-media.h	39;"	d
UBI_MAX_VOLUMES	mtd-utils/include/mtd/ubi-header.h	310;"	d
UBI_MAX_VOLUMES	ubi/ubi-media.h	310;"	d
UBI_MAX_VOLUME_NAME	mtd-utils/include/mtd/ubi-user.h	99;"	d
UBI_NAME_SIZE	mtd-utils/ubi-utils/src/libubigen.c	35;"	d	file:
UBI_NAME_STR	ubi/ubi.h	50;"	d
UBI_REMOVE	mtd-utils/ubi-utils/src/libpfiflash.c	/^	UBI_REMOVE = 0,$/;"	e	enum:ubi_update_process_t	file:
UBI_SCAN_UNKNOWN_EC	ubi/scan.h	25;"	d
UBI_SHORTTERM	mtd-utils/include/mtd/ubi-user.h	/^	UBI_SHORTTERM = 2,$/;"	e	enum:__anon15
UBI_STATIC_VOLUME	mtd-utils/include/mtd/ubi-user.h	/^	UBI_STATIC_VOLUME  = 4,$/;"	e	enum:__anon16
UBI_UNKNOWN	mtd-utils/include/mtd/ubi-user.h	/^	UBI_UNKNOWN   = 3,$/;"	e	enum:__anon15
UBI_VER	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	47;"	d
UBI_VER	mtd-utils/ubi-utils/src/libubi_int.h	37;"	d
UBI_VERSION	mtd-utils/include/mtd/ubi-header.h	36;"	d
UBI_VERSION	ubi/ubi-media.h	36;"	d
UBI_VID_DYNAMIC	mtd-utils/include/mtd/ubi-header.h	/^	UBI_VID_DYNAMIC = 1,$/;"	e	enum:__anon12
UBI_VID_DYNAMIC	ubi/ubi-media.h	/^	UBI_VID_DYNAMIC = 1,$/;"	e	enum:__anon21
UBI_VID_HDR_MAGIC	mtd-utils/include/mtd/ubi-header.h	47;"	d
UBI_VID_HDR_MAGIC	ubi/ubi-media.h	47;"	d
UBI_VID_HDR_SIZE	mtd-utils/include/mtd/ubi-header.h	116;"	d
UBI_VID_HDR_SIZE	ubi/ubi-media.h	116;"	d
UBI_VID_HDR_SIZE_CRC	mtd-utils/include/mtd/ubi-header.h	120;"	d
UBI_VID_HDR_SIZE_CRC	ubi/ubi-media.h	120;"	d
UBI_VID_STATIC	mtd-utils/include/mtd/ubi-header.h	/^	UBI_VID_STATIC  = 2$/;"	e	enum:__anon12
UBI_VID_STATIC	ubi/ubi-media.h	/^	UBI_VID_STATIC  = 2$/;"	e	enum:__anon21
UBI_VOLUME_PATTERN	mtd-utils/tests/ubi-tests/common.h	32;"	d
UBI_VOL_IOC_MAGIC	mtd-utils/include/mtd/ubi-user.h	123;"	d
UBI_VOL_NAME_MAX	mtd-utils/include/mtd/ubi-header.h	313;"	d
UBI_VOL_NAME_MAX	ubi/ubi-media.h	313;"	d
UBI_VOL_NAME_PATT	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	61;"	d
UBI_VOL_NAME_PATT	mtd-utils/ubi-utils/src/libubi_int.h	39;"	d
UBI_VOL_NUM_AUTO	mtd-utils/include/mtd/ubi-user.h	95;"	d
UBI_VTBL_AUTORESIZE_FLG	mtd-utils/include/mtd/ubi-header.h	/^	UBI_VTBL_AUTORESIZE_FLG = 0x01,$/;"	e	enum:__anon13
UBI_VTBL_AUTORESIZE_FLG	ubi/ubi-media.h	/^	UBI_VTBL_AUTORESIZE_FLG = 0x01,$/;"	e	enum:__anon22
UBI_VTBL_RECORD_SIZE	mtd-utils/include/mtd/ubi-header.h	316;"	d
UBI_VTBL_RECORD_SIZE	ubi/ubi-media.h	316;"	d
UBI_VTBL_RECORD_SIZE_CRC	mtd-utils/include/mtd/ubi-header.h	319;"	d
UBI_VTBL_RECORD_SIZE_CRC	ubi/ubi-media.h	319;"	d
UBI_WL_THRESHOLD	ubi/wl.c	98;"	d	file:
UBI_WRITE	mtd-utils/ubi-utils/src/libpfiflash.c	/^	UBI_WRITE,$/;"	e	enum:ubi_update_process_t	file:
UCItable	mtd-utils/nftldump.c	/^static union nftl_uci UCItable[NUMVUNITS][3];$/;"	v	typeref:union:nftl_uci	file:
UDELAY	chips/cfi_cmdset_0002.c	762;"	d	file:
UDELAY	chips/cfi_cmdset_0002.c	800;"	d	file:
UFLASH_BUSWIDTH	maps/sun_uflash.c	32;"	d	file:
UFLASH_DEVNAME	maps/sun_uflash.c	29;"	d	file:
UFLASH_OBPNAME	maps/sun_uflash.c	28;"	d	file:
UFLASH_WINDOW_SIZE	maps/sun_uflash.c	31;"	d	file:
UNCHECKED_SPACE	mtd-utils/summary.h	30;"	d
UNROLL	mtd-utils/fec.c	337;"	d	file:
UPD29F064115	chips/jedec_probe.c	121;"	d	file:
USED_SPACE	mtd-utils/summary.h	22;"	d
USE_GF_MULC	mtd-utils/fec.c	196;"	d	file:
USE_GF_MULC	mtd-utils/fec.c	221;"	d	file:
USE_IRQ	nand/jz4750_nand.c	64;"	d	file:
USE_LOCAL_ACCESSORS	maps/alchemy-flash.c	88;"	d	file:
USE_MEMCPY	devices/doc2001.c	32;"	d	file:
USE_MEMCPY	devices/doc2001plus.c	36;"	d	file:
USE_READY_BUSY_PIN	nand/ppchameleonevb.c	35;"	d	file:
USE_READY_BUSY_PIN	nand/ppchameleonevb.c	36;"	d	file:
UTILS	mtd-utils/ubi-utils/new-utils/Makefile	/^UTILS = ubiupdatevol ubimkvol ubirmvol ubicrc32 ubinfo ubiattach \\$/;"	m
U_PROTECTION	ubi/wl.c	90;"	d	file:
UnitSizeFactor	mtd-utils/include/mtd/nftl-user.h	/^	unsigned char UnitSizeFactor;$/;"	m	struct:NFTLMediaHeader
UseCount	udc_cache.c	/^	unsigned short  UseCount;$/;"	m	struct:__anon27	file:
VERSION	devices/block2mtd.c	23;"	d	file:
VERSION	mtd-utils/flash_eraseall.c	44;"	d	file:
VERSION	mtd-utils/jffs2dump.c	38;"	d	file:
VERSION	mtd-utils/nanddump.c	33;"	d	file:
VERSION	mtd-utils/nanddump_vfat.c	33;"	d	file:
VERSION	mtd-utils/nandwrite.c	40;"	d	file:
VERSION	mtd-utils/nandwrite_mlc.c	40;"	d	file:
VERSION	mtd-utils/rfddump.c	55;"	d	file:
VERSION	mtd-utils/rfdformat.c	30;"	d	file:
VERSION	mtd-utils/ubi-utils/src/unubi.c	60;"	d	file:
VOL_ALIGNMENT	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	64;"	d
VOL_ALIGNMENT	mtd-utils/ubi-utils/src/libubi_int.h	50;"	d
VOL_ARGS_MAX	mtd-utils/ubi-utils/src/ubimirror.c	55;"	d	file:
VOL_CORRUPTED	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	68;"	d
VOL_CORRUPTED	mtd-utils/ubi-utils/src/libubi_int.h	54;"	d
VOL_DATA_BYTES	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	65;"	d
VOL_DATA_BYTES	mtd-utils/ubi-utils/src/libubi_int.h	51;"	d
VOL_DEV	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	63;"	d
VOL_DEV	mtd-utils/ubi-utils/src/libubi_int.h	49;"	d
VOL_EB_SIZE	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	67;"	d
VOL_EB_SIZE	mtd-utils/ubi-utils/src/libubi_int.h	53;"	d
VOL_NAME	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	69;"	d
VOL_NAME	mtd-utils/ubi-utils/src/libubi_int.h	55;"	d
VOL_RSVD_EBS	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	66;"	d
VOL_RSVD_EBS	mtd-utils/ubi-utils/src/libubi_int.h	52;"	d
VOL_TYPE	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	62;"	d
VOL_TYPE	mtd-utils/ubi-utils/src/libubi_int.h	48;"	d
VPP_PORT	maps/l440gx.c	26;"	d	file:
VUCtable	mtd-utils/nftldump.c	/^static unsigned short *VUCtable;$/;"	v	file:
Version	mtd-utils/tests/jittertest/JitterTest.c	/^static const char Version[] = "$Id: JitterTest.c,v 1.1.1.1 2008-05-13 07:15:32 yrtan Exp $";$/;"	v	file:
Version_string	mtd-utils/tests/jittertest/plotJittervsFill.c	/^static char Version_string[] = "$Id: plotJittervsFill.c,v 1.1.1.1 2008-05-13 07:15:32 yrtan Exp $";$/;"	v	file:
VirtUnitNum	mtd-utils/include/mtd/nftl-user.h	/^	uint16_t VirtUnitNum;$/;"	m	struct:nftl_uci0
VirtualBlockMap	ftl.c	/^    u_int32_t		*VirtualBlockMap;$/;"	m	struct:partition_t	file:
VirtualPageMap	ftl.c	/^    u_int32_t		*VirtualPageMap;$/;"	m	struct:partition_t	file:
W49V002A	chips/jedec_probe.c	173;"	d	file:
WAIT_TIMEOUT	chips/cfi_cmdset_0001.c	1145;"	d	file:
WALNUT_FLASH_HIGH	maps/walnut.c	31;"	d	file:
WALNUT_FLASH_LOW	maps/walnut.c	30;"	d	file:
WALNUT_FLASH_ONBD_N	maps/walnut.c	28;"	d	file:
WALNUT_FLASH_SIZE	maps/walnut.c	32;"	d	file:
WALNUT_FLASH_SRAM_SEL	maps/walnut.c	29;"	d	file:
WARN	mtd-utils/ubi-utils/perl/mkpfi	/^sub WARN($) {$/;"	s
WASTED_SPACE	mtd-utils/summary.h	26;"	d
WBUF_SIZE	mtd-utils/recv_image.c	25;"	d	file:
WINDOW_ADDR	maps/dbox2-flash.c	61;"	d	file:
WINDOW_ADDR	maps/dilnetpc.c	252;"	d	file:
WINDOW_ADDR	maps/edb7312.c	25;"	d	file:
WINDOW_ADDR	maps/l440gx.c	19;"	d	file:
WINDOW_ADDR	maps/mbx860.c	25;"	d	file:
WINDOW_ADDR	maps/netsc520.c	82;"	d	file:
WINDOW_ADDR	maps/pnc2000.c	21;"	d	file:
WINDOW_ADDR	maps/redwood.c	29;"	d	file:
WINDOW_ADDR	maps/redwood.c	76;"	d	file:
WINDOW_ADDR	maps/rpxlite.c	16;"	d	file:
WINDOW_ADDR	maps/sharpsl-flash.c	33;"	d	file:
WINDOW_ADDR	maps/ts5500_flash.c	38;"	d	file:
WINDOW_ADDR0	maps/impa7.c	25;"	d	file:
WINDOW_ADDR0	maps/sbc8240.c	43;"	d	file:
WINDOW_ADDR1	maps/impa7.c	27;"	d	file:
WINDOW_ADDR1	maps/sbc8240.c	47;"	d	file:
WINDOW_ADDR_0	maps/sc520cdp.c	66;"	d	file:
WINDOW_ADDR_0	maps/sc520cdp.c	77;"	d	file:
WINDOW_ADDR_0_BIOS	maps/sc520cdp.c	71;"	d	file:
WINDOW_ADDR_1	maps/sc520cdp.c	67;"	d	file:
WINDOW_ADDR_1	maps/sc520cdp.c	78;"	d	file:
WINDOW_ADDR_1_BIOS	maps/sc520cdp.c	72;"	d	file:
WINDOW_ADDR_2	maps/sc520cdp.c	68;"	d	file:
WINDOW_ADDR_2	maps/sc520cdp.c	79;"	d	file:
WINDOW_ADDR_2_BIOS	maps/sc520cdp.c	73;"	d	file:
WINDOW_LENGTH	maps/octagon-5066.c	37;"	d	file:
WINDOW_LENGTH	maps/sbc_gxx.c	67;"	d	file:
WINDOW_LENGTH	maps/vmax301.c	31;"	d	file:
WINDOW_MASK	maps/octagon-5066.c	39;"	d	file:
WINDOW_MASK	maps/sbc_gxx.c	70;"	d	file:
WINDOW_MASK	maps/vmax301.c	33;"	d	file:
WINDOW_SHIFT	maps/octagon-5066.c	38;"	d	file:
WINDOW_SHIFT	maps/sbc_gxx.c	66;"	d	file:
WINDOW_SHIFT	maps/vmax301.c	32;"	d	file:
WINDOW_SIZE	maps/dbox2-flash.c	62;"	d	file:
WINDOW_SIZE	maps/edb7312.c	26;"	d	file:
WINDOW_SIZE	maps/l440gx.c	20;"	d	file:
WINDOW_SIZE	maps/mbx860.c	26;"	d	file:
WINDOW_SIZE	maps/netsc520.c	81;"	d	file:
WINDOW_SIZE	maps/pnc2000.c	22;"	d	file:
WINDOW_SIZE	maps/redwood.c	30;"	d	file:
WINDOW_SIZE	maps/redwood.c	77;"	d	file:
WINDOW_SIZE	maps/rpxlite.c	17;"	d	file:
WINDOW_SIZE	maps/sharpsl-flash.c	34;"	d	file:
WINDOW_SIZE	maps/ts5500_flash.c	39;"	d	file:
WINDOW_SIZE0	maps/impa7.c	26;"	d	file:
WINDOW_SIZE0	maps/sbc8240.c	44;"	d	file:
WINDOW_SIZE1	maps/impa7.c	28;"	d	file:
WINDOW_SIZE1	maps/sbc8240.c	48;"	d	file:
WINDOW_SIZE_0	maps/sc520cdp.c	83;"	d	file:
WINDOW_SIZE_1	maps/sc520cdp.c	84;"	d	file:
WINDOW_SIZE_2	maps/sc520cdp.c	85;"	d	file:
WINDOW_START	maps/octagon-5066.c	36;"	d	file:
WINDOW_START	maps/sbc_gxx.c	63;"	d	file:
WINDOW_START	maps/vmax301.c	30;"	d	file:
WL_FREE_MAX_DIFF	ubi/wl.c	111;"	d	file:
WL_MAX_FAILURES	ubi/wl.c	117;"	d	file:
WL_RESERVED_PEBS	ubi/wl.c	83;"	d	file:
WRITE_BUFFER_SIZE	mtd-utils/tests/fs-tests/lib/tests.c	404;"	d	file:
WRITE_BUFFER_SIZE	mtd-utils/tests/fs-tests/simple/ftrunc.c	33;"	d	file:
WRITE_BUFFER_SIZE	mtd-utils/tests/fs-tests/stress/atoms/fwrite00.c	33;"	d	file:
WRITE_BUFFER_SIZE	mtd-utils/tests/fs-tests/stress/atoms/pdfrun.c	33;"	d	file:
WRITE_BUFFER_SIZE	mtd-utils/tests/fs-tests/stress/atoms/rndrm99.c	82;"	d	file:
WRITE_BUFFER_SIZE	mtd-utils/tests/fs-tests/stress/atoms/stress_1.c	33;"	d	file:
WRITE_BUFFER_SIZE	mtd-utils/tests/fs-tests/stress/atoms/stress_2.c	33;"	d	file:
WRITE_BUFFER_SIZE	mtd-utils/tests/fs-tests/stress/atoms/stress_3.c	33;"	d	file:
WRITE_VERIFY_ENABLE	mtdblock-jz.c	40;"	d	file:
WearInfo	mtd-utils/include/mtd/nftl-user.h	/^	uint32_t WearInfo;$/;"	m	struct:nftl_uci1
Write	mtd-utils/tests/jittertest/JitterTest.c	/^int Write(int fd, void *buf, size_t bytes, int lineNo)$/;"	f
WriteBytes	mtd-utils/tests/jittertest/JitterTest.c	/^static int WriteBytes = DEFAULT_WRITE_BYTES; \/* pad out file to these many bytes. *\/$/;"	v	file:
XATTRENTRY_HASHSIZE	mtd-utils/mkfs.jffs2.c	1192;"	d	file:
XATTR_BUFFER_SIZE	mtd-utils/mkfs.jffs2.c	1080;"	d	file:
XATTR_SECURITY_PREFIX	mtd-utils/include/mtd/jffs2-user.h	44;"	d
XATTR_SECURITY_PREFIX_LEN	mtd-utils/include/mtd/jffs2-user.h	45;"	d
XATTR_TRUSTED_PREFIX	mtd-utils/include/mtd/jffs2-user.h	50;"	d
XATTR_TRUSTED_PREFIX_LEN	mtd-utils/include/mtd/jffs2-user.h	51;"	d
XATTR_USER_PREFIX	mtd-utils/include/mtd/jffs2-user.h	42;"	d
XATTR_USER_PREFIX_LEN	mtd-utils/include/mtd/jffs2-user.h	43;"	d
XFER_ERASED	ftl.c	147;"	d	file:
XFER_ERASING	ftl.c	146;"	d	file:
XFER_FAILED	ftl.c	149;"	d	file:
XFER_PREPARED	ftl.c	148;"	d	file:
XFER_UNKNOWN	ftl.c	145;"	d	file:
XIP_INVAL_CACHED_RANGE	chips/cfi_cmdset_0001.c	1063;"	d	file:
XIP_INVAL_CACHED_RANGE	chips/cfi_cmdset_0001.c	1073;"	d	file:
XIP_INVAL_CACHED_RANGE	chips/cfi_cmdset_0002.c	771;"	d	file:
XIP_INVAL_CACHED_RANGE	chips/cfi_cmdset_0002.c	798;"	d	file:
XferInfo	ftl.c	/^    } *XferInfo;$/;"	m	struct:partition_t	typeref:struct:partition_t::xfer_info_t	file:
ZONE_BAD_MARKED	mtd-utils/include/mtd/nftl-user.h	73;"	d
ZONE_BAD_ORIGINAL	mtd-utils/include/mtd/nftl-user.h	72;"	d
ZONE_GOOD	mtd-utils/include/mtd/nftl-user.h	71;"	d
_DICTIONARY_H_	mtd-utils/ubi-utils/new-utils/src/dictionary.h	24;"	d
_DoC_WaitReady	devices/doc2000.c	/^static int _DoC_WaitReady(struct DiskOnChip *doc)$/;"	f	file:
_DoC_WaitReady	devices/doc2001.c	/^static int _DoC_WaitReady(void __iomem * docptr)$/;"	f	file:
_DoC_WaitReady	devices/doc2001plus.c	/^static int _DoC_WaitReady(void __iomem * docptr)$/;"	f	file:
_DoC_WaitReady	nand/diskonchip.c	/^static int _DoC_WaitReady(struct doc_priv *doc)$/;"	f	file:
_GNU_SOURCE	mtd-utils/mkfs.jffs2.c	50;"	d	file:
_GNU_SOURCE	mtd-utils/nanddump.c	16;"	d	file:
_GNU_SOURCE	mtd-utils/nanddump_vfat.c	16;"	d	file:
_GNU_SOURCE	mtd-utils/nandtest.c	1;"	d	file:
_GNU_SOURCE	mtd-utils/nandwrite.c	22;"	d	file:
_GNU_SOURCE	mtd-utils/nandwrite_mlc.c	22;"	d	file:
_INIPARSER_H_	mtd-utils/ubi-utils/new-utils/include/libiniparser.h	18;"	d
_LARGEFILE64_SOURCE	mtd-utils/tests/ubi-tests/integ.c	1;"	d	file:
_LINUX_RBTREE_H	mtd-utils/rbtree.h	95;"	d
_NAND_ECC_H	mtd-utils/ubi-utils/src/nandecc.h	2;"	d
_NAND_LB_ClearCache	udc_cache.c	/^static void _NAND_LB_ClearCache(void) {$/;"	f	file:
_NAND_LB_CloseCACHES	udc_cache.c	/^static void _NAND_LB_CloseCACHES(unsigned int sectorstart,unsigned int sectorend)$/;"	f	file:
_NAND_LB_CopyToCache	udc_cache.c	/^static void _NAND_LB_CopyToCache(unsigned int Sector, void *pBuffer,unsigned short rw) $/;"	f	file:
_NAND_LB_FLUSHCACHES	udc_cache.c	/^static void _NAND_LB_FLUSHCACHES(unsigned int sectorstart,unsigned int sectorend)$/;"	f	file:
_NAND_LB_FreeCache	udc_cache.c	/^static int _NAND_LB_FreeCache(unsigned int update)$/;"	f	file:
_NAND_LB_GetFreeCache	udc_cache.c	/^static  SSFDC__LB_CACHE * _NAND_LB_GetFreeCache(void)$/;"	f	file:
_NAND_LB_GetFromCache	udc_cache.c	/^static int _NAND_LB_GetFromCache(unsigned int Sector, void *pBuffer) {$/;"	f	file:
_NAND_LB_InitCache	udc_cache.c	/^static void _NAND_LB_InitCache(void)$/;"	f	file:
_NAND_LB_OftenToNand	udc_cache.c	/^static void _NAND_LB_OftenToNand(SSFDC__LB_CACHE *pCache,unsigned short *count,unsigned int update)$/;"	f	file:
_NAND_LB_PreWiteToNand	udc_cache.c	/^static unsigned int _NAND_LB_PreWiteToNand(SSFDC__LB_CACHE *pCache,unsigned short *count,unsigned int update)$/;"	f	file:
_NAND_LB_Read	udc_cache.c	56;"	d	file:
_NAND_LB_UpdateInCache	udc_cache.c	/^static int _NAND_LB_UpdateInCache(unsigned int Sector, void *pBuffer) {$/;"	f	file:
_NAND_LB_Write	udc_cache.c	55;"	d	file:
_POSIX_C_SOURCE	mtd-utils/serve_image.c	1;"	d	file:
_USE_MISC	mtd-utils/recv_image.c	3;"	d	file:
_XOPEN_SOURCE	mtd-utils/docfdisk.c	19;"	d	file:
_XOPEN_SOURCE	mtd-utils/nftl_format.c	23;"	d	file:
_XOPEN_SOURCE	mtd-utils/nftldump.c	23;"	d	file:
_XOPEN_SOURCE	mtd-utils/recv_image.c	2;"	d	file:
_XOPEN_SOURCE	mtd-utils/rfddump.c	12;"	d	file:
_XOPEN_SOURCE	mtd-utils/rfdformat.c	15;"	d	file:
__BOOTENV_H__	mtd-utils/ubi-utils/src/bootenv.h	2;"	d
__COMMON_H__	mtd-utils/tests/ubi-tests/common.h	24;"	d
__CONFIG_H__	mtd-utils/ubi-utils/src/config.h	2;"	d
__CRC32_H__	mtd-utils/ubi-utils/src/crc32.h	2;"	d
__ECC_DECODING	nand/jz4750_nand.c	45;"	d	file:
__ECC_DECODING	nand/jz4750_nand.c	49;"	d	file:
__ECC_ENCODING	nand/jz4750_nand.c	44;"	d	file:
__ECC_ENCODING	nand/jz4750_nand.c	48;"	d	file:
__ERROR_H__	mtd-utils/ubi-utils/src/error.h	2;"	d
__EXAMPLE_UBI_H__	mtd-utils/ubi-utils/src/example_ubi.h	2;"	d
__HASHMAP_H__	mtd-utils/ubi-utils/src/hashmap.h	2;"	d
__JFFS2_COMPR_H__	mtd-utils/compr.h	12;"	d
__JFFS2_USER_H__	mtd-utils/include/mtd/jffs2-user.h	8;"	d
__LIBMTD_H__	mtd-utils/ubi-utils/new-utils/include/libmtd.h	24;"	d
__LIBSCAN_H__	mtd-utils/ubi-utils/new-utils/include/libscan.h	24;"	d
__LIBUBIGEN_H__	mtd-utils/ubi-utils/new-utils/include/libubigen.h	26;"	d
__LIBUBI_H__	mtd-utils/ubi-utils/inc/libubi.h	24;"	d
__LIBUBI_H__	mtd-utils/ubi-utils/new-utils/include/libubi.h	24;"	d
__LIBUBI_INT_H__	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	24;"	d
__LIBUBI_INT_H__	mtd-utils/ubi-utils/src/libubi_int.h	24;"	d
__LINUX_JFFS2_H__	mtd-utils/include/linux/jffs2.h	16;"	d
__LIST_H__	mtd-utils/ubi-utils/src/list.h	2;"	d
__MTD_ABI_H__	mtd-utils/include/mtd/mtd-abi.h	8;"	d
__MTD_FTL_USER_H__	mtd-utils/include/mtd/ftl-user.h	34;"	d
__MTD_INFTL_USER_H__	mtd-utils/include/mtd/inftl-user.h	9;"	d
__MTD_NFTL_USER_H__	mtd-utils/include/mtd/nftl-user.h	9;"	d
__MTD_USER_H__	mtd-utils/include/mtd/mtd-user.h	8;"	d
__PFIFLASH_ERROR_H__	mtd-utils/ubi-utils/src/pfiflash_error.h	2;"	d
__PFIFLASH_H__	mtd-utils/ubi-utils/src/pfiflash.h	2;"	d
__RAW_BLOCK_H__	mtd-utils/ubi-utils/src/peb.h	2;"	d
__READER_H__	mtd-utils/ubi-utils/src/reader.h	2;"	d
__UBIGEN_H__	mtd-utils/ubi-utils/src/ubigen.h	2;"	d
__UBIMIRROR_H__	mtd-utils/ubi-utils/src/ubimirror.h	2;"	d
__UBI_DEBUG_H__	ubi/debug.h	22;"	d
__UBI_HEADER_H__	mtd-utils/include/mtd/ubi-header.h	31;"	d
__UBI_MEDIA_H__	ubi/ubi-media.h	31;"	d
__UBI_SCAN_H__	ubi/scan.h	22;"	d
__UBI_TRANS_H__	ubi/ubiblk.h	8;"	d
__UBI_UBI_H__	ubi/ubi.h	23;"	d
__UBI_USER_H__	mtd-utils/include/mtd/ubi-user.h	22;"	d
__UBI_UTILS_COMMON_H__	mtd-utils/ubi-utils/new-utils/src/common.h	20;"	d
__UNUBI_ANALYZE_H__	mtd-utils/ubi-utils/src/unubi_analyze.h	20;"	d
__USE_GNU	mtd-utils/ubi-utils/src/libpfiflash.c	35;"	d	file:
__aBlockData	udc_cache.c	/^static unsigned int __aBlockData[SECTOR_SIZE * CACHE_MAX_NUM \/ 4] __attribute__ ((aligned (32)));$/;"	v	file:
__alauda_erase	nand/alauda.c	/^static int __alauda_erase(struct mtd_info *mtd, struct erase_info *instr)$/;"	f	file:
__alauda_read_page	nand/alauda.c	/^static int __alauda_read_page(struct mtd_info *mtd, loff_t from, void *buf,$/;"	f	file:
__check_vol_patt	mtd-utils/tests/ubi-tests/common.c	/^int __check_vol_patt(libubi_t libubi, struct ubi_dev_info *dev_info,$/;"	f
__check_volume	mtd-utils/tests/ubi-tests/common.c	/^int __check_volume(libubi_t libubi, struct ubi_dev_info *dev_info,$/;"	f
__devinitdata	maps/esb2rom.c	/^static struct pci_device_id esb2rom_pci_tbl[] __devinitdata = {$/;"	v	typeref:struct:esb2rom_pci_tbl	file:
__devinitdata	maps/ichxrom.c	/^static struct pci_device_id ichxrom_pci_tbl[] __devinitdata = {$/;"	v	typeref:struct:ichxrom_pci_tbl	file:
__err_dump	mtd-utils/ubi-utils/src/error.c	/^__err_dump(const char *fmt, ...)$/;"	f
__err_msg	mtd-utils/tests/ubi-tests/common.c	/^void __err_msg(const char *test, const char *func, int line,$/;"	f
__err_msg	mtd-utils/ubi-utils/src/error.c	/^__err_msg(const char *fmt, ...)$/;"	f
__err_quit	mtd-utils/ubi-utils/src/error.c	/^__err_quit(const char *fmt, ...)$/;"	f
__err_ret	mtd-utils/ubi-utils/src/error.c	/^__err_ret(const char *fmt, ...)$/;"	f
__err_sys	mtd-utils/ubi-utils/src/error.c	/^__err_sys(const char *fmt, ...)$/;"	f
__failed	mtd-utils/tests/ubi-tests/common.c	/^void __failed(const char *test, const char *func, int line,$/;"	f
__initdata	devices/ms02-nv.c	/^static char version[] __initdata =$/;"	v	file:
__initdata	devices/ms02-nv.c	/^static ulong ms02nv_addrs[] __initdata = {$/;"	v	file:
__initdata	maps/wr_sbc82xx_flash.c	/^static const char *part_probes[] __initdata = {"cmdlinepart", "RedBoot", NULL};$/;"	v	file:
__initial_check	mtd-utils/tests/ubi-tests/common.c	/^int __initial_check(const char *test, int argc, char * const argv[])$/;"	f
__list_add	mtd-utils/compr.c	/^static inline void __list_add(struct list_head *new,$/;"	f	file:
__list_del	mtd-utils/compr.c	/^static inline void __list_del(struct list_head *prev, struct list_head *next)$/;"	f	file:
__loc_msg	mtd-utils/ubi-utils/src/error.h	35;"	d
__loc_msg	mtd-utils/ubi-utils/src/error.h	40;"	d
__nand_addr	nand/jz4750_nand.c	1131;"	d	file:
__nand_cmd	nand/jz4750_nand.c	1130;"	d	file:
__nand_disable	nand/jz4740_nand.c	36;"	d	file:
__nand_ecc	nand/jz4730_nand.c	28;"	d	file:
__nand_ecc_decode_sync	nand/jz4740_nand.c	49;"	d	file:
__nand_ecc_disable	nand/jz4730_nand.c	30;"	d	file:
__nand_ecc_disable	nand/jz4740_nand.c	39;"	d	file:
__nand_ecc_enable	nand/jz4730_nand.c	29;"	d	file:
__nand_ecc_enable	nand/jz4740_nand.c	38;"	d	file:
__nand_ecc_encode_sync	nand/jz4740_nand.c	48;"	d	file:
__nand_enable	nand/jz4740_nand.c	35;"	d	file:
__nand_read_hm_ecc	nand/jz4740_nand.c	44;"	d	file:
__nand_rs_ecc_decoding	nand/jz4740_nand.c	47;"	d	file:
__nand_rs_ecc_encoding	nand/jz4740_nand.c	46;"	d	file:
__nand_select_hm_ecc	nand/jz4740_nand.c	41;"	d	file:
__nand_select_rs_ecc	nand/jz4740_nand.c	42;"	d	file:
__oct5066_page	maps/octagon-5066.c	/^static void __oct5066_page(struct map_info *map, __u8 byte)$/;"	f	file:
__pfi_h	mtd-utils/ubi-utils/src/pfi.h	2;"	d
__rb_erase_color	mtd-utils/rbtree.c	/^static void __rb_erase_color(struct rb_node *node, struct rb_node *parent,$/;"	f	file:
__rb_rotate_left	mtd-utils/rbtree.c	/^static void __rb_rotate_left(struct rb_node *node, struct rb_root *root)$/;"	f	file:
__rb_rotate_right	mtd-utils/rbtree.c	/^static void __rb_rotate_right(struct rb_node *node, struct rb_root *root)$/;"	f	file:
__unused	mtd-utils/ubi-utils/src/reader.c	35;"	d	file:
__update_vol_patt	mtd-utils/tests/ubi-tests/common.c	/^int __update_vol_patt(libubi_t libubi, const char *test, const char *func,$/;"	f
__user	mtd-utils/include/mtd/mtd-abi.h	12;"	d
__user	mtd-utils/include/mtd/ubi-user.h	26;"	d
__vmax301_page	maps/vmax301.c	/^static void __vmax301_page(struct map_info *map, unsigned long page)$/;"	f	file:
_block2mtd_erase	devices/block2mtd.c	/^static int _block2mtd_erase(struct block2mtd_dev *dev, loff_t to, size_t len)$/;"	f	file:
_block2mtd_write	devices/block2mtd.c	/^static int _block2mtd_write(struct block2mtd_dev *dev, const u_char *buf,$/;"	f	file:
_dictionary_	mtd-utils/ubi-utils/new-utils/src/dictionary.h	/^typedef struct _dictionary_ {$/;"	s
_line_status_	mtd-utils/ubi-utils/new-utils/src/libiniparser.c	/^typedef enum _line_status_ {$/;"	g	file:
_pad	redboot.c	/^    unsigned char _pad[256-(16+7*sizeof(uint32_t))];$/;"	m	struct:fis_image_desc	file:
a	mtd-utils/include/mtd/inftl-user.h	/^	struct inftl_unithead1 a;$/;"	m	union:inftl_uci	typeref:struct:inftl_uci::inftl_unithead1
a	mtd-utils/include/mtd/nftl-user.h	/^	struct nftl_uci0 a;$/;"	m	union:nftl_uci	typeref:struct:nftl_uci::nftl_uci0
aBlockData	udc_cache.c	/^	unsigned char   *aBlockData;$/;"	m	struct:__anon27	file:
a_entries	mtd-utils/include/mtd/jffs2-user.h	/^	struct posix_acl_xattr_entry	a_entries[0];$/;"	m	struct:posix_acl_xattr_header	typeref:struct:posix_acl_xattr_header::posix_acl_xattr_entry
a_version	mtd-utils/include/mtd/jffs2-user.h	/^	jint32_t	a_version;$/;"	m	struct:jffs2_acl_header
a_version	mtd-utils/include/mtd/jffs2-user.h	/^	uint32_t			a_version;$/;"	m	struct:posix_acl_xattr_header
abs_ec	ubi/ubi.h	/^	unsigned long long abs_ec;$/;"	m	struct:ubi_device
abs_ec	ubi/wl.c	/^	unsigned long long abs_ec;$/;"	m	struct:ubi_wl_prot_entry	file:
accept_addr_byte	nand/nandsim.c	/^static inline void accept_addr_byte(struct nandsim *ns, u_char bt)$/;"	f	file:
access_delay	nand/nandsim.c	/^static uint access_delay   = CONFIG_NANDSIM_ACCESS_DELAY;$/;"	v	file:
accurate	mtd-utils/jffs-dump.c	/^	uint8_t accurate;    \/* The inode is obsolete if accurate == 0.  *\/$/;"	m	struct:jffs_raw_inode	file:
action	mtd-utils/ubi-utils/src/bin2nand.c	/^	action_t action;$/;"	m	struct:myargs	file:
action	mtd-utils/ubi-utils/src/pddcustomize.c	/^	action_t action;$/;"	m	struct:myargs	file:
action	mtd-utils/ubi-utils/src/pfi2bin.c	/^	action_t action;$/;"	m	struct:myargs	file:
action	mtd-utils/ubi-utils/src/ubigen.c	/^	action_t action;$/;"	m	struct:myargs	file:
action	mtd-utils/ubi-utils/src/ubigen.h	/^typedef enum action {$/;"	g
action	mtd-utils/ubi-utils/src/ubimirror.c	/^	action_t action;$/;"	m	struct:myargs	file:
action_t	mtd-utils/ubi-utils/src/bin2nand.c	/^typedef enum action_t {$/;"	g	file:
action_t	mtd-utils/ubi-utils/src/bin2nand.c	/^} action_t;$/;"	t	typeref:enum:action_t	file:
action_t	mtd-utils/ubi-utils/src/pddcustomize.c	/^typedef enum action_t {$/;"	g	file:
action_t	mtd-utils/ubi-utils/src/pddcustomize.c	/^} action_t;$/;"	t	typeref:enum:action_t	file:
action_t	mtd-utils/ubi-utils/src/pfi2bin.c	/^typedef enum action_t {$/;"	g	file:
action_t	mtd-utils/ubi-utils/src/pfi2bin.c	/^} action_t;$/;"	t	typeref:enum:action_t	file:
action_t	mtd-utils/ubi-utils/src/ubigen.c	/^typedef enum action_t {$/;"	g	file:
action_t	mtd-utils/ubi-utils/src/ubigen.c	/^} action_t;$/;"	t	typeref:enum:action_t	file:
action_t	mtd-utils/ubi-utils/src/ubimirror.c	/^typedef enum action_t {$/;"	g	file:
action_t	mtd-utils/ubi-utils/src/ubimirror.c	/^} action_t;$/;"	t	typeref:enum:action_t	file:
add	ubi/ubi.h	/^	void (*add)(struct ubi_volume *vol);$/;"	m	struct:vol_notifier
add_child	mtd-utils/tests/fs-tests/utils/fstest_monitor.c	/^void add_child(pid_t child_pid)$/;"	f
add_cleanmarkers	mtd-utils/mkfs.jffs2.c	/^static int add_cleanmarkers = 1;$/;"	v	file:
add_cleanmarkers	mtd-utils/sumtool.c	/^static int add_cleanmarkers = 1;		\/* add cleanmarker to output *\/$/;"	v	file:
add_dataflash	devices/mtd_dataflash.c	/^add_dataflash(struct spi_device *spi, char *name,$/;"	f	file:
add_device	devices/block2mtd.c	/^static struct block2mtd_dev *add_device(char *devname, int erase_size)$/;"	f	file:
add_gcd_pid	mtd-utils/tests/fs-tests/stress/atoms/gcd_hupper.c	/^int add_gcd_pid(const char *number)$/;"	f
add_host_filesystem_entry	mtd-utils/mkfs.jffs2.c	/^static struct filesystem_entry *add_host_filesystem_entry($/;"	f	file:
add_mtd_blktrans_dev	mtd_blkdevs.c	/^EXPORT_SYMBOL_GPL(add_mtd_blktrans_dev);$/;"	v
add_mtd_blktrans_dev	mtd_blkdevs.c	/^int add_mtd_blktrans_dev(struct mtd_blktrans_dev *new)$/;"	f
add_mtd_device	mtdcore.c	/^EXPORT_SYMBOL_GPL(add_mtd_device);$/;"	v
add_mtd_device	mtdcore.c	/^int add_mtd_device(struct mtd_info *mtd)$/;"	f
add_mtd_partitions	mtdpart.c	/^EXPORT_SYMBOL(add_mtd_partitions);$/;"	v
add_mtd_partitions	mtdpart.c	/^int add_mtd_partitions(struct mtd_info *master,$/;"	f
add_static_info	mtd-utils/ubi-utils/src/libubigen.c	/^add_static_info(ubi_info_t u, size_t data_size, ubigen_action_t action)$/;"	f	file:
add_sum_dirent_mem	mtd-utils/sumtool.c	/^void add_sum_dirent_mem(union jffs2_node_union *node)$/;"	f
add_sum_inode_mem	mtd-utils/sumtool.c	/^void add_sum_inode_mem(union jffs2_node_union *node)$/;"	f
add_sum_mem	mtd-utils/sumtool.c	/^int add_sum_mem(union jffs2_sum_mem *item)$/;"	f
add_sum_xattr_mem	mtd-utils/sumtool.c	/^void add_sum_xattr_mem(union jffs2_node_union *node)$/;"	f
add_sum_xref_mem	mtd-utils/sumtool.c	/^void add_sum_xref_mem(union jffs2_node_union *node)$/;"	f
add_to_list	ubi/scan.c	/^static int add_to_list(struct ubi_scan_info *si, int pnum, int ec,$/;"	f	file:
add_ubi_blktrans_dev	ubi/bdev.c	/^EXPORT_SYMBOL_GPL(add_ubi_blktrans_dev);$/;"	v
add_ubi_blktrans_dev	ubi/bdev.c	/^int add_ubi_blktrans_dev(struct ubi_blktrans_dev *new)$/;"	f
add_vol	ubi/ubiblk.h	/^	void (*add_vol)(struct ubi_blktrans_ops *tr, struct ubi_volume *vol);$/;"	m	struct:ubi_blktrans_ops
add_vol_device	ubi/build.c	/^EXPORT_SYMBOL_GPL(add_vol_device);$/;"	v
add_vol_device	ubi/build.c	/^int add_vol_device(struct ubi_volume *vol)$/;"	f
add_volume	ubi/scan.c	/^static struct ubi_scan_volume *add_volume(struct ubi_scan_info *si, int vol_id,$/;"	f	file:
addmul	mtd-utils/fec.c	334;"	d	file:
addmul1	mtd-utils/fec.c	/^addmul1(gf *dst1, gf *src1, gf c, int sz)$/;"	f	file:
addr	devices/ms02-nv.h	/^	u_char *addr;$/;"	m	struct:ms02nv_private
addr1	chips/jedec_probe.c	/^	u32 addr1;$/;"	m	struct:unlock_addr	file:
addr2	chips/jedec_probe.c	/^	u32 addr2;$/;"	m	struct:unlock_addr	file:
addr_offset	nand/jz4750_nand.c	/^static u32 addr_offset;$/;"	v	file:
address	afs.c	/^	u32 address;		\/* Image is executed from here           *\/$/;"	m	struct:image_info_struct	file:
address_fix8_write	maps/ixp2000.c	/^static inline unsigned long address_fix8_write(unsigned long addr)$/;"	f	file:
address_fix8_write	maps/ixp2000.c	72;"	d	file:
adjust_size	mtd-utils/tests/fs-tests/stress/atoms/pdfrun.c	/^void adjust_size(void)$/;"	f
adnp_set_vpp	maps/dilnetpc.c	/^static void adnp_set_vpp(struct map_info *not_used, int on)$/;"	f	file:
aec	ubi/ubi.h	/^		struct rb_root aec;$/;"	m	struct:ubi_device::__anon25	typeref:struct:ubi_device::__anon25::rb_root
afs_parser	afs.c	/^static struct mtd_part_parser afs_parser = {$/;"	v	typeref:struct:mtd_part_parser	file:
afs_parser_exit	afs.c	/^module_exit(afs_parser_exit);$/;"	v
afs_parser_exit	afs.c	/^static void __exit afs_parser_exit(void)$/;"	f	file:
afs_parser_init	afs.c	/^module_init(afs_parser_init);$/;"	v
afs_parser_init	afs.c	/^static int __init afs_parser_init(void)$/;"	f	file:
afs_read_footer	afs.c	/^afs_read_footer(struct mtd_info *mtd, u_int *img_start, u_int *iis_start,$/;"	f	file:
afs_read_iis	afs.c	/^afs_read_iis(struct mtd_info *mtd, struct image_info_struct *iis, u_int ptr)$/;"	f	file:
after	mtd-utils/tests/fs-tests/stress/atoms/rndrm99.c	/^void after(const char *msg)$/;"	f
agand_flashbased	nand/nand_bbt.c	/^static struct nand_bbt_descr agand_flashbased = {$/;"	v	typeref:struct:nand_bbt_descr	file:
akita_oobinfo	nand/sharpsl.c	/^static struct nand_ecclayout akita_oobinfo = {$/;"	v	typeref:struct:nand_ecclayout	file:
alarm_gone_off	mtd-utils/tests/fs-tests/utils/fstest_monitor.c	/^int alarm_gone_off = 0;$/;"	v
alarm_handler	mtd-utils/tests/fs-tests/utils/fstest_monitor.c	/^void alarm_handler(int signum)$/;"	f
alauda	nand/alauda.c	/^struct alauda {$/;"	s	file:
alauda_ack_media	nand/alauda.c	/^static int alauda_ack_media(struct alauda *al)$/;"	f	file:
alauda_bounce_read	nand/alauda.c	/^static int alauda_bounce_read(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
alauda_card	nand/alauda.c	/^struct alauda_card {$/;"	s	file:
alauda_card_ids	nand/alauda.c	/^static struct alauda_card alauda_card_ids[] = {$/;"	v	typeref:struct:alauda_card	file:
alauda_check_media	nand/alauda.c	/^static int alauda_check_media(struct alauda *al)$/;"	f	file:
alauda_complete	nand/alauda.c	/^static void alauda_complete(struct urb *urb)$/;"	f	file:
alauda_delete	nand/alauda.c	/^static void alauda_delete(struct kref *kref)$/;"	f	file:
alauda_disconnect	nand/alauda.c	/^static void alauda_disconnect(struct usb_interface *interface)$/;"	f	file:
alauda_driver	nand/alauda.c	/^static struct usb_driver alauda_driver = {$/;"	v	typeref:struct:usb_driver	file:
alauda_erase	nand/alauda.c	/^static int alauda_erase(struct mtd_info *mtd, struct erase_info *instr)$/;"	f	file:
alauda_erase_block	nand/alauda.c	/^static int alauda_erase_block(struct mtd_info *mtd, loff_t ofs)$/;"	f	file:
alauda_exit	nand/alauda.c	/^module_exit(alauda_exit);$/;"	v
alauda_exit	nand/alauda.c	/^static void __exit alauda_exit(void)$/;"	f	file:
alauda_get_media_signatures	nand/alauda.c	/^static int alauda_get_media_signatures(struct alauda *al, void *buf)$/;"	f	file:
alauda_get_media_status	nand/alauda.c	/^static int alauda_get_media_status(struct alauda *al, void *buf)$/;"	f	file:
alauda_init	nand/alauda.c	/^module_init(alauda_init);$/;"	v
alauda_init	nand/alauda.c	/^static int __init alauda_init(void)$/;"	f	file:
alauda_init_media	nand/alauda.c	/^static int alauda_init_media(struct alauda *al)$/;"	f	file:
alauda_isbad	nand/alauda.c	/^static int alauda_isbad(struct mtd_info *mtd, loff_t ofs)$/;"	f	file:
alauda_probe	nand/alauda.c	/^static int alauda_probe(struct usb_interface *interface,$/;"	f	file:
alauda_read	nand/alauda.c	/^static int alauda_read(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
alauda_read_oob	nand/alauda.c	/^static int alauda_read_oob(struct mtd_info *mtd, loff_t from, void *oob)$/;"	f	file:
alauda_read_page	nand/alauda.c	/^static int alauda_read_page(struct mtd_info *mtd, loff_t from,$/;"	f	file:
alauda_reset	nand/alauda.c	/^static void alauda_reset(struct alauda *al)$/;"	f	file:
alauda_sg_request	nand/alauda.c	/^struct alauda_sg_request {$/;"	s	file:
alauda_table	nand/alauda.c	/^static struct usb_device_id alauda_table [] = {$/;"	v	typeref:struct:usb_device_id	file:
alauda_write	nand/alauda.c	/^static int alauda_write(struct mtd_info *mtd, loff_t to, size_t len,$/;"	f	file:
alauda_write_page	nand/alauda.c	/^static int alauda_write_page(struct mtd_info *mtd, loff_t to, void *buf,$/;"	f	file:
alc_mutex	ubi/ubi.h	/^	struct mutex alc_mutex;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::mutex
alchemy_map	maps/alchemy-flash.c	/^static struct map_info alchemy_map = {$/;"	v	typeref:struct:map_info	file:
alchemy_mtd_cleanup	maps/alchemy-flash.c	/^module_exit(alchemy_mtd_cleanup);$/;"	v
alchemy_mtd_cleanup	maps/alchemy-flash.c	/^static void __exit alchemy_mtd_cleanup(void)$/;"	f	file:
alchemy_mtd_init	maps/alchemy-flash.c	/^int __init alchemy_mtd_init(void)$/;"	f
alchemy_mtd_init	maps/alchemy-flash.c	/^module_init(alchemy_mtd_init);$/;"	v
alchemy_partitions	maps/alchemy-flash.c	/^static struct mtd_partition alchemy_partitions[] = {$/;"	v	typeref:struct:mtd_partition	file:
ale	nand/nandsim.c	/^                int ale; \/* address Latch Enable *\/$/;"	m	struct:nandsim::ns_lines_status	file:
alien	ubi/scan.h	/^	struct list_head alien;$/;"	m	struct:ubi_scan_info	typeref:struct:ubi_scan_info::list_head
alien_cnt	mtd-utils/ubi-utils/new-utils/include/libscan.h	/^	int alien_cnt;$/;"	m	struct:ubi_scan_info
alien_peb_count	ubi/scan.h	/^	int alien_peb_count;$/;"	m	struct:ubi_scan_info
alignment	mtd-utils/include/mtd/ubi-header.h	/^	uint32_t alignment;$/;"	m	struct:ubi_vtbl_record
alignment	mtd-utils/include/mtd/ubi-user.h	/^	int32_t alignment;$/;"	m	struct:ubi_mkvol_req
alignment	mtd-utils/ubi-utils/inc/libubi.h	/^	int alignment;$/;"	m	struct:ubi_mkvol_request
alignment	mtd-utils/ubi-utils/inc/libubi.h	/^	int alignment;$/;"	m	struct:ubi_vol_info
alignment	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int alignment;$/;"	m	struct:ubi_mkvol_request
alignment	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int alignment;$/;"	m	struct:ubi_vol_info
alignment	mtd-utils/ubi-utils/new-utils/include/libubigen.h	/^	int alignment;$/;"	m	struct:ubigen_vol_info
alignment	mtd-utils/ubi-utils/new-utils/src/ubimkvol.c	/^	int alignment;$/;"	m	struct:args	file:
alignment	mtd-utils/ubi-utils/src/libubigen.c	/^	size_t alignment;	\/* Block alignment *\/$/;"	m	struct:ubi_info	file:
alignment	mtd-utils/ubi-utils/src/reader.h	/^	uint32_t alignment;$/;"	m	struct:pfi_ubi
alignment	mtd-utils/ubi-utils/src/ubigen.c	/^	uint32_t alignment;$/;"	m	struct:myargs	file:
alignment	ubi/ubi-media.h	/^	__be32  alignment;$/;"	m	struct:ubi_vtbl_record
alignment	ubi/ubi.h	/^	int alignment;$/;"	m	struct:ubi_volume
all	mtd-utils/ubi-utils/new-utils/src/ubinfo.c	/^	int all;$/;"	m	struct:args	file:
allPp	mtd-utils/fec.c	/^static char *allPp[] = {    \/* GF_BITS	polynomial		*\/$/;"	v	file:
all_ff	mtd-utils/ubi-utils/new-utils/src/libscan.c	/^static int all_ff(const void *buf, int len)$/;"	f	file:
all_mtd	maps/sbc_gxx.c	/^static struct mtd_info *all_mtd;$/;"	v	typeref:struct:mtd_info	file:
all_use_planes	nand/nand_base.c	/^char all_use_planes = 1;$/;"	v
alloc_device	nand/nandsim.c	/^static int alloc_device(struct nandsim *ns)$/;"	f	file:
allocate	mtd-utils/tests/ubi-tests/integ.c	/^static void *allocate(size_t n)$/;"	f	file:
allow_clk_stop	nand/s3c2410.c	/^static inline int allow_clk_stop(struct s3c2410_nand_info *info)$/;"	f	file:
allows_bb	mtd-utils/ubi-utils/new-utils/include/libmtd.h	/^	unsigned int allows_bb:1;$/;"	m	struct:mtd_info
altbankwidth	maps/fortunet.c	/^	int			altbankwidth;$/;"	m	struct:map_region	file:
amd76xrom_cleanup	maps/amd76xrom.c	/^static void amd76xrom_cleanup(struct amd76xrom_window *window)$/;"	f	file:
amd76xrom_init_one	maps/amd76xrom.c	/^static int __devinit amd76xrom_init_one (struct pci_dev *pdev,$/;"	f	file:
amd76xrom_map_info	maps/amd76xrom.c	/^struct amd76xrom_map_info {$/;"	s	file:
amd76xrom_pci_tbl	maps/amd76xrom.c	/^static struct pci_device_id amd76xrom_pci_tbl[] = {$/;"	v	typeref:struct:pci_device_id	file:
amd76xrom_remove_one	maps/amd76xrom.c	/^static void __devexit amd76xrom_remove_one (struct pci_dev *pdev)$/;"	f	file:
amd76xrom_window	maps/amd76xrom.c	/^static struct amd76xrom_window amd76xrom_window = {$/;"	v	typeref:struct:amd76xrom_window	file:
amd76xrom_window	maps/amd76xrom.c	/^struct amd76xrom_window {$/;"	s	file:
amd_flash_info	chips/jedec_probe.c	/^struct amd_flash_info {$/;"	s	file:
amd_mtd	maps/nettel.c	/^static struct mtd_info *amd_mtd;$/;"	v	typeref:struct:mtd_info	file:
ams_delta_cleanup	nand/ams-delta.c	/^module_exit(ams_delta_cleanup);$/;"	v
ams_delta_cleanup	nand/ams-delta.c	/^static void __exit ams_delta_cleanup(void)$/;"	f	file:
ams_delta_hwcontrol	nand/ams-delta.c	/^static void ams_delta_hwcontrol(struct mtd_info *mtd, int cmd,$/;"	f	file:
ams_delta_init	nand/ams-delta.c	/^module_init(ams_delta_init);$/;"	v
ams_delta_init	nand/ams-delta.c	/^static int __init ams_delta_init(void)$/;"	f	file:
ams_delta_mtd	nand/ams-delta.c	/^static struct mtd_info *ams_delta_mtd = NULL;$/;"	v	typeref:struct:mtd_info	file:
ams_delta_nand_ready	nand/ams-delta.c	/^static int ams_delta_nand_ready(struct mtd_info *mtd)$/;"	f	file:
ams_delta_read_buf	nand/ams-delta.c	/^static void ams_delta_read_buf(struct mtd_info *mtd, u_char *buf, int len)$/;"	f	file:
ams_delta_read_byte	nand/ams-delta.c	/^static u_char ams_delta_read_byte(struct mtd_info *mtd)$/;"	f	file:
ams_delta_verify_buf	nand/ams-delta.c	/^static int ams_delta_verify_buf(struct mtd_info *mtd, const u_char *buf,$/;"	f	file:
ams_delta_write_buf	nand/ams-delta.c	/^static void ams_delta_write_buf(struct mtd_info *mtd, const u_char *buf,$/;"	f	file:
ams_delta_write_byte	nand/ams-delta.c	/^static void ams_delta_write_byte(struct mtd_info *mtd, u_char byte)$/;"	f	file:
analyze	mtd-utils/ubi-utils/src/unubi.c	/^	int analyze;$/;"	m	struct:args	file:
answer_is_yes	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	/^static int answer_is_yes(void)$/;"	f	file:
any_num_to_hex	mtd-utils/ubi-utils/perl/mkpfi	/^sub any_num_to_hex($$) {$/;"	s
app_name	mtd-utils/mkfs.jffs2.c	/^static const char *const app_name = "mkfs.jffs2";$/;"	v	file:
app_name	mtd-utils/sumtool.c	/^static const char *const app_name = "sumtool";$/;"	v	file:
appendChecksum	mtd-utils/tests/checkfs/checkfs.c	/^void appendChecksum(char *buf, int numBytes){$/;"	f
append_elem	mtd-utils/ubi-utils/src/list.c	/^append_elem(info_t e, list_t l)$/;"	f
apply	mtd-utils/ubi-utils/src/list.c	/^apply(process_func_t process_func, list_t l)$/;"	f
area	maps/bast-flash.c	/^	struct resource		*area;$/;"	m	struct:bast_flash_info	typeref:struct:bast_flash_info::resource	file:
area	maps/plat-ram.c	/^	struct resource		*area;$/;"	m	struct:platram_info	typeref:struct:platram_info::resource	file:
area	nand/s3c2410.c	/^	struct resource			*area;$/;"	m	struct:s3c2410_nand_info	typeref:struct:s3c2410_nand_info::resource	file:
arg1	mtd-utils/ubi-utils/src/bin2nand.c	/^	char *arg1;$/;"	m	struct:myargs	file:
arg1	mtd-utils/ubi-utils/src/mkbootenv.c	/^	char *arg1;$/;"	m	struct:myargs	file:
arg1	mtd-utils/ubi-utils/src/nand2bin.c	/^	char *arg1;$/;"	m	struct:args	file:
arg1	mtd-utils/ubi-utils/src/pddcustomize.c	/^	char *arg1;$/;"	m	struct:myargs	file:
arg1	mtd-utils/ubi-utils/src/pfi2bin.c	/^	char *arg1;$/;"	m	struct:myargs	file:
arg1	mtd-utils/ubi-utils/src/pfiflash.c	/^	char *arg1;$/;"	m	struct:myargs	file:
arg1	mtd-utils/ubi-utils/src/ubigen.c	/^	char *arg1;$/;"	m	struct:myargs	file:
arg1	mtd-utils/ubi-utils/src/ubimirror.c	/^	char *arg1;$/;"	m	struct:myargs	file:
args	mtd-utils/ubi-utils/new-utils/src/ubiattach.c	/^static struct args args = {$/;"	v	typeref:struct:args	file:
args	mtd-utils/ubi-utils/new-utils/src/ubiattach.c	/^struct args {$/;"	s	file:
args	mtd-utils/ubi-utils/new-utils/src/ubicrcvol.c	/^static struct args args = {$/;"	v	typeref:struct:args	file:
args	mtd-utils/ubi-utils/new-utils/src/ubicrcvol.c	/^struct args {$/;"	s	file:
args	mtd-utils/ubi-utils/new-utils/src/ubidetach.c	/^static struct args args = {$/;"	v	typeref:struct:args	file:
args	mtd-utils/ubi-utils/new-utils/src/ubidetach.c	/^struct args {$/;"	s	file:
args	mtd-utils/ubi-utils/new-utils/src/ubidumpvol.c	/^static struct args args = {$/;"	v	typeref:struct:args	file:
args	mtd-utils/ubi-utils/new-utils/src/ubidumpvol.c	/^struct args {$/;"	s	file:
args	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	/^static struct args args =$/;"	v	typeref:struct:args	file:
args	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	/^struct args {$/;"	s	file:
args	mtd-utils/ubi-utils/new-utils/src/ubimkvol.c	/^static struct args args = {$/;"	v	typeref:struct:args	file:
args	mtd-utils/ubi-utils/new-utils/src/ubimkvol.c	/^struct args {$/;"	s	file:
args	mtd-utils/ubi-utils/new-utils/src/ubinfo.c	/^static struct args args = {$/;"	v	typeref:struct:args	file:
args	mtd-utils/ubi-utils/new-utils/src/ubinfo.c	/^struct args {$/;"	s	file:
args	mtd-utils/ubi-utils/new-utils/src/ubinize.c	/^static struct args args = {$/;"	v	typeref:struct:args	file:
args	mtd-utils/ubi-utils/new-utils/src/ubinize.c	/^struct args {$/;"	s	file:
args	mtd-utils/ubi-utils/new-utils/src/ubirmvol.c	/^static struct args args = {$/;"	v	typeref:struct:args	file:
args	mtd-utils/ubi-utils/new-utils/src/ubirmvol.c	/^struct args {$/;"	s	file:
args	mtd-utils/ubi-utils/new-utils/src/ubiupdatevol.c	/^static struct args args = {$/;"	v	typeref:struct:args	file:
args	mtd-utils/ubi-utils/new-utils/src/ubiupdatevol.c	/^struct args {$/;"	s	file:
args	mtd-utils/ubi-utils/src/nand2bin.c	/^struct args {$/;"	s	file:
args	mtd-utils/ubi-utils/src/unubi.c	/^struct args {$/;"	s	file:
armflash_driver	maps/integrator-flash.c	/^static struct platform_driver armflash_driver = {$/;"	v	typeref:struct:platform_driver	file:
armflash_exit	maps/integrator-flash.c	/^module_exit(armflash_exit);$/;"	v
armflash_exit	maps/integrator-flash.c	/^static void __exit armflash_exit(void)$/;"	f	file:
armflash_info	maps/integrator-flash.c	/^struct armflash_info {$/;"	s	file:
armflash_init	maps/integrator-flash.c	/^module_init(armflash_init);$/;"	v
armflash_init	maps/integrator-flash.c	/^static int __init armflash_init(void)$/;"	f	file:
armflash_probe	maps/integrator-flash.c	/^static int armflash_probe(struct platform_device *dev)$/;"	f	file:
armflash_remove	maps/integrator-flash.c	/^static int armflash_remove(struct platform_device *dev)$/;"	f	file:
armflash_set_vpp	maps/integrator-flash.c	/^static void armflash_set_vpp(struct map_info *map, int on)$/;"	f	file:
asize	devices/pmc551.c	/^static int asize = 0;$/;"	v	file:
at91_nand_cmd_ctrl	nand/at91_nand.c	/^static void at91_nand_cmd_ctrl(struct mtd_info *mtd, int cmd, unsigned int ctrl)$/;"	f	file:
at91_nand_device_ready	nand/at91_nand.c	/^static int at91_nand_device_ready(struct mtd_info *mtd)$/;"	f	file:
at91_nand_disable	nand/at91_nand.c	/^static void at91_nand_disable(struct at91_nand_host *host)$/;"	f	file:
at91_nand_driver	nand/at91_nand.c	/^static struct platform_driver at91_nand_driver = {$/;"	v	typeref:struct:platform_driver	file:
at91_nand_enable	nand/at91_nand.c	/^static void at91_nand_enable(struct at91_nand_host *host)$/;"	f	file:
at91_nand_exit	nand/at91_nand.c	/^module_exit(at91_nand_exit);$/;"	v
at91_nand_exit	nand/at91_nand.c	/^static void __exit at91_nand_exit(void)$/;"	f	file:
at91_nand_host	nand/at91_nand.c	/^struct at91_nand_host {$/;"	s	file:
at91_nand_init	nand/at91_nand.c	/^module_init(at91_nand_init);$/;"	v
at91_nand_init	nand/at91_nand.c	/^static int __init at91_nand_init(void)$/;"	f	file:
at91_nand_probe	nand/at91_nand.c	/^static int __init at91_nand_probe(struct platform_device *pdev)$/;"	f	file:
at91_nand_remove	nand/at91_nand.c	/^static int __devexit at91_nand_remove(struct platform_device *pdev)$/;"	f	file:
atime	mtd-utils/include/linux/jffs2.h	/^	jint32_t atime;      \/* Last access time.  *\/$/;"	m	struct:jffs2_raw_inode
atime	mtd-utils/jffs-dump.c	/^	uint32_t atime;$/;"	m	struct:jffs_raw_inode	file:
attach_by_scanning	ubi/build.c	/^static int attach_by_scanning(struct ubi_device *ubi)$/;"	f	file:
attr_vol_alignment	ubi/vmt.c	/^static struct device_attribute attr_vol_alignment =$/;"	v	typeref:struct:device_attribute	file:
attr_vol_corrupted	ubi/vmt.c	/^static struct device_attribute attr_vol_corrupted =$/;"	v	typeref:struct:device_attribute	file:
attr_vol_data_bytes	ubi/vmt.c	/^static struct device_attribute attr_vol_data_bytes =$/;"	v	typeref:struct:device_attribute	file:
attr_vol_name	ubi/vmt.c	/^static struct device_attribute attr_vol_name =$/;"	v	typeref:struct:device_attribute	file:
attr_vol_reserved_ebs	ubi/vmt.c	/^static struct device_attribute attr_vol_reserved_ebs =$/;"	v	typeref:struct:device_attribute	file:
attr_vol_type	ubi/vmt.c	/^static struct device_attribute attr_vol_type =$/;"	v	typeref:struct:device_attribute	file:
attr_vol_upd_marker	ubi/vmt.c	/^static struct device_attribute attr_vol_upd_marker =$/;"	v	typeref:struct:device_attribute	file:
attr_vol_usable_eb_size	ubi/vmt.c	/^static struct device_attribute attr_vol_usable_eb_size =$/;"	v	typeref:struct:device_attribute	file:
au1550_cleanup	nand/au1550nd.c	/^module_exit(au1550_cleanup);$/;"	v
au1550_cleanup	nand/au1550nd.c	/^static void __exit au1550_cleanup(void)$/;"	f	file:
au1550_command	nand/au1550nd.c	/^static void au1550_command(struct mtd_info *mtd, unsigned command, int column, int page_addr)$/;"	f	file:
au1550_device_ready	nand/au1550nd.c	/^int au1550_device_ready(struct mtd_info *mtd)$/;"	f
au1550_hwcontrol	nand/au1550nd.c	/^static void au1550_hwcontrol(struct mtd_info *mtd, int cmd)$/;"	f	file:
au1550_mtd	nand/au1550nd.c	/^static struct mtd_info *au1550_mtd = NULL;$/;"	v	typeref:struct:mtd_info	file:
au1550_select_chip	nand/au1550nd.c	/^static void au1550_select_chip(struct mtd_info *mtd, int chip)$/;"	f	file:
au1550_write_byte	nand/au1550nd.c	/^static void (*au1550_write_byte)(struct mtd_info *, u_char);$/;"	v	file:
au1xxx_nand_init	nand/au1550nd.c	/^module_init(au1xxx_nand_init);$/;"	v
au1xxx_nand_init	nand/au1550nd.c	/^static int __init au1xxx_nand_init(void)$/;"	f	file:
au_read_buf	nand/au1550nd.c	/^static void au_read_buf(struct mtd_info *mtd, u_char *buf, int len)$/;"	f	file:
au_read_buf16	nand/au1550nd.c	/^static void au_read_buf16(struct mtd_info *mtd, u_char *buf, int len)$/;"	f	file:
au_read_byte	nand/au1550nd.c	/^static u_char au_read_byte(struct mtd_info *mtd)$/;"	f	file:
au_read_byte16	nand/au1550nd.c	/^static u_char au_read_byte16(struct mtd_info *mtd)$/;"	f	file:
au_read_word	nand/au1550nd.c	/^static u16 au_read_word(struct mtd_info *mtd)$/;"	f	file:
au_verify_buf	nand/au1550nd.c	/^static int au_verify_buf(struct mtd_info *mtd, const u_char *buf, int len)$/;"	f	file:
au_verify_buf16	nand/au1550nd.c	/^static int au_verify_buf16(struct mtd_info *mtd, const u_char *buf, int len)$/;"	f	file:
au_write_buf	nand/au1550nd.c	/^static void au_write_buf(struct mtd_info *mtd, const u_char *buf, int len)$/;"	f	file:
au_write_buf16	nand/au1550nd.c	/^static void au_write_buf16(struct mtd_info *mtd, const u_char *buf, int len)$/;"	f	file:
au_write_byte	nand/au1550nd.c	/^static void au_write_byte(struct mtd_info *mtd, u_char byte)$/;"	f	file:
au_write_byte16	nand/au1550nd.c	/^static void au_write_byte16(struct mtd_info *mtd, u_char byte)$/;"	f	file:
autcpu12_cleanup	nand/autcpu12.c	/^module_exit(autcpu12_cleanup);$/;"	v
autcpu12_cleanup	nand/autcpu12.c	/^static void __exit autcpu12_cleanup(void)$/;"	f	file:
autcpu12_device_ready	nand/autcpu12.c	/^int autcpu12_device_ready(struct mtd_info *mtd)$/;"	f
autcpu12_fio_base	nand/autcpu12.c	/^static void __iomem *autcpu12_fio_base;$/;"	v	file:
autcpu12_hwcontrol	nand/autcpu12.c	/^static void autcpu12_hwcontrol(struct mtd_info *mtd, int cmd,$/;"	f	file:
autcpu12_init	nand/autcpu12.c	/^module_init(autcpu12_init);$/;"	v
autcpu12_init	nand/autcpu12.c	/^static int __init autcpu12_init(void)$/;"	f	file:
autcpu12_mtd	nand/autcpu12.c	/^static struct mtd_info *autcpu12_mtd = NULL;$/;"	v	typeref:struct:mtd_info	file:
autcpu12_sram_map	maps/autcpu12-nvram.c	/^struct map_info autcpu12_sram_map = {$/;"	v	typeref:struct:map_info
autoplace	mtd-utils/nandwrite.c	/^int	autoplace = 0;$/;"	v
autoplace	mtd-utils/nandwrite_mlc.c	/^int	autoplace = 0;$/;"	v
autoplace_oobinfo	mtd-utils/nandwrite.c	/^struct nand_oobinfo autoplace_oobinfo = {$/;"	v	typeref:struct:nand_oobinfo
autoplace_oobinfo	mtd-utils/nandwrite_mlc.c	/^struct nand_oobinfo autoplace_oobinfo = {$/;"	v	typeref:struct:nand_oobinfo
autoresize	ubi/build.c	/^static int autoresize(struct ubi_device *ubi, int vol_id)$/;"	f	file:
autoresize_vol_id	ubi/ubi.h	/^	int autoresize_vol_id;$/;"	m	struct:ubi_device
avail_bytes	mtd-utils/ubi-utils/inc/libubi.h	/^	long long avail_bytes;$/;"	m	struct:ubi_dev_info
avail_bytes	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	long long avail_bytes;$/;"	m	struct:ubi_dev_info
avail_ebs	mtd-utils/ubi-utils/inc/libubi.h	/^	int avail_ebs;$/;"	m	struct:ubi_dev_info
avail_lebs	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int avail_lebs;$/;"	m	struct:ubi_dev_info
avail_pebs	ubi/ubi.h	/^	int avail_pebs;$/;"	m	struct:ubi_device
b	mtd-utils/include/mtd/inftl-user.h	/^	struct inftl_bci b;$/;"	m	struct:inftl_oob	typeref:struct:inftl_oob::inftl_bci
b	mtd-utils/include/mtd/inftl-user.h	/^	struct inftl_unithead2 b;$/;"	m	union:inftl_uci	typeref:struct:inftl_uci::inftl_unithead2
b	mtd-utils/include/mtd/nftl-user.h	/^	struct nftl_bci b;$/;"	m	struct:nftl_oob	typeref:struct:nftl_oob::nftl_bci
b	mtd-utils/include/mtd/nftl-user.h	/^	struct nftl_uci1 b;$/;"	m	union:nftl_uci	typeref:struct:nftl_uci::nftl_uci1
bad_allowed	ubi/ubi.h	/^	int bad_allowed;$/;"	m	struct:ubi_device
bad_block	mtdblock-jz.c	/^	unsigned int bad_block;$/;"	m	struct:mtdblk_zone_t	file:
bad_block_num	mtdblock-jz.c	/^	int bad_block_num;$/;"	m	struct:mtdblk_zone_t	file:
bad_cnt	mtd-utils/ubi-utils/new-utils/include/libscan.h	/^	int bad_cnt;$/;"	m	struct:ubi_scan_info
bad_count	mtd-utils/ubi-utils/inc/libubi.h	/^	int bad_count;$/;"	m	struct:ubi_dev_info
bad_count	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int bad_count;$/;"	m	struct:ubi_dev_info
bad_marker_offs_in_oob	mtd-utils/ubi-utils/src/nand2bin.c	/^static int bad_marker_offs_in_oob(int pagesize)$/;"	f	file:
bad_peb_count	ubi/scan.h	/^	int bad_peb_count;$/;"	m	struct:ubi_scan_info
bad_peb_count	ubi/ubi.h	/^	int bad_peb_count;$/;"	m	struct:ubi_device
bad_rsvd	mtd-utils/ubi-utils/inc/libubi.h	/^	int bad_rsvd;$/;"	m	struct:ubi_dev_info
bad_rsvd	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int bad_rsvd;$/;"	m	struct:ubi_dev_info
badblocks	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t badblocks;$/;"	m	struct:mtd_ecc_stats
badblocks	nand/nandsim.c	/^static char *badblocks = NULL;$/;"	v	file:
bam_cache	ftl.c	/^    u_int32_t		*bam_cache;$/;"	m	struct:partition_t	file:
bam_index	ftl.c	/^    u_int16_t		bam_index;$/;"	m	struct:partition_t	file:
bankwidth	maps/pcmciamtd.c	/^static int bankwidth = 2;$/;"	v	file:
base	maps/ceiva.c	/^	unsigned long base;$/;"	m	struct:clps_info	file:
base	maps/pci.c	/^	void __iomem *base;$/;"	m	struct:map_pci_info	file:
base	onenand/onenand_sim.c	/^	void __iomem *base;$/;"	m	struct:onenand_flash	file:
basename	mtd-utils/mkfs.jffs2.c	79;"	d	file:
bast_flash_driver	maps/bast-flash.c	/^static struct platform_driver bast_flash_driver = {$/;"	v	typeref:struct:platform_driver	file:
bast_flash_exit	maps/bast-flash.c	/^module_exit(bast_flash_exit);$/;"	v
bast_flash_exit	maps/bast-flash.c	/^static void __exit bast_flash_exit(void)$/;"	f	file:
bast_flash_info	maps/bast-flash.c	/^struct bast_flash_info {$/;"	s	file:
bast_flash_init	maps/bast-flash.c	/^module_init(bast_flash_init);$/;"	v
bast_flash_init	maps/bast-flash.c	/^static int __init bast_flash_init(void)$/;"	f	file:
bast_flash_probe	maps/bast-flash.c	/^static int bast_flash_probe(struct platform_device *pdev)$/;"	f	file:
bast_flash_remove	maps/bast-flash.c	/^static int bast_flash_remove(struct platform_device *pdev)$/;"	f	file:
bast_flash_setrw	maps/bast-flash.c	/^static void bast_flash_setrw(int to)$/;"	f	file:
bbt_main_descr	nand/nand_bbt.c	/^static struct nand_bbt_descr bbt_main_descr = {$/;"	v	typeref:struct:nand_bbt_descr	file:
bbt_mirror_descr	nand/nand_bbt.c	/^static struct nand_bbt_descr bbt_mirror_descr = {$/;"	v	typeref:struct:nand_bbt_descr	file:
bbt_pattern	nand/nand_bbt.c	/^static uint8_t bbt_pattern[] = {'B', 'b', 't', '0' };$/;"	v	file:
bbt_pattern	nand/rtc_from4.c	/^static uint8_t bbt_pattern[] = { 'B', 'b', 't', '0' };$/;"	v	file:
bbtblocks	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t bbtblocks;$/;"	m	struct:mtd_ecc_stats
bch_correct	nand/jz4750_nand.c	/^static void bch_correct(struct mtd_info *mtd, u8 * dat, int idx)$/;"	f	file:
bch_dma_chan	nand/jz4750_nand.c	/^static char bch_dma_chan = 0;	\/* fixed to channel 0 *\/$/;"	v	file:
bcmp	mtd-utils/fec.c	54;"	d	file:
bcopy	mtd-utils/fec.c	58;"	d	file:
bdev_init	ubi/build.c	/^static int bdev_init(struct ubi_device *ubi){$/;"	f	file:
bdev_major	ubi/ubi.h	/^	int bdev_major;  \/\/add by Nancy$/;"	m	struct:ubi_device
bdev_mode	ubi/ubi.h	/^	int  bdev_mode;  \/\/add by Nancy$/;"	m	struct:ubi_volume
be16_to_cpu	mtd-utils/include/mtd_swab.h	45;"	d
be32_to_cpu	mtd-utils/include/mtd_swab.h	47;"	d
be64_to_cpu	mtd-utils/include/mtd_swab.h	49;"	d
beb_rsvd_level	ubi/ubi.h	/^	int beb_rsvd_level;$/;"	m	struct:ubi_device
beb_rsvd_pebs	ubi/ubi.h	/^	int beb_rsvd_pebs;$/;"	m	struct:ubi_device
before	mtd-utils/tests/fs-tests/stress/atoms/rndrm99.c	/^void before(void)$/;"	f
bf5xx_nand_add_partition	nand/bf5xx_nand.c	/^static int bf5xx_nand_add_partition(struct bf5xx_nand_info *info)$/;"	f	file:
bf5xx_nand_calculate_ecc	nand/bf5xx_nand.c	/^static int bf5xx_nand_calculate_ecc(struct mtd_info *mtd,$/;"	f	file:
bf5xx_nand_correct_data	nand/bf5xx_nand.c	/^static int bf5xx_nand_correct_data(struct mtd_info *mtd, u_char *dat,$/;"	f	file:
bf5xx_nand_correct_data_256	nand/bf5xx_nand.c	/^static int bf5xx_nand_correct_data_256(struct mtd_info *mtd, u_char *dat,$/;"	f	file:
bf5xx_nand_devready	nand/bf5xx_nand.c	/^static int bf5xx_nand_devready(struct mtd_info *mtd)$/;"	f	file:
bf5xx_nand_dma_init	nand/bf5xx_nand.c	/^static int bf5xx_nand_dma_init(struct bf5xx_nand_info *info)$/;"	f	file:
bf5xx_nand_dma_irq	nand/bf5xx_nand.c	/^static irqreturn_t bf5xx_nand_dma_irq(int irq, void *dev_id)$/;"	f	file:
bf5xx_nand_dma_read_buf	nand/bf5xx_nand.c	/^static void bf5xx_nand_dma_read_buf(struct mtd_info *mtd,$/;"	f	file:
bf5xx_nand_dma_rw	nand/bf5xx_nand.c	/^static int bf5xx_nand_dma_rw(struct mtd_info *mtd,$/;"	f	file:
bf5xx_nand_dma_write_buf	nand/bf5xx_nand.c	/^static void bf5xx_nand_dma_write_buf(struct mtd_info *mtd,$/;"	f	file:
bf5xx_nand_driver	nand/bf5xx_nand.c	/^static struct platform_driver bf5xx_nand_driver = {$/;"	v	typeref:struct:platform_driver	file:
bf5xx_nand_enable_hwecc	nand/bf5xx_nand.c	/^static void bf5xx_nand_enable_hwecc(struct mtd_info *mtd, int mode)$/;"	f	file:
bf5xx_nand_exit	nand/bf5xx_nand.c	/^module_exit(bf5xx_nand_exit);$/;"	v
bf5xx_nand_exit	nand/bf5xx_nand.c	/^static void __exit bf5xx_nand_exit(void)$/;"	f	file:
bf5xx_nand_hw_init	nand/bf5xx_nand.c	/^static int bf5xx_nand_hw_init(struct bf5xx_nand_info *info)$/;"	f	file:
bf5xx_nand_hwcontrol	nand/bf5xx_nand.c	/^static void bf5xx_nand_hwcontrol(struct mtd_info *mtd, int cmd,$/;"	f	file:
bf5xx_nand_info	nand/bf5xx_nand.c	/^struct bf5xx_nand_info {$/;"	s	file:
bf5xx_nand_init	nand/bf5xx_nand.c	/^module_init(bf5xx_nand_init);$/;"	v
bf5xx_nand_init	nand/bf5xx_nand.c	/^static int __init bf5xx_nand_init(void)$/;"	f	file:
bf5xx_nand_probe	nand/bf5xx_nand.c	/^static int bf5xx_nand_probe(struct platform_device *pdev)$/;"	f	file:
bf5xx_nand_read_buf	nand/bf5xx_nand.c	/^static void bf5xx_nand_read_buf(struct mtd_info *mtd, uint8_t *buf, int len)$/;"	f	file:
bf5xx_nand_read_buf16	nand/bf5xx_nand.c	/^static void bf5xx_nand_read_buf16(struct mtd_info *mtd, uint8_t *buf, int len)$/;"	f	file:
bf5xx_nand_read_byte	nand/bf5xx_nand.c	/^static uint8_t bf5xx_nand_read_byte(struct mtd_info *mtd)$/;"	f	file:
bf5xx_nand_remove	nand/bf5xx_nand.c	/^static int bf5xx_nand_remove(struct platform_device *pdev)$/;"	f	file:
bf5xx_nand_resume	nand/bf5xx_nand.c	/^static int bf5xx_nand_resume(struct platform_device *dev)$/;"	f	file:
bf5xx_nand_resume	nand/bf5xx_nand.c	755;"	d	file:
bf5xx_nand_suspend	nand/bf5xx_nand.c	/^static int bf5xx_nand_suspend(struct platform_device *dev, pm_message_t pm)$/;"	f	file:
bf5xx_nand_suspend	nand/bf5xx_nand.c	754;"	d	file:
bf5xx_nand_write_buf	nand/bf5xx_nand.c	/^static void bf5xx_nand_write_buf(struct mtd_info *mtd,$/;"	f	file:
bf5xx_nand_write_buf16	nand/bf5xx_nand.c	/^static void bf5xx_nand_write_buf16(struct mtd_info *mtd,$/;"	f	file:
bfin_nfc_pin_req	nand/bf5xx_nand.c	/^static unsigned short bfin_nfc_pin_req[] = {P_NAND_CE, P_NAND_RB, 0};$/;"	v	file:
bgt_name	ubi/ubi.h	/^	char bgt_name[sizeof(UBI_BGT_NAME_PATTERN)+2];$/;"	m	struct:ubi_device
bgt_thread	ubi/ubi.h	/^	struct task_struct *bgt_thread;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::task_struct
bigflash_parts	maps/wr_sbc82xx_flash.c	/^static struct mtd_partition bigflash_parts[] = {$/;"	v	typeref:struct:mtd_partition	file:
bin2nand	mtd-utils/ubi-utils/scripts/Makefile	/^bin2nand	= bin2nand$/;"	m
bitflips	nand/nandsim.c	/^static unsigned int bitflips = 0;$/;"	v	file:
blkcore_priv	ubi/ubiblk.h	/^	struct ubi_blkcore_priv *blkcore_priv;$/;"	m	struct:ubi_blktrans_ops	typeref:struct:ubi_blktrans_ops::ubi_blkcore_priv
blkcore_priv	ubi/ubiblk.h	/^	void *blkcore_priv; \/* gendisk in 2.5, devfs_handle in 2.4 *\/$/;"	m	struct:ubi_blktrans_dev
blkdev	devices/block2mtd.c	/^	struct block_device *blkdev;$/;"	m	struct:block2mtd_dev	typeref:struct:block2mtd_dev::block_device	file:
blks_written	mtd-utils/ubi-utils/src/libubigen.c	/^	uint32_t blks_written;	\/* Number of written logical EB *\/$/;"	m	struct:ubi_info	file:
blkshift	ubi/ubiblk.h	/^	int blkshift;$/;"	m	struct:ubi_blktrans_ops
blksize	ubi/ubiblk.h	/^	int blksize;$/;"	m	struct:ubi_blktrans_ops
blktrans_getgeo	mtd_blkdevs.c	/^static int blktrans_getgeo(struct block_device *bdev, struct hd_geometry *geo)$/;"	f	file:
blktrans_getgeo	ubi/bdev.c	/^static int blktrans_getgeo(struct block_device *bdev, struct hd_geometry *geo)$/;"	f	file:
blktrans_ioctl	mtd_blkdevs.c	/^static int blktrans_ioctl(struct inode *inode, struct file *file,$/;"	f	file:
blktrans_ioctl	ubi/bdev.c	/^static int blktrans_ioctl(struct inode *inode, struct file *file,$/;"	f	file:
blktrans_notifier	mtd_blkdevs.c	/^static struct mtd_notifier blktrans_notifier = {$/;"	v	typeref:struct:mtd_notifier	file:
blktrans_notifier	ubi/bdev.c	/^static struct vol_notifier blktrans_notifier = {$/;"	v	typeref:struct:vol_notifier	file:
blktrans_notify_add	mtd_blkdevs.c	/^static void blktrans_notify_add(struct mtd_info *mtd)$/;"	f	file:
blktrans_notify_add	ubi/bdev.c	/^static void blktrans_notify_add(struct ubi_volume *vol)$/;"	f	file:
blktrans_notify_remove	mtd_blkdevs.c	/^static void blktrans_notify_remove(struct mtd_info *mtd)$/;"	f	file:
blktrans_notify_remove	ubi/bdev.c	/^static void blktrans_notify_remove(struct ubi_volume *vol)$/;"	f	file:
blktrans_open	mtd_blkdevs.c	/^static int blktrans_open(struct inode *i, struct file *f)$/;"	f	file:
blktrans_open	ubi/bdev.c	/^static int blktrans_open(struct inode *i, struct file *f)$/;"	f	file:
blktrans_release	mtd_blkdevs.c	/^static int blktrans_release(struct inode *i, struct file *f)$/;"	f	file:
blktrans_release	ubi/bdev.c	/^static int blktrans_release(struct inode *i, struct file *f)$/;"	f	file:
block	rfd_ftl.c	/^struct block {$/;"	s	file:
block2mtd_dev	devices/block2mtd.c	/^struct block2mtd_dev {$/;"	s	file:
block2mtd_erase	devices/block2mtd.c	/^static int block2mtd_erase(struct mtd_info *mtd, struct erase_info *instr)$/;"	f	file:
block2mtd_exit	devices/block2mtd.c	/^module_exit(block2mtd_exit);$/;"	v
block2mtd_exit	devices/block2mtd.c	/^static void __devexit block2mtd_exit(void)$/;"	f	file:
block2mtd_free_device	devices/block2mtd.c	/^static void block2mtd_free_device(struct block2mtd_dev *dev)$/;"	f	file:
block2mtd_init	devices/block2mtd.c	/^module_init(block2mtd_init);$/;"	v
block2mtd_init	devices/block2mtd.c	/^static int __init block2mtd_init(void)$/;"	f	file:
block2mtd_init_called	devices/block2mtd.c	/^static int block2mtd_init_called = 0;$/;"	v	file:
block2mtd_paramline	devices/block2mtd.c	/^static char block2mtd_paramline[80 + 12]; \/* 80 for device, 12 for erase size *\/$/;"	v	file:
block2mtd_read	devices/block2mtd.c	/^static int block2mtd_read(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
block2mtd_setup	devices/block2mtd.c	/^static int block2mtd_setup(const char *val, struct kernel_param *kp)$/;"	f	file:
block2mtd_setup2	devices/block2mtd.c	/^static int block2mtd_setup2(const char *val)$/;"	f	file:
block2mtd_sync	devices/block2mtd.c	/^static void block2mtd_sync(struct mtd_info *mtd)$/;"	f	file:
block2mtd_write	devices/block2mtd.c	/^static int block2mtd_write(struct mtd_info *mtd, loff_t to, size_t len,$/;"	f	file:
block_addr_field1	mtdblock-jz.c	/^	unsigned int block_addr_field1;$/;"	m	struct:mtdblk_fake_fsbuf	file:
block_addr_field2	mtdblock-jz.c	/^	unsigned int block_addr_field2;$/;"	m	struct:mtdblk_fake_fsbuf	file:
block_cache_data	mtdblock-jz.c	/^	unsigned char *block_cache_data;$/;"	m	struct:mtdblk_dev	file:
block_cache_state	mtdblock-jz.c	/^	enum { STATE_UNUSED, STATE_USED } block_cache_state;$/;"	m	struct:mtdblk_dev	typeref:enum:mtdblk_dev::__anon3	file:
block_count	mtd-utils/rfddump.c	/^	int block_count;$/;"	m	struct:rfd	file:
block_crc	mtd-utils/mcast_image.h	/^	uint32_t block_crc;$/;"	m	struct:image_pkt_hdr
block_info	mtdblock-jz.c	/^	struct mtdblk_block_info *block_info;$/;"	m	struct:mtdblk_zone_t	typeref:struct:mtdblk_zone_t::mtdblk_block_info	file:
block_lookup	mtdblock-jz.c	/^	unsigned int *block_lookup; \/\/index: virt_block value:block_info's index->phy_block$/;"	m	struct:mtdblk_zone_t	file:
block_nr	mtd-utils/mcast_image.h	/^	uint32_t block_nr;$/;"	m	struct:image_pkt_hdr
block_number	mtd-utils/tests/ubi-tests/integ.c	/^	int block_number;$/;"	m	struct:erase_block_info	file:
block_size	mtd-utils/rfddump.c	/^	int block_size;$/;"	m	struct:rfd	file:
block_size	rfd_ftl.c	/^	u_int block_size;		\/* size of erase unit *\/$/;"	m	struct:partition	file:
block_size	rfd_ftl.c	/^static int block_size = 0;$/;"	v	file:
blockalign	mtd-utils/nandwrite.c	/^int	blockalign = 1; \/*default to using 16K block size *\/$/;"	v
blockalign	mtd-utils/nandwrite_mlc.c	/^int	blockalign = 1; \/*default to using 16K block size *\/$/;"	v
blockmask	nand/alauda.c	/^	u32			blockmask;$/;"	m	struct:alauda	file:
blocks	rfd_ftl.c	/^	struct block *blocks;$/;"	m	struct:partition	typeref:struct:partition::block	file:
blockshift	nand/alauda.c	/^	u8	blockshift;	\/* 1<<blockshift block size *\/$/;"	m	struct:alauda_card	file:
blocksize	mtd-utils/mcast_image.h	/^	uint32_t blocksize;$/;"	m	struct:image_pkt_hdr
blocksize	mtd-utils/ubi-utils/src/nand2bin.c	/^	size_t blocksize;$/;"	m	struct:args	file:
board	nand/at91_nand.c	/^	struct at91_nand_data	*board;$/;"	m	struct:at91_nand_host	typeref:struct:at91_nand_host::at91_nand_data	file:
board_chip	nand/excite_nandflash.c	/^	struct nand_chip board_chip;$/;"	m	struct:excite_nand_drvdata	typeref:struct:excite_nand_drvdata::nand_chip	file:
board_mtd	nand/excite_nandflash.c	/^	struct mtd_info board_mtd;$/;"	m	struct:excite_nand_drvdata	typeref:struct:excite_nand_drvdata::mtd_info	file:
bool	mtd-utils/flashcp.c	/^typedef int bool;$/;"	t	file:
bootFlags	afs.c	/^	u32 bootFlags;		\/* Boot flags, compression etc.          *\/$/;"	m	struct:image_info_struct	file:
bootRecordID	mtd-utils/include/mtd/inftl-user.h	/^	char bootRecordID[8];$/;"	m	struct:INFTLMediaHeader
bootenv	mtd-utils/ubi-utils/src/bootenv.c	/^struct bootenv {$/;"	s	file:
bootenv_compare	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_compare(bootenv_t first, bootenv_t second)$/;"	f
bootenv_copy_bootenv	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_copy_bootenv(bootenv_t in, bootenv_t *out)$/;"	f
bootenv_create	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_create(bootenv_t* env)$/;"	f
bootenv_destroy	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_destroy(bootenv_t* env)$/;"	f
bootenv_dump	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_dump(bootenv_t env)$/;"	f
bootenv_get	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_get(bootenv_t env, const char *key, const char **value)$/;"	f
bootenv_get_key_vector	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_get_key_vector(bootenv_t env, size_t* size, int sort,$/;"	f
bootenv_get_num	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_get_num(bootenv_t env, const char *key, uint32_t *value)$/;"	f
bootenv_list	mtd-utils/ubi-utils/src/bootenv.c	/^struct bootenv_list {$/;"	s	file:
bootenv_list_add	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_list_add(bootenv_list_t list, const char *item)$/;"	f
bootenv_list_create	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_list_create(bootenv_list_t *list)$/;"	f
bootenv_list_destroy	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_list_destroy(bootenv_list_t *list)$/;"	f
bootenv_list_export	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_list_export(bootenv_list_t list, char **string)$/;"	f
bootenv_list_import	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_list_import(bootenv_list_t list, const char *str)$/;"	f
bootenv_list_is_in	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_list_is_in(bootenv_list_t list, const char *item)$/;"	f
bootenv_list_remove	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_list_remove(bootenv_list_t list, const char *item)$/;"	f
bootenv_list_t	mtd-utils/ubi-utils/src/bootenv.h	/^typedef struct bootenv_list *bootenv_list_t;$/;"	t	typeref:struct:bootenv_list
bootenv_list_to_num_vector	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_list_to_num_vector(bootenv_list_t list, size_t *size,$/;"	f
bootenv_list_to_vector	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_list_to_vector(bootenv_list_t list, size_t *size, const char ***vector)$/;"	f
bootenv_pdd_keep	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_pdd_keep(bootenv_t env_old, bootenv_t env_new, bootenv_t *env_res,$/;"	f
bootenv_pdd_merge	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_pdd_merge(bootenv_t env_old, bootenv_t env_new, bootenv_t *env_res,$/;"	f
bootenv_pdd_overwrite	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_pdd_overwrite(bootenv_t env_old, bootenv_t env_new,$/;"	f
bootenv_read	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_read(FILE* fp, bootenv_t env, size_t size)$/;"	f
bootenv_read_crc	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_read_crc(FILE* fp, bootenv_t env, size_t size, uint32_t* ret_crc)$/;"	f
bootenv_read_txt	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_read_txt(FILE* fp, bootenv_t env)$/;"	f
bootenv_sanity_check	mtd-utils/ubi-utils/perl/mkpfi	/^sub bootenv_sanity_check($) {$/;"	s
bootenv_set	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_set(bootenv_t env, const char *key, const char *value)$/;"	f
bootenv_size	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_size(bootenv_t env, size_t *size)$/;"	f
bootenv_t	mtd-utils/ubi-utils/src/bootenv.h	/^typedef struct bootenv *bootenv_t;$/;"	t	typeref:struct:bootenv
bootenv_unset	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_unset(bootenv_t env, const char *key)$/;"	f
bootenv_valid	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_valid(bootenv_t env ubi_unused)$/;"	f
bootenv_write	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_write(FILE* fp, bootenv_t env)$/;"	f
bootenv_write_crc	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_write_crc(FILE* fp, bootenv_t env, uint32_t* ret_crc)$/;"	f
bootenv_write_txt	mtd-utils/ubi-utils/src/bootenv.c	/^bootenv_write_txt(FILE* fp, bootenv_t env)$/;"	f
bootrom_mtd	maps/cdb89712.c	/^static struct mtd_info *bootrom_mtd;$/;"	v	typeref:struct:mtd_info	file:
both	mtd-utils/ubi-utils/src/pddcustomize.c	/^	int both;$/;"	m	struct:myargs	file:
broken_update	mtd-utils/ubi-utils/new-utils/src/ubidumpvol.c	/^	int broken_update;$/;"	m	struct:args	file:
broken_update	mtd-utils/ubi-utils/new-utils/src/ubiupdatevol.c	/^	int broken_update;$/;"	m	struct:args	file:
bsize	mtd-utils/ubi-utils/src/unubi.c	/^	size_t bsize;		\/* FIXME replace by vid_hdr\/data offs? *\/$/;"	m	struct:args	file:
buf	mtd-utils/docfdisk.c	/^unsigned char *buf;$/;"	v
buf	mtd-utils/include/mtd/ubi-user.h	/^	char __user *buf;$/;"	m	struct:ubi_leb
buf	mtd-utils/ubi-utils/src/libubigen.c	/^	uint8_t* buf;		\/* Allocated buffer *\/$/;"	m	struct:ubi_info	file:
buf	nand/nandsim.c	/^	union ns_mem buf;$/;"	m	struct:nandsim	typeref:union:nandsim::ns_mem	file:
buf_be_corrected	nand/jz4750_nand.c	/^struct buf_be_corrected {$/;"	s	file:
buf_mutex	ubi/ubi.h	/^	struct mutex buf_mutex;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::mutex
build_block_map	mtd-utils/rfddump.c	/^int build_block_map(struct rfd *rfd, int fd, int block)$/;"	f
build_block_map	rfd_ftl.c	/^static int build_block_map(struct partition *part, int block_no)$/;"	f	file:
build_decode_matrix	mtd-utils/fec.c	/^build_decode_matrix(struct fec_parms *code, gf *pkt[], int index[])$/;"	f	file:
build_header	mtd-utils/ftl_format.c	/^static void build_header(erase_unit_header_t *hdr, u_int RegionSize,$/;"	f	file:
build_list_definition	mtd-utils/ubi-utils/src/bootenv.c	/^build_list_definition(hashmap_t list, const char *value)$/;"	f	file:
build_logical_block_map	ssfdc.c	/^static int build_logical_block_map(struct ssfdcr_record *ssfdc)$/;"	f	file:
build_maps	ftl.c	/^static int build_maps(partition_t *part)$/;"	f	file:
bulk_in	nand/alauda.c	/^	unsigned int		bulk_in;$/;"	m	struct:alauda	file:
bulk_out	nand/alauda.c	/^	unsigned int		bulk_out;$/;"	m	struct:alauda	file:
bus_width	nand/nandsim.c	/^static uint bus_width      = CONFIG_NANDSIM_BUS_WIDTH;$/;"	v	file:
busw	nand/nandsim.c	/^	uint busw;              \/* flash chip bus width (8 or 16) *\/$/;"	m	struct:nandsim	file:
byte	nand/nandsim.c	/^	u_char *byte;    \/* for byte access *\/$/;"	m	union:ns_mem	file:
byte_to_blk	mtd-utils/ubi-utils/src/libubigen.c	/^byte_to_blk(uint64_t byte, uint32_t eb_size)$/;"	f	file:
byte_to_blk	mtd-utils/ubi-utils/src/pfi2bin.c	/^byte_to_blk(size_t byte, size_t blk_size)$/;"	f	file:
bytemask	nand/alauda.c	/^	u32			bytemask;$/;"	m	struct:alauda	file:
bytes	mtd-utils/include/mtd/ubi-user.h	/^	int32_t bytes;$/;"	m	struct:ubi_leb_change_req
bytes	mtd-utils/include/mtd/ubi-user.h	/^	int64_t bytes;$/;"	m	struct:ubi_mkvol_req
bytes	mtd-utils/include/mtd/ubi-user.h	/^	int64_t bytes;$/;"	m	struct:ubi_rsvol_req
bytes	mtd-utils/ubi-utils/inc/libubi.h	/^	long long bytes;$/;"	m	struct:ubi_mkvol_request
bytes	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	long long bytes;$/;"	m	struct:ubi_mkvol_request
bytes	mtd-utils/ubi-utils/new-utils/include/libubigen.h	/^	long long bytes;$/;"	m	struct:ubigen_vol_info
bytes	mtd-utils/ubi-utils/new-utils/src/ubimkvol.c	/^	long long bytes;$/;"	m	struct:args	file:
bytes_read	mtd-utils/ubi-utils/src/libubigen.c	/^	size_t bytes_read;	\/* Nymber of read bytes (total) *\/$/;"	m	struct:ubi_info	file:
bytes_str_to_int	ubi/build.c	/^static int __init bytes_str_to_int(const char *str)$/;"	f	file:
bytes_total	mtd-utils/ubi-utils/src/libubigen.c	/^	size_t bytes_total;	\/* Total input size in bytes *\/$/;"	m	struct:ubi_info	file:
bzero	mtd-utils/fec.c	59;"	d	file:
c	mtd-utils/include/mtd/inftl-user.h	/^	struct inftl_unittail c;$/;"	m	union:inftl_uci	typeref:struct:inftl_uci::inftl_unittail
c	mtd-utils/include/mtd/nftl-user.h	/^	struct nftl_uci2 c;$/;"	m	union:nftl_uci	typeref:struct:nftl_uci::nftl_uci2
cache_data	mtdblock.c	/^	unsigned char *cache_data;$/;"	m	struct:mtdblk_dev	file:
cache_mutex	mtdblock-jz.c	/^	struct mutex cache_mutex;$/;"	m	struct:mtdblk_dev	typeref:struct:mtdblk_dev::mutex	file:
cache_mutex	mtdblock.c	/^	struct mutex cache_mutex;$/;"	m	struct:mtdblk_dev	typeref:struct:mtdblk_dev::mutex	file:
cache_mutex	ubi/ubiblk.h	/^	struct mutex cache_mutex;$/;"	m	struct:ubiblk_dev	typeref:struct:ubiblk_dev::mutex
cache_offset	mtdblock.c	/^	unsigned long cache_offset;$/;"	m	struct:mtdblk_dev	file:
cache_size	mtdblock.c	/^	unsigned int cache_size;$/;"	m	struct:mtdblk_dev	file:
cache_state	mtdblock.c	/^	enum { STATE_EMPTY, STATE_CLEAN, STATE_DIRTY } cache_state;$/;"	m	struct:mtdblk_dev	typeref:enum:mtdblk_dev::__anon1	file:
cafe_bbt_main_descr_2048	nand/cafe_nand.c	/^static struct nand_bbt_descr cafe_bbt_main_descr_2048 = {$/;"	v	typeref:struct:nand_bbt_descr	file:
cafe_bbt_main_descr_512	nand/cafe_nand.c	/^static struct nand_bbt_descr cafe_bbt_main_descr_512 = {$/;"	v	typeref:struct:nand_bbt_descr	file:
cafe_bbt_mirror_descr_2048	nand/cafe_nand.c	/^static struct nand_bbt_descr cafe_bbt_mirror_descr_2048 = {$/;"	v	typeref:struct:nand_bbt_descr	file:
cafe_bbt_mirror_descr_512	nand/cafe_nand.c	/^static struct nand_bbt_descr cafe_bbt_mirror_descr_512 = {$/;"	v	typeref:struct:nand_bbt_descr	file:
cafe_bbt_pattern_2048	nand/cafe_nand.c	/^static uint8_t cafe_bbt_pattern_2048[] = { 'B', 'b', 't', '0' };$/;"	v	file:
cafe_bbt_pattern_512	nand/cafe_nand.c	/^static uint8_t cafe_bbt_pattern_512[] = { 0xBB };$/;"	v	file:
cafe_dev_dbg	nand/cafe_nand.c	88;"	d	file:
cafe_device_ready	nand/cafe_nand.c	/^static int cafe_device_ready(struct mtd_info *mtd)$/;"	f	file:
cafe_mirror_pattern_2048	nand/cafe_nand.c	/^static uint8_t cafe_mirror_pattern_2048[] = { '1', 't', 'b', 'B' };$/;"	v	file:
cafe_mirror_pattern_512	nand/cafe_nand.c	/^static uint8_t cafe_mirror_pattern_512[] = { 0xBC };$/;"	v	file:
cafe_mul	nand/cafe_nand.c	/^static int __devinit cafe_mul(int x)$/;"	f	file:
cafe_nand_block_bad	nand/cafe_nand.c	/^static int cafe_nand_block_bad(struct mtd_info *mtd, loff_t ofs, int getchip)$/;"	f	file:
cafe_nand_bug	nand/cafe_nand.c	/^static void cafe_nand_bug(struct mtd_info *mtd)$/;"	f	file:
cafe_nand_cmdfunc	nand/cafe_nand.c	/^static void cafe_nand_cmdfunc(struct mtd_info *mtd, unsigned command,$/;"	f	file:
cafe_nand_exit	nand/cafe_nand.c	/^module_exit(cafe_nand_exit);$/;"	v
cafe_nand_exit	nand/cafe_nand.c	/^static void cafe_nand_exit(void)$/;"	f	file:
cafe_nand_init	nand/cafe_nand.c	/^module_init(cafe_nand_init);$/;"	v
cafe_nand_init	nand/cafe_nand.c	/^static int cafe_nand_init(void)$/;"	f	file:
cafe_nand_interrupt	nand/cafe_nand.c	/^static int cafe_nand_interrupt(int irq, void *id)$/;"	f	file:
cafe_nand_pci_driver	nand/cafe_nand.c	/^static struct pci_driver cafe_nand_pci_driver = {$/;"	v	typeref:struct:pci_driver	file:
cafe_nand_probe	nand/cafe_nand.c	/^static int __devinit cafe_nand_probe(struct pci_dev *pdev,$/;"	f	file:
cafe_nand_read_oob	nand/cafe_nand.c	/^static int cafe_nand_read_oob(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
cafe_nand_read_page	nand/cafe_nand.c	/^static int cafe_nand_read_page(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
cafe_nand_remove	nand/cafe_nand.c	/^static void __devexit cafe_nand_remove(struct pci_dev *pdev)$/;"	f	file:
cafe_nand_resume	nand/cafe_nand.c	/^static int cafe_nand_resume(struct pci_dev *pdev)$/;"	f	file:
cafe_nand_tbl	nand/cafe_nand.c	/^static struct pci_device_id cafe_nand_tbl[] = {$/;"	v	typeref:struct:pci_device_id	file:
cafe_nand_write_oob	nand/cafe_nand.c	/^static int cafe_nand_write_oob(struct mtd_info *mtd,$/;"	f	file:
cafe_nand_write_page	nand/cafe_nand.c	/^static int cafe_nand_write_page(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
cafe_nand_write_page_lowlevel	nand/cafe_nand.c	/^static void cafe_nand_write_page_lowlevel(struct mtd_info *mtd,$/;"	f	file:
cafe_oobinfo_2048	nand/cafe_nand.c	/^static struct nand_ecclayout cafe_oobinfo_2048 = {$/;"	v	typeref:struct:nand_ecclayout	file:
cafe_oobinfo_512	nand/cafe_nand.c	/^static struct nand_ecclayout cafe_oobinfo_512 = {$/;"	v	typeref:struct:nand_ecclayout	file:
cafe_priv	nand/cafe_nand.c	/^struct cafe_priv {$/;"	s	file:
cafe_read_buf	nand/cafe_nand.c	/^static void cafe_read_buf(struct mtd_info *mtd, uint8_t *buf, int len)$/;"	f	file:
cafe_read_byte	nand/cafe_nand.c	/^static uint8_t cafe_read_byte(struct mtd_info *mtd)$/;"	f	file:
cafe_readl	nand/cafe_nand.c	91;"	d	file:
cafe_select_chip	nand/cafe_nand.c	/^static void cafe_select_chip(struct mtd_info *mtd, int chipnr)$/;"	f	file:
cafe_write_buf	nand/cafe_nand.c	/^static void cafe_write_buf(struct mtd_info *mtd, const uint8_t *buf, int len)$/;"	f	file:
cafe_writel	nand/cafe_nand.c	92;"	d	file:
calc_chain_length	nftlmount.c	/^static int calc_chain_length(struct NFTLrecord *nftl, unsigned int first_block)$/;"	f	file:
calc_oobsize	mtd-utils/ubi-utils/src/nand2bin.c	/^static int calc_oobsize(size_t pagesize)$/;"	f	file:
caller_is_module	nand/nand_base.c	3048;"	d	file:
caller_is_module	nand/nand_base.c	3050;"	d	file:
cancel_pending	ubi/wl.c	/^static void cancel_pending(struct ubi_device *ubi)$/;"	f	file:
card	mtd-utils/ubi-utils/scripts/Makefile	/^card		= test$/;"	m
card	nand/alauda.c	/^	struct alauda_card	*card;$/;"	m	struct:alauda	typeref:struct:alauda::alauda_card	file:
card_mutex	nand/alauda.c	/^	struct mutex		card_mutex;$/;"	m	struct:alauda	typeref:struct:alauda::mutex	file:
card_settings	maps/pcmciamtd.c	/^static void card_settings(struct pcmciamtd_dev *dev, struct pcmcia_device *link, int *new_name)$/;"	f	file:
cat_paths	mtd-utils/tests/fs-tests/integrity/integck.c	/^static char *cat_paths(const char *a, const char *b)$/;"	f	file:
cat_strings	mtd-utils/tests/fs-tests/integrity/integck.c	/^static char *cat_strings(const char *a, const char *b)$/;"	f	file:
catfile	mtd-utils/jffs2reader.c	/^void catfile(char *o, size_t size, char *path, char *b, size_t bsize,$/;"	f
cdb89712_bootrom_map	maps/cdb89712.c	/^struct map_info cdb89712_bootrom_map = {$/;"	v	typeref:struct:map_info
cdb89712_bootrom_resource	maps/cdb89712.c	/^struct resource cdb89712_bootrom_resource = {$/;"	v	typeref:struct:resource
cdb89712_flash_map	maps/cdb89712.c	/^struct map_info cdb89712_flash_map = {$/;"	v	typeref:struct:map_info
cdb89712_flash_resource	maps/cdb89712.c	/^struct resource cdb89712_flash_resource = {$/;"	v	typeref:struct:resource
cdb89712_sram_map	maps/cdb89712.c	/^struct map_info cdb89712_sram_map = {$/;"	v	typeref:struct:map_info
cdb89712_sram_resource	maps/cdb89712.c	/^struct resource cdb89712_sram_resource = {$/;"	v	typeref:struct:resource
cdev	ubi/ubi.h	/^	struct cdev cdev;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::cdev
cdev	ubi/ubi.h	/^	struct cdev cdev;$/;"	m	struct:ubi_volume	typeref:struct:ubi_volume::cdev
ce	nand/nandsim.c	/^                int ce;  \/* chip Enable *\/$/;"	m	struct:nandsim::ns_lines_status	file:
ceiva_partitions	maps/ceiva.c	/^static struct mtd_partition ceiva_partitions[] = {$/;"	v	typeref:struct:mtd_partition	file:
cfi_amdstd_chipdrv	chips/cfi_cmdset_0002.c	/^static struct mtd_chip_driver cfi_amdstd_chipdrv = {$/;"	v	typeref:struct:mtd_chip_driver	file:
cfi_amdstd_destroy	chips/cfi_cmdset_0002.c	/^static void cfi_amdstd_destroy(struct mtd_info *mtd)$/;"	f	file:
cfi_amdstd_erase_chip	chips/cfi_cmdset_0002.c	/^static int cfi_amdstd_erase_chip(struct mtd_info *mtd, struct erase_info *instr)$/;"	f	file:
cfi_amdstd_erase_varsize	chips/cfi_cmdset_0002.c	/^static int cfi_amdstd_erase_varsize(struct mtd_info *mtd, struct erase_info *instr)$/;"	f	file:
cfi_amdstd_read	chips/cfi_cmdset_0002.c	/^static int cfi_amdstd_read (struct mtd_info *mtd, loff_t from, size_t len, size_t *retlen, u_char *buf)$/;"	f	file:
cfi_amdstd_resume	chips/cfi_cmdset_0002.c	/^static void cfi_amdstd_resume(struct mtd_info *mtd)$/;"	f	file:
cfi_amdstd_secsi_read	chips/cfi_cmdset_0002.c	/^static int cfi_amdstd_secsi_read (struct mtd_info *mtd, loff_t from, size_t len, size_t *retlen, u_char *buf)$/;"	f	file:
cfi_amdstd_setup	chips/cfi_cmdset_0002.c	/^static struct mtd_info *cfi_amdstd_setup(struct mtd_info *mtd)$/;"	f	file:
cfi_amdstd_suspend	chips/cfi_cmdset_0002.c	/^static int cfi_amdstd_suspend(struct mtd_info *mtd)$/;"	f	file:
cfi_amdstd_sync	chips/cfi_cmdset_0002.c	/^static void cfi_amdstd_sync (struct mtd_info *mtd)$/;"	f	file:
cfi_amdstd_write_buffers	chips/cfi_cmdset_0002.c	/^static int cfi_amdstd_write_buffers(struct mtd_info *mtd, loff_t to, size_t len,$/;"	f	file:
cfi_amdstd_write_words	chips/cfi_cmdset_0002.c	/^static int cfi_amdstd_write_words(struct mtd_info *mtd, loff_t to, size_t len,$/;"	f	file:
cfi_atmel_lock	chips/cfi_cmdset_0002.c	/^static int cfi_atmel_lock(struct mtd_info *mtd, loff_t ofs, size_t len)$/;"	f	file:
cfi_atmel_unlock	chips/cfi_cmdset_0002.c	/^static int cfi_atmel_unlock(struct mtd_info *mtd, loff_t ofs, size_t len)$/;"	f	file:
cfi_chip_probe	chips/cfi_probe.c	/^static struct chip_probe cfi_chip_probe = {$/;"	v	typeref:struct:chip_probe	file:
cfi_chip_setup	chips/cfi_probe.c	/^static int __xipram cfi_chip_setup(struct map_info *map,$/;"	f	file:
cfi_chipdrv	chips/cfi_probe.c	/^static struct mtd_chip_driver cfi_chipdrv = {$/;"	v	typeref:struct:mtd_chip_driver	file:
cfi_cmdset_0001	chips/cfi_cmdset_0001.c	/^EXPORT_SYMBOL_GPL(cfi_cmdset_0001);$/;"	v
cfi_cmdset_0001	chips/cfi_cmdset_0001.c	/^struct mtd_info *cfi_cmdset_0001(struct map_info *map, int primary)$/;"	f
cfi_cmdset_0002	chips/cfi_cmdset_0002.c	/^EXPORT_SYMBOL_GPL(cfi_cmdset_0002);$/;"	v
cfi_cmdset_0002	chips/cfi_cmdset_0002.c	/^struct mtd_info *cfi_cmdset_0002(struct map_info *map, int primary)$/;"	f
cfi_cmdset_0003	chips/cfi_cmdset_0001.c	/^EXPORT_SYMBOL_GPL(cfi_cmdset_0003);$/;"	v
cfi_cmdset_0020	chips/cfi_cmdset_0020.c	/^EXPORT_SYMBOL_GPL(cfi_cmdset_0020);$/;"	v
cfi_cmdset_0020	chips/cfi_cmdset_0020.c	/^struct mtd_info *cfi_cmdset_0020(struct map_info *map, int primary)$/;"	f
cfi_cmdset_0200	chips/cfi_cmdset_0001.c	/^EXPORT_SYMBOL_GPL(cfi_cmdset_0200);$/;"	v
cfi_cmdset_fn_t	chips/gen_probe.c	/^typedef struct mtd_info *cfi_cmdset_fn_t(struct map_info *, int);$/;"	t	typeref:struct:cfi_cmdset_fn_t	file:
cfi_cmdset_unknown	chips/gen_probe.c	/^static inline struct mtd_info *cfi_cmdset_unknown(struct map_info *map,$/;"	f	file:
cfi_fixup	chips/cfi_util.c	/^EXPORT_SYMBOL(cfi_fixup);$/;"	v
cfi_fixup	chips/cfi_util.c	/^void cfi_fixup(struct mtd_info *mtd, struct cfi_fixup *fixups)$/;"	f
cfi_fixup_table	chips/cfi_cmdset_0001.c	/^static struct cfi_fixup cfi_fixup_table[] = {$/;"	v	typeref:struct:cfi_fixup	file:
cfi_fixup_table	chips/cfi_cmdset_0002.c	/^static struct cfi_fixup cfi_fixup_table[] = {$/;"	v	typeref:struct:cfi_fixup	file:
cfi_intelext_chipdrv	chips/cfi_cmdset_0001.c	/^static struct mtd_chip_driver cfi_intelext_chipdrv = {$/;"	v	typeref:struct:mtd_chip_driver	file:
cfi_intelext_destroy	chips/cfi_cmdset_0001.c	/^static void cfi_intelext_destroy(struct mtd_info *mtd)$/;"	f	file:
cfi_intelext_erase_varsize	chips/cfi_cmdset_0001.c	/^static int cfi_intelext_erase_varsize(struct mtd_info *mtd, struct erase_info *instr)$/;"	f	file:
cfi_intelext_get_fact_prot_info	chips/cfi_cmdset_0001.c	/^static int cfi_intelext_get_fact_prot_info(struct mtd_info *mtd,$/;"	f	file:
cfi_intelext_get_user_prot_info	chips/cfi_cmdset_0001.c	/^static int cfi_intelext_get_user_prot_info(struct mtd_info *mtd,$/;"	f	file:
cfi_intelext_lock	chips/cfi_cmdset_0001.c	/^static int cfi_intelext_lock(struct mtd_info *mtd, loff_t ofs, size_t len)$/;"	f	file:
cfi_intelext_lock_user_prot_reg	chips/cfi_cmdset_0001.c	/^static int cfi_intelext_lock_user_prot_reg(struct mtd_info *mtd,$/;"	f	file:
cfi_intelext_otp_walk	chips/cfi_cmdset_0001.c	/^static int cfi_intelext_otp_walk(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
cfi_intelext_partition_fixup	chips/cfi_cmdset_0001.c	/^static int cfi_intelext_partition_fixup(struct mtd_info *mtd,$/;"	f	file:
cfi_intelext_point	chips/cfi_cmdset_0001.c	/^static int cfi_intelext_point (struct mtd_info *mtd, loff_t from, size_t len, size_t *retlen, u_char **mtdbuf)$/;"	f	file:
cfi_intelext_read	chips/cfi_cmdset_0001.c	/^static int cfi_intelext_read (struct mtd_info *mtd, loff_t from, size_t len, size_t *retlen, u_char *buf)$/;"	f	file:
cfi_intelext_read_fact_prot_reg	chips/cfi_cmdset_0001.c	/^static int cfi_intelext_read_fact_prot_reg(struct mtd_info *mtd, loff_t from,$/;"	f	file:
cfi_intelext_read_user_prot_reg	chips/cfi_cmdset_0001.c	/^static int cfi_intelext_read_user_prot_reg(struct mtd_info *mtd, loff_t from,$/;"	f	file:
cfi_intelext_reboot	chips/cfi_cmdset_0001.c	/^static int cfi_intelext_reboot(struct notifier_block *nb, unsigned long val,$/;"	f	file:
cfi_intelext_reset	chips/cfi_cmdset_0001.c	/^static int cfi_intelext_reset(struct mtd_info *mtd)$/;"	f	file:
cfi_intelext_restore_locks	chips/cfi_cmdset_0001.c	/^static void cfi_intelext_restore_locks(struct mtd_info *mtd)$/;"	f	file:
cfi_intelext_resume	chips/cfi_cmdset_0001.c	/^static void cfi_intelext_resume(struct mtd_info *mtd)$/;"	f	file:
cfi_intelext_save_locks	chips/cfi_cmdset_0001.c	/^static void cfi_intelext_save_locks(struct mtd_info *mtd)$/;"	f	file:
cfi_intelext_setup	chips/cfi_cmdset_0001.c	/^static struct mtd_info *cfi_intelext_setup(struct mtd_info *mtd)$/;"	f	file:
cfi_intelext_suspend	chips/cfi_cmdset_0001.c	/^static int cfi_intelext_suspend(struct mtd_info *mtd)$/;"	f	file:
cfi_intelext_sync	chips/cfi_cmdset_0001.c	/^static void cfi_intelext_sync (struct mtd_info *mtd)$/;"	f	file:
cfi_intelext_unlock	chips/cfi_cmdset_0001.c	/^static int cfi_intelext_unlock(struct mtd_info *mtd, loff_t ofs, size_t len)$/;"	f	file:
cfi_intelext_unpoint	chips/cfi_cmdset_0001.c	/^static void cfi_intelext_unpoint (struct mtd_info *mtd, u_char *addr, loff_t from, size_t len)$/;"	f	file:
cfi_intelext_write_buffers	chips/cfi_cmdset_0001.c	/^static int cfi_intelext_write_buffers (struct mtd_info *mtd, loff_t to,$/;"	f	file:
cfi_intelext_write_user_prot_reg	chips/cfi_cmdset_0001.c	/^static int cfi_intelext_write_user_prot_reg(struct mtd_info *mtd, loff_t from,$/;"	f	file:
cfi_intelext_write_words	chips/cfi_cmdset_0001.c	/^static int cfi_intelext_write_words (struct mtd_info *mtd, loff_t to , size_t len, size_t *retlen, const u_char *buf)$/;"	f	file:
cfi_intelext_writev	chips/cfi_cmdset_0001.c	/^static int cfi_intelext_writev (struct mtd_info *mtd, const struct kvec *vecs,$/;"	f	file:
cfi_jedec_setup	chips/jedec_probe.c	/^static int cfi_jedec_setup(struct cfi_private *p_cfi, int index)$/;"	f	file:
cfi_probe	chips/cfi_probe.c	/^struct mtd_info *cfi_probe(struct map_info *map)$/;"	f
cfi_probe_chip	chips/cfi_probe.c	/^static int __xipram cfi_probe_chip(struct map_info *map, __u32 base,$/;"	f	file:
cfi_probe_exit	chips/cfi_probe.c	/^module_exit(cfi_probe_exit);$/;"	v
cfi_probe_exit	chips/cfi_probe.c	/^static void __exit cfi_probe_exit(void)$/;"	f	file:
cfi_probe_init	chips/cfi_probe.c	/^module_init(cfi_probe_init);$/;"	v
cfi_probe_init	chips/cfi_probe.c	/^static int __init cfi_probe_init(void)$/;"	f	file:
cfi_read_pri	chips/cfi_util.c	/^EXPORT_SYMBOL(cfi_read_pri);$/;"	v
cfi_read_pri	chips/cfi_util.c	/^__xipram cfi_read_pri(struct map_info *map, __u16 adr, __u16 size, const char* name)$/;"	f
cfi_staa_chipdrv	chips/cfi_cmdset_0020.c	/^static struct mtd_chip_driver cfi_staa_chipdrv = {$/;"	v	typeref:struct:mtd_chip_driver	file:
cfi_staa_destroy	chips/cfi_cmdset_0020.c	/^static void cfi_staa_destroy(struct mtd_info *mtd)$/;"	f	file:
cfi_staa_erase_varsize	chips/cfi_cmdset_0020.c	/^int cfi_staa_erase_varsize(struct mtd_info *mtd, struct erase_info *instr)$/;"	f
cfi_staa_lock	chips/cfi_cmdset_0020.c	/^static int cfi_staa_lock(struct mtd_info *mtd, loff_t ofs, size_t len)$/;"	f	file:
cfi_staa_read	chips/cfi_cmdset_0020.c	/^static int cfi_staa_read (struct mtd_info *mtd, loff_t from, size_t len, size_t *retlen, u_char *buf)$/;"	f	file:
cfi_staa_resume	chips/cfi_cmdset_0020.c	/^static void cfi_staa_resume(struct mtd_info *mtd)$/;"	f	file:
cfi_staa_setup	chips/cfi_cmdset_0020.c	/^static struct mtd_info *cfi_staa_setup(struct map_info *map)$/;"	f	file:
cfi_staa_suspend	chips/cfi_cmdset_0020.c	/^static int cfi_staa_suspend(struct mtd_info *mtd)$/;"	f	file:
cfi_staa_sync	chips/cfi_cmdset_0020.c	/^static void cfi_staa_sync (struct mtd_info *mtd)$/;"	f	file:
cfi_staa_unlock	chips/cfi_cmdset_0020.c	/^static int cfi_staa_unlock(struct mtd_info *mtd, loff_t ofs, size_t len)$/;"	f	file:
cfi_staa_write_buffers	chips/cfi_cmdset_0020.c	/^static int cfi_staa_write_buffers (struct mtd_info *mtd, loff_t to,$/;"	f	file:
cfi_staa_writev	chips/cfi_cmdset_0020.c	/^cfi_staa_writev(struct mtd_info *mtd, const struct kvec *vecs,$/;"	f	file:
cfi_tell_features	chips/cfi_cmdset_0001.c	/^static void cfi_tell_features(struct cfi_pri_intelext *extp)$/;"	f	file:
cfi_tell_features	chips/cfi_cmdset_0002.c	/^static void cfi_tell_features(struct cfi_pri_amdstd *extp)$/;"	f	file:
cfi_tell_features	chips/cfi_cmdset_0020.c	/^static void cfi_tell_features(struct cfi_pri_intelext *extp)$/;"	f	file:
cfi_varsize_frob	chips/cfi_util.c	/^EXPORT_SYMBOL(cfi_varsize_frob);$/;"	v
cfi_varsize_frob	chips/cfi_util.c	/^int cfi_varsize_frob(struct mtd_info *mtd, varsize_frob_t frob,$/;"	f
ch_dtype	ubi/ubi.h	/^	int ch_dtype;$/;"	m	struct:ubi_volume
ch_lnum	ubi/ubi.h	/^	int ch_lnum;$/;"	m	struct:ubi_volume
change_ec	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	/^static int change_ec(struct ubi_ec_hdr *hdr, long long ec)$/;"	f	file:
changing_leb	ubi/ubi.h	/^	unsigned int changing_leb:1;$/;"	m	struct:ubi_volume
check_and_mark_free_block	nftlmount.c	/^static int check_and_mark_free_block(struct NFTLrecord *nftl, int block)$/;"	f	file:
check_block_1	mtd-utils/nftl_format.c	/^static unsigned char check_block_1(unsigned long block)$/;"	f	file:
check_block_2	mtd-utils/nftl_format.c	/^static unsigned char check_block_2(unsigned long block)$/;"	f	file:
check_cmd_set	chips/gen_probe.c	/^static struct mtd_info *check_cmd_set(struct map_info *map, int primary)$/;"	f	file:
check_command	nand/nandsim.c	/^static int check_command(int cmd)$/;"	f	file:
check_crc_ccitt	mtd-utils/tests/checkfs/checkfs.c	/^int check_crc_ccitt(char *filename)$/;"	f
check_crc_ccitt	mtd-utils/tests/checkfs/makefiles.c	/^void check_crc_ccitt(char *filename)$/;"	f
check_create	nand/nand_bbt.c	/^static int check_create(struct mtd_info *mtd, uint8_t *buf, struct nand_bbt_descr *bd)$/;"	f	file:
check_default_keys	mtd-utils/ubi-utils/perl/mkpfi	/^sub check_default_keys($$$) {$/;"	s
check_deleted_files	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void check_deleted_files(void)$/;"	f	file:
check_erase_block	mtd-utils/tests/ubi-tests/integ.c	/^static void check_erase_block(struct erase_block_info *erase_block, int fd)$/;"	f	file:
check_failed	mtd-utils/tests/ubi-tests/common.h	59;"	d
check_file	mtd-utils/tests/fs-tests/stress/atoms/rndwrite00.c	/^static void check_file(int fd, char *data, size_t length)$/;"	f	file:
check_free_sectors	inftlmount.c	/^static int check_free_sectors(struct INFTLrecord *inftl, unsigned int address,$/;"	f	file:
check_free_sectors	nftlmount.c	/^static int check_free_sectors(struct NFTLrecord *nftl, unsigned int address, int len,$/;"	f	file:
check_id_list	mtd-utils/ubi-utils/perl/mkpfi	/^sub check_id_list($$$) {$/;"	s
check_keys	mtd-utils/ubi-utils/perl/mkpfi	/^sub check_keys($$$) {$/;"	s
check_partition	mtd-utils/ftl_check.c	/^static void check_partition(int fd, int verbose)$/;"	f	file:
check_pattern	nand/nand_bbt.c	/^static int check_pattern(uint8_t *buf, int len, int paglen, struct nand_bbt_descr *td)$/;"	f	file:
check_pattern	ubi/io.c	/^static int check_pattern(const void *buf, uint8_t patt, int size)$/;"	f	file:
check_protection_over	ubi/wl.c	/^static void check_protection_over(struct ubi_device *ubi)$/;"	f	file:
check_scanning_info	ubi/vtbl.c	/^static int check_scanning_info(const struct ubi_device *ubi,$/;"	f	file:
check_sectors_in_chain	nftlmount.c	/^static void check_sectors_in_chain(struct NFTLrecord *nftl, unsigned int first_block)$/;"	f	file:
check_short_pattern	nand/nand_bbt.c	/^static int check_short_pattern(uint8_t *buf, struct nand_bbt_descr *td)$/;"	f	file:
check_short_pattern	onenand/onenand_bbt.c	/^static int check_short_pattern(uint8_t *buf, int len, int paglen, struct nand_bbt_descr *td)$/;"	f	file:
check_sv	ubi/vtbl.c	/^static int check_sv(const struct ubi_volume *vol,$/;"	f	file:
check_tools	mtd-utils/ubi-utils/perl/mkpfi	/^sub check_tools {$/;"	s
check_ubi	mtd-utils/tests/ubi-tests/integ.c	/^static void check_ubi(void)$/;"	f	file:
check_ubi_device	mtd-utils/tests/ubi-tests/integ.c	/^static void check_ubi_device(struct ubi_device_info *ubi_device)$/;"	f	file:
check_valid	mtd-utils/ubi-utils/src/pfi.c	/^check_valid (pfi_header head)$/;"	f	file:
check_vol_patt	mtd-utils/tests/ubi-tests/common.h	51;"	d
check_volume	mtd-utils/tests/ubi-tests/common.h	47;"	d
check_volume	mtd-utils/tests/ubi-tests/integ.c	/^static void check_volume(struct volume_info *vol)$/;"	f	file:
checkbbt	mtd-utils/nftl_format.c	/^static int checkbbt(void)$/;"	f	file:
checkecc	nand/cafe_nand.c	/^static int checkecc = 1;$/;"	v	file:
checked	mtd-utils/tests/fs-tests/integrity/integck.c	/^	int checked; \/* Temporary flag used when checking *\/$/;"	m	struct:dir_entry_info	file:
checked	ubi/ubi.h	/^	unsigned int checked:1;$/;"	m	struct:ubi_volume
checksum	afs.c	/^	u32 checksum;		\/* Image checksum (inc. this struct)     *\/$/;"	m	struct:image_info_struct	file:
checksum	afs.c	/^	u32 checksum;		\/* Just this structure                   *\/$/;"	m	struct:footer_struct	file:
checksum	mtd-utils/tests/checkfs/makefiles.c	/^void checksum(char *filename){$/;"	f
child_info	mtd-utils/tests/fs-tests/utils/fstest_monitor.c	/^struct child_info {$/;"	s	file:
children	mtd-utils/tests/fs-tests/utils/fstest_monitor.c	/^struct child_info *children = 0;$/;"	v	typeref:struct:child_info
childs_active	nand/ndfc.c	/^	atomic_t		childs_active;$/;"	m	struct:ndfc_controller	file:
chip	nand/bf5xx_nand.c	/^	struct nand_chip		chip;$/;"	m	struct:bf5xx_nand_info	typeref:struct:bf5xx_nand_info::nand_chip	file:
chip	nand/ndfc.c	/^	struct nand_chip		chip;$/;"	m	struct:ndfc_nand_mtd	typeref:struct:ndfc_nand_mtd::nand_chip	file:
chip	nand/plat_nand.c	/^	struct nand_chip	chip;$/;"	m	struct:plat_nand_data	typeref:struct:plat_nand_data::nand_chip	file:
chip	nand/s3c2410.c	/^	struct nand_chip		chip;$/;"	m	struct:s3c2410_nand_mtd	typeref:struct:s3c2410_nand_mtd::nand_chip	file:
chip_good	chips/cfi_cmdset_0002.c	/^static int __xipram chip_good(struct map_info *map, unsigned long addr, map_word expected)$/;"	f	file:
chip_ready	chips/cfi_cmdset_0001.c	/^static int chip_ready (struct map_info *map, struct flchip *chip, unsigned long adr, int mode)$/;"	f	file:
chip_ready	chips/cfi_cmdset_0002.c	/^static int __xipram chip_ready(struct map_info *map, unsigned long addr)$/;"	f	file:
chips_per_floor	nand/diskonchip.c	/^	int chips_per_floor;	\/* The number of chips detected on each floor *\/$/;"	m	struct:doc_priv	file:
chipshift	nand/alauda.c	/^	u8	chipshift;	\/* 1<<chipshift total size *\/$/;"	m	struct:alauda_card	file:
chksum	mtd-utils/jffs-dump.c	/^	uint16_t chksum;     \/* Checksum for the raw_inode.  *\/$/;"	m	struct:jffs_raw_inode	file:
chs_entry_t	ssfdc.c	/^} chs_entry_t;$/;"	t	typeref:struct:__anon4	file:
chs_table	ssfdc.c	/^static const chs_entry_t chs_table[] = {$/;"	v	file:
cis_block	ssfdc.c	/^	int cis_block;			\/* block n. containing CIS\/IDI *\/$/;"	m	struct:ssfdcr_record	file:
cis_numbers	ssfdc.c	/^static const uint8_t cis_numbers[] = {$/;"	v	file:
ck804xrom_cleanup	maps/ck804xrom.c	/^static void ck804xrom_cleanup(struct ck804xrom_window *window)$/;"	f	file:
ck804xrom_init_one	maps/ck804xrom.c	/^static int __devinit ck804xrom_init_one (struct pci_dev *pdev,$/;"	f	file:
ck804xrom_map_info	maps/ck804xrom.c	/^struct ck804xrom_map_info {$/;"	s	file:
ck804xrom_pci_tbl	maps/ck804xrom.c	/^static struct pci_device_id ck804xrom_pci_tbl[] = {$/;"	v	typeref:struct:pci_device_id	file:
ck804xrom_remove_one	maps/ck804xrom.c	/^static void __devexit ck804xrom_remove_one (struct pci_dev *pdev)$/;"	f	file:
ck804xrom_window	maps/ck804xrom.c	/^static struct ck804xrom_window ck804xrom_window = {$/;"	v	typeref:struct:ck804xrom_window	file:
ck804xrom_window	maps/ck804xrom.c	/^struct ck804xrom_window {$/;"	s	file:
ckvol_mutex	ubi/ubi.h	/^	struct mutex ckvol_mutex;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::mutex
clc_crc32	mtd-utils/ubi-utils/src/crc32.c	/^uint32_t clc_crc32(uint32_t *table, uint32_t crc, void *buf,$/;"	f
cle	nand/nandsim.c	/^                int cle; \/* command Latch Enable *\/$/;"	m	struct:nandsim::ns_lines_status	file:
clean_buffers	mtd-utils/sumtool.c	/^void clean_buffers()$/;"	f
clean_sumlist	mtd-utils/sumtool.c	/^void clean_sumlist()$/;"	f
cleanmarker	mtd-utils/flash_eraseall.c	/^static struct jffs2_unknown_node cleanmarker;$/;"	v	typeref:struct:jffs2_unknown_node	file:
cleanmarker	mtd-utils/mkfs.jffs2.c	/^static struct jffs2_unknown_node cleanmarker;$/;"	v	typeref:struct:jffs2_unknown_node	file:
cleanmarker	mtd-utils/sumtool.c	/^static struct jffs2_unknown_node cleanmarker;$/;"	v	typeref:struct:jffs2_unknown_node	file:
cleanmarker_size	mtd-utils/mkfs.jffs2.c	/^static int cleanmarker_size = sizeof(cleanmarker);$/;"	v	file:
cleanmarker_size	mtd-utils/sumtool.c	/^static int cleanmarker_size = sizeof(cleanmarker);$/;"	v	file:
cleanup	mtd-utils/flashcp.c	/^static void cleanup (void)$/;"	f	file:
cleanup	mtd-utils/mkfs.jffs2.c	/^static void cleanup(struct filesystem_entry *dir)$/;"	f	file:
cleanup_amd76xrom	maps/amd76xrom.c	/^module_exit(cleanup_amd76xrom);$/;"	v
cleanup_amd76xrom	maps/amd76xrom.c	/^static void __exit cleanup_amd76xrom(void)$/;"	f	file:
cleanup_autcpu12_maps	maps/autcpu12-nvram.c	/^module_exit(cleanup_autcpu12_maps);$/;"	v
cleanup_autcpu12_maps	maps/autcpu12-nvram.c	/^static void __exit cleanup_autcpu12_maps(void)$/;"	f	file:
cleanup_cdb89712_maps	maps/cdb89712.c	/^module_exit(cleanup_cdb89712_maps);$/;"	v
cleanup_cdb89712_maps	maps/cdb89712.c	/^static void __exit cleanup_cdb89712_maps(void)$/;"	f	file:
cleanup_ck804xrom	maps/ck804xrom.c	/^module_exit(cleanup_ck804xrom);$/;"	v
cleanup_ck804xrom	maps/ck804xrom.c	/^static void __exit cleanup_ck804xrom(void)$/;"	f	file:
cleanup_dbox2_flash	maps/dbox2-flash.c	/^module_exit(cleanup_dbox2_flash);$/;"	v
cleanup_dbox2_flash	maps/dbox2-flash.c	/^static void __exit cleanup_dbox2_flash(void)$/;"	f	file:
cleanup_dc21285	maps/dc21285.c	/^module_exit(cleanup_dc21285);$/;"	v
cleanup_dc21285	maps/dc21285.c	/^static void __exit cleanup_dc21285(void)$/;"	f	file:
cleanup_dnpc	maps/dilnetpc.c	/^module_exit(cleanup_dnpc);$/;"	v
cleanup_dnpc	maps/dilnetpc.c	/^static void __exit cleanup_dnpc(void)$/;"	f	file:
cleanup_doc2000	devices/doc2000.c	/^module_exit(cleanup_doc2000);$/;"	v
cleanup_doc2000	devices/doc2000.c	/^static void __exit cleanup_doc2000(void)$/;"	f	file:
cleanup_doc2001	devices/doc2001.c	/^module_exit(cleanup_doc2001);$/;"	v
cleanup_doc2001	devices/doc2001.c	/^static void __exit cleanup_doc2001(void)$/;"	f	file:
cleanup_doc2001plus	devices/doc2001plus.c	/^module_exit(cleanup_doc2001plus);$/;"	v
cleanup_doc2001plus	devices/doc2001plus.c	/^static void __exit cleanup_doc2001plus(void)$/;"	f	file:
cleanup_ebony	maps/ebony.c	/^module_exit(cleanup_ebony);$/;"	v
cleanup_ebony	maps/ebony.c	/^static void __exit cleanup_ebony(void)$/;"	f	file:
cleanup_edb7312nor	maps/edb7312.c	/^module_exit(cleanup_edb7312nor);$/;"	v
cleanup_edb7312nor	maps/edb7312.c	/^static void __exit cleanup_edb7312nor(void)$/;"	f	file:
cleanup_esb2rom	maps/esb2rom.c	/^module_exit(cleanup_esb2rom);$/;"	v
cleanup_esb2rom	maps/esb2rom.c	/^static void __exit cleanup_esb2rom(void)$/;"	f	file:
cleanup_flagadm	maps/cfi_flagadm.c	/^module_exit(cleanup_flagadm);$/;"	v
cleanup_flagadm	maps/cfi_flagadm.c	/^static void __exit cleanup_flagadm(void)$/;"	f	file:
cleanup_fortunet	maps/fortunet.c	/^module_exit(cleanup_fortunet);$/;"	v
cleanup_fortunet	maps/fortunet.c	/^static void __exit cleanup_fortunet(void)$/;"	f	file:
cleanup_ftl	ftl.c	/^module_exit(cleanup_ftl);$/;"	v
cleanup_ftl	ftl.c	/^static void __exit cleanup_ftl(void)$/;"	f	file:
cleanup_ichxrom	maps/ichxrom.c	/^module_exit(cleanup_ichxrom);$/;"	v
cleanup_ichxrom	maps/ichxrom.c	/^static void __exit cleanup_ichxrom(void)$/;"	f	file:
cleanup_impa7	maps/impa7.c	/^module_exit(cleanup_impa7);$/;"	v
cleanup_impa7	maps/impa7.c	/^static void __exit cleanup_impa7(void)$/;"	f	file:
cleanup_inftl	inftlcore.c	/^module_exit(cleanup_inftl);$/;"	v
cleanup_inftl	inftlcore.c	/^static void __exit cleanup_inftl(void)$/;"	f	file:
cleanup_l440gx	maps/l440gx.c	/^module_exit(cleanup_l440gx);$/;"	v
cleanup_l440gx	maps/l440gx.c	/^static void __exit cleanup_l440gx(void)$/;"	f	file:
cleanup_mbx	maps/mbx860.c	/^module_exit(cleanup_mbx);$/;"	v
cleanup_mbx	maps/mbx860.c	/^static void __exit cleanup_mbx(void)$/;"	f	file:
cleanup_mpc1211_maps	maps/mpc1211.c	/^module_exit(cleanup_mpc1211_maps);$/;"	v
cleanup_mpc1211_maps	maps/mpc1211.c	/^static void __exit cleanup_mpc1211_maps(void)$/;"	f	file:
cleanup_msp_flash	maps/pmcmsp-flash.c	/^module_exit(cleanup_msp_flash);$/;"	v
cleanup_msp_flash	maps/pmcmsp-flash.c	/^static void __exit cleanup_msp_flash(void)$/;"	f	file:
cleanup_mtd	mtdcore.c	/^module_exit(cleanup_mtd);$/;"	v
cleanup_mtd	mtdcore.c	/^static void __exit cleanup_mtd(void)$/;"	f	file:
cleanup_mtdblock	mtdblock-jz.c	/^module_exit(cleanup_mtdblock);$/;"	v
cleanup_mtdblock	mtdblock-jz.c	/^static void __exit cleanup_mtdblock(void)$/;"	f	file:
cleanup_mtdblock	mtdblock.c	/^module_exit(cleanup_mtdblock);$/;"	v
cleanup_mtdblock	mtdblock.c	/^static void __exit cleanup_mtdblock(void)$/;"	f	file:
cleanup_mtdchar	mtdchar.c	/^module_exit(cleanup_mtdchar);$/;"	v
cleanup_mtdchar	mtdchar.c	/^static void __exit cleanup_mtdchar(void)$/;"	f	file:
cleanup_mtdram	devices/mtdram.c	/^module_exit(cleanup_mtdram);$/;"	v
cleanup_mtdram	devices/mtdram.c	/^static void __exit cleanup_mtdram(void)$/;"	f	file:
cleanup_nanddoc	nand/diskonchip.c	/^module_exit(cleanup_nanddoc);$/;"	v
cleanup_nanddoc	nand/diskonchip.c	/^static void __exit cleanup_nanddoc(void)$/;"	f	file:
cleanup_netsc520	maps/netsc520.c	/^module_exit(cleanup_netsc520);$/;"	v
cleanup_netsc520	maps/netsc520.c	/^static void __exit cleanup_netsc520(void)$/;"	f	file:
cleanup_nftl	nftlcore.c	/^module_exit(cleanup_nftl);$/;"	v
cleanup_nftl	nftlcore.c	/^static void __exit cleanup_nftl(void)$/;"	f	file:
cleanup_ocotea	maps/ocotea.c	/^module_exit(cleanup_ocotea);$/;"	v
cleanup_ocotea	maps/ocotea.c	/^static void __exit cleanup_ocotea(void)$/;"	f	file:
cleanup_oct5066	maps/octagon-5066.c	/^module_exit(cleanup_oct5066);$/;"	v
cleanup_oct5066	maps/octagon-5066.c	/^void cleanup_oct5066(void)$/;"	f
cleanup_phram	devices/phram.c	/^module_exit(cleanup_phram);$/;"	v
cleanup_phram	devices/phram.c	/^static void __exit cleanup_phram(void)$/;"	f	file:
cleanup_pmc551	devices/pmc551.c	/^module_exit(cleanup_pmc551);$/;"	v
cleanup_pmc551	devices/pmc551.c	/^static void __exit cleanup_pmc551(void)$/;"	f	file:
cleanup_pnc2000	maps/pnc2000.c	/^module_exit(cleanup_pnc2000);$/;"	v
cleanup_pnc2000	maps/pnc2000.c	/^static void __exit cleanup_pnc2000(void)$/;"	f	file:
cleanup_pxa2xx_flash	maps/pxa2xx-flash.c	/^module_exit(cleanup_pxa2xx_flash);$/;"	v
cleanup_pxa2xx_flash	maps/pxa2xx-flash.c	/^static void __exit cleanup_pxa2xx_flash(void)$/;"	f	file:
cleanup_redwood_flash	maps/redwood.c	/^module_exit(cleanup_redwood_flash);$/;"	v
cleanup_redwood_flash	maps/redwood.c	/^static void __exit cleanup_redwood_flash(void)$/;"	f	file:
cleanup_rfd_ftl	rfd_ftl.c	/^module_exit(cleanup_rfd_ftl);$/;"	v
cleanup_rfd_ftl	rfd_ftl.c	/^static void __exit cleanup_rfd_ftl(void)$/;"	f	file:
cleanup_rpxlite	maps/rpxlite.c	/^module_exit(cleanup_rpxlite);$/;"	v
cleanup_rpxlite	maps/rpxlite.c	/^static void __exit cleanup_rpxlite(void)$/;"	f	file:
cleanup_rrmap	maps/pmcmsp-ramroot.c	/^module_exit(cleanup_rrmap);$/;"	v
cleanup_rrmap	maps/pmcmsp-ramroot.c	/^static void __exit cleanup_rrmap(void)$/;"	f	file:
cleanup_sbc8240_mtd	maps/sbc8240.c	/^module_exit (cleanup_sbc8240_mtd);$/;"	v
cleanup_sbc8240_mtd	maps/sbc8240.c	/^static void __exit cleanup_sbc8240_mtd (void)$/;"	f	file:
cleanup_sbc82xx_flash	maps/wr_sbc82xx_flash.c	/^module_exit(cleanup_sbc82xx_flash);$/;"	v
cleanup_sbc82xx_flash	maps/wr_sbc82xx_flash.c	/^static void __exit cleanup_sbc82xx_flash(void)$/;"	f	file:
cleanup_sbc_gxx	maps/sbc_gxx.c	/^module_exit(cleanup_sbc_gxx);$/;"	v
cleanup_sbc_gxx	maps/sbc_gxx.c	/^static void cleanup_sbc_gxx(void)$/;"	f	file:
cleanup_sc520cdp	maps/sc520cdp.c	/^module_exit(cleanup_sc520cdp);$/;"	v
cleanup_sc520cdp	maps/sc520cdp.c	/^static void __exit cleanup_sc520cdp(void)$/;"	f	file:
cleanup_scx200_docflash	maps/scx200_docflash.c	/^module_exit(cleanup_scx200_docflash);$/;"	v
cleanup_scx200_docflash	maps/scx200_docflash.c	/^static void __exit cleanup_scx200_docflash(void)$/;"	f	file:
cleanup_sharpsl	maps/sharpsl-flash.c	/^module_exit(cleanup_sharpsl);$/;"	v
cleanup_sharpsl	maps/sharpsl-flash.c	/^static void __exit cleanup_sharpsl(void)$/;"	f	file:
cleanup_slram	devices/slram.c	/^module_exit(cleanup_slram);$/;"	v
cleanup_slram	devices/slram.c	/^static void __exit cleanup_slram(void)$/;"	f	file:
cleanup_soleng_maps	maps/solutionengine.c	/^module_exit(cleanup_soleng_maps);$/;"	v
cleanup_soleng_maps	maps/solutionengine.c	/^static void __exit cleanup_soleng_maps(void)$/;"	f	file:
cleanup_ssfdcr	ssfdc.c	/^module_exit(cleanup_ssfdcr);$/;"	v
cleanup_ssfdcr	ssfdc.c	/^static void __exit cleanup_ssfdcr(void)$/;"	f	file:
cleanup_svme182	maps/dmv182.c	/^module_exit(cleanup_svme182);$/;"	v
cleanup_svme182	maps/dmv182.c	/^static void __exit cleanup_svme182(void)$/;"	f	file:
cleanup_tqm_mtd	maps/tqm8xxl.c	/^module_exit(cleanup_tqm_mtd);$/;"	v
cleanup_tqm_mtd	maps/tqm8xxl.c	/^static void __exit cleanup_tqm_mtd(void)$/;"	f	file:
cleanup_ts5500_map	maps/ts5500_flash.c	/^module_exit(cleanup_ts5500_map);$/;"	v
cleanup_ts5500_map	maps/ts5500_flash.c	/^static void __exit cleanup_ts5500_map(void)$/;"	f	file:
cleanup_tsunami_flash	maps/tsunami_flash.c	/^module_exit(cleanup_tsunami_flash);$/;"	v
cleanup_tsunami_flash	maps/tsunami_flash.c	/^static void __exit  cleanup_tsunami_flash(void)$/;"	f	file:
cleanup_ubiblock	ubi/ubiblk.c	/^module_exit(cleanup_ubiblock);$/;"	v
cleanup_ubiblock	ubi/ubiblk.c	/^static void __exit cleanup_ubiblock(void)$/;"	f	file:
cleanup_vmax301	maps/vmax301.c	/^module_exit(cleanup_vmax301);$/;"	v
cleanup_vmax301	maps/vmax301.c	/^static void __exit cleanup_vmax301(void)$/;"	f	file:
cleanup_walnut	maps/walnut.c	/^module_exit(cleanup_walnut);$/;"	v
cleanup_walnut	maps/walnut.c	/^static void __exit cleanup_walnut(void)$/;"	f	file:
clearProfileBuf	mtd-utils/tests/jittertest/JitterTest.c	/^void clearProfileBuf(void){$/;"	f
clear_buf	mtd-utils/ubi-utils/src/libubigen.c	/^clear_buf(ubi_info_t u)$/;"	f	file:
clear_files	mtd-utils/ubi-utils/perl/mkpfi	/^sub clear_files() {$/;"	s
clear_update_marker	ubi/upd.c	/^static int clear_update_marker(struct ubi_device *ubi, struct ubi_volume *vol,$/;"	f	file:
clk	nand/s3c2410.c	/^	struct clk			*clk;$/;"	m	struct:s3c2410_nand_info	typeref:struct:s3c2410_nand_info::clk	file:
cln_mkr	mtd-utils/include/linux/jffs2.h	/^	jint32_t cln_mkr;	\/* clean marker size, 0 = no cleanmarker *\/$/;"	m	struct:jffs2_raw_summary
clock_stop	nand/s3c2410.c	/^static const int clock_stop = 0;$/;"	v	file:
clock_stop	nand/s3c2410.c	/^static int clock_stop = 1;$/;"	v	file:
close_error	mtd-utils/ubi-utils/src/libubimirror.c	/^	close_error = -8,$/;"	e	enum:__anon7	file:
close_io_handle	mtd-utils/ubi-utils/src/pfi2bin.c	/^close_io_handle(io_t io)$/;"	f	file:
close_open_files	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void close_open_files(void)$/;"	f	file:
close_volume	mtd-utils/tests/ubi-tests/integ.c	/^static void close_volume(struct volume_fd *vol_fd)$/;"	f	file:
clps_destroy_mtd	maps/ceiva.c	/^static void __exit clps_destroy_mtd(struct clps_info *clps, struct mtd_info *mtd)$/;"	f	file:
clps_destroy_partitions	maps/ceiva.c	/^static void __exit clps_destroy_partitions(void)$/;"	f	file:
clps_info	maps/ceiva.c	/^struct clps_info {$/;"	s	file:
clps_locate_partitions	maps/ceiva.c	/^static void __init clps_locate_partitions(struct mtd_info *mtd)$/;"	f	file:
clps_mtd_cleanup	maps/ceiva.c	/^module_exit(clps_mtd_cleanup);$/;"	v
clps_mtd_cleanup	maps/ceiva.c	/^static void __exit clps_mtd_cleanup(void)$/;"	f	file:
clps_mtd_init	maps/ceiva.c	/^module_init(clps_mtd_init);$/;"	v
clps_mtd_init	maps/ceiva.c	/^static int __init clps_mtd_init(void)$/;"	f	file:
clps_setup_flash	maps/ceiva.c	/^static int __init clps_setup_flash(void)$/;"	f	file:
clps_setup_mtd	maps/ceiva.c	/^static int __init clps_setup_mtd(struct clps_info *clps, int nr, struct mtd_info **rmtd)$/;"	f	file:
clps_static_partitions	maps/ceiva.c	/^static int __init clps_static_partitions(struct mtd_partition **parts)$/;"	f	file:
cmd_offset	nand/jz4750_nand.c	/^static u32 cmd_offset;$/;"	v	file:
cmdline	cmdlinepart.c	/^static char *cmdline;$/;"	v	file:
cmdline_mtd_partition	cmdlinepart.c	/^struct cmdline_mtd_partition {$/;"	s	file:
cmdline_parsed	cmdlinepart.c	/^static int cmdline_parsed = 0;$/;"	v	file:
cmdline_parser	cmdlinepart.c	/^static struct mtd_part_parser cmdline_parser = {$/;"	v	typeref:struct:mtd_part_parser	file:
cmdline_parser_init	cmdlinepart.c	/^module_init(cmdline_parser_init);$/;"	v
cmdline_parser_init	cmdlinepart.c	/^static int __init cmdline_parser_init(void)$/;"	f	file:
cmp_func_t	mtd-utils/ubi-utils/src/list.h	/^typedef int  (*cmp_func_t)(info_t, info_t);$/;"	t
cmx270_cleanup	nand/cmx270_nand.c	/^module_exit(cmx270_cleanup);$/;"	v
cmx270_cleanup	nand/cmx270_nand.c	/^static void cmx270_cleanup(void)$/;"	f	file:
cmx270_device_ready	nand/cmx270_nand.c	/^static int cmx270_device_ready(struct mtd_info *mtd)$/;"	f	file:
cmx270_hwcontrol	nand/cmx270_nand.c	/^static void cmx270_hwcontrol(struct mtd_info *mtd, int dat,$/;"	f	file:
cmx270_init	nand/cmx270_nand.c	/^module_init(cmx270_init);$/;"	v
cmx270_init	nand/cmx270_nand.c	/^static int cmx270_init(void)$/;"	f	file:
cmx270_nand_io	nand/cmx270_nand.c	/^static void __iomem *cmx270_nand_io;$/;"	v	file:
cmx270_nand_mtd	nand/cmx270_nand.c	/^static struct mtd_info *cmx270_nand_mtd;$/;"	v	typeref:struct:mtd_info	file:
cmx270_read_buf	nand/cmx270_nand.c	/^static void cmx270_read_buf(struct mtd_info *mtd, u_char *buf, int len)$/;"	f	file:
cmx270_read_byte	nand/cmx270_nand.c	/^static u_char cmx270_read_byte(struct mtd_info *mtd)$/;"	f	file:
cmx270_verify_buf	nand/cmx270_nand.c	/^static int cmx270_verify_buf(struct mtd_info *mtd, const u_char *buf, int len)$/;"	f	file:
cmx270_write_buf	nand/cmx270_nand.c	/^static void cmx270_write_buf(struct mtd_info *mtd, const u_char *buf, int len)$/;"	f	file:
cnv_e16	mtd-utils/jffs2dump.c	44;"	d	file:
cnv_e32	mtd-utils/jffs2dump.c	43;"	d	file:
cnvfile	mtd-utils/jffs2dump.c	/^char	cnvfile[256];		\/\/ filename for conversion output$/;"	v
collapse	mtd-utils/ubi-utils/src/unubi.c	/^collapse(uint32_t *full_array, size_t full_len,$/;"	f	file:
collectdir	mtd-utils/jffs2reader.c	/^struct dir *collectdir(char *o, size_t size, uint32_t ino, struct dir *d)$/;"	f
column	nand/nandsim.c	/^		uint     column;  \/* the offset within page *\/$/;"	m	struct:nandsim::nandsim_regs	file:
command	devices/m25p80.c	/^	u8			command[4];$/;"	m	struct:m25p	file:
command	devices/mtd_dataflash.c	/^	u8			command[4];$/;"	m	struct:dataflash	file:
command	nand/nandsim.c	/^		unsigned command; \/* the command register *\/$/;"	m	struct:nandsim::nandsim_regs	file:
comp	nand/alauda.c	/^	struct completion comp;$/;"	m	struct:alauda_sg_request	typeref:struct:alauda_sg_request::completion	file:
compare	mtd-utils/ubi-utils/src/pfiflash.c	/^	int compare;$/;"	m	struct:myargs	file:
compare_bootenv	mtd-utils/ubi-utils/src/libpfiflash.c	/^static int compare_bootenv(FILE *fp_pfi, FILE **fp_flash, uint32_t ids_size,$/;"	f	file:
compare_data	mtd-utils/ubi-utils/src/libpfiflash.c	/^static int compare_data(FILE *fp_pfi, FILE **fp_flash, uint32_t ids_size,$/;"	f	file:
compare_different	mtd-utils/ubi-utils/src/libubimirror.c	/^	compare_different = 1$/;"	e	enum:__anon7	file:
compare_equal	mtd-utils/ubi-utils/src/libubimirror.c	/^	compare_equal = 0,$/;"	e	enum:__anon7	file:
compare_error	mtd-utils/ubi-utils/src/libubimirror.c	/^	compare_error = -1,$/;"	e	enum:__anon7	file:
compare_files	mtd-utils/ubi-utils/src/libubimirror.c	/^static int compare_files(int fd_a, int fd_b)$/;"	f	file:
compare_lebs	ubi/scan.c	/^static int compare_lebs(struct ubi_device *ubi, const struct ubi_scan_leb *seb,$/;"	f	file:
compare_volumes	mtd-utils/ubi-utils/src/libpfiflash.c	/^static int compare_volumes(int devno, pfi_ubi_t u, FILE *fp_pfi,$/;"	f	file:
compat	mtd-utils/include/mtd/ubi-header.h	/^	uint8_t  compat;$/;"	m	struct:ubi_vid_hdr
compat	mtd-utils/ubi-utils/new-utils/include/libubigen.h	/^	int compat;$/;"	m	struct:ubigen_vol_info
compat	ubi/scan.h	/^	int compat;$/;"	m	struct:ubi_scan_volume
compat	ubi/ubi-media.h	/^	__u8    compat;$/;"	m	struct:ubi_vid_hdr
compl	mtd-utils/ubi-utils/scripts/Makefile	/^compl		?= $(card)_complete$/;"	m
compl_img	mtd-utils/ubi-utils/scripts/Makefile	/^compl_img	?= $(compl).img$/;"	m
compl_nand2048_img	mtd-utils/ubi-utils/scripts/Makefile	/^compl_nand2048_img=$(compl).$(flashtype)$(pagesize).img$/;"	m
compl_nand2048_mif	mtd-utils/ubi-utils/scripts/Makefile	/^compl_nand2048_mif=$(compl).$(flashtype)$(pagesize).mif$/;"	m
compl_pfi	mtd-utils/ubi-utils/scripts/Makefile	/^compl_pfi	?= $(compl).pfi$/;"	m
complete	mtd-utils/ubi-utils/src/pfiflash.c	/^	int complete;$/;"	m	struct:myargs	file:
compr	mtd-utils/compr.h	/^	char compr;               \/* JFFS2_COMPR_XXX *\/$/;"	m	struct:jffs2_compressor
compr	mtd-utils/include/linux/jffs2.h	/^	uint8_t compr;       \/* Compression algorithm used *\/$/;"	m	struct:jffs2_raw_inode
compr_buf	mtd-utils/compr.h	/^	unsigned char *compr_buf; \/* used by size compr. mode *\/$/;"	m	struct:jffs2_compressor
compr_buf_size	mtd-utils/compr.h	/^	uint32_t compr_buf_size;  \/* used by size compr. mode *\/$/;"	m	struct:jffs2_compressor
compress	mtd-utils/compr.h	/^	int (*compress)(unsigned char *data_in, unsigned char *cpage_out,$/;"	m	struct:jffs2_compressor
concat_block_isbad	mtdconcat.c	/^static int concat_block_isbad(struct mtd_info *mtd, loff_t ofs)$/;"	f	file:
concat_block_markbad	mtdconcat.c	/^static int concat_block_markbad(struct mtd_info *mtd, loff_t ofs)$/;"	f	file:
concat_dev_erase	mtdconcat.c	/^static int concat_dev_erase(struct mtd_info *mtd, struct erase_info *erase)$/;"	f	file:
concat_erase	mtdconcat.c	/^static int concat_erase(struct mtd_info *mtd, struct erase_info *instr)$/;"	f	file:
concat_erase_callback	mtdconcat.c	/^static void concat_erase_callback(struct erase_info *instr)$/;"	f	file:
concat_lock	mtdconcat.c	/^static int concat_lock(struct mtd_info *mtd, loff_t ofs, size_t len)$/;"	f	file:
concat_read	mtdconcat.c	/^concat_read(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
concat_read_oob	mtdconcat.c	/^concat_read_oob(struct mtd_info *mtd, loff_t from, struct mtd_oob_ops *ops)$/;"	f	file:
concat_resume	mtdconcat.c	/^static void concat_resume(struct mtd_info *mtd)$/;"	f	file:
concat_suspend	mtdconcat.c	/^static int concat_suspend(struct mtd_info *mtd)$/;"	f	file:
concat_sync	mtdconcat.c	/^static void concat_sync(struct mtd_info *mtd)$/;"	f	file:
concat_unlock	mtdconcat.c	/^static int concat_unlock(struct mtd_info *mtd, loff_t ofs, size_t len)$/;"	f	file:
concat_write	mtdconcat.c	/^concat_write(struct mtd_info *mtd, loff_t to, size_t len,$/;"	f	file:
concat_write_oob	mtdconcat.c	/^concat_write_oob(struct mtd_info *mtd, loff_t to, struct mtd_oob_ops *ops)$/;"	f	file:
concat_writev	mtdconcat.c	/^concat_writev(struct mtd_info *mtd, const struct kvec *vecs,$/;"	f	file:
cons	mtd-utils/ubi-utils/src/list.c	/^cons(info_t e, list_t l)$/;"	f
const_cpu_to_le16	rfd_ftl.c	26;"	d	file:
container_of	mtd-utils/rbtree.h	136;"	d
controller	nand/bf5xx_nand.c	/^	struct nand_hw_control		controller;$/;"	m	struct:bf5xx_nand_info	typeref:struct:bf5xx_nand_info::nand_hw_control	file:
controller	nand/s3c2410.c	/^	struct nand_hw_control		controller;$/;"	m	struct:s3c2410_nand_info	typeref:struct:s3c2410_nand_info::nand_hw_control	file:
convert_ubi_volume	mtd-utils/ubi-utils/src/pfi2bin.c	/^convert_ubi_volume(pfi_ubi_t ubi, pdd_data_t pdd, list_t raw_pebs,$/;"	f	file:
convertendian	mtd-utils/jffs2dump.c	/^int	convertendian;		\/\/ convert endianness$/;"	v
copy_bytes	mtd-utils/ubi-utils/perl/mkpfi	/^sub copy_bytes($$$) {$/;"	s
copy_erase_unit	ftl.c	/^static int copy_erase_unit(partition_t *part, u_int16_t srcunit,$/;"	f	file:
copy_files	mtd-utils/ubi-utils/src/libubimirror.c	/^static int copy_files(libubi_t ulib, int fd_in, int fd_out)$/;"	f	file:
copy_flag	mtd-utils/include/mtd/ubi-header.h	/^	uint8_t  copy_flag;$/;"	m	struct:ubi_vid_hdr
copy_flag	ubi/ubi-media.h	/^	__u8    copy_flag;$/;"	m	struct:ubi_vid_hdr
copy_string	mtd-utils/tests/fs-tests/integrity/integck.c	/^static char *copy_string(const char *s)$/;"	f	file:
copy_to_cpu_mode	nand/jz4750_nand.c	/^void copy_to_cpu_mode(struct mtd_info *mtd_cpu, struct mtd_info *mtd_dma, char use_planes)$/;"	f
copyright	mtd-utils/ubi-utils/src/bin2nand.c	/^static const char copyright [] __attribute__((unused)) =$/;"	v	file:
copyright	mtd-utils/ubi-utils/src/mkbootenv.c	/^static const char copyright [] __attribute__((unused)) =$/;"	v	file:
copyright	mtd-utils/ubi-utils/src/pddcustomize.c	/^static const char copyright [] __attribute__((unused)) =$/;"	v	file:
copyright	mtd-utils/ubi-utils/src/pfi.c	/^static const char copyright [] __attribute__((unused)) =$/;"	v	file:
copyright	mtd-utils/ubi-utils/src/pfi2bin.c	/^static const char copyright [] __attribute__((unused)) =$/;"	v	file:
copyright	mtd-utils/ubi-utils/src/pfiflash.c	/^static const char copyright [] __attribute__((unused)) =$/;"	v	file:
copyright	mtd-utils/ubi-utils/src/ubigen.c	/^static const char copyright [] __attribute__((unused)) =$/;"	v	file:
copyright	mtd-utils/ubi-utils/src/ubimirror.c	/^static const char copyright [] __attribute__((unused)) =$/;"	v	file:
corr	ubi/scan.h	/^	struct list_head corr;$/;"	m	struct:ubi_scan_info	typeref:struct:ubi_scan_info::list_head
correct_data	nand/alauda.c	/^static void correct_data(void *buf, void *read_ecc,$/;"	f	file:
correct_ecc	mtd-utils/ubi-utils/src/nand2bin.c	/^	int correct_ecc;$/;"	m	struct:args	file:
corrected	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t corrected;$/;"	m	struct:mtd_ecc_stats
corrupted	mtd-utils/ubi-utils/inc/libubi.h	/^	int corrupted;$/;"	m	struct:ubi_vol_info
corrupted	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int corrupted;$/;"	m	struct:ubi_vol_info
corrupted	ubi/ubi.h	/^	unsigned int corrupted:1;$/;"	m	struct:ubi_volume
corrupted_cnt	mtd-utils/ubi-utils/new-utils/include/libscan.h	/^	int corrupted_cnt;$/;"	m	struct:ubi_scan_info
count	mtdblock-jz.c	/^	int count;$/;"	m	struct:mtdblk_dev	file:
count	mtdblock.c	/^	int count;$/;"	m	struct:mtdblk_dev	file:
count	nand/nandsim.c	/^		uint     count;   \/* internal counter *\/$/;"	m	struct:nandsim::nandsim_regs	file:
count	ubi/ubiblk.h	/^	int count;$/;"	m	struct:ubiblk_dev
count_set	mtd-utils/ubi-utils/src/unubi.c	/^count_set(uint32_t *full_array, size_t full_len)$/;"	f	file:
countbits	mtd-utils/ubi-utils/src/nandcorr.c	/^static int countbits(uint32_t byte)$/;"	f	file:
countbits	nand/nand_ecc.c	/^static inline int countbits(uint32_t byte)$/;"	f	file:
cpu_to_be16	mtd-utils/include/mtd_swab.h	33;"	d
cpu_to_be16	mtd-utils/include/mtd_swab.h	40;"	d
cpu_to_be32	mtd-utils/include/mtd_swab.h	34;"	d
cpu_to_be32	mtd-utils/include/mtd_swab.h	41;"	d
cpu_to_be64	mtd-utils/include/mtd_swab.h	35;"	d
cpu_to_be64	mtd-utils/include/mtd_swab.h	42;"	d
cpu_to_e32	mtd-utils/jffs2dump.c	47;"	d	file:
cpu_to_je16	mtd-utils/include/mtd/jffs2-user.h	15;"	d
cpu_to_je16	mtd-utils/include/mtd/jffs2-user.h	27;"	d
cpu_to_je32	mtd-utils/include/mtd/jffs2-user.h	16;"	d
cpu_to_je32	mtd-utils/include/mtd/jffs2-user.h	28;"	d
cpu_to_jemode	mtd-utils/include/mtd/jffs2-user.h	17;"	d
cpu_to_jemode	mtd-utils/include/mtd/jffs2-user.h	29;"	d
cpu_to_le16	mtd-utils/include/mtd/jffs2-user.h	37;"	d
cpu_to_le16	mtd-utils/include/mtd_swab.h	30;"	d
cpu_to_le16	mtd-utils/include/mtd_swab.h	37;"	d
cpu_to_le32	mtd-utils/include/mtd/jffs2-user.h	38;"	d
cpu_to_le32	mtd-utils/include/mtd_swab.h	31;"	d
cpu_to_le32	mtd-utils/include/mtd_swab.h	38;"	d
cpu_to_le64	mtd-utils/include/mtd_swab.h	32;"	d
cpu_to_le64	mtd-utils/include/mtd_swab.h	39;"	d
cpu_type	nand/s3c2410.c	/^	enum s3c_cpu_type		cpu_type;$/;"	m	struct:s3c2410_nand_info	typeref:enum:s3c2410_nand_info::s3c_cpu_type	file:
crc	mtd-utils/include/mtd/ubi-header.h	/^	uint32_t crc;$/;"	m	struct:ubi_vtbl_record
crc	mtd-utils/recv_image.c	/^	uint32_t crc;$/;"	m	struct:eraseblock	file:
crc	mtd-utils/ubi-utils/src/reader.h	/^	uint32_t crc;$/;"	m	struct:pfi_raw
crc	mtd-utils/ubi-utils/src/reader.h	/^	uint32_t crc;$/;"	m	struct:pfi_ubi
crc	ubi/ubi-media.h	/^	__be32  crc;$/;"	m	struct:ubi_vtbl_record
crc32	mtd-utils/crc32.h	/^crc32(uint32_t val, const void *ss, int len)$/;"	f
crc32	mtd-utils/mkfs.jffs2.c	72;"	d	file:
crc32	mtd-utils/mkfs.jffs2.c	74;"	d	file:
crc32	mtd-utils/ubi-utils/new-utils/src/crc32.h	/^crc32(uint32_t val, const void *ss, int len)$/;"	f
crc32	mtd-utils/ubi-utils/perl/ubicrc32.pl	/^    sub crc32$/;"	s
crc32_on_file	mtd-utils/ubi-utils/perl/ubicrc32.pl	/^sub crc32_on_file$/;"	s
crc32_table	mtd-utils/crc32.c	/^const uint32_t crc32_table[256] = {$/;"	v
crc32_table	mtd-utils/ubi-utils/new-utils/src/crc32.c	/^const uint32_t crc32_table[256] = {$/;"	v
crc32_table	mtd-utils/ubi-utils/src/libubigen.c	/^static uint32_t crc32_table[256];$/;"	v	file:
crc32_table	mtd-utils/ubi-utils/src/pfi2bin.c	/^static uint32_t crc32_table[256];$/;"	v	file:
crc32_table	mtd-utils/ubi-utils/src/unubi.c	/^static uint32_t crc32_table[256];$/;"	v	file:
crc_ccitt_table	mtd-utils/tests/checkfs/checkfs.c	/^static const unsigned short crc_ccitt_table[] = {$/;"	v	file:
crc_ccitt_table	mtd-utils/tests/checkfs/makefiles.c	/^static const unsigned short crc_ccitt_table[] = {$/;"	v	file:
crc_volume	mtd-utils/ubi-utils/new-utils/src/ubicrcvol.c	/^static int crc_volume(libubi_t libubi, struct ubi_vol_info *vol_info)$/;"	f	file:
create_bbt	nand/nand_bbt.c	/^static int create_bbt(struct mtd_info *mtd, uint8_t *buf,$/;"	f	file:
create_bbt	onenand/onenand_bbt.c	/^static int create_bbt(struct mtd_info *mtd, uint8_t *buf, struct nand_bbt_descr *bd, int chip)$/;"	f	file:
create_bootenv_image	mtd-utils/ubi-utils/perl/mkpfi	/^sub create_bootenv_image($$$) {$/;"	s
create_empty_lvol	ubi/vtbl.c	/^static struct ubi_vtbl_record *create_empty_lvol(struct ubi_device *ubi,$/;"	f	file:
create_entry	mtd-utils/tests/fs-tests/stress/atoms/rndrm99.c	/^int64_t create_entry(char *return_name)$/;"	f
create_file	mtd-utils/tests/fs-tests/stress/atoms/rndrm99.c	/^uint64_t create_file(const char *file_name, uint64_t file_size)$/;"	f
create_raw	mtd-utils/ubi-utils/src/pfi2bin.c	/^create_raw(io_t io)$/;"	f	file:
create_summed_image	mtd-utils/sumtool.c	/^void create_summed_image(int inp_size)$/;"	f
create_target_filesystem	mtd-utils/mkfs.jffs2.c	/^static void create_target_filesystem(struct filesystem_entry *root)$/;"	f	file:
create_test_data	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void create_test_data(void)$/;"	f	file:
create_vtbl	ubi/vtbl.c	/^static int create_vtbl(struct ubi_device *ubi, struct ubi_scan_info *si,$/;"	f	file:
create_xattr_entry	mtd-utils/mkfs.jffs2.c	/^static xattr_entry_t *create_xattr_entry(int xprefix, char *xname, char *xvalue, int value_len)$/;"	f	file:
cs553x_cleanup	nand/cs553x_nand.c	/^module_exit(cs553x_cleanup);$/;"	v
cs553x_cleanup	nand/cs553x_nand.c	/^static void __exit cs553x_cleanup(void)$/;"	f	file:
cs553x_device_ready	nand/cs553x_nand.c	/^static int cs553x_device_ready(struct mtd_info *mtd)$/;"	f	file:
cs553x_hwcontrol	nand/cs553x_nand.c	/^static void cs553x_hwcontrol(struct mtd_info *mtd, int cmd,$/;"	f	file:
cs553x_init	nand/cs553x_nand.c	/^module_init(cs553x_init);$/;"	v
cs553x_init	nand/cs553x_nand.c	/^static int __init cs553x_init(void)$/;"	f	file:
cs553x_init_one	nand/cs553x_nand.c	/^static int __init cs553x_init_one(int cs, int mmio, unsigned long adr)$/;"	f	file:
cs553x_mtd	nand/cs553x_nand.c	/^static struct mtd_info *cs553x_mtd[4];$/;"	v	typeref:struct:mtd_info	file:
cs553x_read_buf	nand/cs553x_nand.c	/^static void cs553x_read_buf(struct mtd_info *mtd, u_char *buf, int len)$/;"	f	file:
cs553x_read_byte	nand/cs553x_nand.c	/^static unsigned char cs553x_read_byte(struct mtd_info *mtd)$/;"	f	file:
cs553x_write_buf	nand/cs553x_nand.c	/^static void cs553x_write_buf(struct mtd_info *mtd, const u_char *buf, int len)$/;"	f	file:
cs553x_write_byte	nand/cs553x_nand.c	/^static void cs553x_write_byte(struct mtd_info *mtd, u_char byte)$/;"	f	file:
cs_calculate_ecc	nand/cs553x_nand.c	/^static int cs_calculate_ecc(struct mtd_info *mtd, const u_char *dat, u_char *ecc_code)$/;"	f	file:
cs_enable_hwecc	nand/cs553x_nand.c	/^static void cs_enable_hwecc(struct mtd_info *mtd, int mode)$/;"	f	file:
cs_phys	maps/ipaq-flash.c	/^static unsigned long cs_phys[] = {$/;"	v	file:
csize	mtd-utils/include/linux/jffs2.h	/^	jint32_t csize;      \/* (Compressed) data size *\/$/;"	m	struct:jffs2_raw_inode
csr	devices/ms02-nv.h	/^		struct resource *csr;$/;"	m	struct:ms02nv_private::__anon18	typeref:struct:ms02nv_private::__anon18::resource
csr_base	maps/intel_vr_nor.c	/^	void __iomem *csr_base;$/;"	m	struct:vr_nor_mtd	file:
ctime	mtd-utils/include/linux/jffs2.h	/^	jint32_t ctime;      \/* Change time.  *\/$/;"	m	struct:jffs2_raw_inode
ctime	mtd-utils/jffs-dump.c	/^	uint32_t ctime;$/;"	m	struct:jffs_raw_inode	file:
ctl1	nand/cafe_nand.c	/^	uint32_t ctl1;$/;"	m	struct:cafe_priv	file:
ctl2	nand/cafe_nand.c	/^	uint32_t ctl2;$/;"	m	struct:cafe_priv	file:
ctrl_cdev_ioctl	ubi/cdev.c	/^static int ctrl_cdev_ioctl(struct inode *inode, struct file *file,$/;"	f	file:
ctrl_dev	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	/^	char *ctrl_dev;$/;"	m	struct:libubi
ctrl_major	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int ctrl_major;$/;"	m	struct:ubi_info
ctrl_minor	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int ctrl_minor;$/;"	m	struct:ubi_info
curchip	nand/diskonchip.c	/^	int curchip;$/;"	m	struct:doc_priv	file:
curfloor	nand/diskonchip.c	/^	int curfloor;$/;"	m	struct:doc_priv	file:
curr_seqnum	mtd-utils/ubi-utils/src/reader.h	/^	int curr_seqnum; \/* specifies the seqnum taken in an update,$/;"	m	struct:pfi_ubi
current_block	rfd_ftl.c	/^	int current_block;		\/* block to write to *\/$/;"	m	struct:partition	file:
cyl	ssfdc.c	/^	unsigned short cyl;$/;"	m	struct:__anon4	file:
cylinders	rfd_ftl.c	/^	int cylinders;$/;"	m	struct:partition	file:
cylinders	ssfdc.c	/^	unsigned short cylinders;$/;"	m	struct:ssfdcr_record	file:
d	mtd-utils/include/linux/jffs2.h	/^	struct jffs2_raw_dirent d;$/;"	m	union:jffs2_node_union	typeref:struct:jffs2_node_union::jffs2_raw_dirent
d	mtd-utils/summary.h	/^	struct jffs2_sum_dirent_flash d;$/;"	m	union:jffs2_sum_flash	typeref:struct:jffs2_sum_flash::jffs2_sum_dirent_flash
d	mtd-utils/summary.h	/^	struct jffs2_sum_dirent_mem d;$/;"	m	union:jffs2_sum_mem	typeref:struct:jffs2_sum_mem::jffs2_sum_dirent_mem
data	mtd-utils/include/linux/jffs2.h	/^	uint8_t data[0];$/;"	m	struct:jffs2_raw_inode
data	mtd-utils/include/linux/jffs2.h	/^	uint8_t data[0];$/;"	m	struct:jffs2_raw_xattr
data	mtd-utils/jffs-dump.c	/^	unsigned char *data;$/;"	m	struct:jffs_file	file:
data	mtd-utils/jffs2dump.c	/^char	*data;		\/\/ image data$/;"	v
data	mtd-utils/mcast_image.h	/^	unsigned char data[PKT_SIZE];$/;"	m	struct:image_pkt
data	mtd-utils/ubi-utils/src/hashmap.c	/^	hashentry_t* data;  \/* array of buckets *\/$/;"	m	struct:hashmap	file:
data	mtd-utils/ubi-utils/src/peb.h	/^	uint8_t* data;		\/* Data buffer *\/$/;"	m	struct:peb
data	nand/jz4750_nand.c	/^	u8 *data;$/;"	m	struct:buf_be_corrected	file:
data	onenand/onenand_sim.c	/^	void __iomem *data;$/;"	m	struct:onenand_flash	file:
data_buffer	mtd-utils/sumtool.c	/^static uint8_t *data_buffer = NULL; 		\/* buffer for inodes *\/$/;"	v	file:
data_bytes	mtd-utils/ubi-utils/inc/libubi.h	/^	long long data_bytes;$/;"	m	struct:ubi_vol_info
data_bytes	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	long long data_bytes;$/;"	m	struct:ubi_vol_info
data_crc	mtd-utils/include/linux/jffs2.h	/^	jint32_t data_crc;   \/* CRC for the (compressed) data.  *\/$/;"	m	struct:jffs2_raw_inode
data_crc	mtd-utils/include/linux/jffs2.h	/^	jint32_t data_crc;$/;"	m	struct:jffs2_raw_xattr
data_crc	mtd-utils/include/mtd/ubi-header.h	/^	uint32_t data_crc;$/;"	m	struct:ubi_vid_hdr
data_crc	mtd-utils/ubi-utils/src/unubi.c	/^data_crc(FILE* fpin, size_t length, uint32_t *ret_crc)$/;"	f	file:
data_crc	ubi/ubi-media.h	/^	__be32  data_crc;$/;"	m	struct:ubi_vid_hdr
data_crc_ok	mtd-utils/ubi-utils/src/unubi_analyze.h	/^	int data_crc_ok;$/;"	m	struct:eb_info
data_length	redboot.c	/^    uint32_t	  data_length;   \/\/ Length of actual data$/;"	m	struct:fis_image_desc	file:
data_offs	mtd-utils/ubi-utils/new-utils/include/libscan.h	/^	int data_offs;$/;"	m	struct:ubi_scan_info
data_offs	mtd-utils/ubi-utils/new-utils/include/libubigen.h	/^	int data_offs;$/;"	m	struct:ubigen_info
data_offset	mtd-utils/include/mtd/ubi-header.h	/^	uint32_t data_offset;$/;"	m	struct:ubi_ec_hdr
data_offset	mtd-utils/ubi-utils/src/unubi.c	/^	size_t data_offset;$/;"	m	struct:args	file:
data_offset	ubi/ubi-media.h	/^	__be32  data_offset;$/;"	m	struct:ubi_ec_hdr
data_ofs	mtd-utils/sumtool.c	/^static unsigned int data_ofs = 0;	 	\/* inode buffer offset *\/$/;"	v	file:
data_pad	mtd-utils/include/mtd/ubi-header.h	/^	uint32_t data_pad;$/;"	m	struct:ubi_vid_hdr
data_pad	mtd-utils/include/mtd/ubi-header.h	/^	uint32_t data_pad;$/;"	m	struct:ubi_vtbl_record
data_pad	mtd-utils/ubi-utils/new-utils/include/libubigen.h	/^	int data_pad;$/;"	m	struct:ubigen_vol_info
data_pad	mtd-utils/ubi-utils/src/libubigen.c	/^	size_t data_pad;	\/* Size of padding in each physical EB *\/$/;"	m	struct:ubi_info	file:
data_pad	ubi/scan.h	/^	int data_pad;$/;"	m	struct:ubi_scan_volume
data_pad	ubi/ubi-media.h	/^	__be32  data_pad;$/;"	m	struct:ubi_vid_hdr
data_pad	ubi/ubi-media.h	/^	__be32  data_pad;$/;"	m	struct:ubi_vtbl_record
data_pad	ubi/ubi.h	/^	int data_pad;$/;"	m	struct:ubi_volume
data_pos	nand/cafe_nand.c	/^	int data_pos;$/;"	m	struct:cafe_priv	file:
data_sectors	mtd-utils/rfddump.c	/^	int data_sectors;$/;"	m	struct:rfd	file:
data_sectors_per_block	rfd_ftl.c	/^	u_int data_sectors_per_block;	\/* data sectors in erase unit *\/$/;"	m	struct:partition	file:
data_size	mtd-utils/include/mtd/ubi-header.h	/^	uint32_t data_size;$/;"	m	struct:ubi_vid_hdr
data_size	mtd-utils/ubi-utils/src/reader.h	/^	uint32_t data_size;$/;"	m	struct:pfi_raw
data_size	mtd-utils/ubi-utils/src/reader.h	/^	uint32_t data_size;$/;"	m	struct:pfi_ubi
data_size	ubi/ubi-media.h	/^	__be32  data_size;$/;"	m	struct:ubi_vid_hdr
databuf	mtd-utils/doc_loadbios.c	/^unsigned char databuf[512];$/;"	v
dataflash	devices/mtd_dataflash.c	/^struct dataflash {$/;"	s	file:
dataflash_driver	devices/mtd_dataflash.c	/^static struct spi_driver dataflash_driver = {$/;"	v	typeref:struct:spi_driver	file:
dataflash_erase	devices/mtd_dataflash.c	/^static int dataflash_erase(struct mtd_info *mtd, struct erase_info *instr)$/;"	f	file:
dataflash_exit	devices/mtd_dataflash.c	/^module_exit(dataflash_exit);$/;"	v
dataflash_exit	devices/mtd_dataflash.c	/^static void __exit dataflash_exit(void)$/;"	f	file:
dataflash_init	devices/mtd_dataflash.c	/^module_init(dataflash_init);$/;"	v
dataflash_init	devices/mtd_dataflash.c	/^static int __init dataflash_init(void)$/;"	f	file:
dataflash_probe	devices/mtd_dataflash.c	/^static int __devinit dataflash_probe(struct spi_device *spi)$/;"	f	file:
dataflash_read	devices/mtd_dataflash.c	/^static int dataflash_read(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
dataflash_remove	devices/mtd_dataflash.c	/^static int __devexit dataflash_remove(struct spi_device *spi)$/;"	f	file:
dataflash_status	devices/mtd_dataflash.c	/^static inline int dataflash_status(struct spi_device *spi)$/;"	f	file:
dataflash_waitready	devices/mtd_dataflash.c	/^static int dataflash_waitready(struct spi_device *spi)$/;"	f	file:
dataflash_write	devices/mtd_dataflash.c	/^static int dataflash_write(struct mtd_info *mtd, loff_t to, size_t len,$/;"	f	file:
datalen	nand/cafe_nand.c	/^	int datalen;$/;"	m	struct:cafe_priv	file:
datlength	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t datlength;$/;"	m	struct:mtd_page_buf
datptr	mtd-utils/include/mtd/mtd-abi.h	/^	unsigned char __user *datptr;$/;"	m	struct:mtd_page_buf
datsize	mtd-utils/jffs2dump.c	/^int	datsize;		\/\/ Size of data chunks, when oob data is inside the binary image$/;"	v
dbg	cmdlinepart.c	40;"	d	file:
dbg	nand/nandsim.c	/^static uint dbg            = CONFIG_NANDSIM_DBG;$/;"	v	file:
dbg_bld	ubi/debug.h	101;"	d
dbg_bld	ubi/debug.h	104;"	d
dbg_buf_mutex	ubi/ubi.h	/^	struct mutex dbg_buf_mutex;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::mutex
dbg_eba	ubi/debug.h	80;"	d
dbg_eba	ubi/debug.h	82;"	d
dbg_err	ubi/debug.h	28;"	d
dbg_err	ubi/debug.h	31;"	d
dbg_io	ubi/debug.h	94;"	d
dbg_io	ubi/debug.h	96;"	d
dbg_msg	mtd-utils/ubi-utils/src/error.h	76;"	d
dbg_msg	mtd-utils/ubi-utils/src/error.h	81;"	d
dbg_msg	ubi/debug.h	42;"	d
dbg_msg	ubi/debug.h	66;"	d
dbg_peb_buf	ubi/ubi.h	/^	void *dbg_peb_buf;$/;"	m	struct:ubi_device
dbg_wl	ubi/debug.h	87;"	d
dbg_wl	ubi/debug.h	89;"	d
dbox2_flash_map	maps/dbox2-flash.c	/^struct map_info dbox2_flash_map = {$/;"	v	typeref:struct:map_info
dc21285_copy_from	maps/dc21285.c	/^static void dc21285_copy_from(struct map_info *map, void *to, unsigned long from, ssize_t len)$/;"	f	file:
dc21285_copy_to_16	maps/dc21285.c	/^static void dc21285_copy_to_16(struct map_info *map, unsigned long to, const void *from, ssize_t len)$/;"	f	file:
dc21285_copy_to_32	maps/dc21285.c	/^static void dc21285_copy_to_32(struct map_info *map, unsigned long to, const void *from, ssize_t len)$/;"	f	file:
dc21285_copy_to_8	maps/dc21285.c	/^static void dc21285_copy_to_8(struct map_info *map, unsigned long to, const void *from, ssize_t len)$/;"	f	file:
dc21285_map	maps/dc21285.c	/^static struct map_info dc21285_map = {$/;"	v	typeref:struct:map_info	file:
dc21285_mtd	maps/dc21285.c	/^static struct mtd_info *dc21285_mtd;$/;"	v	typeref:struct:mtd_info	file:
dc21285_parts	maps/dc21285.c	/^static struct mtd_partition *dc21285_parts;$/;"	v	typeref:struct:mtd_partition	file:
dc21285_read16	maps/dc21285.c	/^static map_word dc21285_read16(struct map_info *map, unsigned long ofs)$/;"	f	file:
dc21285_read32	maps/dc21285.c	/^static map_word dc21285_read32(struct map_info *map, unsigned long ofs)$/;"	f	file:
dc21285_read8	maps/dc21285.c	/^static map_word dc21285_read8(struct map_info *map, unsigned long ofs)$/;"	f	file:
dc21285_write16	maps/dc21285.c	/^static void dc21285_write16(struct map_info *map, const map_word d, unsigned long adr)$/;"	f	file:
dc21285_write32	maps/dc21285.c	/^static void dc21285_write32(struct map_info *map, const map_word d, unsigned long adr)$/;"	f	file:
dc21285_write8	maps/dc21285.c	/^static void dc21285_write8(struct map_info *map, const map_word d, unsigned long adr)$/;"	f	file:
dchksum	mtd-utils/jffs-dump.c	/^	uint32_t dchksum;    \/* Checksum for the data.  *\/$/;"	m	struct:jffs_raw_inode	file:
dd	mtd-utils/ubi-utils/scripts/Makefile	/^dd		= dd$/;"	m
debug	maps/pcmciamtd.c	/^static const int debug = 0;$/;"	v	file:
debug	maps/pcmciamtd.c	/^static int debug = CONFIG_MTD_DEBUG_VERBOSE;$/;"	v	file:
debug	mtd-utils/ubi-utils/src/unubi.c	/^static int debug = 0;$/;"	v	file:
debug	nand/cafe_nand.c	/^static int debug = 0;$/;"	v	file:
debug	nand/diskonchip.c	/^static int debug = 0;$/;"	v	file:
debugk	maps/sbc8240.c	37;"	d	file:
debugk	maps/sbc8240.c	39;"	d	file:
decompose_image	mtd-utils/ubi-utils/src/nand2bin.c	/^static int decompose_image(struct args *args, FILE *in_fp,$/;"	f	file:
decompress	mtd-utils/compr.h	/^	int (*decompress)(unsigned char *cdata_in, unsigned char *data_out,$/;"	m	struct:jffs2_compressor
default_address	maps/sc520cdp.c	/^	unsigned long default_address;$/;"	m	struct:sc520_par_table	file:
default_map	maps/fortunet.c	/^struct map_info default_map = {$/;"	v	typeref:struct:map_info
default_mtd_writev	mtdcore.c	/^EXPORT_SYMBOL_GPL(default_mtd_writev);$/;"	v
default_mtd_writev	mtdcore.c	/^int default_mtd_writev(struct mtd_info *mtd, const struct kvec *vecs,$/;"	f
default_rootdir	mtd-utils/mkfs.jffs2.c	/^static char default_rootdir[] = ".";$/;"	v	file:
defined	mtd-utils/ubi-utils/src/pfi.c	/^	char defined[num_keys];	 \/* reserve all possible keys even if$/;"	m	struct:pfi_header	file:
del_mtd_blktrans_dev	mtd_blkdevs.c	/^EXPORT_SYMBOL_GPL(del_mtd_blktrans_dev);$/;"	v
del_mtd_blktrans_dev	mtd_blkdevs.c	/^int del_mtd_blktrans_dev(struct mtd_blktrans_dev *old)$/;"	f
del_mtd_device	mtdcore.c	/^EXPORT_SYMBOL_GPL(del_mtd_device);$/;"	v
del_mtd_device	mtdcore.c	/^int del_mtd_device (struct mtd_info *mtd)$/;"	f
del_mtd_partitions	mtdpart.c	/^EXPORT_SYMBOL(del_mtd_partitions);$/;"	v
del_mtd_partitions	mtdpart.c	/^int del_mtd_partitions(struct mtd_info *master)$/;"	f
del_ubi_blktrans_dev	ubi/bdev.c	/^EXPORT_SYMBOL_GPL(del_ubi_blktrans_dev);$/;"	v
del_ubi_blktrans_dev	ubi/bdev.c	/^int del_ubi_blktrans_dev(struct ubi_blktrans_dev *old)$/;"	f
del_vol_device	ubi/build.c	/^EXPORT_SYMBOL_GPL(del_vol_device);$/;"	v
del_vol_device	ubi/build.c	/^int del_vol_device (struct ubi_volume *vol)$/;"	f
delete_volume	mtd-utils/ubi-utils/scripts/ubi_jffs2_test.sh	/^delete_volume ()$/;"	f
delete_volume	mtd-utils/ubi-utils/scripts/ubi_test.sh	/^delete_volume ()$/;"	f
delete_volume	mtd-utils/ubi-utils/scripts/ubi_tools_test.sh	/^delete_volume ()$/;"	f
deleted	mtd-utils/jffs-dump.c	/^	uint8_t deleted : 1; \/* Has this file been deleted?  *\/$/;"	m	struct:jffs_raw_inode	file:
deleted	mtd-utils/tests/fs-tests/integrity/integck.c	/^	int deleted; \/* File has been deleted but is still open *\/$/;"	m	struct:file_info	file:
deplete	nand/rtc_from4.c	/^static void deplete(struct mtd_info *mtd, int chip)$/;"	f	file:
deregister_mtd_blktrans	mtd_blkdevs.c	/^EXPORT_SYMBOL_GPL(deregister_mtd_blktrans);$/;"	v
deregister_mtd_blktrans	mtd_blkdevs.c	/^int deregister_mtd_blktrans(struct mtd_blktrans_ops *tr)$/;"	f
deregister_mtd_parser	mtdpart.c	/^EXPORT_SYMBOL_GPL(deregister_mtd_parser);$/;"	v
deregister_mtd_parser	mtdpart.c	/^int deregister_mtd_parser(struct mtd_part_parser *p)$/;"	f
deregister_ubi_blktrans	ubi/bdev.c	/^EXPORT_SYMBOL_GPL(deregister_ubi_blktrans);$/;"	v
deregister_ubi_blktrans	ubi/bdev.c	/^int deregister_ubi_blktrans(struct ubi_blktrans_ops *tr)$/;"	f
desc_cksum	redboot.c	/^    uint32_t	  desc_cksum;    \/\/ Checksum over image descriptor$/;"	m	struct:fis_image_desc	file:
destroy_sv	ubi/scan.c	/^static void destroy_sv(struct ubi_scan_volume *sv)$/;"	f	file:
dev	maps/intel_vr_nor.c	/^	struct pci_dev *dev;$/;"	m	struct:vr_nor_mtd	typeref:struct:vr_nor_mtd::pci_dev	file:
dev	maps/pci.c	/^	struct pci_dev *dev;$/;"	m	struct:map_pci_info	typeref:struct:map_pci_info::pci_dev	file:
dev	maps/plat-ram.c	/^	struct device		*dev;$/;"	m	struct:platram_info	typeref:struct:platram_info::device	file:
dev	nand/alauda.c	/^	struct usb_device	*dev;$/;"	m	struct:alauda	typeref:struct:alauda::usb_device	file:
dev	ubi/ubi.h	/^	struct device dev;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::device
dev	ubi/ubi.h	/^	struct device dev;$/;"	m	struct:ubi_volume	typeref:struct:ubi_volume::device
dev_attribute_show	ubi/build.c	/^static ssize_t dev_attribute_show(struct device *dev,$/;"	f	file:
dev_avail_ebs	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	/^	char *dev_avail_ebs;$/;"	m	struct:libubi
dev_avail_ebs	mtd-utils/ubi-utils/src/libubi_int.h	/^	char *dev_avail_ebs;$/;"	m	struct:libubi
dev_avail_eraseblocks	ubi/build.c	/^static struct device_attribute dev_avail_eraseblocks =$/;"	v	typeref:struct:device_attribute	file:
dev_bad_count	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	/^	char *dev_bad_count;$/;"	m	struct:libubi
dev_bad_count	mtd-utils/ubi-utils/src/libubi_int.h	/^	char *dev_bad_count;$/;"	m	struct:libubi
dev_bad_peb_count	ubi/build.c	/^static struct device_attribute dev_bad_peb_count =$/;"	v	typeref:struct:device_attribute	file:
dev_bad_rsvd	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	/^	char *dev_bad_rsvd;$/;"	m	struct:libubi
dev_bad_rsvd	mtd-utils/ubi-utils/src/libubi_int.h	/^	char *dev_bad_rsvd;$/;"	m	struct:libubi
dev_bgt_enabled	ubi/build.c	/^static struct device_attribute dev_bgt_enabled =$/;"	v	typeref:struct:device_attribute	file:
dev_count	mtd-utils/ubi-utils/inc/libubi.h	/^	int dev_count;$/;"	m	struct:ubi_info
dev_count	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int dev_count;$/;"	m	struct:ubi_info
dev_dev	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	/^	char *dev_dev;$/;"	m	struct:libubi
dev_dev	mtd-utils/ubi-utils/src/libubi_int.h	/^	char *dev_dev;$/;"	m	struct:libubi
dev_eb_size	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	/^	char *dev_eb_size;$/;"	m	struct:libubi
dev_eb_size	mtd-utils/ubi-utils/src/libubi_int.h	/^	char *dev_eb_size;$/;"	m	struct:libubi
dev_eraseblock_size	ubi/build.c	/^static struct device_attribute dev_eraseblock_size =$/;"	v	typeref:struct:device_attribute	file:
dev_fd	mtd-utils/flashcp.c	/^static int dev_fd = -1,fil_fd = -1;$/;"	v	file:
dev_get_major	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^static int dev_get_major(struct libubi *lib, int dev_num, int *major, int *minor)$/;"	f	file:
dev_id	chips/jedec_probe.c	/^	const __u16 dev_id;$/;"	m	struct:amd_flash_info	file:
dev_info	mtd-utils/tests/ubi-tests/io_basic.c	/^static struct ubi_dev_info dev_info;$/;"	v	typeref:struct:ubi_dev_info	file:
dev_info	mtd-utils/tests/ubi-tests/io_paral.c	/^static struct ubi_dev_info dev_info;$/;"	v	typeref:struct:ubi_dev_info	file:
dev_info	mtd-utils/tests/ubi-tests/io_read.c	/^static struct ubi_dev_info dev_info;$/;"	v	typeref:struct:ubi_dev_info	file:
dev_info	mtd-utils/tests/ubi-tests/io_update.c	/^static struct ubi_dev_info dev_info;$/;"	v	typeref:struct:ubi_dev_info	file:
dev_info	mtd-utils/tests/ubi-tests/mkvol_bad.c	/^static struct ubi_dev_info dev_info;$/;"	v	typeref:struct:ubi_dev_info	file:
dev_info	mtd-utils/tests/ubi-tests/mkvol_basic.c	/^static struct ubi_dev_info dev_info;$/;"	v	typeref:struct:ubi_dev_info	file:
dev_info	mtd-utils/tests/ubi-tests/mkvol_paral.c	/^static struct ubi_dev_info dev_info;$/;"	v	typeref:struct:ubi_dev_info	file:
dev_info	mtd-utils/tests/ubi-tests/rsvol.c	/^static struct ubi_dev_info dev_info;$/;"	v	typeref:struct:ubi_dev_info	file:
dev_major	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int dev_major;$/;"	m	struct:ubi_vol_info
dev_max_ec	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	/^	char *dev_max_ec;$/;"	m	struct:libubi
dev_max_ec	mtd-utils/ubi-utils/src/libubi_int.h	/^	char *dev_max_ec;$/;"	m	struct:libubi
dev_max_ec	ubi/build.c	/^static struct device_attribute dev_max_ec =$/;"	v	typeref:struct:device_attribute	file:
dev_max_vol_count	ubi/build.c	/^static struct device_attribute dev_max_vol_count =$/;"	v	typeref:struct:device_attribute	file:
dev_max_vols	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	/^	char *dev_max_vols;$/;"	m	struct:libubi
dev_max_vols	mtd-utils/ubi-utils/src/libubi_int.h	/^	char *dev_max_vols;$/;"	m	struct:libubi
dev_min_io_size	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	/^	char *dev_min_io_size;$/;"	m	struct:libubi
dev_min_io_size	mtd-utils/ubi-utils/src/libubi_int.h	/^	char *dev_min_io_size;$/;"	m	struct:libubi
dev_min_io_size	ubi/build.c	/^static struct device_attribute dev_min_io_size =$/;"	v	typeref:struct:device_attribute	file:
dev_minor	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int dev_minor;$/;"	m	struct:ubi_vol_info
dev_mtd_num	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	/^	char *dev_mtd_num;$/;"	m	struct:libubi
dev_mtd_num	ubi/build.c	/^static struct device_attribute dev_mtd_num =$/;"	v	typeref:struct:device_attribute	file:
dev_name	mtd-utils/ubi-utils/new-utils/src/ubicrcvol.c	/^	char dev_name[256];$/;"	m	struct:args	file:
dev_name	mtd-utils/ubi-utils/new-utils/src/ubidumpvol.c	/^	char dev_name[256];$/;"	m	struct:args	file:
dev_name	mtd-utils/ubi-utils/new-utils/src/ubimkvol.c	/^	char dev_name[256];$/;"	m	struct:args	file:
dev_name	mtd-utils/ubi-utils/new-utils/src/ubirmvol.c	/^	char dev_name[256];$/;"	m	struct:args	file:
dev_name	mtd-utils/ubi-utils/new-utils/src/ubiupdatevol.c	/^	char dev_name[256];$/;"	m	struct:args	file:
dev_node2num	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^static int dev_node2num(struct libubi *lib, const char *node, int *dev_num)$/;"	f	file:
dev_num	mtd-utils/ubi-utils/inc/libubi.h	/^	int dev_num;$/;"	m	struct:ubi_dev_info
dev_num	mtd-utils/ubi-utils/inc/libubi.h	/^	int dev_num;$/;"	m	struct:ubi_vol_info
dev_num	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int dev_num;$/;"	m	struct:ubi_attach_request
dev_num	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int dev_num;$/;"	m	struct:ubi_dev_info
dev_num	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int dev_num;$/;"	m	struct:ubi_vol_info
dev_read_data	mtd-utils/ubi-utils/src/libubi.c	/^static int dev_read_data(const char *patt, int dev_num, void *buf, int buf_len)$/;"	f	file:
dev_read_int	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^static int dev_read_int(const char *patt, int dev_num, int *value)$/;"	f	file:
dev_read_int	mtd-utils/ubi-utils/src/libubi.c	/^static int dev_read_int(const char *patt, int dev_num, int *value)$/;"	f	file:
dev_read_ll	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^static int dev_read_ll(const char *patt, int dev_num, long long *value)$/;"	f	file:
dev_read_ll	mtd-utils/ubi-utils/src/libubi.c	/^static int dev_read_ll(const char *patt, int dev_num, long long *value)$/;"	f	file:
dev_release	ubi/build.c	/^static void dev_release(struct device *dev) { }$/;"	f	file:
dev_reserved_for_bad	ubi/build.c	/^static struct device_attribute dev_reserved_for_bad =$/;"	v	typeref:struct:device_attribute	file:
dev_total_ebs	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	/^	char *dev_total_ebs;$/;"	m	struct:libubi
dev_total_ebs	mtd-utils/ubi-utils/src/libubi_int.h	/^	char *dev_total_ebs;$/;"	m	struct:libubi
dev_total_eraseblocks	ubi/build.c	/^static struct device_attribute dev_total_eraseblocks =$/;"	v	typeref:struct:device_attribute	file:
dev_volumes_count	ubi/build.c	/^static struct device_attribute dev_volumes_count =$/;"	v	typeref:struct:device_attribute	file:
device	nand/bf5xx_nand.c	/^	struct device			*device;$/;"	m	struct:bf5xx_nand_info	typeref:struct:bf5xx_nand_info::device	file:
device	nand/s3c2410.c	/^	struct device			*device;$/;"	m	struct:s3c2410_nand_info	typeref:struct:s3c2410_nand_info::device	file:
device_file_name	mtd-utils/tests/ubi-tests/integ.c	/^	const char *device_file_name;$/;"	m	struct:ubi_device_info	file:
device_file_name	mtd-utils/tests/ubi-tests/integ.c	/^	const char *device_file_name;$/;"	m	struct:volume_info	file:
device_id	onenand/onenand_sim.c	/^static int device_id	= CONFIG_ONENAND_SIM_DEVICE_ID;$/;"	v	file:
devn	mtd-utils/ubi-utils/new-utils/src/ubiattach.c	/^	int devn;$/;"	m	struct:args	file:
devn	mtd-utils/ubi-utils/new-utils/src/ubicrcvol.c	/^	int devn;$/;"	m	struct:args	file:
devn	mtd-utils/ubi-utils/new-utils/src/ubidetach.c	/^	int devn;$/;"	m	struct:args	file:
devn	mtd-utils/ubi-utils/new-utils/src/ubidumpvol.c	/^	int devn;$/;"	m	struct:args	file:
devn	mtd-utils/ubi-utils/new-utils/src/ubimkvol.c	/^	int devn;$/;"	m	struct:args	file:
devn	mtd-utils/ubi-utils/new-utils/src/ubinfo.c	/^	int devn;$/;"	m	struct:args	file:
devn	mtd-utils/ubi-utils/new-utils/src/ubirmvol.c	/^	int devn;$/;"	m	struct:args	file:
devn	mtd-utils/ubi-utils/new-utils/src/ubiupdatevol.c	/^	int devn;$/;"	m	struct:args	file:
devnum	ubi/ubiblk.h	/^	int devnum;$/;"	m	struct:ubi_blktrans_dev
devs	ubi/ubiblk.h	/^	struct list_head devs;$/;"	m	struct:ubi_blktrans_ops	typeref:struct:ubi_blktrans_ops::list_head
diag_ram	devices/ms02-nv.h	/^		struct resource *diag_ram;$/;"	m	struct:ms02nv_private::__anon18	typeref:struct:ms02nv_private::__anon18::resource
dict	mtd-utils/ubi-utils/new-utils/src/ubinize.c	/^	dictionary *dict;$/;"	m	struct:args	file:
dictionary	mtd-utils/ubi-utils/new-utils/src/dictionary.h	/^} dictionary ;$/;"	t	typeref:struct:_dictionary_
dictionary_del	mtd-utils/ubi-utils/new-utils/src/dictionary.c	/^void dictionary_del(dictionary * d)$/;"	f
dictionary_dump	mtd-utils/ubi-utils/new-utils/src/dictionary.c	/^void dictionary_dump(dictionary * d, FILE * out)$/;"	f
dictionary_get	mtd-utils/ubi-utils/new-utils/src/dictionary.c	/^char * dictionary_get(dictionary * d, char * key, char * def)$/;"	f
dictionary_hash	mtd-utils/ubi-utils/new-utils/src/dictionary.c	/^unsigned dictionary_hash(char * key)$/;"	f
dictionary_new	mtd-utils/ubi-utils/new-utils/src/dictionary.c	/^dictionary * dictionary_new(int size)$/;"	f
dictionary_set	mtd-utils/ubi-utils/new-utils/src/dictionary.c	/^int dictionary_set(dictionary * d, char * key, char * val)$/;"	f
dictionary_unset	mtd-utils/ubi-utils/new-utils/src/dictionary.c	/^void dictionary_unset(dictionary * d, char * key)$/;"	f
dir	mtd-utils/jffs2reader.c	/^struct dir {$/;"	s	file:
dir	mtd-utils/tests/fs-tests/integrity/integck.c	/^		struct dir_info *dir;$/;"	m	union:dir_entry_info::entry_	typeref:struct:dir_entry_info::entry_::dir_info	file:
dir_check	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void dir_check(struct dir_info *dir)$/;"	f	file:
dir_entry_check	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void dir_entry_check(struct dir_entry_info **entry_array,$/;"	f	file:
dir_entry_info	mtd-utils/tests/fs-tests/integrity/integck.c	/^struct dir_entry_info \/* Each entry in a directory has one of these *\/$/;"	s	file:
dir_entry_name	mtd-utils/tests/fs-tests/integrity/integck.c	/^static const char *dir_entry_name(const struct dir_entry_info *entry)$/;"	f	file:
dir_entry_new	mtd-utils/tests/fs-tests/integrity/integck.c	/^static struct dir_entry_info *dir_entry_new(void)$/;"	f	file:
dir_info	mtd-utils/tests/fs-tests/integrity/integck.c	/^struct dir_info \/* Each directory has one of these *\/$/;"	s	file:
dir_new	mtd-utils/tests/fs-tests/integrity/integck.c	/^static struct dir_info *dir_new(struct dir_info *parent, const char *name)$/;"	f	file:
dir_path	mtd-utils/tests/fs-tests/integrity/integck.c	/^static char *dir_path(struct dir_info *parent, const char *name)$/;"	f	file:
dir_remove	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void dir_remove(struct dir_info *dir)$/;"	f	file:
directory	redboot.c	/^static int directory = CONFIG_MTD_REDBOOT_DIRECTORY_BLOCK;$/;"	v	file:
dirs_created	mtd-utils/tests/fs-tests/stress/atoms/rndrm99.c	/^uint32_t dirs_created = 0;$/;"	v
dirs_removed	mtd-utils/tests/fs-tests/stress/atoms/rndrm99.c	/^uint32_t dirs_removed = 0;$/;"	v
disabled	mtd-utils/compr.h	/^	int disabled;             \/* if seted the compressor won't compress *\/$/;"	m	struct:jffs2_compressor
discarded	mtd-utils/include/mtd/inftl-user.h	/^	uint8_t discarded;$/;"	m	struct:inftl_unithead1
discarded	mtd-utils/include/mtd/inftl-user.h	/^	uint8_t discarded;$/;"	m	struct:inftl_unithead2
display_help	mtd-utils/flash_eraseall.c	/^void display_help (void)$/;"	f
display_help	mtd-utils/jffs2dump.c	/^void display_help (void)$/;"	f
display_help	mtd-utils/nanddump.c	/^void display_help (void)$/;"	f
display_help	mtd-utils/nanddump_vfat.c	/^void display_help (void)$/;"	f
display_help	mtd-utils/nandwrite.c	/^void display_help (void)$/;"	f
display_help	mtd-utils/nandwrite_mlc.c	/^void display_help (void)$/;"	f
display_help	mtd-utils/rfddump.c	/^void display_help(void)$/;"	f
display_help	mtd-utils/rfdformat.c	/^void display_help(void)$/;"	f
display_stats	mtd-utils/tests/fs-tests/stress/atoms/rndrm99.c	/^void display_stats(void)$/;"	f
display_version	mtd-utils/flash_eraseall.c	/^void display_version (void)$/;"	f
display_version	mtd-utils/jffs2dump.c	/^void display_version (void)$/;"	f
display_version	mtd-utils/nanddump.c	/^void display_version (void)$/;"	f
display_version	mtd-utils/nanddump_vfat.c	/^void display_version (void)$/;"	f
display_version	mtd-utils/nandwrite.c	/^void display_version (void)$/;"	f
display_version	mtd-utils/nandwrite_mlc.c	/^void display_version (void)$/;"	f
display_version	mtd-utils/rfddump.c	/^void display_version(void)$/;"	f
display_version	mtd-utils/rfdformat.c	/^void display_version(void)$/;"	f
dma_ack	nand/jz4750_nand.c	/^static volatile int dma_ack = 0;$/;"	v	file:
dma_ack1	nand/jz4750_nand.c	/^static volatile int dma_ack1 = 0;$/;"	v	file:
dma_chan	nand/jz4740_nand.c	/^static int dma_chan;$/;"	v	file:
dma_completion	nand/bf5xx_nand.c	/^	struct completion		dma_completion;$/;"	m	struct:bf5xx_nand_info	typeref:struct:bf5xx_nand_info::completion	file:
dma_desc_dec	nand/jz4750_nand.c	/^static jz_dma_desc_8word *dma_desc_enc, *dma_desc_enc1, *dma_desc_dec, *dma_desc_dec1, *dma_desc_dec2,$/;"	v	file:
dma_desc_dec1	nand/jz4750_nand.c	/^static jz_dma_desc_8word *dma_desc_enc, *dma_desc_enc1, *dma_desc_dec, *dma_desc_dec1, *dma_desc_dec2,$/;"	v	file:
dma_desc_dec2	nand/jz4750_nand.c	/^static jz_dma_desc_8word *dma_desc_enc, *dma_desc_enc1, *dma_desc_dec, *dma_desc_dec1, *dma_desc_dec2,$/;"	v	file:
dma_desc_enc	nand/jz4750_nand.c	/^static jz_dma_desc_8word *dma_desc_enc, *dma_desc_enc1, *dma_desc_dec, *dma_desc_dec1, *dma_desc_dec2,$/;"	v	file:
dma_desc_enc1	nand/jz4750_nand.c	/^static jz_dma_desc_8word *dma_desc_enc, *dma_desc_enc1, *dma_desc_dec, *dma_desc_dec1, *dma_desc_dec2,$/;"	v	file:
dma_desc_nand_prog	nand/jz4750_nand.c	/^	*dma_desc_nand_prog, *dma_desc_nand_read;$/;"	v	file:
dma_desc_nand_read	nand/jz4750_nand.c	/^	*dma_desc_nand_prog, *dma_desc_nand_read;$/;"	v	file:
dma_dst_phys_addr	nand/jz4740_nand.c	/^static unsigned int dma_src_phys_addr, dma_dst_phys_addr;$/;"	v	file:
dma_setup	nand/jz4740_nand.c	/^static void dma_setup(void)$/;"	f	file:
dma_src_phys_addr	nand/jz4740_nand.c	/^static unsigned int dma_src_phys_addr, dma_dst_phys_addr;$/;"	v	file:
dmaaddr	nand/cafe_nand.c	/^	dma_addr_t dmaaddr;$/;"	m	struct:cafe_priv	file:
dmabuf	nand/cafe_nand.c	/^	unsigned char *dmabuf;$/;"	m	struct:cafe_priv	file:
dnp_adnp_probe	maps/dilnetpc.c	/^static int dnp_adnp_probe(void)$/;"	f	file:
dnp_set_vpp	maps/dilnetpc.c	/^static void dnp_set_vpp(struct map_info *not_used, int on)$/;"	f	file:
dnpc_map	maps/dilnetpc.c	/^static struct map_info dnpc_map = {$/;"	v	typeref:struct:map_info	file:
dnpc_map_flash	maps/dilnetpc.c	/^static void dnpc_map_flash(unsigned long flash_base, unsigned long flash_size)$/;"	f	file:
dnpc_unmap_flash	maps/dilnetpc.c	/^static void dnpc_unmap_flash(void)$/;"	f	file:
doGrabKProfile	mtd-utils/tests/jittertest/JitterTest.c	/^void doGrabKProfile(int jitterusec, char *fileName)$/;"	f
do_an_operation	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void do_an_operation(void)$/;"	f	file:
do_an_operation	mtd-utils/tests/ubi-tests/integ.c	/^static void do_an_operation(void)$/;"	f	file:
do_atmel_lock	chips/cfi_cmdset_0002.c	/^static int do_atmel_lock(struct map_info *map, struct flchip *chip,$/;"	f	file:
do_atmel_unlock	chips/cfi_cmdset_0002.c	/^static int do_atmel_unlock(struct map_info *map, struct flchip *chip,$/;"	f	file:
do_blktrans_request	mtd_blkdevs.c	/^static int do_blktrans_request(struct mtd_blktrans_ops *tr,$/;"	f	file:
do_blktrans_request	ubi/bdev.c	/^static int do_blktrans_request(struct ubi_blktrans_ops *tr,$/;"	f	file:
do_cached_read	mtdblock-jz.c	/^static int do_cached_read (struct mtdblk_dev *mtdblk, unsigned long sector,$/;"	f	file:
do_cached_read	mtdblock.c	/^static int do_cached_read (struct mtdblk_dev *mtdblk, unsigned long pos,$/;"	f	file:
do_cached_read	ubi/ubiblk.c	/^static int do_cached_read (struct ubiblk_dev *ubiblk, unsigned long sector, $/;"	f	file:
do_cached_write	mtdblock-jz.c	/^static int do_cached_write (struct mtdblk_dev *mtdblk, unsigned long sector,$/;"	f	file:
do_cached_write	mtdblock.c	/^static int do_cached_write (struct mtdblk_dev *mtdblk, unsigned long pos,$/;"	f	file:
do_cached_write	ubi/ubiblk.c	/^static int do_cached_write (struct ubiblk_dev *ubiblk, unsigned long sector, $/;"	f	file:
do_delays	nand/nandsim.c	/^static uint do_delays      = CONFIG_NANDSIM_DO_DELAYS;$/;"	v	file:
do_dumpcontent	mtd-utils/jffs2dump.c	/^void do_dumpcontent (void)$/;"	f
do_endianconvert	mtd-utils/jffs2dump.c	/^void do_endianconvert (void)$/;"	f
do_erase_chip	chips/cfi_cmdset_0002.c	/^static int __xipram do_erase_chip(struct map_info *map, struct flchip *chip)$/;"	f	file:
do_erase_oneblock	chips/cfi_cmdset_0001.c	/^static int __xipram do_erase_oneblock(struct map_info *map, struct flchip *chip,$/;"	f	file:
do_erase_oneblock	chips/cfi_cmdset_0002.c	/^static int __xipram do_erase_oneblock(struct map_info *map, struct flchip *chip, unsigned long adr, int len, void *thunk)$/;"	f	file:
do_erase_oneblock	chips/cfi_cmdset_0020.c	/^static inline int do_erase_oneblock(struct map_info *map, struct flchip *chip, unsigned long adr)$/;"	f	file:
do_getlockstatus_oneblock	chips/cfi_cmdset_0001.c	/^static int __xipram do_getlockstatus_oneblock(struct map_info *map,$/;"	f	file:
do_lock_oneblock	chips/cfi_cmdset_0020.c	/^static inline int do_lock_oneblock(struct map_info *map, struct flchip *chip, unsigned long adr)$/;"	f	file:
do_map_probe	chips/chipreg.c	/^EXPORT_SYMBOL(do_map_probe);$/;"	v
do_map_probe	chips/chipreg.c	/^struct mtd_info *do_map_probe(const char *name, struct map_info *map)$/;"	f
do_mirror	mtd-utils/ubi-utils/src/pddcustomize.c	/^do_mirror(int volno)$/;"	f	file:
do_nothing	mtd-utils/ubi-utils/perl/mkpfi	/^sub do_nothing($$$) {$/;"	s
do_oobcheck	mtd-utils/nftl_format.c	/^static int do_oobcheck = 1;$/;"	v	file:
do_otp_lock	chips/cfi_cmdset_0001.c	/^do_otp_lock(struct map_info *map, struct flchip *chip, u_long offset,$/;"	f	file:
do_otp_lock	onenand/onenand_base.c	/^static int do_otp_lock(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
do_otp_read	chips/cfi_cmdset_0001.c	/^do_otp_read(struct map_info *map, struct flchip *chip, u_long offset,$/;"	f	file:
do_otp_read	onenand/onenand_base.c	/^static int do_otp_read(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
do_otp_write	chips/cfi_cmdset_0001.c	/^do_otp_write(struct map_info *map, struct flchip *chip, u_long offset,$/;"	f	file:
do_otp_write	onenand/onenand_base.c	/^static int do_otp_write(struct mtd_info *mtd, loff_t to, size_t len,$/;"	f	file:
do_point_onechip	chips/cfi_cmdset_0001.c	/^static int do_point_onechip (struct map_info *map, struct flchip *chip, loff_t adr, size_t len)$/;"	f	file:
do_printlockstatus_oneblock	chips/cfi_cmdset_0001.c	/^static int __xipram do_printlockstatus_oneblock(struct map_info *map,$/;"	f	file:
do_pwr_dn	mtd-utils/tests/checkfs/comm.c	/^int do_pwr_dn(int fd, int cycleCnt)$/;"	f
do_read_onechip	chips/cfi_cmdset_0001.c	/^static inline int do_read_onechip(struct map_info *map, struct flchip *chip, loff_t adr, size_t len, u_char *buf)$/;"	f	file:
do_read_onechip	chips/cfi_cmdset_0002.c	/^static inline int do_read_onechip(struct map_info *map, struct flchip *chip, loff_t adr, size_t len, u_char *buf)$/;"	f	file:
do_read_onechip	chips/cfi_cmdset_0020.c	/^static inline int do_read_onechip(struct map_info *map, struct flchip *chip, loff_t adr, size_t len, u_char *buf)$/;"	f	file:
do_read_secsi_onechip	chips/cfi_cmdset_0002.c	/^static inline int do_read_secsi_onechip(struct map_info *map, struct flchip *chip, loff_t adr, size_t len, u_char *buf)$/;"	f	file:
do_rwecheck	mtd-utils/nftl_format.c	/^static int do_rwecheck = 1;$/;"	v	file:
do_some_operations	mtd-utils/tests/ubi-tests/integ.c	/^static void do_some_operations(void)$/;"	f	file:
do_state_action	nand/nandsim.c	/^static int do_state_action(struct nandsim *ns, uint32_t action)$/;"	f	file:
do_sync_erase	ubi/io.c	/^static int do_sync_erase(struct ubi_device *ubi, int pnum)$/;"	f	file:
do_unlock_oneblock	chips/cfi_cmdset_0020.c	/^static inline int do_unlock_oneblock(struct map_info *map, struct flchip *chip, unsigned long adr)$/;"	f	file:
do_work	ubi/wl.c	/^static int do_work(struct ubi_device *ubi)$/;"	f	file:
do_write_buffer	chips/cfi_cmdset_0001.c	/^static int __xipram do_write_buffer(struct map_info *map, struct flchip *chip,$/;"	f	file:
do_write_buffer	chips/cfi_cmdset_0002.c	/^static int __xipram do_write_buffer(struct map_info *map, struct flchip *chip,$/;"	f	file:
do_write_buffer	chips/cfi_cmdset_0020.c	/^static inline int do_write_buffer(struct map_info *map, struct flchip *chip,$/;"	f	file:
do_write_oneword	chips/cfi_cmdset_0001.c	/^static int __xipram do_write_oneword(struct map_info *map, struct flchip *chip,$/;"	f	file:
do_write_oneword	chips/cfi_cmdset_0002.c	/^static int __xipram do_write_oneword(struct map_info *map, struct flchip *chip, unsigned long adr, map_word datum)$/;"	f	file:
do_writesect	rfd_ftl.c	/^static int do_writesect(struct mtd_blktrans_dev *dev, u_long sector, char *buf, ulong *old_addr)$/;"	f	file:
do_xxlock_oneblock	chips/cfi_cmdset_0001.c	/^static int __xipram do_xxlock_oneblock(struct map_info *map, struct flchip *chip,$/;"	f	file:
doc	mtd-utils/ubi-utils/new-utils/src/ubiattach.c	/^static const char *doc = PROGRAM_NAME " version " PROGRAM_VERSION$/;"	v	file:
doc	mtd-utils/ubi-utils/new-utils/src/ubicrc32.c	/^static const char *doc = PROGRAM_NAME " version " PROGRAM_VERSION$/;"	v	file:
doc	mtd-utils/ubi-utils/new-utils/src/ubicrcvol.c	/^static const char *doc = PROGRAM_NAME " version " PROGRAM_VERSION$/;"	v	file:
doc	mtd-utils/ubi-utils/new-utils/src/ubidetach.c	/^static const char *doc = PROGRAM_NAME " version " PROGRAM_VERSION$/;"	v	file:
doc	mtd-utils/ubi-utils/new-utils/src/ubidumpvol.c	/^static const char *doc = PROGRAM_NAME " version " PROGRAM_VERSION$/;"	v	file:
doc	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	/^static const char *doc = PROGRAM_NAME " version " PROGRAM_VERSION$/;"	v	file:
doc	mtd-utils/ubi-utils/new-utils/src/ubimkvol.c	/^static const char *doc = PROGRAM_NAME " version " PROGRAM_VERSION$/;"	v	file:
doc	mtd-utils/ubi-utils/new-utils/src/ubinfo.c	/^static const char *doc = PROGRAM_NAME " version " PROGRAM_VERSION$/;"	v	file:
doc	mtd-utils/ubi-utils/new-utils/src/ubinize.c	/^static const char *doc = PROGRAM_NAME " version " PROGRAM_VERSION$/;"	v	file:
doc	mtd-utils/ubi-utils/new-utils/src/ubirmvol.c	/^static const char *doc = PROGRAM_NAME " version " PROGRAM_VERSION$/;"	v	file:
doc	mtd-utils/ubi-utils/new-utils/src/ubiupdatevol.c	/^static const char *doc = PROGRAM_NAME " version " PROGRAM_VERSION$/;"	v	file:
doc	mtd-utils/ubi-utils/src/bin2nand.c	/^static char doc[] = "\\nVersion: " PROGRAM_VERSION "\\n"$/;"	v	file:
doc	mtd-utils/ubi-utils/src/mkbootenv.c	/^static char doc[] = "\\nVersion: " PROGRAM_VERSION "\\n"$/;"	v	file:
doc	mtd-utils/ubi-utils/src/nand2bin.c	/^static char doc[] = "\\nVersion: " PROGRAM_VERSION "\\n"$/;"	v	file:
doc	mtd-utils/ubi-utils/src/pddcustomize.c	/^static char doc[] = "\\nVersion: " PROGRAM_VERSION "\\n"$/;"	v	file:
doc	mtd-utils/ubi-utils/src/pfi2bin.c	/^static char doc[] = "\\nVersion: " PROGRAM_VERSION "\\n"$/;"	v	file:
doc	mtd-utils/ubi-utils/src/pfiflash.c	/^static char doc[] = "\\nVersion: " PROGRAM_VERSION "\\n"$/;"	v	file:
doc	mtd-utils/ubi-utils/src/ubigen.c	/^static char doc[] = "\\nVersion: " PROGRAM_VERSION "\\n"$/;"	v	file:
doc	mtd-utils/ubi-utils/src/ubimirror.c	/^static char doc[] = "\\nVersion: " PROGRAM_VERSION "\\n"$/;"	v	file:
doc	mtd-utils/ubi-utils/src/unubi.c	/^static char doc[] = "\\nVersion: " VERSION "\\n";$/;"	v	file:
doc2000_count_chips	nand/diskonchip.c	/^static void __init doc2000_count_chips(struct mtd_info *mtd)$/;"	f	file:
doc2000_init	nand/diskonchip.c	/^static inline int __init doc2000_init(struct mtd_info *mtd)$/;"	f	file:
doc2000_read_byte	nand/diskonchip.c	/^static u_char doc2000_read_byte(struct mtd_info *mtd)$/;"	f	file:
doc2000_readbuf	nand/diskonchip.c	/^static void doc2000_readbuf(struct mtd_info *mtd, u_char *buf, int len)$/;"	f	file:
doc2000_readbuf_dword	nand/diskonchip.c	/^static void doc2000_readbuf_dword(struct mtd_info *mtd, u_char *buf, int len)$/;"	f	file:
doc2000_verifybuf	nand/diskonchip.c	/^static int doc2000_verifybuf(struct mtd_info *mtd, const u_char *buf, int len)$/;"	f	file:
doc2000_write_byte	nand/diskonchip.c	/^static void doc2000_write_byte(struct mtd_info *mtd, u_char datum)$/;"	f	file:
doc2000_writebuf	nand/diskonchip.c	/^static void doc2000_writebuf(struct mtd_info *mtd, const u_char *buf, int len)$/;"	f	file:
doc2001_init	nand/diskonchip.c	/^static inline int __init doc2001_init(struct mtd_info *mtd)$/;"	f	file:
doc2001_read_byte	nand/diskonchip.c	/^static u_char doc2001_read_byte(struct mtd_info *mtd)$/;"	f	file:
doc2001_readbuf	nand/diskonchip.c	/^static void doc2001_readbuf(struct mtd_info *mtd, u_char *buf, int len)$/;"	f	file:
doc2001_verifybuf	nand/diskonchip.c	/^static int doc2001_verifybuf(struct mtd_info *mtd, const u_char *buf, int len)$/;"	f	file:
doc2001_write_byte	nand/diskonchip.c	/^static void doc2001_write_byte(struct mtd_info *mtd, u_char datum)$/;"	f	file:
doc2001_writebuf	nand/diskonchip.c	/^static void doc2001_writebuf(struct mtd_info *mtd, const u_char *buf, int len)$/;"	f	file:
doc2001plus_command	nand/diskonchip.c	/^static void doc2001plus_command(struct mtd_info *mtd, unsigned command, int column, int page_addr)$/;"	f	file:
doc2001plus_enable_hwecc	nand/diskonchip.c	/^static void doc2001plus_enable_hwecc(struct mtd_info *mtd, int mode)$/;"	f	file:
doc2001plus_init	nand/diskonchip.c	/^static inline int __init doc2001plus_init(struct mtd_info *mtd)$/;"	f	file:
doc2001plus_read_byte	nand/diskonchip.c	/^static u_char doc2001plus_read_byte(struct mtd_info *mtd)$/;"	f	file:
doc2001plus_readbuf	nand/diskonchip.c	/^static void doc2001plus_readbuf(struct mtd_info *mtd, u_char *buf, int len)$/;"	f	file:
doc2001plus_select_chip	nand/diskonchip.c	/^static void doc2001plus_select_chip(struct mtd_info *mtd, int chip)$/;"	f	file:
doc2001plus_verifybuf	nand/diskonchip.c	/^static int doc2001plus_verifybuf(struct mtd_info *mtd, const u_char *buf, int len)$/;"	f	file:
doc2001plus_writebuf	nand/diskonchip.c	/^static void doc2001plus_writebuf(struct mtd_info *mtd, const u_char *buf, int len)$/;"	f	file:
doc200x_block_bad	nand/diskonchip.c	/^static int doc200x_block_bad(struct mtd_info *mtd, loff_t ofs, int getchip)$/;"	f	file:
doc200x_calculate_ecc	nand/diskonchip.c	/^static int doc200x_calculate_ecc(struct mtd_info *mtd, const u_char *dat, unsigned char *ecc_code)$/;"	f	file:
doc200x_correct_data	nand/diskonchip.c	/^static int doc200x_correct_data(struct mtd_info *mtd, u_char *dat,$/;"	f	file:
doc200x_dev_ready	nand/diskonchip.c	/^static int doc200x_dev_ready(struct mtd_info *mtd)$/;"	f	file:
doc200x_enable_hwecc	nand/diskonchip.c	/^static void doc200x_enable_hwecc(struct mtd_info *mtd, int mode)$/;"	f	file:
doc200x_hwcontrol	nand/diskonchip.c	/^static void doc200x_hwcontrol(struct mtd_info *mtd, int cmd,$/;"	f	file:
doc200x_ident_chip	nand/diskonchip.c	/^static uint16_t __init doc200x_ident_chip(struct mtd_info *mtd, int nr)$/;"	f	file:
doc200x_oobinfo	nand/diskonchip.c	/^static struct nand_ecclayout doc200x_oobinfo = {$/;"	v	typeref:struct:nand_ecclayout	file:
doc200x_select_chip	nand/diskonchip.c	/^static void doc200x_select_chip(struct mtd_info *mtd, int chip)$/;"	f	file:
doc200x_wait	nand/diskonchip.c	/^static int doc200x_wait(struct mtd_info *mtd, struct nand_chip *this)$/;"	f	file:
doc2klist	devices/doc2000.c	/^static struct mtd_info *doc2klist = NULL;$/;"	v	typeref:struct:mtd_info	file:
doc_config_location	devices/docprobe.c	/^static unsigned long doc_config_location = CONFIG_MTD_DOCPROBE_ADDRESS;$/;"	v	file:
doc_config_location	nand/diskonchip.c	/^static unsigned long doc_config_location = CONFIG_MTD_NAND_DISKONCHIP_PROBE_ADDRESS;$/;"	v	file:
doc_decode_ecc	devices/docecc.c	/^EXPORT_SYMBOL_GPL(doc_decode_ecc);$/;"	v
doc_decode_ecc	devices/docecc.c	/^int doc_decode_ecc(unsigned char sector[SECTOR_SIZE], unsigned char ecc1[6])$/;"	f
doc_ecc_decode	nand/diskonchip.c	/^static int doc_ecc_decode(struct rs_control *rs, uint8_t *data, uint8_t *ecc)$/;"	f	file:
doc_erase	devices/doc2000.c	/^static int doc_erase(struct mtd_info *mtd, struct erase_info *instr)$/;"	f	file:
doc_erase	devices/doc2001.c	/^int doc_erase (struct mtd_info *mtd, struct erase_info *instr)$/;"	f
doc_erase	devices/doc2001plus.c	/^int doc_erase(struct mtd_info *mtd, struct erase_info *instr)$/;"	f
doc_locations	devices/docprobe.c	/^static unsigned long __initdata doc_locations[] = {$/;"	v	file:
doc_locations	nand/diskonchip.c	/^static unsigned long __initdata doc_locations[] = {$/;"	v	file:
doc_priv	nand/diskonchip.c	/^struct doc_priv {$/;"	s	file:
doc_probe	nand/diskonchip.c	/^static int __init doc_probe(unsigned long physadr)$/;"	f	file:
doc_read	devices/doc2000.c	/^static int doc_read(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
doc_read	devices/doc2001.c	/^static int doc_read (struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
doc_read	devices/doc2001plus.c	/^static int doc_read(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
doc_read_oob	devices/doc2000.c	/^static int doc_read_oob(struct mtd_info *mtd, loff_t ofs,$/;"	f	file:
doc_read_oob	devices/doc2001.c	/^static int doc_read_oob(struct mtd_info *mtd, loff_t ofs,$/;"	f	file:
doc_read_oob	devices/doc2001plus.c	/^static int doc_read_oob(struct mtd_info *mtd, loff_t ofs,$/;"	f	file:
doc_write	devices/doc2000.c	/^static int doc_write(struct mtd_info *mtd, loff_t to, size_t len,$/;"	f	file:
doc_write	devices/doc2001.c	/^static int doc_write (struct mtd_info *mtd, loff_t to, size_t len,$/;"	f	file:
doc_write	devices/doc2001plus.c	/^static int doc_write(struct mtd_info *mtd, loff_t to, size_t len,$/;"	f	file:
doc_write_oob	devices/doc2000.c	/^static int doc_write_oob(struct mtd_info *mtd, loff_t ofs,$/;"	f	file:
doc_write_oob	devices/doc2001.c	/^static int doc_write_oob(struct mtd_info *mtd, loff_t ofs,$/;"	f	file:
doc_write_oob	devices/doc2001plus.c	/^static int doc_write_oob(struct mtd_info *mtd, loff_t ofs,$/;"	f	file:
doc_write_oob_nolock	devices/doc2000.c	/^static int doc_write_oob_nolock(struct mtd_info *mtd, loff_t ofs, size_t len,$/;"	f	file:
doccheck	devices/docprobe.c	/^static inline int __init doccheck(void __iomem *potential, unsigned long physadr)$/;"	f	file:
docfound	devices/docprobe.c	/^static int docfound;$/;"	v	file:
doclist	nand/diskonchip.c	/^static struct mtd_info *doclist = NULL;$/;"	v	typeref:struct:mtd_info	file:
docmem	maps/scx200_docflash.c	/^static struct resource docmem = {$/;"	v	typeref:struct:resource	file:
docmillist	devices/doc2001.c	/^static struct mtd_info *docmillist = NULL;$/;"	v	typeref:struct:mtd_info	file:
docmilpluslist	devices/doc2001plus.c	/^static struct mtd_info *docmilpluslist = NULL;$/;"	v	typeref:struct:mtd_info	file:
dprintk	mtdblock-jz.c	27;"	d	file:
dprintk	mtdblock-jz.c	29;"	d	file:
dprintk	nand/jz4750_nand.c	38;"	d	file:
dprintk	nand/jz4750_nand.c	40;"	d	file:
dprintk	udc_cache.c	22;"	d	file:
dprintk	udc_cache.c	24;"	d	file:
drop_ffs	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	/^static int drop_ffs(const struct mtd_info *mtd, const void *buf, int len)$/;"	f	file:
dsize	mtd-utils/include/linux/jffs2.h	/^	jint32_t dsize;	     \/* Size of the node's data. (after decompression) *\/$/;"	m	struct:jffs2_raw_inode
dsize	mtd-utils/jffs-dump.c	/^	uint32_t dsize;      \/* Size of the file data.  *\/$/;"	m	struct:jffs_raw_inode	file:
dtype	devices/docecc.c	/^typedef unsigned short dtype;$/;"	t	file:
dtype	mtd-utils/include/mtd/ubi-user.h	/^	uint8_t dtype;$/;"	m	struct:ubi_leb_change_req
dump_data	nand/nand_base.c	276;"	d	file:
dump_erase_units	mtd-utils/nftldump.c	/^static void dump_erase_units(void)$/;"	f	file:
dump_info	mtd-utils/ubi-utils/src/libubigen.c	/^dump_info(ubi_info_t u ubi_unused)$/;"	f
dump_lists	ftl.c	/^static void dump_lists(partition_t *part)$/;"	f	file:
dump_sum_records	mtd-utils/sumtool.c	/^void dump_sum_records()$/;"	f
dump_virtual_units	mtd-utils/nftldump.c	/^static void dump_virtual_units(void)$/;"	f	file:
dump_volume	mtd-utils/ubi-utils/new-utils/src/ubidumpvol.c	/^static int dump_volume(libubi_t libubi, struct ubi_vol_info *vol_info)$/;"	f	file:
dumpcontent	mtd-utils/jffs2dump.c	/^int	dumpcontent;		\/\/ dump image content$/;"	v
dumpfile	mtd-utils/nanddump.c	/^char    *dumpfile;		\/\/ dump file name$/;"	v
dumpfile	mtd-utils/nanddump_vfat.c	/^char    *dumpfile;		\/\/ dump file name$/;"	v
e	ubi/wl.c	/^	struct ubi_wl_entry *e;$/;"	m	struct:ubi_wl_prot_entry	typeref:struct:ubi_wl_prot_entry::ubi_wl_entry	file:
e	ubi/wl.c	/^	struct ubi_wl_entry *e;$/;"	m	struct:ubi_work	typeref:struct:ubi_work::ubi_wl_entry	file:
e_id	mtd-utils/include/mtd/jffs2-user.h	/^	jint32_t	e_id;$/;"	m	struct:jffs2_acl_entry
e_id	mtd-utils/include/mtd/jffs2-user.h	/^	uint32_t		e_id;$/;"	m	struct:posix_acl_xattr_entry
e_perm	mtd-utils/include/mtd/jffs2-user.h	/^	jint16_t	e_perm;$/;"	m	struct:jffs2_acl_entry
e_perm	mtd-utils/include/mtd/jffs2-user.h	/^	jint16_t	e_perm;$/;"	m	struct:jffs2_acl_entry_short
e_perm	mtd-utils/include/mtd/jffs2-user.h	/^	uint16_t		e_perm;$/;"	m	struct:posix_acl_xattr_entry
e_tag	mtd-utils/include/mtd/jffs2-user.h	/^	jint16_t	e_tag;$/;"	m	struct:jffs2_acl_entry
e_tag	mtd-utils/include/mtd/jffs2-user.h	/^	jint16_t	e_tag;$/;"	m	struct:jffs2_acl_entry_short
e_tag	mtd-utils/include/mtd/jffs2-user.h	/^	uint16_t		e_tag;$/;"	m	struct:posix_acl_xattr_entry
eb_chain_destroy	mtd-utils/ubi-utils/src/eb_chain.c	/^eb_chain_destroy(struct eb_info **head)$/;"	f
eb_chain_insert	mtd-utils/ubi-utils/src/eb_chain.c	/^eb_chain_insert(struct eb_info **head, struct eb_info *new)$/;"	f
eb_chain_position	mtd-utils/ubi-utils/src/eb_chain.c	/^eb_chain_position(struct eb_info **head, uint32_t vol_id, uint32_t *lnum,$/;"	f
eb_chain_print	mtd-utils/ubi-utils/src/eb_chain.c	/^eb_chain_print(FILE* stream, struct eb_info *head)$/;"	f
eb_cnt	mtd-utils/ubi-utils/new-utils/include/libmtd.h	/^	int eb_cnt;$/;"	m	struct:mtd_info
eb_info	mtd-utils/ubi-utils/src/unubi_analyze.h	/^struct eb_info {$/;"	s
eb_size	mtd-utils/ubi-utils/inc/libubi.h	/^	int eb_size;$/;"	m	struct:ubi_dev_info
eb_size	mtd-utils/ubi-utils/inc/libubi.h	/^	int eb_size;$/;"	m	struct:ubi_vol_info
eb_size	mtd-utils/ubi-utils/new-utils/include/libmtd.h	/^	int eb_size;$/;"	m	struct:mtd_info
eb_size	mtd-utils/ubi-utils/src/libubigen.c	/^	size_t eb_size;		\/* Physical EB size in bytes *\/$/;"	m	struct:ubi_info	file:
eb_size	mtd-utils/ubi-utils/src/reader.h	/^	uint32_t eb_size;$/;"	m	struct:pdd_data
eb_size	mtd-utils/ubi-utils/src/ubigen.c	/^	uint32_t eb_size;$/;"	m	struct:myargs	file:
eb_split	mtd-utils/ubi-utils/src/unubi.c	/^	int eb_split;$/;"	m	struct:args	file:
eb_top	mtd-utils/ubi-utils/src/unubi_analyze.h	/^	fpos_t eb_top;$/;"	m	struct:eb_info
eba_tbl	ubi/ubi.h	/^	int *eba_tbl;$/;"	m	struct:ubi_volume
ebony_large_map	maps/ebony.c	/^static struct map_info ebony_large_map = {$/;"	v	typeref:struct:map_info	file:
ebony_large_partitions	maps/ebony.c	/^static struct mtd_partition ebony_large_partitions[] = {$/;"	v	typeref:struct:mtd_partition	file:
ebony_small_map	maps/ebony.c	/^static struct map_info ebony_small_map = {$/;"	v	typeref:struct:map_info	file:
ebony_small_partitions	maps/ebony.c	/^static struct mtd_partition ebony_small_partitions[] = {$/;"	v	typeref:struct:mtd_partition	file:
ec	mtd-utils/include/mtd/ubi-header.h	/^	uint64_t ec; \/* Warning: the current limit is 31-bit anyway! *\/$/;"	m	struct:ubi_ec_hdr
ec	mtd-utils/ubi-utils/new-utils/include/libscan.h	/^	uint32_t *ec;$/;"	m	struct:ubi_scan_info
ec	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	/^	long long ec;$/;"	m	struct:args	file:
ec	mtd-utils/ubi-utils/new-utils/src/ubinize.c	/^	int ec;$/;"	m	struct:args	file:
ec	mtd-utils/ubi-utils/src/libubigen.c	/^	struct ubi_ec_hdr* ec;	\/* Erase count header *\/$/;"	m	struct:ubi_info	typeref:struct:ubi_info::ubi_ec_hdr	file:
ec	mtd-utils/ubi-utils/src/ubigen.c	/^	uint64_t ec;$/;"	m	struct:myargs	file:
ec	mtd-utils/ubi-utils/src/unubi_analyze.h	/^	struct ubi_ec_hdr ec;$/;"	m	struct:eb_info	typeref:struct:eb_info::ubi_ec_hdr
ec	ubi/scan.h	/^	int ec;$/;"	m	struct:ubi_scan_leb
ec	ubi/ubi-media.h	/^	__be64  ec; \/* Warning: the current limit is 31-bit anyway! *\/$/;"	m	struct:ubi_ec_hdr
ec	ubi/ubi.h	/^	int ec;$/;"	m	struct:ubi_wl_entry
ec_count	ubi/scan.h	/^	int ec_count;$/;"	m	struct:ubi_scan_info
ec_crc_ok	mtd-utils/ubi-utils/src/unubi_analyze.h	/^	int ec_crc_ok;$/;"	m	struct:eb_info
ec_hdr_alsize	ubi/ubi.h	/^	int ec_hdr_alsize;$/;"	m	struct:ubi_device
ec_sum	ubi/scan.h	/^	uint64_t ec_sum;$/;"	m	struct:ubi_scan_info
eccbytes	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t eccbytes;$/;"	m	struct:nand_ecclayout
eccbytes	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t eccbytes;$/;"	m	struct:nand_oobinfo
eccpos	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t eccpos[104];	\/* more fields(13*8) are required for $/;"	m	struct:nand_oobinfo
eccpos	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t eccpos[128];$/;"	m	struct:nand_ecclayout
eccsize	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t eccsize;$/;"	m	struct:mtd_info_user
ecctype	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t ecctype;$/;"	m	struct:mtd_info_user
ech	ubi/scan.c	/^static struct ubi_ec_hdr *ech;$/;"	v	typeref:struct:ubi_ec_hdr	file:
edb7312nor_map	maps/edb7312.c	/^struct map_info edb7312nor_map = {$/;"	v	typeref:struct:map_info
empty_cnt	mtd-utils/ubi-utils/new-utils/include/libscan.h	/^	int empty_cnt;$/;"	m	struct:ubi_scan_info
empty_read_syndrome	nand/diskonchip.c	/^static u_char empty_read_syndrome[6] = { 0x26, 0xff, 0x6d, 0x47, 0x73, 0x7a };$/;"	v	file:
empty_vtbl_record	ubi/vtbl.c	/^static struct ubi_vtbl_record empty_vtbl_record;$/;"	v	typeref:struct:ubi_vtbl_record	file:
empty_write_ecc	nand/diskonchip.c	/^static u_char empty_write_ecc[6] = { 0x4b, 0x00, 0xe2, 0x0e, 0x93, 0xf7 };$/;"	v	file:
enable_xattr	mtd-utils/mkfs.jffs2.c	/^static uint32_t enable_xattr = 0;$/;"	v	file:
enc_matrix	mtd-utils/fec.c	/^    gf *enc_matrix ;$/;"	m	struct:fec_parms	file:
end	devices/slram.c	/^	u_char *end;$/;"	m	struct:slram_priv	file:
endian	mtd-utils/jffs-dump.c	/^int endian = ENDIAN_HOST;$/;"	v
ensure_wear_leveling	ubi/wl.c	/^static int ensure_wear_leveling(struct ubi_device *ubi)$/;"	f	file:
entries	mtd-utils/ubi-utils/src/hashmap.c	/^	size_t entries;     \/* current #entries *\/$/;"	m	struct:hashmap	file:
entry	mtd-utils/tests/fs-tests/integrity/integck.c	/^	} entry;$/;"	m	struct:dir_entry_info	typeref:union:dir_entry_info::entry_	file:
entry_	mtd-utils/tests/fs-tests/integrity/integck.c	/^	union entry_$/;"	u	struct:dir_entry_info	file:
entry_point	redboot.c	/^    uint32_t	  entry_point;   \/\/ Execution entry point$/;"	m	struct:fis_image_desc	file:
env_in	mtd-utils/ubi-utils/src/pddcustomize.c	/^	bootenv_t env_in;$/;"	m	struct:myargs	file:
ep7312_cleanup	nand/edb7312.c	/^module_exit(ep7312_cleanup);$/;"	v
ep7312_cleanup	nand/edb7312.c	/^static void __exit ep7312_cleanup(void)$/;"	f	file:
ep7312_device_ready	nand/edb7312.c	/^static int ep7312_device_ready(struct mtd_info *mtd)$/;"	f	file:
ep7312_fio_pbase	nand/edb7312.c	/^static unsigned long ep7312_fio_pbase = EP7312_FIO_PBASE;$/;"	v	file:
ep7312_hwcontrol	nand/edb7312.c	/^static void ep7312_hwcontrol(struct mtd_info *mtd, int cmd, unsigned int ctrl)$/;"	f	file:
ep7312_init	nand/edb7312.c	/^module_init(ep7312_init);$/;"	v
ep7312_init	nand/edb7312.c	/^static int __init ep7312_init(void)$/;"	f	file:
ep7312_mtd	nand/edb7312.c	/^static struct mtd_info *ep7312_mtd = NULL;$/;"	v	typeref:struct:mtd_info	file:
ep7312_pxddr	nand/edb7312.c	/^static void __iomem *ep7312_pxddr = (void __iomem *)EP7312_PXDDR;$/;"	v	file:
ep7312_pxdr	nand/edb7312.c	/^static void __iomem *ep7312_pxdr = (void __iomem *)EP7312_PXDR;$/;"	v	file:
eprom_mtd	maps/solutionengine.c	/^static struct mtd_info *eprom_mtd;$/;"	v	typeref:struct:mtd_info	file:
eras_dec_rs	devices/docecc.c	/^eras_dec_rs(dtype Alpha_to[NN + 1], dtype Index_of[NN + 1],$/;"	f	file:
erase	mtd-utils/docfdisk.c	/^erase_info_t erase;$/;"	v
erase	mtd-utils/nftl_format.c	/^erase_info_t erase;$/;"	v
erase	ubi/scan.h	/^	struct list_head erase;$/;"	m	struct:ubi_scan_info	typeref:struct:ubi_scan_info::list_head
erase_and_write	mtd-utils/nandtest.c	/^int erase_and_write(loff_mtd_t ofs, unsigned char *data, unsigned char *rbuf)$/;"	f
erase_block	devices/lart.c	/^static inline int erase_block (__u32 offset)$/;"	f	file:
erase_block	mtd-utils/nftl_format.c	/^static unsigned char erase_block(unsigned long block)$/;"	f	file:
erase_block	mtd-utils/tests/ubi-tests/integ.c	/^	struct erase_block_info *erase_block;$/;"	m	struct:write_info	typeref:struct:write_info::erase_block_info	file:
erase_block	mtdblock-jz.c	/^static int erase_block (struct mtd_info *mtd, int phys_block )$/;"	f	file:
erase_block	rfd_ftl.c	/^static int erase_block(struct partition *part, int block)$/;"	f	file:
erase_block_info	mtd-utils/tests/ubi-tests/integ.c	/^struct erase_block_info$/;"	s	file:
erase_block_no	nand/nandsim.c	/^	unsigned int erase_block_no;$/;"	m	struct:weak_block	file:
erase_block_size	mtd-utils/mkfs.jffs2.c	/^static int erase_block_size = 65536;$/;"	v	file:
erase_block_size	mtd-utils/sumtool.c	/^static int erase_block_size = 65536;$/;"	v	file:
erase_block_wear	nand/nandsim.c	/^static unsigned long *erase_block_wear = NULL;$/;"	v	file:
erase_blocks	mtd-utils/tests/ubi-tests/integ.c	/^	struct erase_block_info *erase_blocks;$/;"	m	struct:volume_info	typeref:struct:volume_info::erase_block_info	file:
erase_callback	mtdblock-jz.c	/^static void erase_callback(struct erase_info *done)$/;"	f	file:
erase_callback	mtdblock.c	/^static void erase_callback(struct erase_info *done)$/;"	f	file:
erase_callback	rfd_ftl.c	/^static void erase_callback(struct erase_info *erase)$/;"	f	file:
erase_callback	ubi/io.c	/^static void erase_callback(struct erase_info *ei)$/;"	f	file:
erase_delay	nand/nandsim.c	/^static uint erase_delay    = CONFIG_NANDSIM_ERASE_DELAY;$/;"	v	file:
erase_erase_block	mtd-utils/tests/ubi-tests/integ.c	/^static void erase_erase_block(struct erase_block_info *erase_block, int fd)$/;"	f	file:
erase_error	nand/nandsim.c	/^static int erase_error(unsigned int erase_block_no)$/;"	f	file:
erase_flash	mtd-utils/mtd_debug.c	/^int erase_flash (int fd,u_int32_t offset,u_int32_t bytes)$/;"	f
erase_info_t	mtd-utils/include/mtd/mtd-user.h	/^typedef struct erase_info_user erase_info_t;$/;"	t	typeref:struct:erase_info_user
erase_info_user	mtd-utils/include/mtd/mtd-abi.h	/^struct erase_info_user {$/;"	s
erase_mtd_region	mtd-utils/ubi-utils/src/libpfiflash.c	/^erase_mtd_region(FILE* file_p, int start, int length)$/;"	f	file:
erase_opcode	devices/m25p80.c	/^	u8			erase_opcode;$/;"	m	struct:m25p	file:
erase_regions	devices/lart.c	/^static struct mtd_erase_region_info erase_regions[] = {$/;"	v	typeref:struct:mtd_erase_region_info	file:
erase_sector	devices/m25p80.c	/^static int erase_sector(struct m25p *flash, u32 offset)$/;"	f	file:
erase_sector	nand/nandsim.c	/^static void erase_sector(struct nandsim *ns)$/;"	f	file:
erase_size	devices/mtdram.c	/^static unsigned long erase_size = CONFIG_MTDRAM_ERASE_SIZE;$/;"	v	file:
erase_size	ssfdc.c	/^	int erase_size;			\/* phys_block_size *\/$/;"	m	struct:ssfdcr_record	file:
erase_unit_header_t	mtd-utils/include/mtd/ftl-user.h	/^typedef struct erase_unit_header_t {$/;"	s
erase_unit_header_t	mtd-utils/include/mtd/ftl-user.h	/^} erase_unit_header_t;$/;"	t	typeref:struct:erase_unit_header_t
erase_unmapped_ubi_volumes	mtd-utils/ubi-utils/src/libpfiflash.c	/^erase_unmapped_ubi_volumes(int devno, list_t pfi_ubis,$/;"	f	file:
erase_worker	ubi/wl.c	/^static int erase_worker(struct ubi_device *ubi, struct ubi_work *wl_wrk,$/;"	f	file:
erase_write	mtdblock.c	/^static int erase_write (struct mtd_info *mtd, unsigned long pos,$/;"	f	file:
erase_xfer	ftl.c	/^static int erase_xfer(partition_t *part,$/;"	f	file:
eraseblock	mtd-utils/recv_image.c	/^struct eraseblock {$/;"	s	file:
erased	mtd-utils/tests/ubi-tests/integ.c	/^	int erased; \/* This erased block is currently erased *\/$/;"	m	struct:erase_block_info	file:
erases	rfd_ftl.c	/^	int erases;$/;"	m	struct:block	file:
erases_done	nand/nandsim.c	/^	unsigned int erases_done;$/;"	m	struct:weak_block	file:
erasesize	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t erasesize;		\/* For this region *\/$/;"	m	struct:region_info_user
erasesize	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t erasesize;$/;"	m	struct:mtd_info_user
err	maps/pcmciamtd.c	45;"	d	file:
err_buf	mtd-utils/ubi-utils/src/pfi2bin.c	/^static char err_buf[ERR_BUF_SIZE];$/;"	v	file:
err_doit	mtd-utils/ubi-utils/src/error.c	/^err_doit(int errnoflag, int level __attribute__((unused)),$/;"	f	file:
err_dump	mtd-utils/ubi-utils/src/error.h	44;"	d
err_msg	mtd-utils/tests/ubi-tests/common.h	38;"	d
err_msg	mtd-utils/ubi-utils/src/error.h	65;"	d
err_quit	mtd-utils/ubi-utils/src/error.h	49;"	d
err_ret	mtd-utils/ubi-utils/src/error.h	55;"	d
err_sys	mtd-utils/ubi-utils/src/error.h	60;"	d
erratum44_workaround	maps/ixp2000.c	/^static int erratum44_workaround = 0;$/;"	v	file:
errmsg	mtd-utils/ubi-utils/new-utils/src/common.h	51;"	d
error_exit	mtd-utils/tests/ubi-tests/integ.c	/^static void error_exit(const char *msg)$/;"	f	file:
error_initlog	mtd-utils/ubi-utils/src/error.c	/^error_initlog(const char *logfile)$/;"	f
error_msg	mtd-utils/mkfs.jffs2.c	/^static void error_msg(const char *s, ...)$/;"	f	file:
error_msg_and_die	mtd-utils/mkfs.jffs2.c	/^static void error_msg_and_die(const char *s, ...)$/;"	f	file:
error_msg_and_die	mtd-utils/sumtool.c	/^static void error_msg_and_die(const char *s, ...)$/;"	f	file:
errors	rfd_ftl.c	/^	int errors;$/;"	m	struct:partition	file:
errs	nand/jz4750_nand.c	/^static u32 *errs;$/;"	v	file:
esb2rom_cleanup	maps/esb2rom.c	/^static void esb2rom_cleanup(struct esb2rom_window *window)$/;"	f	file:
esb2rom_init_one	maps/esb2rom.c	/^static int __devinit esb2rom_init_one(struct pci_dev *pdev,$/;"	f	file:
esb2rom_map_info	maps/esb2rom.c	/^struct esb2rom_map_info {$/;"	s	file:
esb2rom_remove_one	maps/esb2rom.c	/^static void __devexit esb2rom_remove_one (struct pci_dev *pdev)$/;"	f	file:
esb2rom_window	maps/esb2rom.c	/^static struct esb2rom_window esb2rom_window = {$/;"	v	typeref:struct:esb2rom_window	file:
esb2rom_window	maps/esb2rom.c	/^struct esb2rom_window {$/;"	s	file:
eun_info_t	ftl.c	/^    struct eun_info_t {$/;"	s	struct:partition_t	file:
excite_nand_control	nand/excite_nandflash.c	/^static void excite_nand_control(struct mtd_info *mtd, int cmd,$/;"	f	file:
excite_nand_devready	nand/excite_nandflash.c	/^static int excite_nand_devready(struct mtd_info *mtd)$/;"	f	file:
excite_nand_driver	nand/excite_nandflash.c	/^static struct device_driver excite_nand_driver = {$/;"	v	typeref:struct:device_driver	file:
excite_nand_drvdata	nand/excite_nandflash.c	/^struct excite_nand_drvdata {$/;"	s	file:
excite_nand_exit	nand/excite_nandflash.c	/^module_exit(excite_nand_exit);$/;"	v
excite_nand_exit	nand/excite_nandflash.c	/^static void __exit excite_nand_exit(void)$/;"	f	file:
excite_nand_get_resource	nand/excite_nandflash.c	/^excite_nand_get_resource(struct platform_device *d, unsigned long flags,$/;"	f	file:
excite_nand_init	nand/excite_nandflash.c	/^module_init(excite_nand_init);$/;"	v
excite_nand_init	nand/excite_nandflash.c	/^static int __init excite_nand_init(void)$/;"	f	file:
excite_nand_map_regs	nand/excite_nandflash.c	/^excite_nand_map_regs(struct platform_device *d, const char *basename)$/;"	f	file:
excite_nand_probe	nand/excite_nandflash.c	/^static int __init excite_nand_probe(struct device *dev)$/;"	f	file:
excite_nand_remove	nand/excite_nandflash.c	/^static int __exit excite_nand_remove(struct device *dev)$/;"	f	file:
exclusive	ubi/ubi.h	/^	int exclusive;$/;"	m	struct:ubi_volume
exe_name	mtd-utils/flash_eraseall.c	/^static const char *exe_name;$/;"	v	file:
exit	maps/pci.c	/^	void (*exit)(struct pci_dev *dev, struct map_pci_info *map);$/;"	m	struct:map_pci_info	file:
exit	maps/pci.c	/^	void (*exit)(struct pci_dev *dev, struct map_pci_info *map);$/;"	m	struct:mtd_pci_info	file:
exit_failure	mtd-utils/ubi-utils/scripts/jffs2_test.sh	/^exit_failure ()$/;"	f
exit_failure	mtd-utils/ubi-utils/scripts/run_all.sh	/^exit_failure ()$/;"	f
exit_failure	mtd-utils/ubi-utils/scripts/ubi_jffs2_test.sh	/^exit_failure ()$/;"	f
exit_failure	mtd-utils/ubi-utils/scripts/ubi_test.sh	/^exit_failure ()$/;"	f
exit_failure	mtd-utils/ubi-utils/scripts/ubi_tools_test.sh	/^exit_failure ()$/;"	f
exit_pcmciamtd	maps/pcmciamtd.c	/^module_exit(exit_pcmciamtd);$/;"	v
exit_pcmciamtd	maps/pcmciamtd.c	/^static void __exit exit_pcmciamtd(void)$/;"	f	file:
exit_success	mtd-utils/ubi-utils/scripts/jffs2_test.sh	/^exit_success ()$/;"	f
exit_success	mtd-utils/ubi-utils/scripts/run_all.sh	/^exit_success ()$/;"	f
exit_success	mtd-utils/ubi-utils/scripts/ubi_jffs2_test.sh	/^exit_success ()$/;"	f
exit_success	mtd-utils/ubi-utils/scripts/ubi_test.sh	/^exit_success ()$/;"	f
exit_success	mtd-utils/ubi-utils/scripts/ubi_tools_test.sh	/^exit_success ()$/;"	f
expand_starts	mtd-utils/ubi-utils/perl/mkpfi	/^sub expand_starts($$$) {$/;"	s
extract_data	mtd-utils/ubi-utils/src/unubi.c	/^extract_data(FILE* fpin, size_t len, const char *path)$/;"	f	file:
extract_itable	mtd-utils/ubi-utils/src/unubi.c	/^extract_itable(FILE *fpin, struct eb_info *cur, size_t bsize, size_t num,$/;"	f	file:
extract_pair	mtd-utils/ubi-utils/src/bootenv.c	/^extract_pair(const char *str, bootenv_t env)$/;"	f	file:
extract_pair	mtd-utils/ubi-utils/src/pddcustomize.c	/^extract_pair(bootenv_t env, const char* str)$/;"	f	file:
f_in	mtd-utils/ubi-utils/new-utils/src/ubinize.c	/^	const char *f_in;$/;"	m	struct:args	file:
f_in_pdd	mtd-utils/ubi-utils/src/pfi2bin.c	/^	const char *f_in_pdd;$/;"	m	struct:myargs	file:
f_in_pfi	mtd-utils/ubi-utils/src/pfi2bin.c	/^	const char *f_in_pfi;$/;"	m	struct:myargs	file:
f_out	mtd-utils/ubi-utils/new-utils/src/ubinize.c	/^	const char *f_out;$/;"	m	struct:args	file:
f_out	mtd-utils/ubi-utils/src/pfi2bin.c	/^	const char *f_out;$/;"	m	struct:myargs	file:
failed	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t failed;$/;"	m	struct:mtd_ecc_stats
failed	mtd-utils/tests/ubi-tests/common.h	41;"	d
failed	mtd-utils/ubi-utils/scripts/jffs2_test.sh	/^failed ()$/;"	f
failed	mtd-utils/ubi-utils/scripts/ubi_jffs2_test.sh	/^failed ()$/;"	f
failed	mtd-utils/ubi-utils/scripts/ubi_test.sh	/^failed () $/;"	f
failed	mtd-utils/ubi-utils/scripts/ubi_tools_test.sh	/^failed () $/;"	f
fake_times	mtd-utils/mkfs.jffs2.c	/^static int fake_times = 0;$/;"	v	file:
false	mtd-utils/flashcp.c	46;"	d	file:
fcnt	maps/pmcmsp-flash.c	/^static int fcnt;$/;"	v	file:
fd	mtd-utils/docfdisk.c	/^int fd;$/;"	v
fd	mtd-utils/nandtest.c	/^int fd;$/;"	v
fd	mtd-utils/nftl_format.c	/^int fd;$/;"	v
fd	mtd-utils/nftldump.c	/^static int fd, ofd = -1;;$/;"	v	file:
fd	mtd-utils/tests/fs-tests/integrity/integck.c	/^	int fd;$/;"	m	struct:fd_info	file:
fd	mtd-utils/tests/ubi-tests/integ.c	/^	int fd;$/;"	m	struct:volume_fd	file:
fd	mtd-utils/tests/ubi-tests/io_read.c	/^static int fd;$/;"	v	file:
fd	mtd-utils/ubi-utils/new-utils/include/libmtd.h	/^	int fd;$/;"	m	struct:mtd_info
fd_info	mtd-utils/tests/fs-tests/integrity/integck.c	/^struct fd_info \/* We keep a number of files open *\/$/;"	s	file:
fd_new	mtd-utils/tests/fs-tests/integrity/integck.c	/^static struct fd_info *fd_new(struct file_info *file, int fd)$/;"	f	file:
fdi	mtd-utils/tests/fs-tests/integrity/integck.c	/^	struct fd_info *fdi;$/;"	m	struct:open_file_info	typeref:struct:open_file_info::fd_info	file:
fds	mtd-utils/tests/fs-tests/integrity/integck.c	/^	struct fd_info *fds; \/* All open file descriptors for this file *\/$/;"	m	struct:file_info	typeref:struct:file_info::fd_info	file:
fds	mtd-utils/tests/ubi-tests/integ.c	/^	struct volume_fd *fds;$/;"	m	struct:volume_info	typeref:struct:volume_info::volume_fd	file:
fec_decode	mtd-utils/fec.c	/^fec_decode(struct fec_parms *code, gf *pkt[], int index[], int sz)$/;"	f
fec_encode	mtd-utils/fec.c	/^fec_encode(struct fec_parms *code, gf *src[], gf *fec, int index, int sz)$/;"	f
fec_encode_linear	mtd-utils/fec.c	/^void fec_encode_linear(struct fec_parms *code, gf *src, gf *fec, int index, int sz)$/;"	f
fec_free	mtd-utils/fec.c	/^fec_free(struct fec_parms *p)$/;"	f
fec_initialized	mtd-utils/fec.c	/^static int fec_initialized = 0 ;$/;"	v	file:
fec_new	mtd-utils/fec.c	/^fec_new(int k, int n)$/;"	f
fec_parms	mtd-utils/fec.c	/^struct fec_parms {$/;"	s	file:
ffbuf	mtd-utils/mkfs.jffs2.c	/^static unsigned char ffbuf[16] =$/;"	v	file:
ffbuf	mtd-utils/sumtool.c	/^static unsigned char ffbuf[16] = {$/;"	v	file:
ffchars	onenand/onenand_base.c	/^static const unsigned char ffchars[] = {$/;"	v	file:
ffchars	onenand/onenand_sim.c	/^static unsigned char *ffchars;$/;"	v	file:
ffs_ll	nand/nand_base.c	/^static inline int ffs_ll(u64 word)$/;"	f	file:
fil_fd	mtd-utils/flashcp.c	/^static int dev_fd = -1,fil_fd = -1;$/;"	v	file:
file	mtd-utils/tests/fs-tests/integrity/integck.c	/^		struct file_info *file;$/;"	m	union:dir_entry_info::entry_	typeref:struct:dir_entry_info::entry_::file_info	file:
file	mtd-utils/tests/fs-tests/integrity/integck.c	/^	struct file_info *file;$/;"	m	struct:fd_info	typeref:struct:fd_info::file_info	file:
file_buffer	mtd-utils/mkfs.jffs2.c	/^static uint8_t *file_buffer = NULL;		\/* file buffer contains the actual erase block*\/$/;"	v	file:
file_buffer	mtd-utils/sumtool.c	/^static uint8_t *file_buffer = NULL;		\/* file buffer contains the actual erase block*\/$/;"	v	file:
file_check	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void file_check(struct file_info *file, int fd)$/;"	f	file:
file_check_data	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void file_check_data(	struct file_info *file,$/;"	f	file:
file_check_hole	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void file_check_hole(	struct file_info *file,$/;"	f	file:
file_cksum	redboot.c	/^    uint32_t	  file_cksum;    \/\/ Checksum over image data$/;"	m	struct:fis_image_desc	file:
file_close	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void file_close(struct fd_info *fdi)$/;"	f	file:
file_delete	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void file_delete(struct file_info *file)$/;"	f	file:
file_ftruncate	mtd-utils/tests/fs-tests/integrity/integck.c	/^static int file_ftruncate(struct file_info *file, int fd, off_t new_length)$/;"	f	file:
file_in	mtd-utils/ubi-utils/src/pddcustomize.c	/^	const char* file_in;$/;"	m	struct:myargs	file:
file_info	mtd-utils/tests/fs-tests/integrity/integck.c	/^struct file_info \/* Each file has one of these *\/$/;"	s	file:
file_info_display	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void file_info_display(struct file_info *file)$/;"	f	file:
file_new	mtd-utils/tests/fs-tests/integrity/integck.c	/^static struct file_info *file_new(struct dir_info *parent, const char *name)$/;"	f	file:
file_ofs	mtd-utils/sumtool.c	/^static unsigned int file_ofs = 0;		\/* position in the buffer *\/$/;"	v	file:
file_open	mtd-utils/tests/fs-tests/integrity/integck.c	/^static struct fd_info *file_open(struct file_info *file)$/;"	f	file:
file_out	mtd-utils/ubi-utils/src/pddcustomize.c	/^	const char* file_out;$/;"	m	struct:myargs	file:
file_out_data	mtd-utils/ubi-utils/src/bin2nand.c	/^	char *file_out_data; \/* Either: Data and OOB interleaved$/;"	m	struct:myargs	file:
file_out_oob	mtd-utils/ubi-utils/src/bin2nand.c	/^	char *file_out_oob; \/* OOB Data only. *\/$/;"	m	struct:myargs	file:
file_rewrite_data	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void file_rewrite_data(int fd, struct write_info *w, char *buf)$/;"	f	file:
file_to_flash	mtd-utils/mtd_debug.c	/^int file_to_flash (int fd,u_int32_t offset,u_int32_t len,const char *filename)$/;"	f
file_truncate	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void file_truncate(struct file_info *file, int fd)$/;"	f	file:
file_truncate_file	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void file_truncate_file(struct file_info *file)$/;"	f	file:
file_truncate_info	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void file_truncate_info(struct file_info *file, size_t new_length)$/;"	f	file:
file_write	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void file_write(struct file_info *file, int fd)$/;"	f	file:
file_write_data	mtd-utils/tests/fs-tests/integrity/integck.c	/^static size_t file_write_data(	struct file_info *file,$/;"	f	file:
file_write_file	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void file_write_file(struct file_info *file)$/;"	f	file:
file_write_info	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void file_write_info(struct file_info *file,$/;"	f	file:
files	mtd-utils/mkfs.jffs2.c	/^	struct filesystem_entry *files;	\/* Only relevant to directories *\/$/;"	m	struct:filesystem_entry	typeref:struct:filesystem_entry::filesystem_entry	file:
files_created	mtd-utils/tests/fs-tests/stress/atoms/rndrm99.c	/^uint32_t files_created = 0;$/;"	v
files_removed	mtd-utils/tests/fs-tests/stress/atoms/rndrm99.c	/^uint32_t files_removed = 0;$/;"	v
filestress00	mtd-utils/tests/fs-tests/stress/atoms/fwrite00.c	/^void filestress00(void)$/;"	f
filestress00_get_description	mtd-utils/tests/fs-tests/stress/atoms/fwrite00.c	/^const char *filestress00_get_description(void)$/;"	f
filestress00_get_title	mtd-utils/tests/fs-tests/stress/atoms/fwrite00.c	/^const char *filestress00_get_title(void)$/;"	f
filesystem_entry	mtd-utils/mkfs.jffs2.c	/^struct filesystem_entry {$/;"	s	file:
fill_buffer	mtd-utils/ubi-utils/src/libubimirror.c	/^static ssize_t fill_buffer(int fd, unsigned char *buf, ssize_t len)$/;"	f	file:
fill_data_buffer_from_file	mtd-utils/ubi-utils/src/libubigen.c	/^fill_data_buffer_from_file(ubi_info_t u, size_t* read)$/;"	f	file:
fill_file	mtd-utils/tests/fs-tests/stress/atoms/rndrm99.c	/^uint64_t fill_file(int fd, uint64_t size)$/;"	f
fill_output_buffer	mtd-utils/ubi-utils/src/bootenv.c	/^fill_output_buffer(bootenv_t env, char *buf, size_t buf_size_max ubi_unused,$/;"	f	file:
find_boot_record	inftlmount.c	/^static int find_boot_record(struct INFTLrecord *inftl)$/;"	f	file:
find_boot_record	nftlmount.c	/^static int find_boot_record(struct NFTLrecord *nftl)$/;"	f	file:
find_dev_num	mtd-utils/ubi-utils/src/libubi.c	/^static int find_dev_num(struct libubi *lib, const char *node)$/;"	f	file:
find_dev_num_vol	mtd-utils/ubi-utils/src/libubi.c	/^static int find_dev_num_vol(struct libubi *lib, const char *node)$/;"	f	file:
find_filesystem_entry	mtd-utils/mkfs.jffs2.c	/^static struct filesystem_entry *find_filesystem_entry($/;"	f	file:
find_free	ftl.c	/^static u_int32_t find_free(partition_t *part)$/;"	f	file:
find_free_block	rfd_ftl.c	/^static int find_free_block(struct partition *part)$/;"	f	file:
find_free_sector	rfd_ftl.c	/^static int find_free_sector(const struct partition *part, const struct block *block)$/;"	f	file:
find_hardlink	mtd-utils/mkfs.jffs2.c	/^uint32_t find_hardlink(struct filesystem_entry *e)$/;"	f
find_key_by_name	mtd-utils/ubi-utils/src/pfi.c	/^find_key_by_name (const char *name)$/;"	f	file:
find_media_headers	mtd-utils/nftldump.c	/^static unsigned int find_media_headers(void)$/;"	f	file:
find_media_headers	nand/diskonchip.c	/^static int __init find_media_headers(struct mtd_info *mtd, u_char *buf, const char *id, int findmirror)$/;"	f	file:
find_next_position	mtdoops.c	/^static int find_next_position(struct mtdoops_context *cxt)$/;"	f	file:
find_operation	nand/nandsim.c	/^static int find_operation(struct nandsim *ns, uint32_t flag)$/;"	f	file:
find_raw_inode	mtd-utils/jffs2reader.c	/^struct jffs2_raw_inode *find_raw_inode(char *o, size_t size, uint32_t ino)$/;"	f
find_vol_num	mtd-utils/ubi-utils/src/libubi.c	/^static int find_vol_num(struct libubi *lib, int dev_num, const char *node)$/;"	f	file:
find_wl_entry	ubi/wl.c	/^static struct ubi_wl_entry *find_wl_entry(struct rb_root *root, int max)$/;"	f	file:
find_writable_block	rfd_ftl.c	/^static int find_writable_block(struct partition *part, u_long *old_sector)$/;"	f	file:
find_xattr_entry	mtd-utils/mkfs.jffs2.c	/^static xattr_entry_t *find_xattr_entry(int xprefix, char *xname, char *xvalue, int value_len)$/;"	f	file:
finfo_uaddr	chips/jedec_probe.c	/^static inline __u8 finfo_uaddr(const struct amd_flash_info *finfo, int device_type)$/;"	f	file:
first	mtd-utils/tests/fs-tests/integrity/integck.c	/^	struct dir_entry_info *first;$/;"	m	struct:dir_info	typeref:struct:dir_info::dir_entry_info	file:
firstUnit	mtd-utils/include/mtd/inftl-user.h	/^	__u32 firstUnit;$/;"	m	struct:INFTLPartition
first_id_byte	nand/nandsim.c	/^static uint first_id_byte  = CONFIG_NANDSIM_FIRST_ID_BYTE;$/;"	v	file:
fis_image_desc	redboot.c	/^struct fis_image_desc {$/;"	s	file:
fis_list	redboot.c	/^struct fis_list {$/;"	s	file:
fix_sysfs_issue	mtd-utils/ubi-utils/scripts/ubi_jffs2_test.sh	/^fix_sysfs_issue ()$/;"	f
fix_sysfs_issue	mtd-utils/ubi-utils/scripts/ubi_test.sh	/^fix_sysfs_issue ()$/;"	f
fix_sysfs_issue	mtd-utils/ubi-utils/scripts/ubi_tools_test.sh	/^fix_sysfs_issue ()$/;"	f
fixup_amd_bootblock	chips/cfi_cmdset_0002.c	/^static void fixup_amd_bootblock(struct mtd_info *mtd, void* param)$/;"	f	file:
fixup_convert_atmel_pri	chips/cfi_cmdset_0002.c	/^static void fixup_convert_atmel_pri(struct mtd_info *mtd, void *param)$/;"	f	file:
fixup_intel_strataflash	chips/cfi_cmdset_0001.c	/^static void fixup_intel_strataflash(struct mtd_info *mtd, void* param)$/;"	f	file:
fixup_no_write_suspend	chips/cfi_cmdset_0001.c	/^static void fixup_no_write_suspend(struct mtd_info *mtd, void* param)$/;"	f	file:
fixup_pmc551	devices/pmc551.c	/^static u32 fixup_pmc551(struct pci_dev *dev)$/;"	f	file:
fixup_st_m28w320cb	chips/cfi_cmdset_0001.c	/^static void fixup_st_m28w320cb(struct mtd_info *mtd, void* param)$/;"	f	file:
fixup_st_m28w320ct	chips/cfi_cmdset_0001.c	/^static void fixup_st_m28w320ct(struct mtd_info *mtd, void* param)$/;"	f	file:
fixup_table	chips/cfi_cmdset_0001.c	/^static struct cfi_fixup fixup_table[] = {$/;"	v	typeref:struct:cfi_fixup	file:
fixup_table	chips/cfi_cmdset_0002.c	/^static struct cfi_fixup fixup_table[] = {$/;"	v	typeref:struct:cfi_fixup	file:
fixup_use_atmel_lock	chips/cfi_cmdset_0002.c	/^static void fixup_use_atmel_lock(struct mtd_info *mtd, void *param)$/;"	f	file:
fixup_use_erase_chip	chips/cfi_cmdset_0002.c	/^static void fixup_use_erase_chip(struct mtd_info *mtd, void *param)$/;"	f	file:
fixup_use_fwh_lock	chips/fwh_lock.h	/^static void fixup_use_fwh_lock(struct mtd_info *mtd, void *param)$/;"	f
fixup_use_point	chips/cfi_cmdset_0001.c	/^static void fixup_use_point(struct mtd_info *mtd, void *param)$/;"	f	file:
fixup_use_powerup_lock	chips/cfi_cmdset_0001.c	/^static void fixup_use_powerup_lock(struct mtd_info *mtd, void *param)$/;"	f	file:
fixup_use_secsi	chips/cfi_cmdset_0002.c	/^static void fixup_use_secsi(struct mtd_info *mtd, void *param)$/;"	f	file:
fixup_use_write_buffers	chips/cfi_cmdset_0001.c	/^static void fixup_use_write_buffers(struct mtd_info *mtd, void *param)$/;"	f	file:
fixup_use_write_buffers	chips/cfi_cmdset_0002.c	/^static void fixup_use_write_buffers(struct mtd_info *mtd, void *param)$/;"	f	file:
flagadm_map	maps/cfi_flagadm.c	/^struct map_info flagadm_map = {$/;"	v	typeref:struct:map_info
flagadm_parts	maps/cfi_flagadm.c	/^struct mtd_partition flagadm_parts[] = {$/;"	v	typeref:struct:mtd_partition
flags	devices/m25p80.c	/^	u16		flags;$/;"	m	struct:flash_info	file:
flags	mtd-utils/include/linux/jffs2.h	/^	jint16_t flags;	     \/* See JFFS2_INO_FLAG_* *\/$/;"	m	struct:jffs2_raw_inode
flags	mtd-utils/include/mtd/inftl-user.h	/^	__u32 flags;$/;"	m	struct:INFTLPartition
flags	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t flags;$/;"	m	struct:mtd_info_user
flags	mtd-utils/include/mtd/ubi-header.h	/^	uint8_t  flags;$/;"	m	struct:ubi_vtbl_record
flags	mtd-utils/ubi-utils/new-utils/include/libubigen.h	/^	uint8_t flags;$/;"	m	struct:ubigen_vol_info
flags	mtd-utils/ubi-utils/src/pfi.c	/^	uint32_t flags;$/;"	m	struct:key_descriptor	file:
flags	ubi/ubi-media.h	/^	__u8    flags;$/;"	m	struct:ubi_vtbl_record
flash	maps/ebony.c	/^static struct mtd_info *flash;$/;"	v	typeref:struct:mtd_info	file:
flash	maps/ocotea.c	/^static struct mtd_info *flash;$/;"	v	typeref:struct:mtd_info	file:
flash	maps/walnut.c	/^static struct mtd_info *flash;$/;"	v	typeref:struct:mtd_info	file:
flash	onenand/onenand_sim.c	/^	struct onenand_flash	flash;$/;"	m	struct:onenand_info	typeref:struct:onenand_info::onenand_flash	file:
flash_bank_setup	maps/ixp2000.c	/^static inline unsigned long flash_bank_setup(struct map_info *map, unsigned long ofs)$/;"	f	file:
flash_base	redboot.c	/^    uint32_t	  flash_base;    \/\/ Address within FLASH of image$/;"	m	struct:fis_image_desc	file:
flash_erase	devices/lart.c	/^static int flash_erase (struct mtd_info *mtd,struct erase_info *instr)$/;"	f	file:
flash_exit	onenand/onenand_sim.c	/^static void flash_exit(struct onenand_flash *flash)$/;"	f	file:
flash_image	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	/^static int flash_image(const struct mtd_info *mtd, const struct ubigen_info *ui,$/;"	f	file:
flash_info	devices/m25p80.c	/^struct flash_info {$/;"	s	file:
flash_init	onenand/onenand_sim.c	/^static int __init flash_init(struct onenand_flash *flash)$/;"	f	file:
flash_mtd	maps/cdb89712.c	/^static struct mtd_info *flash_mtd;$/;"	v	typeref:struct:mtd_info	file:
flash_mtd	maps/mpc1211.c	/^static struct mtd_info *flash_mtd;$/;"	v	typeref:struct:mtd_info	file:
flash_mtd	maps/omap-toto-flash.c	/^static struct mtd_info *flash_mtd;$/;"	v	typeref:struct:mtd_info	file:
flash_mtd	maps/solutionengine.c	/^static struct mtd_info *flash_mtd;$/;"	v	typeref:struct:mtd_info	file:
flash_offset	mtd-utils/recv_image.c	/^	uint32_t flash_offset;$/;"	m	struct:eraseblock	file:
flash_page_size	mtd-utils/ubi-utils/src/reader.h	/^	uint32_t flash_page_size;$/;"	m	struct:pdd_data
flash_probe	devices/lart.c	/^static int flash_probe (void)$/;"	f	file:
flash_read	devices/lart.c	/^static int flash_read (struct mtd_info *mtd,loff_t from,size_t len,size_t *retlen,u_char *buf)$/;"	f	file:
flash_read16	maps/ixp4xx.c	/^static inline u16 flash_read16(const void __iomem *addr)$/;"	f	file:
flash_read16	maps/ixp4xx.c	/^static inline u16 flash_read16(void __iomem *addr)$/;"	f	file:
flash_size	mtd-utils/ubi-utils/src/reader.h	/^	uint32_t flash_size;$/;"	m	struct:pdd_data
flash_size	ubi/ubi.h	/^	long long flash_size;$/;"	m	struct:ubi_device
flash_to_file	mtd-utils/mtd_debug.c	/^int flash_to_file (int fd,u_int32_t offset,size_t len,const char *filename)$/;"	f
flash_type	mtd-utils/ubi-utils/src/reader.h	/^	flash_type_t flash_type;$/;"	m	struct:pdd_data
flash_type_t	mtd-utils/ubi-utils/src/reader.h	/^typedef enum flash_type_t {$/;"	g
flash_type_t	mtd-utils/ubi-utils/src/reader.h	/^} flash_type_t;$/;"	t	typeref:enum:flash_type_t
flash_write	devices/lart.c	/^static int flash_write (struct mtd_info *mtd,loff_t to,size_t len,size_t *retlen,const u_char *buf)$/;"	f	file:
flash_write16	maps/ixp4xx.c	/^static inline void flash_write16(u16 d, void __iomem *addr)$/;"	f	file:
flashtype	maps/scx200_docflash.c	/^static char *flashtype = "cfi_probe";$/;"	v	file:
flashtype	mtd-utils/ubi-utils/scripts/Makefile	/^flashtype	?= nand$/;"	m
flush	ubi/ubiblk.h	/^	int (*flush)(struct ubi_blktrans_dev *dev);$/;"	m	struct:ubi_blktrans_ops
flush_buffer	mtd-utils/ubi-utils/src/libubimirror.c	/^static ssize_t flush_buffer(int fd, unsigned char *buf, ssize_t len)$/;"	f	file:
flush_buffers	mtd-utils/sumtool.c	/^void flush_buffers()$/;"	f
fold	mtd-utils/tests/fs-tests/lib/tests.c	/^static void fold(const char *text, int width)$/;"	f	file:
footer_struct	afs.c	/^struct footer_struct {$/;"	s	file:
force_size	maps/pcmciamtd.c	/^static int force_size;$/;"	v	file:
forcejffs2	mtd-utils/nandwrite.c	/^int	forcejffs2 = 0;$/;"	v
forcejffs2	mtd-utils/nandwrite_mlc.c	/^int	forcejffs2 = 0;$/;"	v
forcelegacy	mtd-utils/nandwrite.c	/^int	forcelegacy = 0;$/;"	v
forcelegacy	mtd-utils/nandwrite_mlc.c	/^int	forcelegacy = 0;$/;"	v
forceyaffs	mtd-utils/nandwrite.c	/^int	forceyaffs = 0;$/;"	v
forceyaffs	mtd-utils/nandwrite_mlc.c	/^int	forceyaffs = 0;$/;"	v
foreach	mtd-utils/ubi-utils/src/list.h	25;"	d
formalize_posix_acl	mtd-utils/mkfs.jffs2.c	/^static void formalize_posix_acl(void *xvalue, int *value_len)$/;"	f	file:
format	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	/^static int format(const struct mtd_info *mtd, const struct ubigen_info *ui,$/;"	f	file:
format_chain	inftlmount.c	/^static void format_chain(struct INFTLrecord *inftl, unsigned int first_block)$/;"	f	file:
format_chain	nftlmount.c	/^static void format_chain(struct NFTLrecord *nftl, unsigned int first_block)$/;"	f	file:
format_partition	mtd-utils/ftl_format.c	/^static int format_partition(int fd, int quiet, int interrogate,$/;"	f	file:
found_cleanmarkers	mtd-utils/sumtool.c	/^static int found_cleanmarkers = 0;		\/* cleanmarker found in input file *\/$/;"	v	file:
fourth_id_byte	nand/nandsim.c	/^static uint fourth_id_byte = CONFIG_NANDSIM_FOURTH_ID_BYTE;$/;"	v	file:
fp_in	mtd-utils/ubi-utils/src/bin2nand.c	/^	FILE* fp_in;$/;"	m	struct:myargs	file:
fp_in	mtd-utils/ubi-utils/src/libubigen.c	/^	FILE* fp_in;		\/* Input Stream *\/$/;"	m	struct:ubi_info	file:
fp_in	mtd-utils/ubi-utils/src/mkbootenv.c	/^	FILE* fp_in;$/;"	m	struct:myargs	file:
fp_in	mtd-utils/ubi-utils/src/pfiflash.c	/^	FILE* fp_in;$/;"	m	struct:myargs	file:
fp_in	mtd-utils/ubi-utils/src/ubigen.c	/^	FILE* fp_in;$/;"	m	struct:myargs	file:
fp_out	mtd-utils/ubi-utils/src/libubigen.c	/^	FILE* fp_out;		\/* Output stream *\/$/;"	m	struct:ubi_info	file:
fp_out	mtd-utils/ubi-utils/src/mkbootenv.c	/^	FILE* fp_out;$/;"	m	struct:myargs	file:
fp_out	mtd-utils/ubi-utils/src/pfi2bin.c	/^	FILE* fp_out;	\/* a FilePointer to the output stream *\/$/;"	m	struct:io	file:
fp_out	mtd-utils/ubi-utils/src/ubigen.c	/^	FILE* fp_out;$/;"	m	struct:myargs	file:
fp_pdd	mtd-utils/ubi-utils/src/pfi2bin.c	/^	FILE* fp_pdd;	\/* a FilePointer to the PDD data *\/$/;"	m	struct:io	file:
fp_pfi	mtd-utils/ubi-utils/src/pfi2bin.c	/^	FILE* fp_pfi;	\/* a FilePointer to the PFI input stream *\/$/;"	m	struct:io	file:
free	ubi/scan.h	/^	struct list_head free;$/;"	m	struct:ubi_scan_info	typeref:struct:ubi_scan_info::list_head
free	ubi/ubi.h	/^	struct rb_root free;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::rb_root
free_device	nand/nandsim.c	/^static void free_device(struct nandsim *ns)$/;"	f	file:
free_entry	mtd-utils/ubi-utils/src/hashmap.c	/^free_entry(hashentry_t e)$/;"	f	file:
free_func_t	mtd-utils/ubi-utils/src/list.h	/^typedef int  (*free_func_t)(info_t*);$/;"	t
free_lists	nand/nandsim.c	/^static void free_lists(void)$/;"	f	file:
free_nandsim	nand/nandsim.c	/^static void free_nandsim(struct nandsim *ns)$/;"	f	file:
free_pdd_data	mtd-utils/ubi-utils/src/reader.c	/^free_pdd_data(pdd_data_t* pdd_data)$/;"	f
free_pfi_raw	mtd-utils/ubi-utils/src/reader.c	/^free_pfi_raw(pfi_raw_t* pfi_raw)$/;"	f
free_pfi_ubi	mtd-utils/ubi-utils/src/reader.c	/^free_pfi_ubi(pfi_ubi_t* pfi_ubi)$/;"	f
free_phys_block	mtdblock-jz.c	/^	int free_phys_block;$/;"	m	struct:mtdblk_zone_t	file:
free_sectors	rfd_ftl.c	/^	int free_sectors;$/;"	m	struct:block	file:
free_virt_block	mtdblock-jz.c	/^	int free_virt_block;$/;"	m	struct:mtdblk_zone_t	file:
freedir	mtd-utils/jffs2reader.c	/^void freedir(struct dir *d)$/;"	f
fs_pos	mtd-utils/jffs-dump.c	/^int fs_pos = 0;$/;"	v
fsoobbuf	mtdblock-jz.c	/^static struct mtdblk_fake_fsbuf fsoobbuf;$/;"	v	typeref:struct:mtdblk_fake_fsbuf	file:
ftl_add_mtd	ftl.c	/^static void ftl_add_mtd(struct mtd_blktrans_ops *tr, struct mtd_info *mtd)$/;"	f	file:
ftl_erase_callback	ftl.c	/^static void ftl_erase_callback(struct erase_info *erase)$/;"	f	file:
ftl_freepart	ftl.c	/^void ftl_freepart(partition_t *part)$/;"	f
ftl_getgeo	ftl.c	/^static int ftl_getgeo(struct mtd_blktrans_dev *dev, struct hd_geometry *geo)$/;"	f	file:
ftl_read	ftl.c	/^static int ftl_read(partition_t *part, caddr_t buffer,$/;"	f	file:
ftl_readsect	ftl.c	/^static int ftl_readsect(struct mtd_blktrans_dev *dev,$/;"	f	file:
ftl_remove_dev	ftl.c	/^static void ftl_remove_dev(struct mtd_blktrans_dev *dev)$/;"	f	file:
ftl_tr	ftl.c	/^struct mtd_blktrans_ops ftl_tr = {$/;"	v	typeref:struct:mtd_blktrans_ops
ftl_write	ftl.c	/^static int ftl_write(partition_t *part, caddr_t buffer,$/;"	f	file:
ftl_writesect	ftl.c	/^static int ftl_writesect(struct mtd_blktrans_dev *dev,$/;"	f	file:
ftrunc	mtd-utils/tests/fs-tests/simple/ftrunc.c	/^void ftrunc(void)$/;"	f
ftrunc_get_description	mtd-utils/tests/fs-tests/simple/ftrunc.c	/^const char *ftrunc_get_description(void)$/;"	f
ftrunc_get_title	mtd-utils/tests/fs-tests/simple/ftrunc.c	/^const char *ftrunc_get_title(void)$/;"	f
full	mtd-utils/tests/fs-tests/integrity/integck.c	/^static int full   = 0; \/* Flag that the file system is full *\/$/;"	v	file:
full_write	mtd-utils/mkfs.jffs2.c	/^static void full_write(int fd, const void *buf, int len)$/;"	f	file:
full_write	mtd-utils/sumtool.c	/^static void full_write(void *target_buff, const void *buf, int len)$/;"	f	file:
fullname	mtd-utils/mkfs.jffs2.c	/^	char *fullname;				\/* Full name of this directory (i.e. path+name) *\/$/;"	m	struct:filesystem_entry	file:
func	ubi/wl.c	/^	int (*func)(struct ubi_device *ubi, struct ubi_work *wrk, int cancel);$/;"	m	struct:ubi_work	file:
fwh_lock_state	chips/fwh_lock.h	/^enum fwh_lock_state {$/;"	g
fwh_lock_varsize	chips/fwh_lock.h	/^static int fwh_lock_varsize(struct mtd_info *mtd, loff_t ofs, size_t len)$/;"	f
fwh_unlock_varsize	chips/fwh_lock.h	/^static int fwh_unlock_varsize(struct mtd_info *mtd, loff_t ofs, size_t len)$/;"	f
fwh_xxlock_oneblock	chips/fwh_lock.h	/^static int fwh_xxlock_oneblock(struct map_info *map, struct flchip *chip,$/;"	f
fwh_xxlock_thunk	chips/fwh_lock.h	/^struct fwh_xxlock_thunk {$/;"	s
g_page_buf	mtdblock-jz.c	/^	unsigned char *g_page_buf;$/;"	m	struct:mtdblk_dev	file:
g_udc_mtd	mtdblock-jz.c	/^static struct mtd_info *g_udc_mtd;$/;"	v	typeref:struct:mtd_info	file:
g_udc_mtd	udc_cache.c	/^static struct mtd_info *g_udc_mtd;$/;"	v	typeref:struct:mtd_info	file:
g_udc_mtdblk	mtdblock-jz.c	/^static struct mtdblk_dev *g_udc_mtdblk;$/;"	v	typeref:struct:mtdblk_dev	file:
g_udc_mtdblk	udc_cache.c	/^static struct mtdblk_dev *g_udc_mtdblk;$/;"	v	typeref:struct:mtdblk_dev	file:
gcd_hupper	mtd-utils/tests/fs-tests/stress/atoms/gcd_hupper.c	/^void gcd_hupper(void)$/;"	f
gcd_hupper_get_description	mtd-utils/tests/fs-tests/stress/atoms/gcd_hupper.c	/^const char *gcd_hupper_get_description(void)$/;"	f
gcd_hupper_get_title	mtd-utils/tests/fs-tests/stress/atoms/gcd_hupper.c	/^const char *gcd_hupper_get_title(void)$/;"	f
gcd_pid	mtd-utils/tests/fs-tests/stress/atoms/gcd_hupper.c	/^struct gcd_pid$/;"	s	file:
gcd_pid_list	mtd-utils/tests/fs-tests/stress/atoms/gcd_hupper.c	/^struct gcd_pid *gcd_pid_list = NULL;$/;"	v	typeref:struct:gcd_pid
generate_gf	devices/docecc.c	/^generate_gf(dtype Alpha_to[NN + 1], dtype Index_of[NN + 1])$/;"	f	file:
generate_gf	mtd-utils/fec.c	/^generate_gf(void)$/;"	f	file:
generate_label	mtd-utils/ubi-utils/perl/mkpfi	/^sub generate_label($$$$) {$/;"	s
generic_onenand_driver	onenand/generic.c	/^static struct device_driver generic_onenand_driver = {$/;"	v	typeref:struct:device_driver	file:
generic_onenand_exit	onenand/generic.c	/^module_exit(generic_onenand_exit);$/;"	v
generic_onenand_exit	onenand/generic.c	/^static void __exit generic_onenand_exit(void)$/;"	f	file:
generic_onenand_init	onenand/generic.c	/^module_init(generic_onenand_init);$/;"	v
generic_onenand_init	onenand/generic.c	/^static int __init generic_onenand_init(void)$/;"	f	file:
generic_onenand_probe	onenand/generic.c	/^static int __devinit generic_onenand_probe(struct device *dev)$/;"	f	file:
generic_onenand_remove	onenand/generic.c	/^static int __devexit generic_onenand_remove(struct device *dev)$/;"	f	file:
genprobe_ident_chips	chips/gen_probe.c	/^static struct cfi_private *genprobe_ident_chips(struct map_info *map, struct chip_probe *cp)$/;"	f	file:
genprobe_new_chip	chips/gen_probe.c	/^static int genprobe_new_chip(struct map_info *map, struct chip_probe *cp,$/;"	f	file:
geom	nand/nandsim.c	/^	} geom;$/;"	m	struct:nandsim	typeref:struct:nandsim::nandsin_geometry	file:
get_card	nand/alauda.c	/^static struct alauda_card *get_card(u8 id)$/;"	f	file:
get_chip	chips/cfi_cmdset_0001.c	/^static int get_chip(struct map_info *map, struct flchip *chip, unsigned long adr, int mode)$/;"	f	file:
get_chip	chips/cfi_cmdset_0002.c	/^static int get_chip(struct map_info *map, struct flchip *chip, unsigned long adr, int mode)$/;"	f	file:
get_chs	ssfdc.c	/^static int get_chs(unsigned long size, unsigned short *cyl, unsigned char *head,$/;"	f	file:
get_date	mtd-utils/ubi-utils/perl/mkpfi	/^sub get_date {$/;"	s
get_exclusive	ubi/cdev.c	/^static int get_exclusive(struct ubi_volume_desc *desc)$/;"	f	file:
get_fold_mark	nftlmount.c	/^static int get_fold_mark(struct NFTLrecord *nftl, unsigned int block)$/;"	f	file:
get_gcd_pid	mtd-utils/tests/fs-tests/stress/atoms/gcd_hupper.c	/^int get_gcd_pid()$/;"	f
get_jz_badblock_table	nand/jz4730_nand.c	/^EXPORT_SYMBOL(get_jz_badblock_table);$/;"	v
get_jz_badblock_table	nand/jz4730_nand.c	/^int *get_jz_badblock_table(void)$/;"	f
get_jz_badblock_table	nand/jz4740_nand.c	/^EXPORT_SYMBOL(get_jz_badblock_table);$/;"	v
get_jz_badblock_table	nand/jz4740_nand.c	/^int *get_jz_badblock_table(void)$/;"	f
get_jz_badblock_table	nand/jz4750_nand.c	/^EXPORT_SYMBOL(get_jz_badblock_table);$/;"	v
get_jz_badblock_table	nand/jz4750_nand.c	/^int *get_jz_badblock_table(void)$/;"	f
get_logical_address	ssfdc.c	/^static int get_logical_address(uint8_t *oob_buf)$/;"	f	file:
get_long_arg	mtd-utils/tests/ubi-tests/integ.c	/^static int get_long_arg(int *pos,const char *name,long long *result,int argc,char *argv[])$/;"	f	file:
get_mode_no	mtd-utils/ubi-utils/src/pfi.c	/^get_mode_no(const char* mode)$/;"	f	file:
get_mtd_chip_driver	chips/chipreg.c	/^static struct mtd_chip_driver *get_mtd_chip_driver (const char *name)$/;"	f	file:
get_mtd_device	mtdcore.c	/^EXPORT_SYMBOL_GPL(get_mtd_device);$/;"	v
get_mtd_device	mtdcore.c	/^struct mtd_info *get_mtd_device(struct mtd_info *mtd, int num)$/;"	f
get_mtd_device_nm	mtdcore.c	/^EXPORT_SYMBOL_GPL(get_mtd_device_nm);$/;"	v
get_mtd_device_nm	mtdcore.c	/^struct mtd_info *get_mtd_device_nm(const char *name)$/;"	f
get_mtd_index	mtd-utils/tests/fs-tests/stress/atoms/gcd_hupper.c	/^int get_mtd_index(void)$/;"	f
get_mtdblock_oob_copies	nand/jz4730_nand.c	/^EXPORT_SYMBOL(get_mtdblock_oob_copies);$/;"	v
get_mtdblock_oob_copies	nand/jz4730_nand.c	/^unsigned short get_mtdblock_oob_copies(void)$/;"	f
get_mtdblock_oob_copies	nand/jz4740_nand.c	/^EXPORT_SYMBOL(get_mtdblock_oob_copies);$/;"	v
get_mtdblock_oob_copies	nand/jz4740_nand.c	/^unsigned short get_mtdblock_oob_copies(void)$/;"	f
get_mtdblock_oob_copies	nand/jz4750_nand.c	/^EXPORT_SYMBOL(get_mtdblock_oob_copies);$/;"	v
get_mtdblock_oob_copies	nand/jz4750_nand.c	/^unsigned short get_mtdblock_oob_copies(void)$/;"	f
get_mtdblock_write_verify_enable	nand/jz4730_nand.c	/^EXPORT_SYMBOL(get_mtdblock_write_verify_enable);$/;"	v
get_mtdblock_write_verify_enable	nand/jz4730_nand.c	/^unsigned short get_mtdblock_write_verify_enable(void)$/;"	f
get_mtdblock_write_verify_enable	nand/jz4740_nand.c	/^EXPORT_SYMBOL(get_mtdblock_write_verify_enable);$/;"	v
get_mtdblock_write_verify_enable	nand/jz4740_nand.c	/^unsigned short get_mtdblock_write_verify_enable(void)$/;"	f
get_mtdblock_write_verify_enable	nand/jz4750_nand.c	/^EXPORT_SYMBOL(get_mtdblock_write_verify_enable);$/;"	v
get_mtdblock_write_verify_enable	nand/jz4750_nand.c	/^unsigned short get_mtdblock_write_verify_enable(void)$/;"	f
get_multiplier	mtd-utils/ubi-utils/new-utils/src/common.c	/^static int get_multiplier(const char *str)$/;"	f	file:
get_next_seed	mtd-utils/tests/ubi-tests/integ.c	/^static unsigned get_next_seed()$/;"	f	file:
get_offset_and_size	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void get_offset_and_size(struct file_info *file,$/;"	f	file:
get_parity	ssfdc.c	/^static int get_parity(int number, int size)$/;"	f	file:
get_partition_name	nand/nandsim.c	/^static char *get_partition_name(int i)$/;"	f	file:
get_partition_parser	mtdpart.c	/^static struct mtd_part_parser *get_partition_parser(const char *name)$/;"	f	file:
get_pdd_handling	mtd-utils/ubi-utils/src/pfiflash.c	/^get_pdd_handling(const char* str)$/;"	f	file:
get_pid_list	mtd-utils/tests/fs-tests/stress/atoms/gcd_hupper.c	/^int get_pid_list(void)$/;"	f
get_random_number	mtd-utils/tests/ubi-tests/integ.c	/^static unsigned get_random_number(unsigned n)$/;"	f	file:
get_sb_mtd	mtdsuper.c	/^EXPORT_SYMBOL_GPL(get_sb_mtd);$/;"	v
get_sb_mtd	mtdsuper.c	/^int get_sb_mtd(struct file_system_type *fs_type, int flags,$/;"	f
get_sb_mtd_aux	mtdsuper.c	/^static int get_sb_mtd_aux(struct file_system_type *fs_type, int flags,$/;"	f	file:
get_sb_mtd_compare	mtdsuper.c	/^static int get_sb_mtd_compare(struct super_block *sb, void *_mtd)$/;"	f	file:
get_sb_mtd_nr	mtdsuper.c	/^static int get_sb_mtd_nr(struct file_system_type *fs_type, int flags,$/;"	f	file:
get_sb_mtd_set	mtdsuper.c	/^static int get_sb_mtd_set(struct super_block *sb, void *_mtd)$/;"	f	file:
get_section_info	mtd-utils/ubi-utils/perl/mkpfi	/^sub get_section_info($$) {$/;"	s
get_short_arg	mtd-utils/tests/ubi-tests/integ.c	/^static int get_short_arg(int *pos,const char *name,long long *result,int argc,char *argv[])$/;"	f	file:
get_state_by_command	nand/nandsim.c	/^static uint32_t get_state_by_command(unsigned command)$/;"	f	file:
get_state_name	nand/nandsim.c	/^static char *get_state_name(uint32_t state)$/;"	f	file:
get_string_option	maps/fortunet.c	/^static char * __init get_string_option(char *dest,int dest_size,char *sor)$/;"	f	file:
get_ubi_devices_info	mtd-utils/tests/ubi-tests/integ.c	/^static void get_ubi_devices_info(void)$/;"	f	file:
get_update_seqnum	mtd-utils/ubi-utils/src/pfiflash.c	/^get_update_seqnum(const char* str)$/;"	f	file:
get_update_side	mtd-utils/ubi-utils/src/pddcustomize.c	/^get_update_side(const char* str)$/;"	f	file:
get_update_side	mtd-utils/ubi-utils/src/ubimirror.c	/^get_update_side(const char* str)$/;"	f	file:
get_valid_cis_sector	ssfdc.c	/^static int get_valid_cis_sector(struct mtd_info *mtd)$/;"	f	file:
getcsc	maps/dilnetpc.c	/^static inline unsigned char getcsc(int reg)$/;"	f	file:
getgeo	ubi/ubiblk.h	/^	int (*getgeo)(struct ubi_blktrans_dev *dev, struct hd_geometry *geo);$/;"	m	struct:ubi_blktrans_ops
getmeminfo	mtd-utils/mtd_debug.c	/^static int getmeminfo (int fd,struct mtd_info_user *mtd)$/;"	f	file:
getpcc	maps/dilnetpc.c	/^static inline unsigned char getpcc(int reg)$/;"	f	file:
getregions	mtd-utils/mtd_debug.c	/^static int getregions (int fd,struct region_info_user *regions,int *n)$/;"	f	file:
gettimeofday	mtd-utils/fec.c	75;"	d	file:
gf	devices/docecc.c	/^typedef int gf;$/;"	t	file:
gf	mtd-utils/fec.c	/^typedef unsigned char gf;$/;"	t	file:
gf	mtd-utils/fec.c	/^typedef unsigned short gf;$/;"	t	file:
gf4096_mul	nand/cafe_nand.c	/^static u16 __devinit gf4096_mul(u16 a, u16 b)$/;"	f	file:
gf64_mul	nand/cafe_nand.c	/^static unsigned short __devinit gf64_mul(u8 a, u8 b)$/;"	f	file:
gf_exp	mtd-utils/fec.c	/^static gf gf_exp[2*GF_SIZE];	\/* index->poly form conversion table	*\/$/;"	v	file:
gf_log	mtd-utils/fec.c	/^static int gf_log[GF_SIZE + 1];	\/* Poly->index form conversion table	*\/$/;"	v	file:
gf_mul	mtd-utils/fec.c	/^gf_mul(x,y)$/;"	f	file:
gf_mul	mtd-utils/fec.c	194;"	d	file:
gf_mul_table	mtd-utils/fec.c	/^static gf gf_mul_table[GF_SIZE + 1][GF_SIZE + 1];$/;"	v	file:
gid	mtd-utils/include/linux/jffs2.h	/^	jint16_t gid;        \/* The file's group.  *\/$/;"	m	struct:jffs2_raw_inode
gid	mtd-utils/jffs-dump.c	/^	uint16_t gid;$/;"	m	struct:jffs_raw_inode	file:
global_mafid	nand/nand_base.c	/^int global_mafid; \/* ID of manufacture *\/$/;"	v
global_page	nand/nand_base.c	/^int global_page; \/* page index of large page used for nand with multiple planes *\/$/;"	v
global_sqnum	ubi/ubi.h	/^	unsigned long long global_sqnum;$/;"	m	struct:ubi_device
gluebi_desc	ubi/ubi.h	/^	struct ubi_volume_desc *gluebi_desc;$/;"	m	struct:ubi_volume	typeref:struct:ubi_volume::ubi_volume_desc
gluebi_erase	ubi/gluebi.c	/^static int gluebi_erase(struct mtd_info *mtd, struct erase_info *instr)$/;"	f	file:
gluebi_get_device	ubi/gluebi.c	/^static int gluebi_get_device(struct mtd_info *mtd)$/;"	f	file:
gluebi_mtd	ubi/ubi.h	/^	struct mtd_info gluebi_mtd;$/;"	m	struct:ubi_volume	typeref:struct:ubi_volume::mtd_info
gluebi_put_device	ubi/gluebi.c	/^static void gluebi_put_device(struct mtd_info *mtd)$/;"	f	file:
gluebi_read	ubi/gluebi.c	/^static int gluebi_read(struct mtd_info *mtd, loff_mtd_t from, size_mtd_t len,$/;"	f	file:
gluebi_refcount	ubi/ubi.h	/^	int gluebi_refcount;$/;"	m	struct:ubi_volume
gluebi_write	ubi/gluebi.c	/^static int gluebi_write(struct mtd_info *mtd, loff_mtd_t to, size_mtd_t len,$/;"	f	file:
gone	mtd-utils/tests/fs-tests/utils/fstest_monitor.c	/^	int gone;$/;"	m	struct:child_info	file:
good_cnt	mtd-utils/ubi-utils/new-utils/include/libscan.h	/^	int good_cnt;$/;"	m	struct:ubi_scan_info
good_peb_count	ubi/ubi.h	/^	int good_peb_count;$/;"	m	struct:ubi_device
grave_page	nand/nandsim.c	/^struct grave_page {$/;"	s	file:
gravepages	nand/nandsim.c	/^static char *gravepages = NULL;$/;"	v	file:
grow	mtd-utils/tests/fs-tests/integrity/integck.c	/^static int grow   = 1; \/* Should we try to grow files and directories *\/$/;"	v	file:
h1900_special_case	maps/ipaq-flash.c	/^static int __init h1900_special_case(void)$/;"	f	file:
h1910_cleanup	nand/h1910.c	/^module_exit(h1910_cleanup);$/;"	v
h1910_cleanup	nand/h1910.c	/^static void __exit h1910_cleanup(void)$/;"	f	file:
h1910_hwcontrol	nand/h1910.c	/^static void h1910_hwcontrol(struct mtd_info *mtd, int cmd,$/;"	f	file:
h1910_init	nand/h1910.c	/^module_init(h1910_init);$/;"	v
h1910_init	nand/h1910.c	/^static int __init h1910_init(void)$/;"	f	file:
h1910_nand_mtd	nand/h1910.c	/^static struct mtd_info *h1910_nand_mtd = NULL;$/;"	v	typeref:struct:mtd_info	file:
h3xxx_max_flash_size	maps/ipaq-flash.c	/^static unsigned long h3xxx_max_flash_size = 0x04000000;$/;"	v	file:
h3xxx_partitions	maps/ipaq-flash.c	/^static struct mtd_partition h3xxx_partitions[] = {$/;"	v	typeref:struct:mtd_partition	file:
h3xxx_partitions_bank2	maps/ipaq-flash.c	/^static struct mtd_partition h3xxx_partitions_bank2[] = {$/;"	v	typeref:struct:mtd_partition	file:
h3xxx_set_vpp	maps/ipaq-flash.c	/^static void h3xxx_set_vpp(struct map_info *map, int vpp)$/;"	f	file:
h720x_map	maps/h720x-flash.c	/^static struct map_info h720x_map = {$/;"	v	typeref:struct:map_info	file:
h720x_mtd_cleanup	maps/h720x-flash.c	/^module_exit(h720x_mtd_cleanup);$/;"	v
h720x_mtd_cleanup	maps/h720x-flash.c	/^static void __exit h720x_mtd_cleanup(void)$/;"	f	file:
h720x_mtd_init	maps/h720x-flash.c	/^int __init h720x_mtd_init(void)$/;"	f
h720x_mtd_init	maps/h720x-flash.c	/^module_init(h720x_mtd_init);$/;"	v
h720x_partitions	maps/h720x-flash.c	/^static struct mtd_partition h720x_partitions[] = {$/;"	v	typeref:struct:mtd_partition	file:
handle_unit	devices/slram.c	/^static unsigned long handle_unit(unsigned long value, char *unit)$/;"	f	file:
hardlink_rb	mtd-utils/mkfs.jffs2.c	/^	struct rb_node hardlink_rb;$/;"	m	struct:filesystem_entry	typeref:struct:filesystem_entry::rb_node	file:
hardlinks	mtd-utils/mkfs.jffs2.c	/^struct rb_root hardlinks;$/;"	v	typeref:struct:rb_root
hardware_ecc	nand/bf5xx_nand.c	/^static int hardware_ecc = 1;$/;"	v	file:
hardware_ecc	nand/bf5xx_nand.c	/^static int hardware_ecc;$/;"	v	file:
hardware_ecc	nand/s3c2410.c	/^static int hardware_ecc = 0;$/;"	v	file:
hardware_ecc	nand/s3c2410.c	/^static int hardware_ecc = 1;$/;"	v	file:
hash	mtd-utils/ubi-utils/new-utils/src/dictionary.h	/^	unsigned	 *	hash ;	\/** List of hash values for keys *\/$/;"	m	struct:_dictionary_
hash_str	mtd-utils/ubi-utils/src/hashmap.c	/^hash_str(const char* str, uint32_t mapsize)$/;"	f
hashentry	mtd-utils/ubi-utils/src/hashmap.c	/^struct hashentry {$/;"	s	file:
hashentry_t	mtd-utils/ubi-utils/src/hashmap.h	/^typedef struct hashentry *hashentry_t;$/;"	t	typeref:struct:hashentry
hashmap	mtd-utils/ubi-utils/src/hashmap.c	/^struct hashmap {$/;"	s	file:
hashmap_add	mtd-utils/ubi-utils/src/hashmap.c	/^hashmap_add(hashmap_t map, const char* key, const char* value)$/;"	f
hashmap_dump	mtd-utils/ubi-utils/src/hashmap.c	/^hashmap_dump(hashmap_t map)$/;"	f
hashmap_free	mtd-utils/ubi-utils/src/hashmap.c	/^hashmap_free(hashmap_t map)$/;"	f
hashmap_get_key_vector	mtd-utils/ubi-utils/src/hashmap.c	/^hashmap_get_key_vector(hashmap_t map, size_t* size, int sort)$/;"	f
hashmap_get_update_key_vector	mtd-utils/ubi-utils/src/hashmap.c	/^hashmap_get_update_key_vector(const char** vec1, size_t vec1_size,$/;"	f
hashmap_is_empty	mtd-utils/ubi-utils/src/hashmap.c	/^hashmap_is_empty(hashmap_t map)$/;"	f
hashmap_key_is_in_vector	mtd-utils/ubi-utils/src/hashmap.c	/^hashmap_key_is_in_vector(const char** vec, size_t size, const char* key)$/;"	f
hashmap_lookup	mtd-utils/ubi-utils/src/hashmap.c	/^hashmap_lookup(hashmap_t map, const char* key)$/;"	f
hashmap_new	mtd-utils/ubi-utils/src/hashmap.c	/^hashmap_new(void)$/;"	f
hashmap_remove	mtd-utils/ubi-utils/src/hashmap.c	/^hashmap_remove(hashmap_t map, const char* key)$/;"	f
hashmap_size	mtd-utils/ubi-utils/src/hashmap.c	/^hashmap_size(hashmap_t map)$/;"	f
hashmap_t	mtd-utils/ubi-utils/src/hashmap.h	/^typedef struct hashmap *hashmap_t;$/;"	t	typeref:struct:hashmap
have_children	mtd-utils/tests/fs-tests/utils/fstest_monitor.c	/^int have_children(void)$/;"	f
hdr	mtd-utils/mcast_image.h	/^	struct image_pkt_hdr hdr;$/;"	m	struct:image_pkt	typeref:struct:image_pkt::image_pkt_hdr
hdr_crc	mtd-utils/include/linux/jffs2.h	/^	jint32_t hdr_crc;$/;"	m	struct:jffs2_raw_dirent
hdr_crc	mtd-utils/include/linux/jffs2.h	/^	jint32_t hdr_crc;$/;"	m	struct:jffs2_raw_inode
hdr_crc	mtd-utils/include/linux/jffs2.h	/^	jint32_t hdr_crc;$/;"	m	struct:jffs2_raw_summary
hdr_crc	mtd-utils/include/linux/jffs2.h	/^	jint32_t hdr_crc;$/;"	m	struct:jffs2_raw_xattr
hdr_crc	mtd-utils/include/linux/jffs2.h	/^	jint32_t hdr_crc;$/;"	m	struct:jffs2_raw_xref
hdr_crc	mtd-utils/include/linux/jffs2.h	/^	jint32_t hdr_crc;$/;"	m	struct:jffs2_unknown_node
hdr_crc	mtd-utils/include/mtd/ubi-header.h	/^	uint32_t hdr_crc;$/;"	m	struct:ubi_ec_hdr
hdr_crc	mtd-utils/include/mtd/ubi-header.h	/^	uint32_t hdr_crc;$/;"	m	struct:ubi_vid_hdr
hdr_crc	ubi/ubi-media.h	/^	__be32  hdr_crc;$/;"	m	struct:ubi_ec_hdr
hdr_crc	ubi/ubi-media.h	/^	__be32  hdr_crc;$/;"	m	struct:ubi_vid_hdr
hdr_offset	mtd-utils/ubi-utils/src/ubigen.c	/^	uint32_t hdr_offset;$/;"	m	struct:myargs	file:
hdrs_min_io_size	ubi/ubi.h	/^	int hdrs_min_io_size;$/;"	m	struct:ubi_device
head	mtd-utils/ubi-utils/src/bootenv.c	/^	hashmap_t head; \/\/\/< Pointer to list which holds the data structure.$/;"	m	struct:bootenv_list	file:
head	mtd-utils/ubi-utils/src/list.c	/^head(list_t l)$/;"	f
head	ssfdc.c	/^	unsigned char head;$/;"	m	struct:__anon4	file:
header	ftl.c	/^    erase_unit_header_t	header;$/;"	m	struct:partition_t	file:
header	mtd-utils/rfddump.c	/^	uint16_t *header;$/;"	m	struct:rfd	file:
headerBase	afs.c	/^	u32 headerBase;		\/* Flash Address of any stripped header  *\/$/;"	m	struct:image_info_struct	file:
headerType	afs.c	/^	u32 headerType;		\/* AIF, RLF, s-record etc.               *\/$/;"	m	struct:image_info_struct	file:
header_cache	rfd_ftl.c	/^	u16 *header_cache;		\/* cached header *\/$/;"	m	struct:partition	file:
header_length	afs.c	/^	u32 header_length;	\/* Length of header in memory            *\/$/;"	m	struct:image_info_struct	file:
header_sectors	mtd-utils/rfddump.c	/^	int header_sectors;$/;"	m	struct:rfd	file:
header_sectors_per_block	rfd_ftl.c	/^	u_int header_sectors_per_block;	\/* header sectors in erase unit *\/$/;"	m	struct:partition	file:
header_size	mtd-utils/rfddump.c	/^	int header_size;$/;"	m	struct:rfd	file:
header_size	rfd_ftl.c	/^	u_int header_size;		\/* bytes in header sector *\/$/;"	m	struct:partition	file:
heads	ssfdc.c	/^	unsigned char heads;$/;"	m	struct:ssfdcr_record	file:
helptext	mtd-utils/mkfs.jffs2.c	/^static char *helptext =$/;"	v	file:
helptext	mtd-utils/sumtool.c	/^static char *helptext =$/;"	v	file:
hexdump	mtd-utils/ubi-utils/src/nand2bin.c	/^static inline void hexdump(FILE *fp, const uint8_t *buf, ssize_t size)$/;"	f	file:
highest_dev_num	mtd-utils/ubi-utils/inc/libubi.h	/^	int highest_dev_num;$/;"	m	struct:ubi_info
highest_dev_num	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int highest_dev_num;$/;"	m	struct:ubi_info
highest_lnum	ubi/scan.h	/^	int highest_lnum;$/;"	m	struct:ubi_scan_volume
highest_vol_id	ubi/scan.h	/^	int highest_vol_id;$/;"	m	struct:ubi_scan_info
highest_vol_num	mtd-utils/ubi-utils/inc/libubi.h	/^	int highest_vol_num;$/;"	m	struct:ubi_dev_info
highest_vol_num	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int highest_vol_num;$/;"	m	struct:ubi_dev_info
highest_xid	mtd-utils/mkfs.jffs2.c	/^static uint32_t highest_xid = 0;$/;"	v	file:
highest_xseqno	mtd-utils/mkfs.jffs2.c	/^static uint32_t highest_xseqno = 0;$/;"	v	file:
higlvl_partition_info	maps/dilnetpc.c	/^static struct mtd_partition higlvl_partition_info[]=$/;"	v	typeref:struct:mtd_partition	file:
hostname	mtd-utils/mkfs.jffs2.c	/^	char *hostname;				\/* Full path to this file on the host filesystem *\/$/;"	m	struct:filesystem_entry	file:
hsize	mtd-utils/ubi-utils/src/unubi.c	/^	size_t hsize;$/;"	m	struct:args	file:
i	mtd-utils/include/linux/jffs2.h	/^	struct jffs2_raw_inode i;$/;"	m	union:jffs2_node_union	typeref:struct:jffs2_node_union::jffs2_raw_inode
i	mtd-utils/summary.h	/^	struct jffs2_sum_inode_flash i;$/;"	m	union:jffs2_sum_flash	typeref:struct:jffs2_sum_flash::jffs2_sum_inode_flash
i	mtd-utils/summary.h	/^	struct jffs2_sum_inode_mem i;$/;"	m	union:jffs2_sum_mem	typeref:struct:jffs2_sum_mem::jffs2_sum_inode_mem
ichxrom_cleanup	maps/ichxrom.c	/^static void ichxrom_cleanup(struct ichxrom_window *window)$/;"	f	file:
ichxrom_init_one	maps/ichxrom.c	/^static int __devinit ichxrom_init_one (struct pci_dev *pdev,$/;"	f	file:
ichxrom_map_info	maps/ichxrom.c	/^struct ichxrom_map_info {$/;"	s	file:
ichxrom_remove_one	maps/ichxrom.c	/^static void __devexit ichxrom_remove_one (struct pci_dev *pdev)$/;"	f	file:
ichxrom_window	maps/ichxrom.c	/^static struct ichxrom_window ichxrom_window = {$/;"	v	typeref:struct:ichxrom_window	file:
ichxrom_window	maps/ichxrom.c	/^struct ichxrom_window {$/;"	s	file:
id	mtd-utils/ubi-utils/new-utils/include/libubigen.h	/^	int id;$/;"	m	struct:ubigen_vol_info
id	mtd-utils/ubi-utils/src/pfi.c	/^	enum key_id id;$/;"	m	struct:key_descriptor	typeref:enum:key_descriptor::key_id	file:
id	mtd-utils/ubi-utils/src/ubigen.c	/^	int32_t id;$/;"	m	struct:myargs	file:
id	nand/alauda.c	/^	u8	id;		\/* id byte *\/$/;"	m	struct:alauda_card	file:
idbytes	nand/nandsim.c	/^		uint idbytes;       \/* the number ID bytes that this chip outputs *\/$/;"	m	struct:nandsim::nandsin_geometry	file:
ids	mtd-utils/ubi-utils/src/reader.h	/^	uint32_t *ids;$/;"	m	struct:pfi_ubi
ids	nand/nandsim.c	/^	u_char ids[4];          \/* chip's ID bytes *\/$/;"	m	struct:nandsim	file:
ids_size	mtd-utils/ubi-utils/src/reader.h	/^	uint32_t ids_size;$/;"	m	struct:pfi_ubi
idx2vol_id	ubi/ubi.h	/^static inline int idx2vol_id(const struct ubi_device *ubi, int idx)$/;"	f
ignoreerrors	mtd-utils/nanddump.c	/^int	ignoreerrors;		\/\/ ignore errors$/;"	v
ignoreerrors	mtd-utils/nanddump_vfat.c	/^int	ignoreerrors;		\/\/ ignore errors$/;"	v
image	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	/^	const char *image;$/;"	m	struct:args	file:
imageNumber	afs.c	/^	u32 imageNumber;	\/* Unique number, selects for boot etc.  *\/$/;"	m	struct:image_info_struct	file:
image_info_base	afs.c	/^	u32 image_info_base;	\/* Address of first word of ImageFooter  *\/$/;"	m	struct:footer_struct	file:
image_info_struct	afs.c	/^struct image_info_struct {$/;"	s	file:
image_pkt	mtd-utils/mcast_image.h	/^struct image_pkt {$/;"	s
image_pkt_hdr	mtd-utils/mcast_image.h	/^struct image_pkt_hdr {$/;"	s
image_start	afs.c	/^	u32 image_start;	\/* Start of area reserved by this footer *\/$/;"	m	struct:footer_struct	file:
img	mtd-utils/jffs2dump.c	/^char 	*img;			\/\/ filename of image$/;"	v
img	mtd-utils/nandwrite.c	/^char	*mtd_device, *img;$/;"	v
img	mtd-utils/nandwrite_mlc.c	/^char	*mtd_device, *img;$/;"	v
img	mtd-utils/ubi-utils/new-utils/src/ubidumpvol.c	/^	const char *img;$/;"	m	struct:args	file:
img	mtd-utils/ubi-utils/new-utils/src/ubiupdatevol.c	/^	const char *img;$/;"	m	struct:args	file:
img	redboot.c	/^	struct fis_image_desc *img;$/;"	m	struct:fis_list	typeref:struct:fis_list::fis_image_desc	file:
img_path	mtd-utils/ubi-utils/src/unubi.c	/^	char *img_path;$/;"	m	struct:args	file:
imglen	mtd-utils/jffs2dump.c	/^long	imglen;		\/\/ length of image$/;"	v
impa7_map	maps/impa7.c	/^static struct map_info impa7_map[NUM_FLASHBANKS] = {$/;"	v	typeref:struct:map_info	file:
impa7_mtd	maps/impa7.c	/^static struct mtd_info *impa7_mtd[NUM_FLASHBANKS];$/;"	v	typeref:struct:mtd_info	file:
in_fd	mtd-utils/mkfs.jffs2.c	/^static int in_fd = -1;$/;"	v	file:
in_fd	mtd-utils/sumtool.c	/^static int in_fd = -1;$/;"	v	file:
in_len	mtd-utils/ubi-utils/src/nand2bin.c	/^	size_t in_len;		\/* size of input file *\/$/;"	m	struct:args	file:
in_wl_tree	ubi/wl.c	/^static int in_wl_tree(struct ubi_wl_entry *e, struct rb_root *root)$/;"	f	file:
included_tests_tests_h__	mtd-utils/tests/fs-tests/lib/tests.h	22;"	d
index	mtdpart.c	/^	int index;$/;"	m	struct:mtd_part	file:
info	maps/ceiva.c	/^static struct clps_info info[NR_SUBMTD];$/;"	v	typeref:struct:clps_info	file:
info	maps/intel_vr_nor.c	/^	struct mtd_info *info;$/;"	m	struct:vr_nor_mtd	typeref:struct:vr_nor_mtd::mtd_info	file:
info	maps/pcmciamtd.c	46;"	d	file:
info	mtd-utils/tests/ubi-tests/integ.c	/^	struct ubi_dev_info info;$/;"	m	struct:ubi_device_info	typeref:struct:ubi_device_info::ubi_dev_info	file:
info	mtd-utils/tests/ubi-tests/integ.c	/^	struct ubi_vol_info info;$/;"	m	struct:volume_info	typeref:struct:volume_info::ubi_vol_info	file:
info	mtd-utils/tests/ubi-tests/integ.c	/^static struct ubi_info info;$/;"	v	typeref:struct:ubi_info	file:
info	mtd-utils/ubi-utils/src/list.h	/^	info_t	info;$/;"	m	struct:node
info	nand/s3c2410.c	/^	struct s3c2410_nand_info	*info;$/;"	m	struct:s3c2410_nand_mtd	typeref:struct:s3c2410_nand_mtd::s3c2410_nand_info	file:
info	onenand/onenand_sim.c	/^static struct onenand_info *info;$/;"	v	typeref:struct:onenand_info	file:
info_msg	mtd-utils/ubi-utils/src/error.c	/^info_msg(const char *fmt, ...)$/;"	f
info_t	mtd-utils/ubi-utils/src/list.h	/^typedef void* info_t;$/;"	t
inftl-objs	Makefile	/^inftl-objs		:= inftlcore.o inftlmount.o$/;"	m
inftl_add_mtd	inftlcore.c	/^static void inftl_add_mtd(struct mtd_blktrans_ops *tr, struct mtd_info *mtd)$/;"	f	file:
inftl_bbt_write	nand/diskonchip.c	/^static int inftl_bbt_write = 0;$/;"	v	file:
inftl_bbt_write	nand/diskonchip.c	/^static int inftl_bbt_write = 1;$/;"	v	file:
inftl_bci	mtd-utils/include/mtd/inftl-user.h	/^struct inftl_bci {$/;"	s
inftl_getgeo	inftlcore.c	/^static int inftl_getgeo(struct mtd_blktrans_dev *dev, struct hd_geometry *geo)$/;"	f	file:
inftl_oob	mtd-utils/include/mtd/inftl-user.h	/^struct inftl_oob {$/;"	s
inftl_partscan	nand/diskonchip.c	/^static inline int __init inftl_partscan(struct mtd_info *mtd, struct mtd_partition *parts)$/;"	f	file:
inftl_read_oob	inftlcore.c	/^int inftl_read_oob(struct mtd_info *mtd, loff_t offs, size_t len,$/;"	f
inftl_readblock	inftlcore.c	/^static int inftl_readblock(struct mtd_blktrans_dev *mbd, unsigned long block,$/;"	f	file:
inftl_remove_dev	inftlcore.c	/^static void inftl_remove_dev(struct mtd_blktrans_dev *dev)$/;"	f	file:
inftl_scan_bbt	nand/diskonchip.c	/^static int __init inftl_scan_bbt(struct mtd_info *mtd)$/;"	f	file:
inftl_tr	inftlcore.c	/^static struct mtd_blktrans_ops inftl_tr = {$/;"	v	typeref:struct:mtd_blktrans_ops	file:
inftl_uci	mtd-utils/include/mtd/inftl-user.h	/^union inftl_uci {$/;"	u
inftl_unithead1	mtd-utils/include/mtd/inftl-user.h	/^struct inftl_unithead1 {$/;"	s
inftl_unithead2	mtd-utils/include/mtd/inftl-user.h	/^struct inftl_unithead2 {$/;"	s
inftl_unittail	mtd-utils/include/mtd/inftl-user.h	/^struct inftl_unittail {$/;"	s
inftl_write	inftlcore.c	/^static int inftl_write(struct mtd_info *mtd, loff_t offs, size_t len,$/;"	f	file:
inftl_write_oob	inftlcore.c	/^int inftl_write_oob(struct mtd_info *mtd, loff_t offs, size_t len,$/;"	f
inftl_writeblock	inftlcore.c	/^static int inftl_writeblock(struct mtd_blktrans_dev *mbd, unsigned long block,$/;"	f	file:
inftlmountrev	inftlmount.c	/^char inftlmountrev[]="$Revision: 1.18 $";$/;"	v
ini_doc	mtd-utils/ubi-utils/new-utils/src/ubinize.c	/^static const char *ini_doc = "INI-file format.\\n"$/;"	v	file:
iniparser_dump	mtd-utils/ubi-utils/new-utils/src/libiniparser.c	/^void iniparser_dump(dictionary * d, FILE * f)$/;"	f
iniparser_dump_ini	mtd-utils/ubi-utils/new-utils/src/libiniparser.c	/^void iniparser_dump_ini(dictionary * d, FILE * f)$/;"	f
iniparser_find_entry	mtd-utils/ubi-utils/new-utils/src/libiniparser.c	/^int iniparser_find_entry($/;"	f
iniparser_freedict	mtd-utils/ubi-utils/new-utils/src/libiniparser.c	/^void iniparser_freedict(dictionary * d)$/;"	f
iniparser_getboolean	mtd-utils/ubi-utils/new-utils/src/libiniparser.c	/^int iniparser_getboolean(dictionary * d, const char * key, int notfound)$/;"	f
iniparser_getdouble	mtd-utils/ubi-utils/new-utils/src/libiniparser.c	/^double iniparser_getdouble(dictionary * d, char * key, double notfound)$/;"	f
iniparser_getint	mtd-utils/ubi-utils/new-utils/src/libiniparser.c	/^int iniparser_getint(dictionary * d, const char * key, int notfound)$/;"	f
iniparser_getnsec	mtd-utils/ubi-utils/new-utils/src/libiniparser.c	/^int iniparser_getnsec(dictionary * d)$/;"	f
iniparser_getsecname	mtd-utils/ubi-utils/new-utils/src/libiniparser.c	/^char * iniparser_getsecname(dictionary * d, int n)$/;"	f
iniparser_getstr	mtd-utils/ubi-utils/new-utils/include/libiniparser.h	41;"	d
iniparser_getstring	mtd-utils/ubi-utils/new-utils/src/libiniparser.c	/^char * iniparser_getstring(dictionary * d, const char * key, char * def)$/;"	f
iniparser_line	mtd-utils/ubi-utils/new-utils/src/libiniparser.c	/^static line_status iniparser_line($/;"	f	file:
iniparser_load	mtd-utils/ubi-utils/new-utils/src/libiniparser.c	/^dictionary * iniparser_load(const char * ininame)$/;"	f
iniparser_set	mtd-utils/ubi-utils/new-utils/src/libiniparser.c	/^int iniparser_set(dictionary * ini, char * entry, char * val)$/;"	f
iniparser_setstr	mtd-utils/ubi-utils/new-utils/include/libiniparser.h	42;"	d
iniparser_unset	mtd-utils/ubi-utils/new-utils/src/libiniparser.c	/^void iniparser_unset(dictionary * ini, char * entry)$/;"	f
init	maps/pci.c	/^	int  (*init)(struct pci_dev *dev, struct map_pci_info *map);$/;"	m	struct:mtd_pci_info	file:
init_amd76xrom	maps/amd76xrom.c	/^module_init(init_amd76xrom);$/;"	v
init_amd76xrom	maps/amd76xrom.c	/^static int __init init_amd76xrom(void)$/;"	f	file:
init_autcpu12_sram	maps/autcpu12-nvram.c	/^module_init(init_autcpu12_sram);$/;"	v
init_autcpu12_sram	maps/autcpu12-nvram.c	/^static int __init init_autcpu12_sram (void)$/;"	f	file:
init_buffers	mtd-utils/sumtool.c	/^void init_buffers()$/;"	f
init_cdb89712_bootrom	maps/cdb89712.c	/^static int __init init_cdb89712_bootrom (void)$/;"	f	file:
init_cdb89712_flash	maps/cdb89712.c	/^static int __init init_cdb89712_flash (void)$/;"	f	file:
init_cdb89712_maps	maps/cdb89712.c	/^module_init(init_cdb89712_maps);$/;"	v
init_cdb89712_maps	maps/cdb89712.c	/^static int __init init_cdb89712_maps(void)$/;"	f	file:
init_cdb89712_sram	maps/cdb89712.c	/^static int __init init_cdb89712_sram (void)$/;"	f	file:
init_ck804xrom	maps/ck804xrom.c	/^module_init(init_ck804xrom);$/;"	v
init_ck804xrom	maps/ck804xrom.c	/^static int __init init_ck804xrom(void)$/;"	f	file:
init_crc32_table	mtd-utils/ubi-utils/src/crc32.c	/^void init_crc32_table(uint32_t *table)$/;"	f
init_dbox2_flash	maps/dbox2-flash.c	/^int __init init_dbox2_flash(void)$/;"	f
init_dbox2_flash	maps/dbox2-flash.c	/^module_init(init_dbox2_flash);$/;"	v
init_dc21285	maps/dc21285.c	/^module_init(init_dc21285);$/;"	v
init_dc21285	maps/dc21285.c	/^static int __init init_dc21285(void)$/;"	f	file:
init_dnpc	maps/dilnetpc.c	/^module_init(init_dnpc);$/;"	v
init_dnpc	maps/dilnetpc.c	/^static int __init init_dnpc(void)$/;"	f	file:
init_doc	devices/docprobe.c	/^module_init(init_doc);$/;"	v
init_doc	devices/docprobe.c	/^static int __init init_doc(void)$/;"	f	file:
init_ebony	maps/ebony.c	/^int __init init_ebony(void)$/;"	f
init_ebony	maps/ebony.c	/^module_init(init_ebony);$/;"	v
init_edb7312nor	maps/edb7312.c	/^int __init init_edb7312nor(void)$/;"	f
init_edb7312nor	maps/edb7312.c	/^module_init(init_edb7312nor);$/;"	v
init_esb2rom	maps/esb2rom.c	/^module_init(init_esb2rom);$/;"	v
init_esb2rom	maps/esb2rom.c	/^static int __init init_esb2rom(void)$/;"	f	file:
init_fec	mtd-utils/fec.c	/^init_fec()$/;"	f	file:
init_flagadm	maps/cfi_flagadm.c	/^int __init init_flagadm(void)$/;"	f
init_flagadm	maps/cfi_flagadm.c	/^module_init(init_flagadm);$/;"	v
init_flash	maps/omap-toto-flash.c	/^static int __init init_flash (void)$/;"	f	file:
init_fortunet	maps/fortunet.c	/^int __init init_fortunet(void)$/;"	f
init_fortunet	maps/fortunet.c	/^module_init(init_fortunet);$/;"	v
init_ftl	ftl.c	/^module_init(init_ftl);$/;"	v
init_ftl	ftl.c	/^static int init_ftl(void)$/;"	f	file:
init_ichxrom	maps/ichxrom.c	/^module_init(init_ichxrom);$/;"	v
init_ichxrom	maps/ichxrom.c	/^static int __init init_ichxrom(void)$/;"	f	file:
init_impa7	maps/impa7.c	/^int __init init_impa7(void)$/;"	f
init_impa7	maps/impa7.c	/^module_init(init_impa7);$/;"	v
init_inftl	inftlcore.c	/^module_init(init_inftl);$/;"	v
init_inftl	inftlcore.c	/^static int __init init_inftl(void)$/;"	f	file:
init_l440gx	maps/l440gx.c	/^module_init(init_l440gx);$/;"	v
init_l440gx	maps/l440gx.c	/^static int __init init_l440gx(void)$/;"	f	file:
init_mbx	maps/mbx860.c	/^int __init init_mbx(void)$/;"	f
init_mbx	maps/mbx860.c	/^module_init(init_mbx);$/;"	v
init_mpc1211_maps	maps/mpc1211.c	/^module_init(init_mpc1211_maps);$/;"	v
init_mpc1211_maps	maps/mpc1211.c	/^static int __init init_mpc1211_maps(void)$/;"	f	file:
init_msp_flash	maps/pmcmsp-flash.c	/^int __init init_msp_flash(void)$/;"	f
init_msp_flash	maps/pmcmsp-flash.c	/^module_init(init_msp_flash);$/;"	v
init_mtd	mtdcore.c	/^module_init(init_mtd);$/;"	v
init_mtd	mtdcore.c	/^static int __init init_mtd(void)$/;"	f	file:
init_mtdblock	mtdblock-jz.c	/^module_init(init_mtdblock);$/;"	v
init_mtdblock	mtdblock-jz.c	/^static int __init init_mtdblock(void)$/;"	f	file:
init_mtdblock	mtdblock.c	/^module_init(init_mtdblock);$/;"	v
init_mtdblock	mtdblock.c	/^static int __init init_mtdblock(void)$/;"	f	file:
init_mtdchar	mtdchar.c	/^module_init(init_mtdchar);$/;"	v
init_mtdchar	mtdchar.c	/^static int __init init_mtdchar(void)$/;"	f	file:
init_mtdram	devices/mtdram.c	/^module_init(init_mtdram);$/;"	v
init_mtdram	devices/mtdram.c	/^static int __init init_mtdram(void)$/;"	f	file:
init_mul_table	mtd-utils/fec.c	/^init_mul_table()$/;"	f	file:
init_mul_table	mtd-utils/fec.c	219;"	d	file:
init_nanddoc	nand/diskonchip.c	/^module_init(init_nanddoc);$/;"	v
init_nanddoc	nand/diskonchip.c	/^static int __init init_nanddoc(void)$/;"	f	file:
init_nandsim	nand/nandsim.c	/^static int init_nandsim(struct mtd_info *mtd)$/;"	f	file:
init_netsc520	maps/netsc520.c	/^module_init(init_netsc520);$/;"	v
init_netsc520	maps/netsc520.c	/^static int __init init_netsc520(void)$/;"	f	file:
init_nftl	nftlcore.c	/^module_init(init_nftl);$/;"	v
init_nftl	nftlcore.c	/^static int __init init_nftl(void)$/;"	f	file:
init_ocotea	maps/ocotea.c	/^int __init init_ocotea(void)$/;"	f
init_ocotea	maps/ocotea.c	/^module_init(init_ocotea);$/;"	v
init_oct5066	maps/octagon-5066.c	/^int __init init_oct5066(void)$/;"	f
init_oct5066	maps/octagon-5066.c	/^module_init(init_oct5066);$/;"	v
init_pcmciamtd	maps/pcmciamtd.c	/^module_init(init_pcmciamtd);$/;"	v
init_pcmciamtd	maps/pcmciamtd.c	/^static int __init init_pcmciamtd(void)$/;"	f	file:
init_phram	devices/phram.c	/^module_init(init_phram);$/;"	v
init_phram	devices/phram.c	/^static int __init init_phram(void)$/;"	f	file:
init_pmc551	devices/pmc551.c	/^module_init(init_pmc551);$/;"	v
init_pmc551	devices/pmc551.c	/^static int __init init_pmc551(void)$/;"	f	file:
init_pnc2000	maps/pnc2000.c	/^module_init(init_pnc2000);$/;"	v
init_pnc2000	maps/pnc2000.c	/^static int __init init_pnc2000(void)$/;"	f	file:
init_pxa2xx_flash	maps/pxa2xx-flash.c	/^module_init(init_pxa2xx_flash);$/;"	v
init_pxa2xx_flash	maps/pxa2xx-flash.c	/^static int __init init_pxa2xx_flash(void)$/;"	f	file:
init_redwood_flash	maps/redwood.c	/^int __init init_redwood_flash(void)$/;"	f
init_redwood_flash	maps/redwood.c	/^module_init(init_redwood_flash);$/;"	v
init_rfd_ftl	rfd_ftl.c	/^module_init(init_rfd_ftl);$/;"	v
init_rfd_ftl	rfd_ftl.c	/^static int __init init_rfd_ftl(void)$/;"	f	file:
init_rpxlite	maps/rpxlite.c	/^int __init init_rpxlite(void)$/;"	f
init_rpxlite	maps/rpxlite.c	/^module_init(init_rpxlite);$/;"	v
init_rrmap	maps/pmcmsp-ramroot.c	/^module_init(init_rrmap);$/;"	v
init_rrmap	maps/pmcmsp-ramroot.c	/^static int __init init_rrmap(void)$/;"	f	file:
init_sbc8240_mtd	maps/sbc8240.c	/^int __init init_sbc8240_mtd (void)$/;"	f
init_sbc8240_mtd	maps/sbc8240.c	/^module_init (init_sbc8240_mtd);$/;"	v
init_sbc82xx_flash	maps/wr_sbc82xx_flash.c	/^int __init init_sbc82xx_flash(void)$/;"	f
init_sbc82xx_flash	maps/wr_sbc82xx_flash.c	/^module_init(init_sbc82xx_flash);$/;"	v
init_sbc82xx_one_flash	maps/wr_sbc82xx_flash.c	67;"	d	file:
init_sbc_gxx	maps/sbc_gxx.c	/^module_init(init_sbc_gxx);$/;"	v
init_sbc_gxx	maps/sbc_gxx.c	/^static int __init init_sbc_gxx(void)$/;"	f	file:
init_sc520cdp	maps/sc520cdp.c	/^module_init(init_sc520cdp);$/;"	v
init_sc520cdp	maps/sc520cdp.c	/^static int __init init_sc520cdp(void)$/;"	f	file:
init_scx200_docflash	maps/scx200_docflash.c	/^module_init(init_scx200_docflash);$/;"	v
init_scx200_docflash	maps/scx200_docflash.c	/^static int __init init_scx200_docflash(void)$/;"	f	file:
init_sharpsl	maps/sharpsl-flash.c	/^int __init init_sharpsl(void)$/;"	f
init_sharpsl	maps/sharpsl-flash.c	/^module_init(init_sharpsl);$/;"	v
init_slram	devices/slram.c	/^module_init(init_slram);$/;"	v
init_slram	devices/slram.c	/^static int init_slram(void)$/;"	f	file:
init_soleng_maps	maps/solutionengine.c	/^module_init(init_soleng_maps);$/;"	v
init_soleng_maps	maps/solutionengine.c	/^static int __init init_soleng_maps(void)$/;"	f	file:
init_ssfdcr	ssfdc.c	/^module_init(init_ssfdcr);$/;"	v
init_ssfdcr	ssfdc.c	/^static int __init init_ssfdcr(void)$/;"	f	file:
init_sumlist	mtd-utils/sumtool.c	/^void init_sumlist()$/;"	f
init_svme182	maps/dmv182.c	/^module_init(init_svme182);$/;"	v
init_svme182	maps/dmv182.c	/^static int __init init_svme182(void)$/;"	f	file:
init_tqm_mtd	maps/tqm8xxl.c	/^int __init init_tqm_mtd(void)$/;"	f
init_tqm_mtd	maps/tqm8xxl.c	/^module_init(init_tqm_mtd);$/;"	v
init_ts5500_map	maps/ts5500_flash.c	/^module_init(init_ts5500_map);$/;"	v
init_ts5500_map	maps/ts5500_flash.c	/^static int __init init_ts5500_map(void)$/;"	f	file:
init_tsunami_flash	maps/tsunami_flash.c	/^module_init(init_tsunami_flash);$/;"	v
init_tsunami_flash	maps/tsunami_flash.c	/^static int __init init_tsunami_flash(void)$/;"	f	file:
init_ubiblock	ubi/ubiblk.c	/^module_init(init_ubiblock);$/;"	v
init_ubiblock	ubi/ubiblk.c	/^static int __init init_ubiblock(void)$/;"	f	file:
init_vid_hdr	mtd-utils/ubi-utils/new-utils/src/libubigen.c	/^static void init_vid_hdr(const struct ubigen_info *ui,$/;"	f	file:
init_vmax301	maps/vmax301.c	/^int __init init_vmax301(void)$/;"	f
init_vmax301	maps/vmax301.c	/^module_init(init_vmax301);$/;"	v
init_vol_info	mtd-utils/ubi-utils/new-utils/src/ubinize.c	/^static void init_vol_info(const struct ubigen_info *ui,$/;"	f	file:
init_vol_tab	mtd-utils/ubi-utils/src/pfi2bin.c	/^init_vol_tab(struct ubi_vtbl_record **vol_tab, size_t *vol_tab_size)$/;"	f	file:
init_volumes	ubi/vtbl.c	/^static int init_volumes(struct ubi_device *ubi, const struct ubi_scan_info *si,$/;"	f	file:
init_walnut	maps/walnut.c	/^int __init init_walnut(void)$/;"	f
init_walnut	maps/walnut.c	/^module_init(init_walnut);$/;"	v
init_write_buffer	mtd-utils/tests/fs-tests/lib/tests.c	/^static void init_write_buffer()$/;"	f	file:
init_write_buffer	mtd-utils/tests/fs-tests/stress/atoms/rndrm99.c	/^static void init_write_buffer()$/;"	f	file:
initial_check	mtd-utils/tests/ubi-tests/common.h	44;"	d
initial_free_space	mtd-utils/tests/fs-tests/integrity/integck.c	/^static uint64_t initial_free_space = 0; \/* Free space on file system when$/;"	v	file:
ino	mtd-utils/include/linux/jffs2.h	/^	jint32_t ino;		\/* inode number *\/$/;"	m	struct:jffs2_raw_xref
ino	mtd-utils/include/linux/jffs2.h	/^	jint32_t ino;        \/* Inode number.  *\/$/;"	m	struct:jffs2_raw_inode
ino	mtd-utils/include/linux/jffs2.h	/^	jint32_t ino; \/* == zero for unlink *\/$/;"	m	struct:jffs2_raw_dirent
ino	mtd-utils/jffs-dump.c	/^	uint32_t ino;      \/* Inode number.  *\/$/;"	m	struct:jffs_raw_inode	file:
ino	mtd-utils/jffs2reader.c	/^	uint32_t ino;$/;"	m	struct:dir	file:
ino	mtd-utils/mkfs.jffs2.c	/^	uint32_t ino;				\/* Inode number of this file in JFFS2 *\/$/;"	m	struct:filesystem_entry	file:
ino	mtd-utils/mkfs.jffs2.c	/^static uint32_t ino = 0;$/;"	v	file:
ino	mtd-utils/summary.h	/^	jint32_t ino; 		\/* == zero for unlink *\/$/;"	m	struct:jffs2_sum_dirent_flash
ino	mtd-utils/summary.h	/^	jint32_t ino; 		\/* == zero for unlink *\/$/;"	m	struct:jffs2_sum_dirent_mem
inode	mtd-utils/jffs-dump.c	/^	struct jffs_raw_inode inode;$/;"	m	struct:jffs_file	typeref:struct:jffs_file::jffs_raw_inode	file:
inode	mtd-utils/summary.h	/^	jint32_t inode;		\/* inode number *\/$/;"	m	struct:jffs2_sum_inode_flash
inode	mtd-utils/summary.h	/^	jint32_t inode;		\/* inode number *\/$/;"	m	struct:jffs2_sum_inode_mem
input_cycle	nand/nandsim.c	/^static uint input_cycle    = CONFIG_NANDSIM_INPUT_CYCLE;$/;"	v	file:
insert_entry	mtd-utils/ubi-utils/src/hashmap.c	/^insert_entry(hashentry_t l, hashentry_t e, size_t* entries)$/;"	f	file:
insert_sorted	mtd-utils/ubi-utils/src/list.c	/^insert_sorted(cmp_func_t cmp, info_t e, list_t l)$/;"	f
intcmp	mtd-utils/ubi-utils/src/unubi_analyze.c	/^int intcmp(const void *a, const void *b)$/;"	f
integck	mtd-utils/tests/fs-tests/integrity/integck.c	/^void integck(void)$/;"	f
integck_get_description	mtd-utils/tests/fs-tests/integrity/integck.c	/^const char *integck_get_description(void)$/;"	f
integck_get_title	mtd-utils/tests/fs-tests/integrity/integck.c	/^const char *integck_get_title(void)$/;"	f
intel_dc21285_exit	maps/pci.c	/^intel_dc21285_exit(struct pci_dev *dev, struct map_pci_info *map)$/;"	f	file:
intel_dc21285_info	maps/pci.c	/^static struct mtd_pci_info intel_dc21285_info = {$/;"	v	typeref:struct:mtd_pci_info	file:
intel_dc21285_init	maps/pci.c	/^intel_dc21285_init(struct pci_dev *dev, struct map_pci_info *map)$/;"	f	file:
intel_dc21285_translate	maps/pci.c	/^intel_dc21285_translate(struct map_pci_info *map, unsigned long ofs)$/;"	f	file:
intel_iq80310_exit	maps/pci.c	/^intel_iq80310_exit(struct pci_dev *dev, struct map_pci_info *map)$/;"	f	file:
intel_iq80310_info	maps/pci.c	/^static struct mtd_pci_info intel_iq80310_info = {$/;"	v	typeref:struct:mtd_pci_info	file:
intel_iq80310_init	maps/pci.c	/^intel_iq80310_init(struct pci_dev *dev, struct map_pci_info *map)$/;"	f	file:
intel_iq80310_translate	maps/pci.c	/^intel_iq80310_translate(struct map_pci_info *map, unsigned long ofs)$/;"	f	file:
intel_mtd	maps/nettel.c	/^static struct mtd_info *intel_mtd;$/;"	v	typeref:struct:mtd_info	file:
interface	nand/alauda.c	/^	struct usb_interface	*interface;$/;"	m	struct:alauda	typeref:struct:alauda::usb_interface	file:
interpret_table_entry	mtd-utils/mkfs.jffs2.c	/^static int interpret_table_entry(struct filesystem_entry *root, char *line)$/;"	f	file:
inval_cache_and_wait_for_operation	chips/cfi_cmdset_0001.c	/^static int inval_cache_and_wait_for_operation($/;"	f	file:
inverse	mtd-utils/fec.c	/^static gf inverse[GF_SIZE+1];	\/* inverse of field elem.		*\/$/;"	v	file:
invert_mat	mtd-utils/fec.c	/^invert_mat(gf *src, int k)$/;"	f	file:
invert_vdm	mtd-utils/fec.c	/^invert_vdm(gf *src, int k)$/;"	f
io	mtd-utils/ubi-utils/src/pfi2bin.c	/^typedef struct io {$/;"	s	file:
io_base	nand/at91_nand.c	/^	void __iomem		*io_base;$/;"	m	struct:at91_nand_host	file:
io_base	nand/plat_nand.c	/^	void __iomem		*io_base;$/;"	m	struct:plat_nand_data	file:
io_init	ubi/build.c	/^static int io_init(struct ubi_device *ubi)$/;"	f	file:
io_t	mtd-utils/ubi-utils/src/pfi2bin.c	/^} *io_t;$/;"	t	typeref:struct:io	file:
iobase	maps/l440gx.c	/^static u32 iobase;$/;"	v	file:
iomapadr	maps/octagon-5066.c	/^static unsigned long iomapadr;$/;"	v	file:
iomapadr	maps/sbc_gxx.c	/^static void __iomem *iomapadr;$/;"	v	file:
ipaq_map	maps/ipaq-flash.c	/^static struct map_info ipaq_map[MAX_IPAQ_CS] = {$/;"	v	typeref:struct:map_info	file:
ipaq_mtd_cleanup	maps/ipaq-flash.c	/^module_exit(ipaq_mtd_cleanup);$/;"	v
ipaq_mtd_cleanup	maps/ipaq-flash.c	/^static void __exit ipaq_mtd_cleanup(void)$/;"	f	file:
ipaq_mtd_init	maps/ipaq-flash.c	/^int __init ipaq_mtd_init(void)$/;"	f
ipaq_mtd_init	maps/ipaq-flash.c	/^module_init(ipaq_mtd_init);$/;"	v
is_all_digits	mtd-utils/tests/ubi-tests/integ.c	/^static int is_all_digits(const char *s)$/;"	f	file:
is_empty	mtd-utils/ubi-utils/src/hashmap.c	/^is_empty(hashentry_t l)$/;"	f	file:
is_empty	mtd-utils/ubi-utils/src/list.c	/^is_empty(list_t l)$/;"	f
is_empty	ubi/scan.h	/^	int is_empty;$/;"	m	struct:ubi_scan_info
is_geode	nand/cs553x_nand.c	/^static int is_geode(void)$/;"	f	file:
is_identity	mtd-utils/fec.c	/^is_identity(gf *m, int k)$/;"	f	file:
is_in	mtd-utils/ubi-utils/src/list.c	/^is_in(cmp_func_t cmp, info_t e, list_t l)$/;"	f
is_in_keylist	mtd-utils/ubi-utils/perl/mkpfi	/^sub is_in_keylist($$) {$/;"	s
is_power_of_2	mtd-utils/ubi-utils/new-utils/src/common.h	/^static inline int is_power_of_2(unsigned long long n)$/;"	f
is_reclaiming	rfd_ftl.c	/^	int is_reclaiming;$/;"	m	struct:partition	file:
is_ws	mtd-utils/ubi-utils/src/bootenv.c	/^is_ws(const char *line, size_t size)$/;"	f	file:
is_zero	mtd-utils/tests/fs-tests/lib/tests.c	/^static int is_zero(const char *p)$/;"	f	file:
isbad_2plane	nand/nand_base.c	3008;"	d	file:
isize	mtd-utils/include/linux/jffs2.h	/^	jint32_t isize;      \/* Total resultant size of this inode (used for truncations)  *\/$/;"	m	struct:jffs2_raw_inode
itable	mtd-utils/ubi-utils/src/unubi.c	/^	int itable;$/;"	m	struct:args	file:
iterations	mtd-utils/tests/ubi-tests/io_paral.c	/^static int iterations = ITERATIONS;$/;"	v	file:
iterations	mtd-utils/tests/ubi-tests/mkvol_paral.c	/^static int iterations = ITERATIONS;$/;"	v	file:
ixp2000_flash_copy_from	maps/ixp2000.c	/^static void ixp2000_flash_copy_from(struct map_info *map, void *to,$/;"	f	file:
ixp2000_flash_copy_to	maps/ixp2000.c	/^static void ixp2000_flash_copy_to(struct map_info *map, unsigned long to,$/;"	f	file:
ixp2000_flash_driver	maps/ixp2000.c	/^static struct platform_driver ixp2000_flash_driver = {$/;"	v	typeref:struct:platform_driver	file:
ixp2000_flash_exit	maps/ixp2000.c	/^module_exit(ixp2000_flash_exit);$/;"	v
ixp2000_flash_exit	maps/ixp2000.c	/^static void __exit ixp2000_flash_exit(void)$/;"	f	file:
ixp2000_flash_info	maps/ixp2000.c	/^struct ixp2000_flash_info {$/;"	s	file:
ixp2000_flash_init	maps/ixp2000.c	/^module_init(ixp2000_flash_init);$/;"	v
ixp2000_flash_init	maps/ixp2000.c	/^static int __init ixp2000_flash_init(void)$/;"	f	file:
ixp2000_flash_probe	maps/ixp2000.c	/^static int ixp2000_flash_probe(struct platform_device *dev)$/;"	f	file:
ixp2000_flash_read8	maps/ixp2000.c	/^static map_word ixp2000_flash_read8(struct map_info *map, unsigned long ofs)$/;"	f	file:
ixp2000_flash_remove	maps/ixp2000.c	/^static int ixp2000_flash_remove(struct platform_device *dev)$/;"	f	file:
ixp2000_flash_write8	maps/ixp2000.c	/^static void ixp2000_flash_write8(struct map_info *map, map_word d, unsigned long ofs)$/;"	f	file:
ixp4xx_copy_from	maps/ixp4xx.c	/^static void ixp4xx_copy_from(struct map_info *map, void *to,$/;"	f	file:
ixp4xx_flash_driver	maps/ixp4xx.c	/^static struct platform_driver ixp4xx_flash_driver = {$/;"	v	typeref:struct:platform_driver	file:
ixp4xx_flash_exit	maps/ixp4xx.c	/^module_exit(ixp4xx_flash_exit);$/;"	v
ixp4xx_flash_exit	maps/ixp4xx.c	/^static void __exit ixp4xx_flash_exit(void)$/;"	f	file:
ixp4xx_flash_info	maps/ixp4xx.c	/^struct ixp4xx_flash_info {$/;"	s	file:
ixp4xx_flash_init	maps/ixp4xx.c	/^module_init(ixp4xx_flash_init);$/;"	v
ixp4xx_flash_init	maps/ixp4xx.c	/^static int __init ixp4xx_flash_init(void)$/;"	f	file:
ixp4xx_flash_probe	maps/ixp4xx.c	/^static int ixp4xx_flash_probe(struct platform_device *dev)$/;"	f	file:
ixp4xx_flash_remove	maps/ixp4xx.c	/^static int ixp4xx_flash_remove(struct platform_device *dev)$/;"	f	file:
ixp4xx_probe_write16	maps/ixp4xx.c	/^static void ixp4xx_probe_write16(struct map_info *map, map_word d, unsigned long adr)$/;"	f	file:
ixp4xx_read16	maps/ixp4xx.c	/^static map_word ixp4xx_read16(struct map_info *map, unsigned long ofs)$/;"	f	file:
ixp4xx_write16	maps/ixp4xx.c	/^static void ixp4xx_write16(struct map_info *map, map_word d, unsigned long adr)$/;"	f	file:
je16_to_cpu	mtd-utils/include/mtd/jffs2-user.h	18;"	d
je16_to_cpu	mtd-utils/include/mtd/jffs2-user.h	31;"	d
je32_to_cpu	mtd-utils/include/mtd/jffs2-user.h	19;"	d
je32_to_cpu	mtd-utils/include/mtd/jffs2-user.h	32;"	d
jedec_chip_probe	chips/jedec_probe.c	/^static struct chip_probe jedec_chip_probe = {$/;"	v	typeref:struct:chip_probe	file:
jedec_chipdrv	chips/jedec_probe.c	/^static struct mtd_chip_driver jedec_chipdrv = {$/;"	v	typeref:struct:mtd_chip_driver	file:
jedec_fixup_table	chips/cfi_cmdset_0001.c	/^static struct cfi_fixup jedec_fixup_table[] = {$/;"	v	typeref:struct:cfi_fixup	file:
jedec_fixup_table	chips/cfi_cmdset_0002.c	/^static struct cfi_fixup jedec_fixup_table[] = {$/;"	v	typeref:struct:cfi_fixup	file:
jedec_id	devices/m25p80.c	/^	u32		jedec_id;$/;"	m	struct:flash_info	file:
jedec_match	chips/jedec_probe.c	/^static inline int jedec_match( __u32 base,$/;"	f	file:
jedec_probe	chips/jedec_probe.c	/^static struct mtd_info *jedec_probe(struct map_info *map)$/;"	f	file:
jedec_probe	devices/m25p80.c	/^static struct flash_info *__devinit jedec_probe(struct spi_device *spi)$/;"	f	file:
jedec_probe_chip	chips/jedec_probe.c	/^static int jedec_probe_chip(struct map_info *map, __u32 base,$/;"	f	file:
jedec_probe_exit	chips/jedec_probe.c	/^module_exit(jedec_probe_exit);$/;"	v
jedec_probe_exit	chips/jedec_probe.c	/^static void __exit jedec_probe_exit(void)$/;"	f	file:
jedec_probe_init	chips/jedec_probe.c	/^module_init(jedec_probe_init);$/;"	v
jedec_probe_init	chips/jedec_probe.c	/^static int __init jedec_probe_init(void)$/;"	f	file:
jedec_read_id	chips/jedec_probe.c	/^static inline u32 jedec_read_id(struct map_info *map, __u32 base,$/;"	f	file:
jedec_read_mfr	chips/jedec_probe.c	/^static inline u32 jedec_read_mfr(struct map_info *map, __u32 base,$/;"	f	file:
jedec_reset	chips/jedec_probe.c	/^static inline void jedec_reset(u32 base, struct map_info *map,$/;"	f	file:
jedec_table	chips/jedec_probe.c	/^static const struct amd_flash_info jedec_table[] = {$/;"	v	typeref:struct:amd_flash_info	file:
jemode_to_cpu	mtd-utils/include/mtd/jffs2-user.h	20;"	d
jemode_to_cpu	mtd-utils/include/mtd/jffs2-user.h	33;"	d
jffs2	mtd-utils/flash_eraseall.c	/^static int jffs2;		\/\/ format for jffs2 usage$/;"	v	file:
jffs2_acl_entry	mtd-utils/include/mtd/jffs2-user.h	/^struct jffs2_acl_entry {$/;"	s
jffs2_acl_entry_short	mtd-utils/include/mtd/jffs2-user.h	/^struct jffs2_acl_entry_short {$/;"	s
jffs2_acl_header	mtd-utils/include/mtd/jffs2-user.h	/^struct jffs2_acl_header {$/;"	s
jffs2_compress	mtd-utils/compr.c	/^uint16_t jffs2_compress( unsigned char *data_in, unsigned char **cpage_out,$/;"	f
jffs2_compression_check	mtd-utils/compr.c	/^static int jffs2_compression_check = 0;$/;"	v	file:
jffs2_compression_check_buf	mtd-utils/compr.c	/^static unsigned char *jffs2_compression_check_buf = NULL;$/;"	v	file:
jffs2_compression_check_errorcnt_get	mtd-utils/compr.c	/^int jffs2_compression_check_errorcnt_get(void)$/;"	f
jffs2_compression_check_get	mtd-utils/compr.c	/^int jffs2_compression_check_get(void)$/;"	f
jffs2_compression_check_set	mtd-utils/compr.c	/^void jffs2_compression_check_set(int yesno)$/;"	f
jffs2_compression_mode	mtd-utils/compr.c	/^static int jffs2_compression_mode = JFFS2_COMPR_MODE_PRIORITY;$/;"	v	file:
jffs2_compressor	mtd-utils/compr.h	/^struct jffs2_compressor {$/;"	s
jffs2_compressor_Xable	mtd-utils/compr.c	/^static int jffs2_compressor_Xable(const char *name, int disabled)$/;"	f	file:
jffs2_compressors_exit	mtd-utils/compr.c	/^int jffs2_compressors_exit(void)$/;"	f
jffs2_compressors_init	mtd-utils/compr.c	/^int jffs2_compressors_init(void)$/;"	f
jffs2_decompression_test	mtd-utils/compr.c	/^static void jffs2_decompression_test(struct jffs2_compressor *compr,$/;"	f	file:
jffs2_decompression_test_prepare	mtd-utils/compr.c	/^static void jffs2_decompression_test_prepare(unsigned char *buf, int size)$/;"	f	file:
jffs2_disable_compressor_name	mtd-utils/compr.c	/^int jffs2_disable_compressor_name(const char *name)$/;"	f
jffs2_enable_compressor_name	mtd-utils/compr.c	/^int jffs2_enable_compressor_name(const char *name)$/;"	f
jffs2_error_cnt	mtd-utils/compr.c	/^static int jffs2_error_cnt = 0;$/;"	v	file:
jffs2_get_compression_mode	mtd-utils/compr.c	/^int jffs2_get_compression_mode(void)$/;"	f
jffs2_is_best_compression	mtd-utils/compr.c	/^static int jffs2_is_best_compression(struct jffs2_compressor *this,$/;"	f	file:
jffs2_list_compressors	mtd-utils/compr.c	/^char *jffs2_list_compressors(void)$/;"	f
jffs2_lzo_cmpr	mtd-utils/compr_lzo.c	/^static int jffs2_lzo_cmpr(unsigned char *data_in, unsigned char *cpage_out,$/;"	f	file:
jffs2_lzo_comp	mtd-utils/compr_lzo.c	/^static struct jffs2_compressor jffs2_lzo_comp = {$/;"	v	typeref:struct:jffs2_compressor	file:
jffs2_lzo_decompress	mtd-utils/compr_lzo.c	/^static int jffs2_lzo_decompress(unsigned char *data_in, unsigned char *cpage_out,$/;"	f	file:
jffs2_lzo_exit	mtd-utils/compr_lzo.c	/^void jffs2_lzo_exit(void)$/;"	f
jffs2_lzo_init	mtd-utils/compr_lzo.c	/^int jffs2_lzo_init(void)$/;"	f
jffs2_node_union	mtd-utils/include/linux/jffs2.h	/^union jffs2_node_union$/;"	u
jffs2_oobinfo	mtd-utils/nandwrite.c	/^struct nand_oobinfo jffs2_oobinfo = {$/;"	v	typeref:struct:nand_oobinfo
jffs2_oobinfo	mtd-utils/nandwrite_mlc.c	/^struct nand_oobinfo jffs2_oobinfo = {$/;"	v	typeref:struct:nand_oobinfo
jffs2_raw_dirent	mtd-utils/include/linux/jffs2.h	/^struct jffs2_raw_dirent$/;"	s
jffs2_raw_inode	mtd-utils/include/linux/jffs2.h	/^struct jffs2_raw_inode$/;"	s
jffs2_raw_summary	mtd-utils/include/linux/jffs2.h	/^struct jffs2_raw_summary$/;"	s
jffs2_raw_xattr	mtd-utils/include/linux/jffs2.h	/^struct jffs2_raw_xattr {$/;"	s
jffs2_raw_xref	mtd-utils/include/linux/jffs2.h	/^struct jffs2_raw_xref$/;"	s
jffs2_register_compressor	mtd-utils/compr.c	/^int jffs2_register_compressor(struct jffs2_compressor *comp)$/;"	f
jffs2_rtime_comp	mtd-utils/compr_rtime.c	/^static struct jffs2_compressor jffs2_rtime_comp = {$/;"	v	typeref:struct:jffs2_compressor	file:
jffs2_rtime_compress	mtd-utils/compr_rtime.c	/^static int jffs2_rtime_compress(unsigned char *data_in, unsigned char *cpage_out,$/;"	f	file:
jffs2_rtime_decompress	mtd-utils/compr_rtime.c	/^static int jffs2_rtime_decompress(unsigned char *data_in, unsigned char *cpage_out,$/;"	f	file:
jffs2_rtime_exit	mtd-utils/compr_rtime.c	/^void jffs2_rtime_exit(void)$/;"	f
jffs2_rtime_init	mtd-utils/compr_rtime.c	/^int jffs2_rtime_init(void)$/;"	f
jffs2_set_compression_mode	mtd-utils/compr.c	/^void jffs2_set_compression_mode(int mode)$/;"	f
jffs2_set_compression_mode_name	mtd-utils/compr.c	/^int jffs2_set_compression_mode_name(const char *name)$/;"	f
jffs2_set_compressor_priority	mtd-utils/compr.c	/^int jffs2_set_compressor_priority(const char *name, int priority)$/;"	f
jffs2_stats	mtd-utils/compr.c	/^char *jffs2_stats(void)$/;"	f
jffs2_sum_dirent_flash	mtd-utils/summary.h	/^struct jffs2_sum_dirent_flash$/;"	s
jffs2_sum_dirent_mem	mtd-utils/summary.h	/^struct jffs2_sum_dirent_mem$/;"	s
jffs2_sum_flash	mtd-utils/summary.h	/^union jffs2_sum_flash$/;"	u
jffs2_sum_inode_flash	mtd-utils/summary.h	/^struct jffs2_sum_inode_flash$/;"	s
jffs2_sum_inode_mem	mtd-utils/summary.h	/^struct jffs2_sum_inode_mem$/;"	s
jffs2_sum_marker	mtd-utils/summary.h	/^struct jffs2_sum_marker$/;"	s
jffs2_sum_mem	mtd-utils/summary.h	/^union jffs2_sum_mem$/;"	u
jffs2_sum_unknown_flash	mtd-utils/summary.h	/^struct jffs2_sum_unknown_flash$/;"	s
jffs2_sum_unknown_mem	mtd-utils/summary.h	/^struct jffs2_sum_unknown_mem$/;"	s
jffs2_sum_xattr_flash	mtd-utils/summary.h	/^struct jffs2_sum_xattr_flash$/;"	s
jffs2_sum_xattr_mem	mtd-utils/summary.h	/^struct jffs2_sum_xattr_mem$/;"	s
jffs2_sum_xref_flash	mtd-utils/summary.h	/^struct jffs2_sum_xref_flash$/;"	s
jffs2_sum_xref_mem	mtd-utils/summary.h	/^struct jffs2_sum_xref_mem$/;"	s
jffs2_summary	mtd-utils/summary.h	/^struct jffs2_summary$/;"	s
jffs2_test	mtd-utils/ubi-utils/scripts/ubi_jffs2_test.sh	/^jffs2_test ()$/;"	f
jffs2_torture	mtd-utils/ubi-utils/scripts/ubi_jffs2_test.sh	/^jffs2_torture ()$/;"	f
jffs2_unknown_node	mtd-utils/include/linux/jffs2.h	/^struct jffs2_unknown_node$/;"	s
jffs2_unregister_compressor	mtd-utils/compr.c	/^int jffs2_unregister_compressor(struct jffs2_compressor *comp)$/;"	f
jffs2_zlib_comp	mtd-utils/compr_zlib.c	/^static struct jffs2_compressor jffs2_zlib_comp = {$/;"	v	typeref:struct:jffs2_compressor	file:
jffs2_zlib_compress	mtd-utils/compr_zlib.c	/^int jffs2_zlib_compress(unsigned char *data_in, unsigned char *cpage_out,$/;"	f
jffs2_zlib_decompress	mtd-utils/compr_zlib.c	/^int jffs2_zlib_decompress(unsigned char *data_in, unsigned char *cpage_out,$/;"	f
jffs2_zlib_exit	mtd-utils/compr_zlib.c	/^void jffs2_zlib_exit(void)$/;"	f
jffs2_zlib_init	mtd-utils/compr_zlib.c	/^int jffs2_zlib_init(void)$/;"	f
jffs_checksum	mtd-utils/jffs-dump.c	/^jffs_checksum(void *data, int size)$/;"	f	file:
jffs_file	mtd-utils/jffs-dump.c	/^struct jffs_file$/;"	s	file:
jffs_print_raw_inode	mtd-utils/jffs-dump.c	/^jffs_print_raw_inode(struct jffs_raw_inode *raw_inode)$/;"	f
jffs_print_trace	mtd-utils/jffs-dump.c	/^jffs_print_trace(const char *path, int depth)$/;"	f
jffs_raw_inode	mtd-utils/jffs-dump.c	/^struct jffs_raw_inode$/;"	s	file:
jint16_t	mtd-utils/include/linux/jffs2.h	/^} __attribute__((packed)) jint16_t;$/;"	t	typeref:struct:__anon11
jint32_t	mtd-utils/include/linux/jffs2.h	/^} __attribute__((packed))  jint32_t;$/;"	t	typeref:struct:__anon9
jmode_t	mtd-utils/include/linux/jffs2.h	/^} __attribute__((packed))  jmode_t;$/;"	t	typeref:struct:__anon10
jornada56x_set_vpp	maps/ipaq-flash.c	/^static void jornada56x_set_vpp(struct map_info *map, int vpp)$/;"	f	file:
jornada720_set_vpp	maps/ipaq-flash.c	/^static void jornada720_set_vpp(struct map_info *map, int vpp)$/;"	f	file:
jornada_max_flash_size	maps/ipaq-flash.c	/^static unsigned long jornada_max_flash_size = 0x02000000;$/;"	v	file:
jornada_partitions	maps/ipaq-flash.c	/^static struct mtd_partition jornada_partitions[] = {$/;"	v	typeref:struct:mtd_partition	file:
jz4740_nand_read_buf	nand/jz4740_nand.c	/^static void jz4740_nand_read_buf(struct mtd_info *mtd, uint8_t *buf, int len)$/;"	f	file:
jz4740_nand_write_buf	nand/jz4740_nand.c	/^static void jz4740_nand_write_buf(struct mtd_info *mtd, const uint8_t *buf, int len)$/;"	f	file:
jz4750_nand_dma_exit	nand/jz4750_nand.c	/^static int jz4750_nand_dma_exit(struct mtd_info *mtd)$/;"	f	file:
jz4750_nand_dma_init	nand/jz4750_nand.c	/^static int jz4750_nand_dma_init(struct mtd_info *mtd)$/;"	f	file:
jz_device_ready	nand/jz4730_nand.c	/^static int jz_device_ready(struct mtd_info *mtd)$/;"	f	file:
jz_device_ready	nand/jz4740_nand.c	/^static int jz_device_ready(struct mtd_info *mtd)$/;"	f	file:
jz_device_ready	nand/jz4750_nand.c	/^static int jz_device_ready(struct mtd_info *mtd)$/;"	f	file:
jz_device_setup	nand/jz4730_nand.c	/^static void jz_device_setup(void)$/;"	f	file:
jz_device_setup	nand/jz4740_nand.c	/^static void jz_device_setup(void)$/;"	f	file:
jz_device_setup	nand/jz4750_nand.c	/^static void jz_device_setup(void)$/;"	f	file:
jz_hwcontrol	nand/jz4730_nand.c	/^static void jz_hwcontrol(struct mtd_info *mtd, int dat, $/;"	f	file:
jz_hwcontrol	nand/jz4740_nand.c	/^static void jz_hwcontrol(struct mtd_info *mtd, int dat, $/;"	f	file:
jz_hwcontrol	nand/jz4750_nand.c	/^static void jz_hwcontrol(struct mtd_info *mtd, int dat, u32 ctrl)$/;"	f	file:
jz_mtd	nand/jz4730_nand.c	/^static struct mtd_info *jz_mtd = NULL;$/;"	v	typeref:struct:mtd_info	file:
jz_mtd	nand/jz4740_nand.c	/^static struct mtd_info *jz_mtd = NULL;$/;"	v	typeref:struct:mtd_info	file:
jz_mtd	nand/jz4750_nand.c	/^static struct mtd_info *jz_mtd = NULL;$/;"	v	typeref:struct:mtd_info	file:
jz_mtd1	nand/nand_base.c	/^struct mtd_info *jz_mtd1 = NULL; \/* for 1 plane operation *\/$/;"	v	typeref:struct:mtd_info
jz_mtdblock_cache	nand/nand_base.c	/^unsigned char **jz_mtdblock_cache = NULL; \/* used by mtdblock-jz.c *\/$/;"	v
jznand_cleanup	nand/jz4730_nand.c	/^module_exit(jznand_cleanup);$/;"	v
jznand_cleanup	nand/jz4730_nand.c	/^static void __exit jznand_cleanup(void)$/;"	f	file:
jznand_cleanup	nand/jz4740_nand.c	/^module_exit(jznand_cleanup);$/;"	v
jznand_cleanup	nand/jz4740_nand.c	/^static void __exit jznand_cleanup(void)$/;"	f	file:
jznand_cleanup	nand/jz4750_nand.c	/^module_exit(jznand_cleanup);$/;"	v
jznand_cleanup	nand/jz4750_nand.c	/^static void __exit jznand_cleanup(void)$/;"	f	file:
jznand_init	nand/jz4730_nand.c	/^int __init jznand_init(void)$/;"	f
jznand_init	nand/jz4730_nand.c	/^module_init(jznand_init);$/;"	v
jznand_init	nand/jz4740_nand.c	/^int __init jznand_init(void)$/;"	f
jznand_init	nand/jz4740_nand.c	/^module_init(jznand_init);$/;"	v
jznand_init	nand/jz4750_nand.c	/^int __init jznand_init(void)$/;"	f
jznand_init	nand/jz4750_nand.c	/^module_init(jznand_init);$/;"	v
jzsoc_nand_bch_correct_data	nand/jz4750_nand.c	/^static int jzsoc_nand_bch_correct_data(struct mtd_info *mtd, u_char * dat, u_char * errs0, u_char * calc_ecc)$/;"	f	file:
jzsoc_nand_bch_correct_data_cpu	nand/jz4750_nand.c	/^static int jzsoc_nand_bch_correct_data_cpu(struct mtd_info *mtd, u_char * dat, u_char * read_ecc, u_char * calc_ecc)$/;"	f	file:
jzsoc_nand_calculate_bch_ecc	nand/jz4750_nand.c	/^static int jzsoc_nand_calculate_bch_ecc(struct mtd_info *mtd, const u_char * dat, u_char * ecc_code)$/;"	f	file:
jzsoc_nand_calculate_ecc	nand/jz4730_nand.c	/^static int jzsoc_nand_calculate_ecc(struct mtd_info* mtd, const u_char* dat,$/;"	f	file:
jzsoc_nand_calculate_hm_ecc	nand/jz4740_nand.c	/^static int jzsoc_nand_calculate_hm_ecc(struct mtd_info* mtd, $/;"	f	file:
jzsoc_nand_calculate_rs_ecc	nand/jz4740_nand.c	/^static int jzsoc_nand_calculate_rs_ecc(struct mtd_info* mtd, const u_char* dat,$/;"	f	file:
jzsoc_nand_correct_data	nand/jz4730_nand.c	/^static int jzsoc_nand_correct_data(struct mtd_info *mtd, u_char *dat,$/;"	f	file:
jzsoc_nand_enable_bch_hwecc	nand/jz4750_nand.c	/^static void jzsoc_nand_enable_bch_hwecc(struct mtd_info *mtd, int mode)$/;"	f	file:
jzsoc_nand_enable_hm_hwecc	nand/jz4740_nand.c	/^static void jzsoc_nand_enable_hm_hwecc(struct mtd_info* mtd, int mode)$/;"	f	file:
jzsoc_nand_enable_hwecc	nand/jz4730_nand.c	/^static void jzsoc_nand_enable_hwecc(struct mtd_info* mtd, int mode)$/;"	f	file:
jzsoc_nand_enable_rs_hwecc	nand/jz4740_nand.c	/^static void jzsoc_nand_enable_rs_hwecc(struct mtd_info* mtd, int mode)$/;"	f	file:
jzsoc_nand_hm_correct_data	nand/jz4740_nand.c	/^static int jzsoc_nand_hm_correct_data(struct mtd_info *mtd, u_char *dat,$/;"	f	file:
jzsoc_nand_rs_correct_data	nand/jz4740_nand.c	/^static int jzsoc_nand_rs_correct_data(struct mtd_info *mtd, u_char *dat,$/;"	f	file:
jzsoc_rs_correct	nand/jz4740_nand.c	/^static void jzsoc_rs_correct(unsigned char *dat, int idx, int mask)$/;"	f	file:
k	mtd-utils/fec.c	/^    int k, n ;		\/* parameters of the code *\/$/;"	m	struct:fec_parms	file:
key	mtd-utils/ubi-utils/new-utils/src/dictionary.h	/^	char 		**  key ;	\/** List of string keys *\/$/;"	m	struct:_dictionary_
key	mtd-utils/ubi-utils/src/hashmap.c	/^	char* key;	\/* key '0' term. str *\/$/;"	m	struct:hashentry	file:
key_crc	mtd-utils/ubi-utils/src/pfi.c	/^	key_crc,$/;"	e	enum:key_id	file:
key_desc	mtd-utils/ubi-utils/src/pfi.c	/^static const struct key_descriptor *key_desc = key_desc_v1;$/;"	v	typeref:struct:key_descriptor	file:
key_desc_v1	mtd-utils/ubi-utils/src/pfi.c	/^static const struct key_descriptor key_desc_v1[] = {$/;"	v	typeref:struct:key_descriptor	file:
key_descriptor	mtd-utils/ubi-utils/src/pfi.c	/^struct key_descriptor {$/;"	s	file:
key_descriptors	mtd-utils/ubi-utils/src/pfi.c	/^static const struct key_descriptor *key_descriptors[] = {$/;"	v	typeref:struct:key_descriptor	file:
key_descriptors_max	mtd-utils/ubi-utils/src/pfi.c	/^static const int key_descriptors_max[] = {$/;"	v	file:
key_flags	mtd-utils/ubi-utils/src/pfi.c	/^	key_flags,$/;"	e	enum:key_id	file:
key_id	mtd-utils/ubi-utils/src/pfi.c	/^enum key_id {$/;"	g	file:
key_label	mtd-utils/ubi-utils/src/pfi.c	/^	key_label,$/;"	e	enum:key_id	file:
key_mode	mtd-utils/ubi-utils/src/pfi.c	/^	key_mode,$/;"	e	enum:key_id	file:
key_raw_starts	mtd-utils/ubi-utils/src/pfi.c	/^	key_raw_starts,$/;"	e	enum:key_id	file:
key_raw_total_size	mtd-utils/ubi-utils/src/pfi.c	/^	key_raw_total_size,$/;"	e	enum:key_id	file:
key_size	mtd-utils/ubi-utils/src/pfi.c	/^	key_size,$/;"	e	enum:key_id	file:
key_ubi_alignment	mtd-utils/ubi-utils/src/pfi.c	/^	key_ubi_alignment,$/;"	e	enum:key_id	file:
key_ubi_ids	mtd-utils/ubi-utils/src/pfi.c	/^	key_ubi_ids,$/;"	e	enum:key_id	file:
key_ubi_names	mtd-utils/ubi-utils/src/pfi.c	/^	key_ubi_names,$/;"	e	enum:key_id	file:
key_ubi_size	mtd-utils/ubi-utils/src/pfi.c	/^	key_ubi_size,$/;"	e	enum:key_id	file:
key_ubi_type	mtd-utils/ubi-utils/src/pfi.c	/^	key_ubi_type,$/;"	e	enum:key_id	file:
key_version	mtd-utils/ubi-utils/src/pfi.c	/^	key_version,	      \/* must be index position 0! *\/$/;"	e	enum:key_id	file:
keys_to_array	mtd-utils/ubi-utils/src/hashmap.c	/^keys_to_array(hashentry_t l, const char** a, size_t* i)$/;"	f	file:
kfree	mtd-utils/compr.h	35;"	d
kill_children	mtd-utils/tests/fs-tests/utils/fstest_monitor.c	/^void kill_children(void)$/;"	f
kill_final_newline	devices/block2mtd.c	/^static inline void kill_final_newline(char *str)$/;"	f	file:
kill_final_newline	devices/phram.c	/^static inline void kill_final_newline(char *str)$/;"	f	file:
kill_mtd_super	mtdsuper.c	/^EXPORT_SYMBOL_GPL(kill_mtd_super);$/;"	v
kill_mtd_super	mtdsuper.c	/^void kill_mtd_super(struct super_block *sb)$/;"	f
kill_volumes	ubi/build.c	/^static void kill_volumes(struct ubi_device *ubi)$/;"	f	file:
killed	mtd-utils/tests/fs-tests/utils/fstest_monitor.c	/^	int killed;$/;"	m	struct:child_info	file:
kmalloc	mtd-utils/compr.h	34;"	d
kref	nand/alauda.c	/^	struct kref		kref;$/;"	m	struct:alauda	typeref:struct:alauda::kref	file:
l440gx_map	maps/l440gx.c	/^static struct map_info l440gx_map = {$/;"	v	typeref:struct:map_info	file:
l440gx_set_vpp	maps/l440gx.c	/^static void l440gx_set_vpp(struct map_info *map, int vpp)$/;"	f	file:
largepage_flashbased	nand/nand_bbt.c	/^static struct nand_bbt_descr largepage_flashbased = {$/;"	v	typeref:struct:nand_bbt_descr	file:
largepage_memorybased	nand/nand_bbt.c	/^static struct nand_bbt_descr largepage_memorybased = {$/;"	v	typeref:struct:nand_bbt_descr	file:
largepage_memorybased	onenand/onenand_bbt.c	/^static struct nand_bbt_descr largepage_memorybased = {$/;"	v	typeref:struct:nand_bbt_descr	file:
lart_flash_exit	devices/lart.c	/^module_exit (lart_flash_exit);$/;"	v
lart_flash_exit	devices/lart.c	/^void __exit lart_flash_exit (void)$/;"	f
lart_flash_init	devices/lart.c	/^int __init lart_flash_init (void)$/;"	f
lart_flash_init	devices/lart.c	/^module_init (lart_flash_init);$/;"	v
lart_partitions	devices/lart.c	/^static struct mtd_partition lart_partitions[] = {$/;"	v	typeref:struct:mtd_partition	file:
lastUnit	mtd-utils/include/mtd/inftl-user.h	/^	__u32 lastUnit;$/;"	m	struct:INFTLPartition
last_data_size	ubi/scan.h	/^	int last_data_size;$/;"	m	struct:ubi_scan_volume
last_eb_bytes	ubi/ubi.h	/^	int last_eb_bytes;$/;"	m	struct:ubi_volume
lb_memcpy	udc_cache.c	/^static void lb_memcpy(void *target,void* source,unsigned int len)$/;"	f	file:
lb_memcpy	udc_cache.c	64;"	d	file:
le16_to_cpu	mtd-utils/include/mtd/jffs2-user.h	35;"	d
le16_to_cpu	mtd-utils/include/mtd_swab.h	44;"	d
le32_to_cpu	mtd-utils/include/mtd/jffs2-user.h	36;"	d
le32_to_cpu	mtd-utils/include/mtd_swab.h	46;"	d
le64_to_cpu	mtd-utils/include/mtd_swab.h	48;"	d
leb_count	ubi/scan.h	/^	int leb_count;$/;"	m	struct:ubi_scan_volume
leb_read_lock	ubi/eba.c	/^static int leb_read_lock(struct ubi_device *ubi, int vol_id, int lnum)$/;"	f	file:
leb_read_unlock	ubi/eba.c	/^static void leb_read_unlock(struct ubi_device *ubi, int vol_id, int lnum)$/;"	f	file:
leb_size	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int leb_size;$/;"	m	struct:ubi_dev_info
leb_size	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int leb_size;$/;"	m	struct:ubi_vol_info
leb_size	mtd-utils/ubi-utils/new-utils/include/libubigen.h	/^	int leb_size;$/;"	m	struct:ubigen_info
leb_size	mtd-utils/ubi-utils/src/libubigen.c	/^	size_t leb_size;	\/* Size of a logical EB in a physical EB *\/$/;"	m	struct:ubi_info	file:
leb_size	ubi/ubi.h	/^	int leb_size;$/;"	m	struct:ubi_device
leb_start	ubi/ubi.h	/^	int leb_start;$/;"	m	struct:ubi_device
leb_total	mtd-utils/ubi-utils/src/libubigen.c	/^	size_t leb_total;	\/* Total input size in logical EB *\/$/;"	m	struct:ubi_info	file:
leb_ver	mtd-utils/include/mtd/ubi-header.h	/^	uint32_t leb_ver; \/* obsolete, to be removed, don't use *\/$/;"	m	struct:ubi_vid_hdr
leb_ver	ubi/scan.h	/^	uint32_t leb_ver;$/;"	m	struct:ubi_scan_leb
leb_ver	ubi/ubi-media.h	/^	__be32  leb_ver; \/* obsolete, to be removed, don't use *\/$/;"	m	struct:ubi_vid_hdr
leb_write_lock	ubi/eba.c	/^static int leb_write_lock(struct ubi_device *ubi, int vol_id, int lnum)$/;"	f	file:
leb_write_trylock	ubi/eba.c	/^static int leb_write_trylock(struct ubi_device *ubi, int vol_id, int lnum)$/;"	f	file:
leb_write_unlock	ubi/eba.c	/^static void leb_write_unlock(struct ubi_device *ubi, int vol_id, int lnum)$/;"	f	file:
lebs	mtd-utils/ubi-utils/new-utils/src/ubimkvol.c	/^	int lebs;$/;"	m	struct:args	file:
length	afs.c	/^	u32 length;		\/* Actual size of image                  *\/$/;"	m	struct:image_info_struct	file:
length	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t length;$/;"	m	struct:mtd_oob_buf
length	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t length;$/;"	m	struct:nand_oobfree
length	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t length;$/;"	m	struct:otp_info
length	mtd-utils/include/mtd/mtd-abi.h	/^	uint64_t length;$/;"	m	struct:erase_info_user
length	mtd-utils/mkfs.jffs2.c	/^	int length;$/;"	m	struct:__anon17	file:
length	mtd-utils/nanddump.c	/^unsigned long	length;		\/\/ dump length$/;"	v
length	mtd-utils/nanddump_vfat.c	/^unsigned long	length;		\/\/ dump length$/;"	v
length	mtd-utils/tests/fs-tests/integrity/integck.c	/^	off_t length;$/;"	m	struct:file_info	file:
libubi	mtd-utils/tests/ubi-tests/integ.c	/^static libubi_t libubi;$/;"	v	file:
libubi	mtd-utils/tests/ubi-tests/io_basic.c	/^static libubi_t libubi;$/;"	v	file:
libubi	mtd-utils/tests/ubi-tests/io_paral.c	/^static libubi_t libubi;$/;"	v	file:
libubi	mtd-utils/tests/ubi-tests/io_read.c	/^static libubi_t libubi;$/;"	v	file:
libubi	mtd-utils/tests/ubi-tests/io_update.c	/^static libubi_t libubi;$/;"	v	file:
libubi	mtd-utils/tests/ubi-tests/mkvol_bad.c	/^static libubi_t libubi;$/;"	v	file:
libubi	mtd-utils/tests/ubi-tests/mkvol_basic.c	/^static libubi_t libubi;$/;"	v	file:
libubi	mtd-utils/tests/ubi-tests/mkvol_paral.c	/^static libubi_t libubi;$/;"	v	file:
libubi	mtd-utils/tests/ubi-tests/rsvol.c	/^static libubi_t libubi;$/;"	v	file:
libubi	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	/^struct libubi$/;"	s
libubi	mtd-utils/ubi-utils/src/libubi_int.h	/^struct libubi$/;"	s
libubi_close	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^void libubi_close(libubi_t desc)$/;"	f
libubi_close	mtd-utils/ubi-utils/src/libubi.c	/^void libubi_close(libubi_t desc)$/;"	f
libubi_open	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^libubi_t libubi_open(int required)$/;"	f
libubi_open	mtd-utils/ubi-utils/src/libubi.c	/^libubi_t libubi_open(void)$/;"	f
libubi_t	mtd-utils/ubi-utils/inc/libubi.h	/^typedef void * libubi_t;$/;"	t
libubi_t	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^typedef void * libubi_t;$/;"	t
lifetime	mtdblock-jz.c	/^	unsigned int lifetime;$/;"	m	struct:mtdblk_block_info	file:
lifetime	mtdblock-jz.c	/^	unsigned int lifetime;$/;"	m	struct:mtdblk_fake_fsbuf	file:
line_status	mtd-utils/ubi-utils/new-utils/src/libiniparser.c	/^} line_status ;$/;"	t	typeref:enum:_line_status_	file:
linear	mtd-utils/ubi-utils/src/unubi_analyze.h	/^	uint32_t linear;$/;"	m	struct:eb_info
lines	nand/nandsim.c	/^        } lines;$/;"	m	struct:nandsim	typeref:struct:nandsim::ns_lines_status	file:
link	mtd-utils/mkfs.jffs2.c	/^	char *link;					\/* Target a symlink points to. *\/$/;"	m	struct:filesystem_entry	file:
list	devices/block2mtd.c	/^	struct list_head list;$/;"	m	struct:block2mtd_dev	typeref:struct:block2mtd_dev::list_head	file:
list	devices/phram.c	/^	struct list_head list;$/;"	m	struct:phram_mtd_list	typeref:struct:phram_mtd_list::list_head	file:
list	maps/amd76xrom.c	/^	struct list_head list;$/;"	m	struct:amd76xrom_map_info	typeref:struct:amd76xrom_map_info::list_head	file:
list	maps/ck804xrom.c	/^	struct list_head list;$/;"	m	struct:ck804xrom_map_info	typeref:struct:ck804xrom_map_info::list_head	file:
list	maps/esb2rom.c	/^	struct list_head list;$/;"	m	struct:esb2rom_map_info	typeref:struct:esb2rom_map_info::list_head	file:
list	maps/ichxrom.c	/^	struct list_head list;$/;"	m	struct:ichxrom_map_info	typeref:struct:ichxrom_map_info::list_head	file:
list	mtd-utils/compr.h	/^	struct list_head list;$/;"	m	struct:jffs2_compressor	typeref:struct:jffs2_compressor::list_head
list	mtdpart.c	/^	struct list_head list;$/;"	m	struct:mtd_part	typeref:struct:mtd_part::list_head	file:
list	nand/nandsim.c	/^	struct list_head list;$/;"	m	struct:grave_page	typeref:struct:grave_page::list_head	file:
list	nand/nandsim.c	/^	struct list_head list;$/;"	m	struct:weak_block	typeref:struct:weak_block::list_head	file:
list	nand/nandsim.c	/^	struct list_head list;$/;"	m	struct:weak_page	typeref:struct:weak_page::list_head	file:
list	ubi/scan.h	/^		struct list_head list;$/;"	m	union:ubi_scan_leb::__anon20	typeref:struct:ubi_scan_leb::__anon20::list_head
list	ubi/ubi.h	/^	struct list_head list;$/;"	m	struct:vol_notifier	typeref:struct:vol_notifier::list_head
list	ubi/ubiblk.h	/^	struct list_head list;$/;"	m	struct:ubi_blktrans_dev	typeref:struct:ubi_blktrans_dev::list_head
list	ubi/ubiblk.h	/^	struct list_head list;$/;"	m	struct:ubi_blktrans_ops	typeref:struct:ubi_blktrans_ops::list_head
list	ubi/wl.c	/^	struct list_head list;$/;"	m	struct:ubi_work	typeref:struct:ubi_work::list_head	file:
list_add	mtd-utils/compr.c	/^static inline void list_add(struct list_head *new, struct list_head *head)$/;"	f	file:
list_add_tail	mtd-utils/compr.c	/^static inline void list_add_tail(struct list_head *new, struct list_head *head)$/;"	f	file:
list_bootenv	mtd-utils/ubi-utils/src/pddcustomize.c	/^list_bootenv(bootenv_t env)$/;"	f	file:
list_del	mtd-utils/compr.c	/^static inline void list_del(struct list_head *entry)$/;"	f	file:
list_entry	mtd-utils/compr.c	60;"	d	file:
list_for_each_entry	mtd-utils/compr.c	63;"	d	file:
list_head	mtd-utils/compr.h	/^struct list_head {$/;"	s
list_t	mtd-utils/ubi-utils/src/list.h	/^typedef struct node* list_t;$/;"	t	typeref:struct:node
lnum	mtd-utils/include/mtd/ubi-header.h	/^	uint32_t lnum;$/;"	m	struct:ubi_vid_hdr
lnum	mtd-utils/include/mtd/ubi-user.h	/^	int32_t lnum;$/;"	m	struct:ubi_leb_change_req
lnum	mtd-utils/include/mtd/ubi-user.h	/^	unsigned int lnum;$/;"	m	struct:ubi_leb
lnum	ubi/scan.h	/^	int lnum;$/;"	m	struct:ubi_scan_leb
lnum	ubi/ubi-media.h	/^	__be32  lnum;$/;"	m	struct:ubi_vid_hdr
lnum	ubi/ubi.h	/^	int lnum;$/;"	m	struct:ubi_ltree_entry
loadAddress	afs.c	/^	u32 loadAddress;	\/* Address program should be loaded to   *\/$/;"	m	struct:image_info_struct	file:
load_next_block	mtd-utils/mkfs.jffs2.c	/^int load_next_block() {$/;"	f
load_next_block	mtd-utils/sumtool.c	/^int load_next_block()$/;"	f
load_ubi	mtd-utils/tests/ubi-tests/integ.c	/^static void load_ubi(void)$/;"	f	file:
lock	devices/m25p80.c	/^	struct mutex		lock;$/;"	m	struct:m25p	typeref:struct:m25p::mutex	file:
lock	devices/mtd_dataflash.c	/^	struct mutex		lock;$/;"	m	struct:dataflash	typeref:struct:dataflash::mutex	file:
lock	ubi/ubiblk.h	/^      	struct mutex lock;$/;"	m	struct:ubi_blktrans_dev	typeref:struct:ubi_blktrans_dev::mutex
locked	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t locked;$/;"	m	struct:otp_info
loff_mtd_t	mtd-utils/include/mtd/mtd-abi.h	/^typedef unsigned long long loff_mtd_t;$/;"	t
log	nand/nandsim.c	/^static uint log            = CONFIG_NANDSIM_LOG;$/;"	v	file:
log10_initial_free_space	mtd-utils/tests/fs-tests/integrity/integck.c	/^static unsigned log10_initial_free_space = 0; \/* log10 of initial_free_space *\/$/;"	v	file:
log_msg	mtd-utils/ubi-utils/src/error.h	70;"	d
log_printf	mtd-utils/flashcp.c	/^static void log_printf (int level,const char *fmt, ...)$/;"	f	file:
logfile	mtd-utils/ubi-utils/src/pfiflash.c	/^	const char *logfile;$/;"	m	struct:myargs	file:
logfp	mtd-utils/ubi-utils/src/error.c	/^static FILE *logfp = NULL;$/;"	v	file:
logic_block_map	ssfdc.c	/^	unsigned short *logic_block_map; \/* all zones (max 8192 phys blocks on$/;"	m	struct:ssfdcr_record	file:
long_options	mtd-utils/mkfs.jffs2.c	/^static struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	mtd-utils/sumtool.c	/^static struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	mtd-utils/ubi-utils/new-utils/src/ubiattach.c	/^static const struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	mtd-utils/ubi-utils/new-utils/src/ubicrc32.c	/^static const struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	mtd-utils/ubi-utils/new-utils/src/ubicrcvol.c	/^struct option long_options[] = {$/;"	v	typeref:struct:option
long_options	mtd-utils/ubi-utils/new-utils/src/ubidetach.c	/^static const struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	mtd-utils/ubi-utils/new-utils/src/ubidumpvol.c	/^struct option long_options[] = {$/;"	v	typeref:struct:option
long_options	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	/^static const struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	mtd-utils/ubi-utils/new-utils/src/ubimkvol.c	/^static const struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	mtd-utils/ubi-utils/new-utils/src/ubinfo.c	/^static const struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	mtd-utils/ubi-utils/new-utils/src/ubinize.c	/^struct option long_options[] = {$/;"	v	typeref:struct:option
long_options	mtd-utils/ubi-utils/new-utils/src/ubirmvol.c	/^static const struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	mtd-utils/ubi-utils/new-utils/src/ubiupdatevol.c	/^struct option long_options[] = {$/;"	v	typeref:struct:option
long_options	mtd-utils/ubi-utils/src/bin2nand.c	/^struct option long_options[] = {$/;"	v	typeref:struct:option
long_options	mtd-utils/ubi-utils/src/mkbootenv.c	/^struct option long_options[] = {$/;"	v	typeref:struct:option
long_options	mtd-utils/ubi-utils/src/nand2bin.c	/^static struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	mtd-utils/ubi-utils/src/pddcustomize.c	/^struct option long_options[] = {$/;"	v	typeref:struct:option
long_options	mtd-utils/ubi-utils/src/pfi2bin.c	/^struct option long_options[] = {$/;"	v	typeref:struct:option
long_options	mtd-utils/ubi-utils/src/pfiflash.c	/^struct option long_options[] = {$/;"	v	typeref:struct:option
long_options	mtd-utils/ubi-utils/src/ubigen.c	/^struct option long_options[] = {$/;"	v	typeref:struct:option
long_options	mtd-utils/ubi-utils/src/ubimirror.c	/^struct option long_options[] = {$/;"	v	typeref:struct:option
long_options	mtd-utils/ubi-utils/src/unubi.c	/^struct option long_options[] = {$/;"	v	typeref:struct:option
longcmp	mtd-utils/ubi-utils/src/unubi_analyze.c	/^int longcmp(const void *a, const void *b)$/;"	f
lookuptbl	ubi/ubi.h	/^	struct ubi_wl_entry **lookuptbl;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::ubi_wl_entry
lowest_dev_num	mtd-utils/ubi-utils/inc/libubi.h	/^	int lowest_dev_num;$/;"	m	struct:ubi_info
lowest_dev_num	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int lowest_dev_num;$/;"	m	struct:ubi_info
lowest_vol_num	mtd-utils/ubi-utils/inc/libubi.h	/^	int lowest_vol_num;$/;"	m	struct:ubi_dev_info
lowest_vol_num	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int lowest_vol_num;$/;"	m	struct:ubi_dev_info
lowlvl_parts	maps/dilnetpc.c	/^static struct mtd_info *lowlvl_parts[NUM_PARTITIONS];$/;"	v	typeref:struct:mtd_info	file:
lsdir	mtd-utils/jffs2reader.c	/^void lsdir(char *o, size_t size, char *path, int recurse)$/;"	f
ltree	ubi/ubi.h	/^	struct rb_root ltree;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::rb_root
ltree_add_entry	ubi/eba.c	/^static struct ubi_ltree_entry *ltree_add_entry(struct ubi_device *ubi,$/;"	f	file:
ltree_lock	ubi/ubi.h	/^	spinlock_t ltree_lock;$/;"	m	struct:ubi_device
ltree_lookup	ubi/eba.c	/^static struct ubi_ltree_entry *ltree_lookup(struct ubi_device *ubi, int vol_id,$/;"	f	file:
lzo_compress_buf	mtd-utils/compr_lzo.c	/^static void *lzo_compress_buf;$/;"	v	file:
lzo_mem	mtd-utils/compr_lzo.c	/^static void *lzo_mem;$/;"	v	file:
m	mtd-utils/include/linux/jffs2.h	/^	uint32_t m;$/;"	m	struct:__anon10
m25p	devices/m25p80.c	/^struct m25p {$/;"	s	file:
m25p80_driver	devices/m25p80.c	/^static struct spi_driver m25p80_driver = {$/;"	v	typeref:struct:spi_driver	file:
m25p80_erase	devices/m25p80.c	/^static int m25p80_erase(struct mtd_info *mtd, struct erase_info *instr)$/;"	f	file:
m25p80_exit	devices/m25p80.c	/^module_exit(m25p80_exit);$/;"	v
m25p80_exit	devices/m25p80.c	/^static void m25p80_exit(void)$/;"	f	file:
m25p80_init	devices/m25p80.c	/^module_init(m25p80_init);$/;"	v
m25p80_init	devices/m25p80.c	/^static int m25p80_init(void)$/;"	f	file:
m25p80_read	devices/m25p80.c	/^static int m25p80_read(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
m25p80_write	devices/m25p80.c	/^static int m25p80_write(struct mtd_info *mtd, loff_t to, size_t len,$/;"	f	file:
m25p_data	devices/m25p80.c	/^static struct flash_info __devinitdata m25p_data [] = {$/;"	v	typeref:struct:__devinitdata	file:
m25p_probe	devices/m25p80.c	/^static int __devinit m25p_probe(struct spi_device *spi)$/;"	f	file:
m25p_remove	devices/m25p80.c	/^static int __devexit m25p_remove(struct spi_device *spi)$/;"	f	file:
magic	mtd-utils/fec.c	/^    u_long magic ;$/;"	m	struct:fec_parms	file:
magic	mtd-utils/include/linux/jffs2.h	/^	jint16_t magic;      \/* A constant magic number.  *\/$/;"	m	struct:jffs2_raw_inode
magic	mtd-utils/include/linux/jffs2.h	/^	jint16_t magic;$/;"	m	struct:jffs2_raw_dirent
magic	mtd-utils/include/linux/jffs2.h	/^	jint16_t magic;$/;"	m	struct:jffs2_raw_summary
magic	mtd-utils/include/linux/jffs2.h	/^	jint16_t magic;$/;"	m	struct:jffs2_raw_xattr
magic	mtd-utils/include/linux/jffs2.h	/^	jint16_t magic;$/;"	m	struct:jffs2_raw_xref
magic	mtd-utils/include/linux/jffs2.h	/^	jint16_t magic;$/;"	m	struct:jffs2_unknown_node
magic	mtd-utils/include/mtd/ubi-header.h	/^	uint32_t magic;$/;"	m	struct:ubi_ec_hdr
magic	mtd-utils/include/mtd/ubi-header.h	/^	uint32_t magic;$/;"	m	struct:ubi_vid_hdr
magic	mtd-utils/jffs-dump.c	/^	uint32_t magic;    \/* A constant magic number.  *\/$/;"	m	struct:jffs_raw_inode	file:
magic	mtd-utils/summary.h	/^	jint32_t magic; 	\/* == JFFS2_SUM_MAGIC *\/$/;"	m	struct:jffs2_sum_marker
magic	ubi/ubi-media.h	/^	__be32  magic;$/;"	m	struct:ubi_ec_hdr
magic	ubi/ubi-media.h	/^	__be32  magic;$/;"	m	struct:ubi_vid_hdr
main	mtd-utils/doc_loadbios.c	/^int main(int argc,char **argv)$/;"	f
main	mtd-utils/docfdisk.c	/^int main(int argc, char **argv)$/;"	f
main	mtd-utils/fectest.c	/^int main(void)$/;"	f
main	mtd-utils/flash_erase.c	/^int main(int argc,char *argv[])$/;"	f
main	mtd-utils/flash_eraseall.c	/^int main (int argc, char *argv[])$/;"	f
main	mtd-utils/flash_info.c	/^int main(int argc,char *argv[])$/;"	f
main	mtd-utils/flash_lock.c	/^int main(int argc, char *argv[])$/;"	f
main	mtd-utils/flash_otp_dump.c	/^int main(int argc,char *argv[])$/;"	f
main	mtd-utils/flash_otp_info.c	/^int main(int argc,char *argv[])$/;"	f
main	mtd-utils/flash_otp_lock.c	/^int main(int argc,char *argv[])$/;"	f
main	mtd-utils/flash_otp_write.c	/^int main(int argc,char *argv[])$/;"	f
main	mtd-utils/flash_unlock.c	/^int main(int argc, char *argv[])$/;"	f
main	mtd-utils/flashcp.c	/^int main (int argc,char *argv[])$/;"	f
main	mtd-utils/ftl_check.c	/^int main(int argc, char *argv[])$/;"	f
main	mtd-utils/ftl_format.c	/^int main(int argc, char *argv[])$/;"	f
main	mtd-utils/jffs-dump.c	/^main(int argc, char **argv)$/;"	f
main	mtd-utils/jffs2dump.c	/^int main(int argc, char **argv)$/;"	f
main	mtd-utils/jffs2reader.c	/^int main(int argc, char **argv)$/;"	f
main	mtd-utils/mkfs.jffs2.c	/^int main(int argc, char **argv)$/;"	f
main	mtd-utils/mtd_debug.c	/^int main (int argc,char *argv[])$/;"	f
main	mtd-utils/nanddump.c	/^int main(int argc, char **argv)$/;"	f
main	mtd-utils/nanddump_vfat.c	/^int main(int argc, char **argv)$/;"	f
main	mtd-utils/nandtest.c	/^int main(int argc, char **argv)$/;"	f
main	mtd-utils/nandwrite.c	/^int main(int argc, char **argv)$/;"	f
main	mtd-utils/nandwrite_mlc.c	/^int main(int argc, char **argv)$/;"	f
main	mtd-utils/nftl_format.c	/^int main(int argc, char **argv)$/;"	f
main	mtd-utils/nftldump.c	/^int main(int argc, char **argv)$/;"	f
main	mtd-utils/recv_image.c	/^int main(int argc, char **argv)$/;"	f
main	mtd-utils/rfddump.c	/^int main(int argc, char *argv[])$/;"	f
main	mtd-utils/rfdformat.c	/^int main(int argc, char *argv[])$/;"	f
main	mtd-utils/serve_image.c	/^int main(int argc, char **argv)$/;"	f
main	mtd-utils/sumtool.c	/^int main(int argc, char **argv)$/;"	f
main	mtd-utils/tests/checkfs/checkfs.c	/^int main(int argc, char **argv){$/;"	f
main	mtd-utils/tests/checkfs/makefiles.c	/^int main(void){$/;"	f
main	mtd-utils/tests/fs-tests/integrity/integck.c	/^int main(int argc, char *argv[])$/;"	f
main	mtd-utils/tests/fs-tests/simple/ftrunc.c	/^int main(int argc, char *argv[])$/;"	f
main	mtd-utils/tests/fs-tests/simple/orph.c	/^int main(int argc, char *argv[])$/;"	f
main	mtd-utils/tests/fs-tests/simple/test_1.c	/^int main(int argc, char *argv[])$/;"	f
main	mtd-utils/tests/fs-tests/simple/test_2.c	/^int main(int argc, char *argv[])$/;"	f
main	mtd-utils/tests/fs-tests/stress/atoms/fwrite00.c	/^int main(int argc, char *argv[])$/;"	f
main	mtd-utils/tests/fs-tests/stress/atoms/gcd_hupper.c	/^int main(int argc, char *argv[])$/;"	f
main	mtd-utils/tests/fs-tests/stress/atoms/pdfrun.c	/^int main(int argc, char *argv[])$/;"	f
main	mtd-utils/tests/fs-tests/stress/atoms/rmdir00.c	/^int main(int argc, char *argv[])$/;"	f
main	mtd-utils/tests/fs-tests/stress/atoms/rndrm00.c	/^int main(int argc, char *argv[])$/;"	f
main	mtd-utils/tests/fs-tests/stress/atoms/rndrm99.c	/^int main(int argc, char *argv[])$/;"	f
main	mtd-utils/tests/fs-tests/stress/atoms/rndwrite00.c	/^int main(int argc, char *argv[])$/;"	f
main	mtd-utils/tests/fs-tests/stress/atoms/stress_1.c	/^int main(int argc, char *argv[])$/;"	f
main	mtd-utils/tests/fs-tests/stress/atoms/stress_2.c	/^int main(int argc, char *argv[])$/;"	f
main	mtd-utils/tests/fs-tests/stress/atoms/stress_3.c	/^int main(int argc, char *argv[])$/;"	f
main	mtd-utils/tests/fs-tests/utils/free_space.c	/^int main(int argc, char *argv[])$/;"	f
main	mtd-utils/tests/fs-tests/utils/fstest_monitor.c	/^int main(int argc, char *argv[], char **env)$/;"	f
main	mtd-utils/tests/jittertest/JitterTest.c	/^int main($/;"	f
main	mtd-utils/tests/jittertest/plotJittervsFill.c	/^int main($/;"	f
main	mtd-utils/tests/ubi-tests/integ.c	/^int main(int argc,char *argv[])$/;"	f
main	mtd-utils/tests/ubi-tests/io_basic.c	/^int main(int argc, char * const argv[])$/;"	f
main	mtd-utils/tests/ubi-tests/io_paral.c	/^int main(int argc, char * const argv[])$/;"	f
main	mtd-utils/tests/ubi-tests/io_read.c	/^int main(int argc, char * const argv[])$/;"	f
main	mtd-utils/tests/ubi-tests/io_update.c	/^int main(int argc, char * const argv[])$/;"	f
main	mtd-utils/tests/ubi-tests/mkvol_bad.c	/^int main(int argc, char * const argv[])$/;"	f
main	mtd-utils/tests/ubi-tests/mkvol_basic.c	/^int main(int argc, char * const argv[])$/;"	f
main	mtd-utils/tests/ubi-tests/mkvol_paral.c	/^int main(int argc, char * const argv[])$/;"	f
main	mtd-utils/tests/ubi-tests/rsvol.c	/^int main(int argc, char * const argv[])$/;"	f
main	mtd-utils/tests/ubi-tests/volrefcnt.c	/^int main(int argc, char * const argv[])$/;"	f
main	mtd-utils/ubi-utils/new-utils/src/dictionary.c	/^int main(int argc, char *argv[])$/;"	f
main	mtd-utils/ubi-utils/new-utils/src/ubiattach.c	/^int main(int argc, char * const argv[])$/;"	f
main	mtd-utils/ubi-utils/new-utils/src/ubicrc32.c	/^int main(int argc, char * const argv[])$/;"	f
main	mtd-utils/ubi-utils/new-utils/src/ubicrcsf.c	/^int main(int argc, char * const argv[])$/;"	f
main	mtd-utils/ubi-utils/new-utils/src/ubicrcvol.c	/^int main(int argc, char * const argv[])$/;"	f
main	mtd-utils/ubi-utils/new-utils/src/ubidetach.c	/^int main(int argc, char * const argv[])$/;"	f
main	mtd-utils/ubi-utils/new-utils/src/ubidumpvol.c	/^int main(int argc, char * const argv[])$/;"	f
main	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	/^int main(int argc, char * const argv[])$/;"	f
main	mtd-utils/ubi-utils/new-utils/src/ubimkvol.c	/^int main(int argc, char * const argv[])$/;"	f
main	mtd-utils/ubi-utils/new-utils/src/ubinfo.c	/^int main(int argc, char * const argv[])$/;"	f
main	mtd-utils/ubi-utils/new-utils/src/ubinize.c	/^int main(int argc, char * const argv[])$/;"	f
main	mtd-utils/ubi-utils/new-utils/src/ubirefimg.c	/^int main(int argc, char * const argv[])$/;"	f
main	mtd-utils/ubi-utils/new-utils/src/ubirmvol.c	/^int main(int argc, char * const argv[])$/;"	f
main	mtd-utils/ubi-utils/new-utils/src/ubiupdatevol.c	/^int main(int argc, char * const argv[])$/;"	f
main	mtd-utils/ubi-utils/src/bin2nand.c	/^int main (int argc, char** argv)$/;"	f
main	mtd-utils/ubi-utils/src/mkbootenv.c	/^main(int argc, char **argv) {$/;"	f
main	mtd-utils/ubi-utils/src/nand2bin.c	/^main(int argc, char *argv[])$/;"	f
main	mtd-utils/ubi-utils/src/pddcustomize.c	/^main(int argc, char **argv) {$/;"	f
main	mtd-utils/ubi-utils/src/pfi2bin.c	/^main(int argc, char *argv[])$/;"	f
main	mtd-utils/ubi-utils/src/pfiflash.c	/^int main (int argc, char** argv)$/;"	f
main	mtd-utils/ubi-utils/src/ubigen.c	/^main(int argc, char **argv)$/;"	f
main	mtd-utils/ubi-utils/src/ubimirror.c	/^main(int argc, char **argv) {$/;"	f
main	mtd-utils/ubi-utils/src/unubi.c	/^main(int argc, char *argv[])$/;"	f
major	mtd-utils/ubi-utils/new-utils/include/libmtd.h	/^	int major;$/;"	m	struct:mtd_info
major	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int major;$/;"	m	struct:ubi_dev_info
major	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int major;$/;"	m	struct:ubi_vol_info
major	ubi/ubiblk.h	/^	int major;$/;"	m	struct:ubi_blktrans_ops
make_name	mtd-utils/tests/fs-tests/integrity/integck.c	/^static char *make_name(struct dir_info *dir)$/;"	f	file:
make_new_file	mtd-utils/tests/checkfs/checkfs.c	/^void make_new_file(char *filename){$/;"	f
manuf_id	onenand/onenand_sim.c	/^static int manuf_id	= CONFIG_ONENAND_SIM_MANUFACTURER;$/;"	v	file:
map	devices/slram.c	/^static char *map;$/;"	v	file:
map	devices/slram.c	/^static char *map[SLRAM_MAX_DEVICES_PARAMS];$/;"	v	file:
map	maps/amd76xrom.c	/^	struct map_info map;$/;"	m	struct:amd76xrom_map_info	typeref:struct:amd76xrom_map_info::map_info	file:
map	maps/bast-flash.c	/^	struct map_info		 map;$/;"	m	struct:bast_flash_info	typeref:struct:bast_flash_info::map_info	file:
map	maps/ceiva.c	/^	struct map_info *map;$/;"	m	struct:clps_info	typeref:struct:clps_info::map_info	file:
map	maps/ck804xrom.c	/^	struct map_info map;$/;"	m	struct:ck804xrom_map_info	typeref:struct:ck804xrom_map_info::map_info	file:
map	maps/esb2rom.c	/^	struct map_info map;$/;"	m	struct:esb2rom_map_info	typeref:struct:esb2rom_map_info::map_info	file:
map	maps/ichxrom.c	/^	struct map_info map;$/;"	m	struct:ichxrom_map_info	typeref:struct:ichxrom_map_info::map_info	file:
map	maps/integrator-flash.c	/^	struct map_info		map;$/;"	m	struct:armflash_info	typeref:struct:armflash_info::map_info	file:
map	maps/intel_vr_nor.c	/^	struct map_info map;$/;"	m	struct:vr_nor_mtd	typeref:struct:vr_nor_mtd::map_info	file:
map	maps/ixp2000.c	/^	struct		map_info map;$/;"	m	struct:ixp2000_flash_info	typeref:struct:ixp2000_flash_info::map_info	file:
map	maps/ixp4xx.c	/^	struct map_info map;$/;"	m	struct:ixp4xx_flash_info	typeref:struct:ixp4xx_flash_info::map_info	file:
map	maps/omap_nor.c	/^	struct map_info		map;$/;"	m	struct:omapflash_info	typeref:struct:omapflash_info::map_info	file:
map	maps/pci.c	/^	struct map_info map;$/;"	m	struct:map_pci_info	typeref:struct:map_pci_info::map_info	file:
map	maps/physmap.c	/^	struct map_info		map;$/;"	m	struct:physmap_flash_info	typeref:struct:physmap_flash_info::map_info	file:
map	maps/physmap_of.c	/^	struct map_info		map;$/;"	m	struct:of_flash	typeref:struct:of_flash::map_info	file:
map	maps/plat-ram.c	/^	struct map_info		 map;$/;"	m	struct:platram_info	typeref:struct:platram_info::map_info	file:
map	maps/pxa2xx-flash.c	/^	struct map_info		map;$/;"	m	struct:pxa2xx_flash_info	typeref:struct:pxa2xx_flash_info::map_info	file:
map	maps/sa1100-flash.c	/^	struct map_info map;$/;"	m	struct:sa_subdev_info	typeref:struct:sa_subdev_info::map_info	file:
map	maps/sun_uflash.c	/^	struct map_info 	map;	\/* mtd map info *\/$/;"	m	struct:uflash_dev	typeref:struct:uflash_dev::map_info	file:
map	mtd-utils/ubi-utils/src/bootenv.c	/^	hashmap_t map;	 \/\/\/< Pointer to hashmap which holds data structure.$/;"	m	struct:bootenv	file:
map_absent_chipdrv	chips/map_absent.c	/^static struct mtd_chip_driver map_absent_chipdrv = {$/;"	v	typeref:struct:mtd_chip_driver	file:
map_absent_destroy	chips/map_absent.c	/^static void map_absent_destroy(struct mtd_info *mtd)$/;"	f	file:
map_absent_erase	chips/map_absent.c	/^static int map_absent_erase(struct mtd_info *mtd, struct erase_info *instr)$/;"	f	file:
map_absent_exit	chips/map_absent.c	/^module_exit(map_absent_exit);$/;"	v
map_absent_exit	chips/map_absent.c	/^static void __exit map_absent_exit(void)$/;"	f	file:
map_absent_init	chips/map_absent.c	/^module_init(map_absent_init);$/;"	v
map_absent_init	chips/map_absent.c	/^static int __init map_absent_init(void)$/;"	f	file:
map_absent_probe	chips/map_absent.c	/^static struct mtd_info *map_absent_probe(struct map_info *map)$/;"	f	file:
map_absent_read	chips/map_absent.c	/^static int map_absent_read(struct mtd_info *mtd, loff_t from, size_t len, size_t *retlen, u_char *buf)$/;"	f	file:
map_absent_sync	chips/map_absent.c	/^static void map_absent_sync(struct mtd_info *mtd)$/;"	f	file:
map_absent_write	chips/map_absent.c	/^static int map_absent_write(struct mtd_info *mtd, loff_t to, size_t len, size_t *retlen, const u_char *buf)$/;"	f	file:
map_banks	maps/tqm8xxl.c	/^static struct map_info* map_banks[FLASH_BANK_MAX];$/;"	v	typeref:struct:map_info	file:
map_destroy	chips/chipreg.c	/^EXPORT_SYMBOL(map_destroy);$/;"	v
map_destroy	chips/chipreg.c	/^void map_destroy(struct mtd_info *mtd)$/;"	f
map_info	maps/fortunet.c	/^	struct map_info		map_info;$/;"	m	struct:map_region	typeref:struct:map_region::map_info	file:
map_len	ssfdc.c	/^	int map_len;			\/* n. phys_blocks on the card *\/$/;"	m	struct:ssfdcr_record	file:
map_name	maps/amd76xrom.c	/^	char map_name[sizeof(MOD_NAME) + 2 + ADDRESS_NAME_LEN];$/;"	m	struct:amd76xrom_map_info	file:
map_name	maps/ck804xrom.c	/^	char map_name[sizeof(MOD_NAME) + 2 + ADDRESS_NAME_LEN];$/;"	m	struct:ck804xrom_map_info	file:
map_name	maps/esb2rom.c	/^	char map_name[sizeof(MOD_NAME) + 2 + ADDRESS_NAME_LEN];$/;"	m	struct:esb2rom_map_info	file:
map_name	maps/fortunet.c	/^	char			map_name[MAX_NAME_SIZE];$/;"	m	struct:map_region	file:
map_name	maps/ichxrom.c	/^	char map_name[sizeof(MOD_NAME) + 2 + ADDRESS_NAME_LEN];$/;"	m	struct:ichxrom_map_info	file:
map_name	maps/pci.c	/^	const char *map_name;$/;"	m	struct:mtd_pci_info	file:
map_pci_info	maps/pci.c	/^struct map_pci_info {$/;"	s	file:
map_ram_exit	chips/map_ram.c	/^module_exit(map_ram_exit);$/;"	v
map_ram_exit	chips/map_ram.c	/^static void __exit map_ram_exit(void)$/;"	f	file:
map_ram_init	chips/map_ram.c	/^module_init(map_ram_init);$/;"	v
map_ram_init	chips/map_ram.c	/^static int __init map_ram_init(void)$/;"	f	file:
map_ram_probe	chips/map_ram.c	/^static struct mtd_info *map_ram_probe(struct map_info *map)$/;"	f	file:
map_region	maps/fortunet.c	/^struct map_region$/;"	s	file:
map_regions	maps/fortunet.c	/^static struct map_region	map_regions[MAX_NUM_REGIONS];$/;"	v	typeref:struct:map_region	file:
map_regions_parts	maps/fortunet.c	/^static int			map_regions_parts[MAX_NUM_REGIONS] = {0,0,0,0};$/;"	v	file:
map_regions_set	maps/fortunet.c	/^static int			map_regions_set[MAX_NUM_REGIONS] = {0,0,0,0};$/;"	v	file:
map_rom_exit	chips/map_rom.c	/^module_exit(map_rom_exit);$/;"	v
map_rom_exit	chips/map_rom.c	/^static void __exit map_rom_exit(void)$/;"	f	file:
map_rom_init	chips/map_rom.c	/^module_init(map_rom_init);$/;"	v
map_rom_init	chips/map_rom.c	/^static int __init map_rom_init(void)$/;"	f	file:
map_rom_probe	chips/map_rom.c	/^static struct mtd_info *map_rom_probe(struct map_info *map)$/;"	f	file:
mapram_chipdrv	chips/map_ram.c	/^static struct mtd_chip_driver mapram_chipdrv = {$/;"	v	typeref:struct:mtd_chip_driver	file:
mapram_erase	chips/map_ram.c	/^static int mapram_erase (struct mtd_info *mtd, struct erase_info *instr)$/;"	f	file:
mapram_nop	chips/map_ram.c	/^static void mapram_nop(struct mtd_info *mtd)$/;"	f	file:
mapram_read	chips/map_ram.c	/^static int mapram_read (struct mtd_info *mtd, loff_t from, size_t len, size_t *retlen, u_char *buf)$/;"	f	file:
mapram_write	chips/map_ram.c	/^static int mapram_write (struct mtd_info *mtd, loff_t to, size_t len, size_t *retlen, const u_char *buf)$/;"	f	file:
maprom_chipdrv	chips/map_rom.c	/^static struct mtd_chip_driver maprom_chipdrv = {$/;"	v	typeref:struct:mtd_chip_driver	file:
maprom_nop	chips/map_rom.c	/^static void maprom_nop(struct mtd_info *mtd)$/;"	f	file:
maprom_read	chips/map_rom.c	/^static int maprom_read (struct mtd_info *mtd, loff_t from, size_t len, size_t *retlen, u_char *buf)$/;"	f	file:
maprom_write	chips/map_rom.c	/^static int maprom_write (struct mtd_info *mtd, loff_t to, size_t len, size_t *retlen, const u_char *buf)$/;"	f	file:
maps	maps/amd76xrom.c	/^	struct list_head maps;$/;"	m	struct:amd76xrom_window	typeref:struct:amd76xrom_window::list_head	file:
maps	maps/ck804xrom.c	/^	struct list_head maps;$/;"	m	struct:ck804xrom_window	typeref:struct:ck804xrom_window::list_head	file:
maps	maps/esb2rom.c	/^	struct list_head maps;$/;"	m	struct:esb2rom_window	typeref:struct:esb2rom_window::list_head	file:
maps	maps/ichxrom.c	/^	struct list_head maps;$/;"	m	struct:ichxrom_window	typeref:struct:ichxrom_window::list_head	file:
mark_bbt_region	nand/nand_bbt.c	/^static void mark_bbt_region(struct mtd_info *mtd, struct nand_bbt_descr *td)$/;"	f	file:
mark_child_gone	mtd-utils/tests/fs-tests/utils/fstest_monitor.c	/^void mark_child_gone(pid_t child_pid)$/;"	f
mark_sector_deleted	rfd_ftl.c	/^static int mark_sector_deleted(struct partition *part, u_long old_addr)$/;"	f	file:
markbad	mtd-utils/nandtest.c	/^int markbad=0;$/;"	v
markbad	mtd-utils/nandwrite.c	/^int	markbad = 0;$/;"	v
markbad	mtd-utils/nandwrite_mlc.c	/^int	markbad = 1;$/;"	v
master	mtdpart.c	/^	struct mtd_info *master;$/;"	m	struct:mtd_part	typeref:struct:mtd_part::mtd_info	file:
matmul	mtd-utils/fec.c	/^matmul(gf *a, gf *b, gf *c, int n, int k, int m)$/;"	f	file:
max_ebs_per_vol	mtd-utils/tests/ubi-tests/integ.c	/^static long long max_ebs_per_vol = 0; \/* max number of ebs per vol (zero => no max) *\/$/;"	v	file:
max_ec	mtd-utils/ubi-utils/inc/libubi.h	/^	long long max_ec;$/;"	m	struct:ubi_dev_info
max_ec	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	long long max_ec;$/;"	m	struct:ubi_dev_info
max_ec	ubi/scan.h	/^	int max_ec;$/;"	m	struct:ubi_scan_info
max_ec	ubi/ubi.h	/^	int max_ec;$/;"	m	struct:ubi_device
max_erases	nand/nandsim.c	/^	unsigned int max_erases;$/;"	m	struct:weak_block	file:
max_reads	nand/nandsim.c	/^	unsigned int max_reads;$/;"	m	struct:grave_page	file:
max_sqnum	ubi/scan.h	/^	unsigned long long max_sqnum;$/;"	m	struct:ubi_scan_info
max_vol_count	mtd-utils/ubi-utils/inc/libubi.h	/^	int max_vol_count;$/;"	m	struct:ubi_dev_info
max_vol_count	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int max_vol_count;$/;"	m	struct:ubi_dev_info
max_volumes	mtd-utils/ubi-utils/new-utils/include/libubigen.h	/^	int max_volumes;$/;"	m	struct:ubigen_info
max_writes	nand/nandsim.c	/^	unsigned int max_writes;$/;"	m	struct:weak_page	file:
maxavs	mtd-utils/ubi-utils/new-utils/src/ubimkvol.c	/^	int maxavs;$/;"	m	struct:args	file:
maxsize	mtd-utils/ubi-utils/src/hashmap.c	/^	size_t maxsize;     \/* no. of hash buckets *\/$/;"	m	struct:hashmap	file:
mbd	ftl.c	/^    struct mtd_blktrans_dev mbd;$/;"	m	struct:partition_t	typeref:struct:partition_t::mtd_blktrans_dev	file:
mbd	rfd_ftl.c	/^	struct mtd_blktrans_dev mbd;$/;"	m	struct:partition	typeref:struct:partition::mtd_blktrans_dev	file:
mbd	ssfdc.c	/^	struct mtd_blktrans_dev mbd;$/;"	m	struct:ssfdcr_record	typeref:struct:ssfdcr_record::mtd_blktrans_dev	file:
mbx_map	maps/mbx860.c	/^struct map_info mbx_map = {$/;"	v	typeref:struct:map_info
mctime	mtd-utils/include/linux/jffs2.h	/^	jint32_t mctime;$/;"	m	struct:jffs2_raw_dirent
mean_ec	mtd-utils/ubi-utils/new-utils/include/libscan.h	/^	long long mean_ec;$/;"	m	struct:ubi_scan_info
mean_ec	ubi/scan.h	/^	int mean_ec;$/;"	m	struct:ubi_scan_info
mean_ec	ubi/ubi.h	/^	int mean_ec;$/;"	m	struct:ubi_device
mem_base	redboot.c	/^    uint32_t	  mem_base;      \/\/ Address in memory where it executes$/;"	m	struct:fis_image_desc	file:
mem_double	mtd-utils/ubi-utils/new-utils/src/dictionary.c	/^static void * mem_double(void * ptr, int size)$/;"	f	file:
mem_speed	maps/pcmciamtd.c	/^static int mem_speed;$/;"	v	file:
mem_type	maps/pcmciamtd.c	/^static int mem_type;$/;"	v	file:
memcmpb	inftlmount.c	/^static int memcmpb(void *a, int c, int n)$/;"	f	file:
memcmpb	nftlmount.c	/^static int memcmpb(void *a, int c, int n)$/;"	f	file:
memerase	mtd-utils/mtd_debug.c	/^static int memerase (int fd,struct erase_info_user *erase)$/;"	f	file:
meminfo	mtd-utils/docfdisk.c	/^mtd_info_t meminfo;$/;"	v
meminfo	mtd-utils/nandtest.c	/^struct mtd_info_user meminfo;$/;"	v	typeref:struct:mtd_info_user
meminfo	mtd-utils/nftl_format.c	/^mtd_info_t meminfo;$/;"	v
meminfo	mtd-utils/nftldump.c	/^static mtd_info_t meminfo;$/;"	v	file:
memorize_raw_eb	mtd-utils/ubi-utils/src/pfi2bin.c	/^memorize_raw_eb(pfi_raw_t pfi_raw, pdd_data_t pdd, list_t *raw_pebs,$/;"	f	file:
memory_exhausted	mtd-utils/mkfs.jffs2.c	/^static const char *const memory_exhausted = "memory exhausted";$/;"	v	file:
memory_limit	mtd-utils/tests/ubi-tests/io_paral.c	/^static long long memory_limit(void)$/;"	f	file:
merged_mtd	maps/dilnetpc.c	/^static struct mtd_info *merged_mtd;$/;"	v	typeref:struct:mtd_info	file:
merged_mtd	maps/sc520cdp.c	/^static struct mtd_info *merged_mtd;$/;"	v	typeref:struct:mtd_info	file:
mfr_id	chips/jedec_probe.c	/^	const __u16 mfr_id;$/;"	m	struct:amd_flash_info	file:
mh	mtd-utils/docfdisk.c	/^struct INFTLMediaHeader *mh;$/;"	v	typeref:struct:INFTLMediaHeader
mh0_page	nand/diskonchip.c	/^	int mh0_page;$/;"	m	struct:doc_priv	file:
mh1_page	nand/diskonchip.c	/^	int mh1_page;$/;"	m	struct:doc_priv	file:
min	mtd-utils/compr_zlib.c	42;"	d	file:
min	mtd-utils/jffs-dump.c	35;"	d	file:
min	mtd-utils/mkfs.jffs2.c	84;"	d	file:
min	mtd-utils/recv_image.c	23;"	d	file:
min	mtd-utils/tests/ubi-tests/common.h	36;"	d
min_ec	ubi/scan.h	/^	int min_ec;$/;"	m	struct:ubi_scan_info
min_io_size	mtd-utils/ubi-utils/inc/libubi.h	/^	int min_io_size;$/;"	m	struct:ubi_dev_info
min_io_size	mtd-utils/ubi-utils/new-utils/include/libmtd.h	/^	int min_io_size;$/;"	m	struct:mtd_info
min_io_size	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int min_io_size;$/;"	m	struct:ubi_dev_info
min_io_size	mtd-utils/ubi-utils/new-utils/include/libubigen.h	/^	int min_io_size;$/;"	m	struct:ubigen_info
min_io_size	mtd-utils/ubi-utils/new-utils/src/ubinize.c	/^	int min_io_size;$/;"	m	struct:args	file:
min_io_size	ubi/ubi.h	/^	int min_io_size;$/;"	m	struct:ubi_device
minor	mtd-utils/ubi-utils/new-utils/include/libmtd.h	/^	int minor;$/;"	m	struct:mtd_info
minor	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int minor;$/;"	m	struct:ubi_dev_info
minor	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int minor;$/;"	m	struct:ubi_vol_info
mirror_pattern	nand/nand_bbt.c	/^static uint8_t mirror_pattern[] = {'1', 't', 'b', 'B' };$/;"	v	file:
mirror_pattern	nand/rtc_from4.c	/^static uint8_t mirror_pattern[] = { '1', 't', 'b', 'B' };$/;"	v	file:
mirror_ubi_volumes	mtd-utils/ubi-utils/src/libpfiflash.c	/^mirror_ubi_volumes(uint32_t devno, list_t pfi_ubis,$/;"	f	file:
mk_empty	mtd-utils/ubi-utils/src/list.c	/^mk_empty(void)$/;"	f
mk_target_list	mtd-utils/ubi-utils/perl/mkpfi	/^sub mk_target_list($$) {$/;"	s
mkfs_debug_msg	mtd-utils/mkfs.jffs2.c	83;"	d	file:
mkftl	mtd-utils/MAKEDEV	/^function mkftl () {$/;"	f
mkinftl	mtd-utils/MAKEDEV	/^function mkinftl () {$/;"	f
mknftl	mtd-utils/MAKEDEV	/^function mknftl () {$/;"	f
mkpath	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^static char *mkpath(const char *path, const char *name)$/;"	f	file:
mkpath	mtd-utils/ubi-utils/src/libubi.c	/^static char *mkpath(const char *path, const char *name)$/;"	f	file:
mkpfi	mtd-utils/ubi-utils/scripts/Makefile	/^mkpfi		= mkpfi -v$/;"	m
mkpfi_cfg	mtd-utils/ubi-utils/scripts/Makefile	/^mkpfi_cfg	= test.cfg$/;"	m
mkrfd	mtd-utils/MAKEDEV	/^function mkrfd () {$/;"	f
mkvol_alignment	mtd-utils/tests/ubi-tests/mkvol_basic.c	/^static int mkvol_alignment(void)$/;"	f	file:
mkvol_basic	mtd-utils/tests/ubi-tests/mkvol_basic.c	/^static int mkvol_basic(void)$/;"	f	file:
mkvol_multiple	mtd-utils/tests/ubi-tests/mkvol_basic.c	/^static int mkvol_multiple(void)$/;"	f	file:
mkvol_rmvol_test	mtd-utils/ubi-utils/scripts/ubi_test.sh	/^mkvol_rmvol_test ()$/;"	f
mmio	nand/cafe_nand.c	/^	void __iomem *mmio;$/;"	m	struct:cafe_priv	file:
mode	mtd-utils/include/linux/jffs2.h	/^	jmode_t mode;       \/* The file's type or mode.  *\/$/;"	m	struct:jffs2_raw_inode
mode	mtd-utils/jffs-dump.c	/^	uint32_t mode;     \/* file_type, mode  *\/$/;"	m	struct:jffs_raw_inode	file:
mode	mtdchar.c	/^	enum mtd_file_modes mode;$/;"	m	struct:mtd_file_info	typeref:enum:mtd_file_info::mtd_file_modes	file:
mode	ubi/ubi.h	/^	int mode;$/;"	m	struct:ubi_volume_desc
mode_no	mtd-utils/ubi-utils/src/pfi.c	/^	int mode_no;		 \/* current mode no. -> can only increase *\/$/;"	m	struct:pfi_header	file:
mode_string	mtd-utils/jffs2reader.c	/^const char *mode_string(int mode)$/;"	f
modes	mtd-utils/ubi-utils/src/pfi.c	/^static const char* modes[] = {"raw", "ubi"}; \/* order isn't arbitrary! *\/$/;"	v	file:
modnn	devices/docecc.c	/^modnn(int x)$/;"	f	file:
modnn	mtd-utils/fec.c	/^modnn(int x)$/;"	f	file:
module	devices/ms02-nv.h	/^		struct resource *module;$/;"	m	struct:ms02nv_private::__anon18	typeref:struct:ms02nv_private::__anon18::resource
module_id	nand/excite_nandflash.c	/^static const char module_id[] = "excite_nandflash";$/;"	v	file:
module_name	devices/lart.c	/^static char module_name[] = "lart";$/;"	v	file:
move_block_contents	rfd_ftl.c	/^static int move_block_contents(struct partition *part, int block_no, u_long *old_sector)$/;"	f	file:
move_from	ubi/ubi.h	/^	struct ubi_wl_entry *move_from;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::ubi_wl_entry
move_mutex	ubi/ubi.h	/^	struct mutex move_mutex;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::mutex
move_to	ubi/ubi.h	/^	struct ubi_wl_entry *move_to;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::ubi_wl_entry
move_to_put	ubi/ubi.h	/^	int move_to_put;$/;"	m	struct:ubi_device
mpc1211_flash_map	maps/mpc1211.c	/^struct map_info mpc1211_flash_map = {$/;"	v	typeref:struct:map_info
mpc1211_partitions	maps/mpc1211.c	/^static struct mtd_partition mpc1211_partitions[] = {$/;"	v	typeref:struct:mtd_partition	file:
ms02nv_cleanup	devices/ms02-nv.c	/^module_exit(ms02nv_cleanup);$/;"	v
ms02nv_cleanup	devices/ms02-nv.c	/^static void __exit ms02nv_cleanup(void)$/;"	f	file:
ms02nv_init	devices/ms02-nv.c	/^module_init(ms02nv_init);$/;"	v
ms02nv_init	devices/ms02-nv.c	/^static int __init ms02nv_init(void)$/;"	f	file:
ms02nv_init_one	devices/ms02-nv.c	/^static int __init ms02nv_init_one(ulong addr)$/;"	f	file:
ms02nv_name	devices/ms02-nv.c	/^static const char ms02nv_name[] = "DEC MS02-NV NVRAM";$/;"	v	file:
ms02nv_private	devices/ms02-nv.h	/^struct ms02nv_private {$/;"	s
ms02nv_probe_one	devices/ms02-nv.c	/^static inline uint ms02nv_probe_one(ulong addr)$/;"	f	file:
ms02nv_read	devices/ms02-nv.c	/^static int ms02nv_read(struct mtd_info *mtd, loff_t from,$/;"	f	file:
ms02nv_remove_one	devices/ms02-nv.c	/^static void __exit ms02nv_remove_one(void)$/;"	f	file:
ms02nv_res_csr	devices/ms02-nv.c	/^static const char ms02nv_res_csr[] = "Control and status register";$/;"	v	file:
ms02nv_res_diag_ram	devices/ms02-nv.c	/^static const char ms02nv_res_diag_ram[] = "Diagnostic RAM";$/;"	v	file:
ms02nv_res_user_ram	devices/ms02-nv.c	/^static const char ms02nv_res_user_ram[] = "General-purpose RAM";$/;"	v	file:
ms02nv_uint	devices/ms02-nv.h	/^typedef volatile u32 ms02nv_uint;$/;"	t
ms02nv_write	devices/ms02-nv.c	/^static int ms02nv_write(struct mtd_info *mtd, loff_t to,$/;"	f	file:
msize	devices/pmc551.c	/^static int msize = 0;$/;"	v	file:
msp_flash	maps/pmcmsp-flash.c	/^static struct mtd_info **msp_flash;$/;"	v	typeref:struct:mtd_info	file:
msp_maps	maps/pmcmsp-flash.c	/^static struct map_info *msp_maps;$/;"	v	typeref:struct:map_info	file:
msp_parts	maps/pmcmsp-flash.c	/^static struct mtd_partition **msp_parts;$/;"	v	typeref:struct:mtd_partition	file:
mtd	devices/block2mtd.c	/^	struct mtd_info mtd;$/;"	m	struct:block2mtd_dev	typeref:struct:block2mtd_dev::mtd_info	file:
mtd	devices/lart.c	/^static struct mtd_info mtd;$/;"	v	typeref:struct:mtd_info	file:
mtd	devices/m25p80.c	/^	struct mtd_info		mtd;$/;"	m	struct:m25p	typeref:struct:m25p::mtd_info	file:
mtd	devices/mtd_dataflash.c	/^	struct mtd_info		mtd;$/;"	m	struct:dataflash	typeref:struct:dataflash::mtd_info	file:
mtd	devices/phram.c	/^	struct mtd_info mtd;$/;"	m	struct:phram_mtd_list	typeref:struct:phram_mtd_list::mtd_info	file:
mtd	maps/amd76xrom.c	/^	struct mtd_info *mtd;$/;"	m	struct:amd76xrom_map_info	typeref:struct:amd76xrom_map_info::mtd_info	file:
mtd	maps/bast-flash.c	/^	struct mtd_info		*mtd;$/;"	m	struct:bast_flash_info	typeref:struct:bast_flash_info::mtd_info	file:
mtd	maps/ceiva.c	/^	struct mtd_info *mtd;$/;"	m	struct:clps_info	typeref:struct:clps_info::mtd_info	file:
mtd	maps/ck804xrom.c	/^	struct mtd_info *mtd;$/;"	m	struct:ck804xrom_map_info	typeref:struct:ck804xrom_map_info::mtd_info	file:
mtd	maps/esb2rom.c	/^	struct mtd_info *mtd;$/;"	m	struct:esb2rom_map_info	typeref:struct:esb2rom_map_info::mtd_info	file:
mtd	maps/ichxrom.c	/^	struct mtd_info *mtd;$/;"	m	struct:ichxrom_map_info	typeref:struct:ichxrom_map_info::mtd_info	file:
mtd	maps/integrator-flash.c	/^	struct mtd_info		*mtd;$/;"	m	struct:armflash_info	typeref:struct:armflash_info::mtd_info	file:
mtd	maps/ixp2000.c	/^	struct		mtd_info *mtd;$/;"	m	struct:ixp2000_flash_info	typeref:struct:ixp2000_flash_info::mtd_info	file:
mtd	maps/ixp4xx.c	/^	struct mtd_info *mtd;$/;"	m	struct:ixp4xx_flash_info	typeref:struct:ixp4xx_flash_info::mtd_info	file:
mtd	maps/omap_nor.c	/^	struct mtd_info		*mtd;$/;"	m	struct:omapflash_info	typeref:struct:omapflash_info::mtd_info	file:
mtd	maps/physmap.c	/^	struct mtd_info		*mtd;$/;"	m	struct:physmap_flash_info	typeref:struct:physmap_flash_info::mtd_info	file:
mtd	maps/physmap_of.c	/^	struct mtd_info		*mtd;$/;"	m	struct:of_flash	typeref:struct:of_flash::mtd_info	file:
mtd	maps/plat-ram.c	/^	struct mtd_info		*mtd;$/;"	m	struct:platram_info	typeref:struct:platram_info::mtd_info	file:
mtd	maps/pxa2xx-flash.c	/^	struct mtd_info		*mtd;$/;"	m	struct:pxa2xx_flash_info	typeref:struct:pxa2xx_flash_info::mtd_info	file:
mtd	maps/sa1100-flash.c	/^	struct mtd_info		*mtd;$/;"	m	struct:sa_info	typeref:struct:sa_info::mtd_info	file:
mtd	maps/sa1100-flash.c	/^	struct mtd_info *mtd;$/;"	m	struct:sa_subdev_info	typeref:struct:sa_subdev_info::mtd_info	file:
mtd	maps/sun_uflash.c	/^	struct mtd_info		*mtd;	\/* mtd info *\/$/;"	m	struct:uflash_dev	typeref:struct:uflash_dev::mtd_info	file:
mtd	mtdblock-jz.c	/^	struct mtd_info *mtd;$/;"	m	struct:mtdblk_dev	typeref:struct:mtdblk_dev::mtd_info	file:
mtd	mtdblock.c	/^	struct mtd_info *mtd;$/;"	m	struct:mtdblk_dev	typeref:struct:mtdblk_dev::mtd_info	file:
mtd	mtdchar.c	/^	struct mtd_info *mtd;$/;"	m	struct:mtd_file_info	typeref:struct:mtd_file_info::mtd_info	file:
mtd	mtdconcat.c	/^	struct mtd_info mtd;$/;"	m	struct:mtd_concat	typeref:struct:mtd_concat::mtd_info	file:
mtd	mtdoops.c	/^	struct mtd_info *mtd;$/;"	m	struct:mtdoops_context	typeref:struct:mtdoops_context::mtd_info	file:
mtd	mtdpart.c	/^	struct mtd_info mtd;$/;"	m	struct:mtd_part	typeref:struct:mtd_part::mtd_info	file:
mtd	nand/alauda.c	/^	struct mtd_info		*mtd;$/;"	m	struct:alauda	typeref:struct:alauda::mtd_info	file:
mtd	nand/at91_nand.c	/^	struct mtd_info		mtd;$/;"	m	struct:at91_nand_host	typeref:struct:at91_nand_host::mtd_info	file:
mtd	nand/bf5xx_nand.c	/^	struct mtd_info			mtd;$/;"	m	struct:bf5xx_nand_info	typeref:struct:bf5xx_nand_info::mtd_info	file:
mtd	nand/ndfc.c	/^	struct mtd_info			mtd;$/;"	m	struct:ndfc_nand_mtd	typeref:struct:ndfc_nand_mtd::mtd_info	file:
mtd	nand/plat_nand.c	/^	struct mtd_info		mtd;$/;"	m	struct:plat_nand_data	typeref:struct:plat_nand_data::mtd_info	file:
mtd	nand/s3c2410.c	/^	struct mtd_info			mtd;$/;"	m	struct:s3c2410_nand_mtd	typeref:struct:s3c2410_nand_mtd::mtd_info	file:
mtd	onenand/generic.c	/^	struct mtd_info		mtd;$/;"	m	struct:onenand_info	typeref:struct:onenand_info::mtd_info	file:
mtd	onenand/onenand_sim.c	/^	struct mtd_info		mtd;$/;"	m	struct:onenand_info	typeref:struct:onenand_info::mtd_info	file:
mtd	ubi/ubi.h	/^	struct mtd_info *mtd;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::mtd_info
mtd-y	Makefile	/^mtd-y				:= mtdcore.o mtdsuper.o$/;"	m
mtd_banks	maps/tqm8xxl.c	/^static struct mtd_info* mtd_banks[FLASH_BANK_MAX];$/;"	v	typeref:struct:mtd_info	file:
mtd_blk	mtdblock-jz.c	/^static int mtd_blk[8] = {0};  \/* Get from cmdline. Specify which blocks work over mtdblock-jz. *\/$/;"	v	file:
mtd_blkcore_priv	mtd_blkdevs.c	/^struct mtd_blkcore_priv {$/;"	s	file:
mtd_blkn	mtdblock-jz.c	/^static int mtd_blkn[8] = {0}; \/* Get from cmdline. Specify which blocks don't work over mtdblock-jz. *\/$/;"	v	file:
mtd_blktrans_exit	mtd_blkdevs.c	/^module_exit(mtd_blktrans_exit);$/;"	v
mtd_blktrans_exit	mtd_blkdevs.c	/^static void __exit mtd_blktrans_exit(void)$/;"	f	file:
mtd_blktrans_ops	mtd_blkdevs.c	/^static struct block_device_operations mtd_blktrans_ops = {$/;"	v	typeref:struct:block_device_operations	file:
mtd_blktrans_request	mtd_blkdevs.c	/^static void mtd_blktrans_request(struct request_queue *rq)$/;"	f	file:
mtd_blktrans_thread	mtd_blkdevs.c	/^static int mtd_blktrans_thread(void *arg)$/;"	f	file:
mtd_class	mtdchar.c	/^static struct class *mtd_class;$/;"	v	typeref:struct:class	file:
mtd_close	mtdchar.c	/^static int mtd_close(struct inode *inode, struct file *file)$/;"	f	file:
mtd_concat	mtdconcat.c	/^struct mtd_concat {$/;"	s	file:
mtd_concat_create	mtdconcat.c	/^EXPORT_SYMBOL(mtd_concat_create);$/;"	v
mtd_concat_create	mtdconcat.c	/^struct mtd_info *mtd_concat_create(struct mtd_info *subdev[],	\/* subdevices to concatenate *\/$/;"	f
mtd_concat_destroy	mtdconcat.c	/^EXPORT_SYMBOL(mtd_concat_destroy);$/;"	v
mtd_concat_destroy	mtdconcat.c	/^void mtd_concat_destroy(struct mtd_info *mtd)$/;"	f
mtd_count	nand/s3c2410.c	/^	int				mtd_count;$/;"	m	struct:s3c2410_nand_info	file:
mtd_dev_param	ubi/build.c	/^static struct mtd_dev_param mtd_dev_param[UBI_MAX_DEVICES];$/;"	v	typeref:struct:mtd_dev_param	file:
mtd_dev_param	ubi/build.c	/^struct mtd_dev_param$/;"	s	file:
mtd_device	mtd-utils/flash_eraseall.c	/^static const char *mtd_device;$/;"	v	file:
mtd_device	mtd-utils/nandwrite.c	/^char	*mtd_device, *img;$/;"	v
mtd_device	mtd-utils/nandwrite_mlc.c	/^char	*mtd_device, *img;$/;"	v
mtd_devs	ubi/build.c	/^static int mtd_devs = 0;$/;"	v	file:
mtd_do_chip_probe	chips/gen_probe.c	/^EXPORT_SYMBOL(mtd_do_chip_probe);$/;"	v
mtd_do_chip_probe	chips/gen_probe.c	/^struct mtd_info *mtd_do_chip_probe(struct map_info *map, struct chip_probe *cp)$/;"	f
mtd_ecc_stats	mtd-utils/include/mtd/mtd-abi.h	/^struct mtd_ecc_stats {$/;"	s
mtd_erase	mtd-utils/ubi-utils/new-utils/src/libmtd.c	/^int mtd_erase(const struct mtd_info *mtd, int eb)$/;"	f
mtd_erase_callback	mtdpart.c	/^EXPORT_SYMBOL_GPL(mtd_erase_callback);$/;"	v
mtd_erase_callback	mtdpart.c	/^void mtd_erase_callback(struct erase_info *instr)$/;"	f
mtd_file_info	mtdchar.c	/^struct mtd_file_info {$/;"	s	file:
mtd_file_modes	mtd-utils/include/mtd/mtd-abi.h	/^enum mtd_file_modes {$/;"	g
mtd_filename	mtd-utils/rfddump.c	/^	const char *mtd_filename;$/;"	m	struct:rfd	file:
mtd_fops	mtdchar.c	/^static const struct file_operations mtd_fops = {$/;"	v	typeref:struct:file_operations	file:
mtd_get_info	mtd-utils/ubi-utils/new-utils/src/libmtd.c	/^int mtd_get_info(const char *node, struct mtd_info *mtd)$/;"	f
mtd_has_partitions	devices/m25p80.c	58;"	d	file:
mtd_has_partitions	devices/m25p80.c	60;"	d	file:
mtd_has_partitions	devices/mtd_dataflash.c	100;"	d	file:
mtd_has_partitions	devices/mtd_dataflash.c	102;"	d	file:
mtd_id	cmdlinepart.c	/^	char *mtd_id;$/;"	m	struct:cmdline_mtd_partition	file:
mtd_index	mtd-utils/tests/fs-tests/stress/atoms/gcd_hupper.c	/^	int mtd_index;$/;"	m	struct:gcd_pid	file:
mtd_index	mtdoops.c	/^	int mtd_index;$/;"	m	struct:mtdoops_context	file:
mtd_info	devices/mtdram.c	/^static struct mtd_info *mtd_info;$/;"	v	typeref:struct:mtd_info	file:
mtd_info	maps/pcmciamtd.c	/^	struct mtd_info	*mtd_info;$/;"	m	struct:pcmciamtd_dev	typeref:struct:pcmciamtd_dev::mtd_info	file:
mtd_info	mtd-utils/ubi-utils/new-utils/include/libmtd.h	/^struct mtd_info$/;"	s
mtd_info_t	mtd-utils/include/mtd/mtd-user.h	/^typedef struct mtd_info_user mtd_info_t;$/;"	t	typeref:struct:mtd_info_user
mtd_info_user	mtd-utils/include/mtd/mtd-abi.h	/^struct mtd_info_user {$/;"	s
mtd_ioctl	mtdchar.c	/^static int mtd_ioctl(struct inode *inode, struct file *file,$/;"	f	file:
mtd_is_bad	mtd-utils/ubi-utils/new-utils/src/libmtd.c	/^int mtd_is_bad(const struct mtd_info *mtd, int eb)$/;"	f
mtd_lseek	mtdchar.c	/^static loff_t mtd_lseek (struct file *file, loff_t offset, int orig)$/;"	f	file:
mtd_name	maps/pcmciamtd.c	/^	char		mtd_name[sizeof(struct cistpl_vers_1_t)];$/;"	m	struct:pcmciamtd_dev	file:
mtd_notify_add	mtdchar.c	/^static void mtd_notify_add(struct mtd_info* mtd)$/;"	f	file:
mtd_notify_remove	mtdchar.c	/^static void mtd_notify_remove(struct mtd_info* mtd)$/;"	f	file:
mtd_num	mtd-utils/include/mtd/ubi-user.h	/^	int32_t mtd_num;$/;"	m	struct:ubi_attach_req
mtd_num	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int mtd_num;$/;"	m	struct:ubi_attach_request
mtd_num2ubi_dev	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^int mtd_num2ubi_dev(libubi_t desc, int mtd_num, int *dev_num)$/;"	f
mtd_oob_buf	mtd-utils/include/mtd/mtd-abi.h	/^struct mtd_oob_buf {$/;"	s
mtd_open	mtdchar.c	/^static int mtd_open(struct inode *inode, struct file *file)$/;"	f	file:
mtd_page_buf	mtd-utils/include/mtd/mtd-abi.h	/^struct mtd_page_buf {$/;"	s
mtd_part	maps/sbc8240.c	/^	struct mtd_partition* mtd_part;$/;"	m	struct:mtd_part_def	typeref:struct:mtd_part_def::mtd_partition	file:
mtd_part	maps/tqm8xxl.c	/^	struct mtd_partition* mtd_part;$/;"	m	struct:mtd_part_def	typeref:struct:mtd_part_def::mtd_partition	file:
mtd_part	mtdpart.c	/^struct mtd_part {$/;"	s	file:
mtd_part_def	maps/sbc8240.c	/^struct mtd_part_def$/;"	s	file:
mtd_part_def	maps/tqm8xxl.c	/^struct mtd_part_def$/;"	s	file:
mtd_parts	maps/edb7312.c	/^static struct mtd_partition *mtd_parts    = 0;$/;"	v	typeref:struct:mtd_partition	file:
mtd_parts	maps/h720x-flash.c	/^static struct mtd_partition *mtd_parts;$/;"	v	typeref:struct:mtd_partition	file:
mtd_parts	maps/impa7.c	/^static struct mtd_partition *mtd_parts[NUM_FLASHBANKS];$/;"	v	typeref:struct:mtd_partition	file:
mtd_parts_nb	maps/edb7312.c	/^static int                   mtd_parts_nb = 0;$/;"	v	file:
mtd_parts_nb	maps/impa7.c	/^static int mtd_parts_nb[NUM_FLASHBANKS];$/;"	v	file:
mtd_pci_copyfrom	maps/pci.c	/^static void mtd_pci_copyfrom(struct map_info *_map, void *to, unsigned long from, ssize_t len)$/;"	f	file:
mtd_pci_copyto	maps/pci.c	/^static void mtd_pci_copyto(struct map_info *_map, unsigned long to, const void *from, ssize_t len)$/;"	f	file:
mtd_pci_driver	maps/pci.c	/^static struct pci_driver mtd_pci_driver = {$/;"	v	typeref:struct:pci_driver	file:
mtd_pci_ids	maps/pci.c	/^static struct pci_device_id mtd_pci_ids[] = {$/;"	v	typeref:struct:pci_device_id	file:
mtd_pci_info	maps/pci.c	/^struct mtd_pci_info {$/;"	s	file:
mtd_pci_map	maps/pci.c	/^static const struct map_info mtd_pci_map = {$/;"	v	typeref:struct:map_info	file:
mtd_pci_maps_exit	maps/pci.c	/^module_exit(mtd_pci_maps_exit);$/;"	v
mtd_pci_maps_exit	maps/pci.c	/^static void __exit mtd_pci_maps_exit(void)$/;"	f	file:
mtd_pci_maps_init	maps/pci.c	/^module_init(mtd_pci_maps_init);$/;"	v
mtd_pci_maps_init	maps/pci.c	/^static int __init mtd_pci_maps_init(void)$/;"	f	file:
mtd_pci_probe	maps/pci.c	/^mtd_pci_probe(struct pci_dev *dev, const struct pci_device_id *id)$/;"	f	file:
mtd_pci_read32	maps/pci.c	/^static map_word mtd_pci_read32(struct map_info *_map, unsigned long ofs)$/;"	f	file:
mtd_pci_read8	maps/pci.c	/^static map_word mtd_pci_read8(struct map_info *_map, unsigned long ofs)$/;"	f	file:
mtd_pci_remove	maps/pci.c	/^mtd_pci_remove(struct pci_dev *dev)$/;"	f	file:
mtd_pci_write32	maps/pci.c	/^static void mtd_pci_write32(struct map_info *_map, map_word val, unsigned long ofs)$/;"	f	file:
mtd_pci_write8	maps/pci.c	/^static void mtd_pci_write8(struct map_info *_map, map_word val, unsigned long ofs)$/;"	f	file:
mtd_proc_info	mtdcore.c	/^static inline int mtd_proc_info (char *buf, int i)$/;"	f	file:
mtd_read	mtd-utils/ubi-utils/new-utils/src/libmtd.c	/^int mtd_read(const struct mtd_info *mtd, int eb, int offs, void *buf, int len)$/;"	f
mtd_read	mtdchar.c	/^static ssize_t mtd_read(struct file *file, char __user *buf, size_t count,loff_t *ppos)$/;"	f	file:
mtd_read_proc	mtdcore.c	/^static int mtd_read_proc (char *page, char **start, off_t off, int count,$/;"	f	file:
mtd_slram_setup	devices/slram.c	/^static int __init mtd_slram_setup(char *str)$/;"	f	file:
mtd_table	mtdcore.c	/^EXPORT_SYMBOL_GPL(mtd_table);$/;"	v
mtd_table	mtdcore.c	/^struct mtd_info *mtd_table[MAX_MTD_DEVICES];$/;"	v	typeref:struct:mtd_info
mtd_table_mutex	mtdcore.c	/^DEFINE_MUTEX(mtd_table_mutex);$/;"	v
mtd_table_mutex	mtdcore.c	/^EXPORT_SYMBOL_GPL(mtd_table_mutex);$/;"	v
mtd_to_m25p	devices/m25p80.c	/^static inline struct m25p *mtd_to_m25p(struct mtd_info *mtd)$/;"	f	file:
mtd_to_nand_info	nand/bf5xx_nand.c	/^static struct bf5xx_nand_info *mtd_to_nand_info(struct mtd_info *mtd)$/;"	f	file:
mtd_write	mtd-utils/ubi-utils/new-utils/src/libmtd.c	/^int mtd_write(const struct mtd_info *mtd, int eb, int offs, void *buf, int len)$/;"	f
mtd_write	mtdchar.c	/^static ssize_t mtd_write(struct file *file, const char __user *buf, size_t count,loff_t *ppos)$/;"	f	file:
mtdblk_block_info	mtdblock-jz.c	/^struct mtdblk_block_info{$/;"	s	file:
mtdblk_dev	mtdblock-jz.c	/^static struct mtdblk_dev {$/;"	s	file:
mtdblk_dev	mtdblock.c	/^static struct mtdblk_dev {$/;"	s	file:
mtdblk_fake_fsbuf	mtdblock-jz.c	/^struct mtdblk_fake_fsbuf{$/;"	s	file:
mtdblk_setup	mtdblock-jz.c	/^static int __init mtdblk_setup(char *str)$/;"	f	file:
mtdblk_zone_t	mtdblock-jz.c	/^struct mtdblk_zone_t {$/;"	s	file:
mtdblklog	mtdblock-jz.c	/^static int mtdblklog = 0;     \/* Get from cmdline. Specify whether some log is printed. *\/$/;"	v	file:
mtdblklog_setup	mtdblock-jz.c	/^static int __init mtdblklog_setup(char *str)$/;"	f	file:
mtdblkn_setup	mtdblock-jz.c	/^static int __init mtdblkn_setup(char *str)$/;"	f	file:
mtdblks	mtdblock-jz.c	/^} *mtdblks[MAX_MTD_DEVICES];$/;"	v	typeref:struct:mtdblk_dev	file:
mtdblks	mtdblock.c	/^} *mtdblks[MAX_MTD_DEVICES];$/;"	v	typeref:struct:mtdblk_dev	file:
mtdblock_add_mtd	mtdblock-jz.c	/^static void mtdblock_add_mtd(struct mtd_blktrans_ops *tr, struct mtd_info *mtd)$/;"	f	file:
mtdblock_add_mtd	mtdblock.c	/^static void mtdblock_add_mtd(struct mtd_blktrans_ops *tr, struct mtd_info *mtd)$/;"	f	file:
mtdblock_add_mtd	mtdblock_ro.c	/^static void mtdblock_add_mtd(struct mtd_blktrans_ops *tr, struct mtd_info *mtd)$/;"	f	file:
mtdblock_address_translate	mtdblock-jz.c	/^static int mtdblock_address_translate (struct mtdblk_dev *mtdblk, int virt_block, int *phys_block)$/;"	f	file:
mtdblock_block_info_map_bad_block	mtdblock-jz.c	/^static int mtdblock_block_info_map_bad_block (struct mtdblk_dev *mtdblk, int phys_block)$/;"	f	file:
mtdblock_block_lookup_map_entry	mtdblock-jz.c	/^static int mtdblock_block_lookup_map_entry (struct mtdblk_dev *mtdblk, int virt_block, int phys_block)$/;"	f	file:
mtdblock_block_lookup_unmap_entry	mtdblock-jz.c	/^static int mtdblock_block_lookup_unmap_entry (struct mtdblk_dev *mtdblk, int virt_block)$/;"	f	file:
mtdblock_erase_block	mtdblock-jz.c	/^static int mtdblock_erase_block(struct mtdblk_dev *mtdblk, int phys_block)$/;"	f	file:
mtdblock_exit	mtdblock_ro.c	/^module_exit(mtdblock_exit);$/;"	v
mtdblock_exit	mtdblock_ro.c	/^static void __exit mtdblock_exit(void)$/;"	f	file:
mtdblock_fill_block_cache	mtdblock-jz.c	/^static int mtdblock_fill_block_cache(struct mtdblk_dev *mtdblk)$/;"	f	file:
mtdblock_find_free_block	mtdblock-jz.c	/^static int mtdblock_find_free_block (struct mtdblk_dev *mtdblk, int *free_phys_block)$/;"	f	file:
mtdblock_flush	mtdblock-jz.c	/^static int mtdblock_flush(struct mtd_blktrans_dev *dev)$/;"	f	file:
mtdblock_flush	mtdblock.c	/^static int mtdblock_flush(struct mtd_blktrans_dev *dev)$/;"	f	file:
mtdblock_flush_cache	mtdblock-jz.c	/^int mtdblock_flush_cache (struct mtdblk_dev *mtdblk)$/;"	f
mtdblock_getgeo	mtdblock-jz.c	/^static int mtdblock_getgeo(struct mtd_blktrans_dev *dev, struct hd_geometry *geo)$/;"	f	file:
mtdblock_getgeo	mtdblock.c	/^static int mtdblock_getgeo(struct mtd_blktrans_dev *dev, struct hd_geometry *geo)$/;"	f	file:
mtdblock_init	mtdblock_ro.c	/^module_init(mtdblock_init);$/;"	v
mtdblock_init	mtdblock_ro.c	/^static int __init mtdblock_init(void)$/;"	f	file:
mtdblock_init_block_cache	mtdblock-jz.c	/^static void mtdblock_init_block_cache(struct mtdblk_dev *mtdblk)$/;"	f	file:
mtdblock_init_mtdblk	mtdblock-jz.c	/^static int mtdblock_init_mtdblk(int dev, struct mtd_info *mtd)$/;"	f	file:
mtdblock_mark_bad_block_to_nand	mtdblock-jz.c	/^static int mtdblock_mark_bad_block_to_nand(struct mtdblk_dev *mtdblk, int phys_block)$/;"	f	file:
mtdblock_move_to_another_block	mtdblock-jz.c	/^static int mtdblock_move_to_another_block(struct mtdblk_dev *mtdblk, int old_phys_block)$/;"	f	file:
mtdblock_open	mtdblock-jz.c	/^static int mtdblock_open(struct mtd_blktrans_dev *mbd)$/;"	f	file:
mtdblock_open	mtdblock.c	/^static int mtdblock_open(struct mtd_blktrans_dev *mbd)$/;"	f	file:
mtdblock_program_block	mtdblock-jz.c	/^static int mtdblock_program_block(struct mtdblk_dev *mtdblk, int phys_block)$/;"	f	file:
mtdblock_readsect	mtdblock-jz.c	/^static int mtdblock_readsect(struct mtd_blktrans_dev *dev,$/;"	f	file:
mtdblock_readsect	mtdblock.c	/^static int mtdblock_readsect(struct mtd_blktrans_dev *dev,$/;"	f	file:
mtdblock_readsect	mtdblock_ro.c	/^static int mtdblock_readsect(struct mtd_blktrans_dev *dev,$/;"	f	file:
mtdblock_release	mtdblock-jz.c	/^static int mtdblock_release(struct mtd_blktrans_dev *mbd)$/;"	f	file:
mtdblock_release	mtdblock.c	/^static int mtdblock_release(struct mtd_blktrans_dev *mbd)$/;"	f	file:
mtdblock_remove_dev	mtdblock-jz.c	/^static void mtdblock_remove_dev(struct mtd_blktrans_dev *dev)$/;"	f	file:
mtdblock_remove_dev	mtdblock.c	/^static void mtdblock_remove_dev(struct mtd_blktrans_dev *dev)$/;"	f	file:
mtdblock_remove_dev	mtdblock_ro.c	/^static void mtdblock_remove_dev(struct mtd_blktrans_dev *dev)$/;"	f	file:
mtdblock_setup_block_cache	mtdblock-jz.c	/^static void mtdblock_setup_block_cache ( struct mtdblk_dev *mtdblk, int virt_block, int new_phys_block, int old_phys_block)$/;"	f	file:
mtdblock_tr	mtdblock-jz.c	/^static struct mtd_blktrans_ops mtdblock_tr = {$/;"	v	typeref:struct:mtd_blktrans_ops	file:
mtdblock_tr	mtdblock.c	/^static struct mtd_blktrans_ops mtdblock_tr = {$/;"	v	typeref:struct:mtd_blktrans_ops	file:
mtdblock_tr	mtdblock_ro.c	/^static struct mtd_blktrans_ops mtdblock_tr = {$/;"	v	typeref:struct:mtd_blktrans_ops	file:
mtdblock_writesect	mtdblock-jz.c	/^static int mtdblock_writesect(struct mtd_blktrans_dev *dev,$/;"	f	file:
mtdblock_writesect	mtdblock.c	/^static int mtdblock_writesect(struct mtd_blktrans_dev *dev,$/;"	f	file:
mtdblock_writesect	mtdblock_ro.c	/^static int mtdblock_writesect(struct mtd_blktrans_dev *dev,$/;"	f	file:
mtdblock_zone_init	mtdblock-jz.c	/^static int mtdblock_zone_init(struct mtdblk_dev *mtdblk, int dev)$/;"	f	file:
mtdchar_erase_callback	mtdchar.c	/^static void mtdchar_erase_callback (struct erase_info *instr)$/;"	f	file:
mtddev	mtd-utils/nanddump.c	/^char    *mtddev;		\/\/ mtd device name$/;"	v
mtddev	mtd-utils/nanddump_vfat.c	/^char    *mtddev;		\/\/ mtd device name$/;"	v
mtdinfo	devices/slram.c	/^	struct mtd_info *mtdinfo;$/;"	m	struct:slram_mtd_list	typeref:struct:slram_mtd_list::mtd_info	file:
mtdn	mtd-utils/ubi-utils/new-utils/src/ubiattach.c	/^	int mtdn;$/;"	m	struct:args	file:
mtdn	mtd-utils/ubi-utils/new-utils/src/ubidetach.c	/^	int mtdn;$/;"	m	struct:args	file:
mtdoffset	mtd-utils/nandwrite.c	/^int	mtdoffset = 0;$/;"	v
mtdoffset	mtd-utils/nandwrite_mlc.c	/^unsigned long long mtdoffset = 0;$/;"	v
mtdoops_console	mtdoops.c	/^static struct console mtdoops_console = {$/;"	v	typeref:struct:console	file:
mtdoops_console_exit	mtdoops.c	/^module_exit(mtdoops_console_exit);$/;"	v
mtdoops_console_exit	mtdoops.c	/^static void __exit mtdoops_console_exit(void)$/;"	f	file:
mtdoops_console_init	mtdoops.c	/^static int __init mtdoops_console_init(void)$/;"	f	file:
mtdoops_console_init	mtdoops.c	/^subsys_initcall(mtdoops_console_init);$/;"	v
mtdoops_console_setup	mtdoops.c	/^static int __init mtdoops_console_setup(struct console *co, char *options)$/;"	f	file:
mtdoops_console_sync	mtdoops.c	/^static void mtdoops_console_sync(void)$/;"	f	file:
mtdoops_console_write	mtdoops.c	/^mtdoops_console_write(struct console *co, const char *s, unsigned int count)$/;"	f	file:
mtdoops_context	mtdoops.c	/^static struct mtdoops_context {$/;"	s	file:
mtdoops_erase_block	mtdoops.c	/^static int mtdoops_erase_block(struct mtd_info *mtd, int offset)$/;"	f	file:
mtdoops_erase_callback	mtdoops.c	/^static void mtdoops_erase_callback(struct erase_info *done)$/;"	f	file:
mtdoops_inc_counter	mtdoops.c	/^static int mtdoops_inc_counter(struct mtdoops_context *cxt)$/;"	f	file:
mtdoops_notifier	mtdoops.c	/^static struct mtd_notifier mtdoops_notifier = {$/;"	v	typeref:struct:mtd_notifier	file:
mtdoops_notify_add	mtdoops.c	/^static void mtdoops_notify_add(struct mtd_info *mtd)$/;"	f	file:
mtdoops_notify_remove	mtdoops.c	/^static void mtdoops_notify_remove(struct mtd_info *mtd)$/;"	f	file:
mtdoops_prepare	mtdoops.c	/^static void mtdoops_prepare(struct mtdoops_context *cxt)$/;"	f	file:
mtdoops_workfunc	mtdoops.c	/^static void mtdoops_workfunc(struct work_struct *work)$/;"	f	file:
mtdpart_setup	cmdlinepart.c	/^static int mtdpart_setup(char *s)$/;"	f	file:
mtdpart_setup_real	cmdlinepart.c	/^static int mtdpart_setup_real(char *s)$/;"	f	file:
mtdram_init_device	devices/mtdram.c	/^int mtdram_init_device(struct mtd_info *mtd, void *mapped_address,$/;"	f
mtds	nand/s3c2410.c	/^	struct s3c2410_nand_mtd		*mtds;$/;"	m	struct:s3c2410_nand_info	typeref:struct:s3c2410_nand_info::s3c2410_nand_mtd	file:
mtime	mtd-utils/include/linux/jffs2.h	/^	jint32_t mtime;      \/* Last modification time.  *\/$/;"	m	struct:jffs2_raw_inode
mtime	mtd-utils/jffs-dump.c	/^	uint32_t mtime;$/;"	m	struct:jffs_raw_inode	file:
mtx1_map	maps/mtx-1_flash.c	/^static struct map_info mtx1_map = {$/;"	v	typeref:struct:map_info	file:
mtx1_mtd	maps/mtx-1_flash.c	/^static struct mtd_info *mtx1_mtd;$/;"	v	typeref:struct:mtd_info	file:
mtx1_mtd_cleanup	maps/mtx-1_flash.c	/^module_exit(mtx1_mtd_cleanup);$/;"	v
mtx1_mtd_cleanup	maps/mtx-1_flash.c	/^static void __exit mtx1_mtd_cleanup(void)$/;"	f	file:
mtx1_mtd_init	maps/mtx-1_flash.c	/^int __init mtx1_mtd_init(void)$/;"	f
mtx1_mtd_init	maps/mtx-1_flash.c	/^module_init(mtx1_mtd_init);$/;"	v
mtx1_partitions	maps/mtx-1_flash.c	/^static struct mtd_partition mtx1_partitions[] = {$/;"	v	typeref:struct:mtd_partition	file:
multi_erase_cmd	nand/nand_base.c	/^static void multi_erase_cmd(struct mtd_info *mtd, int page)$/;"	f	file:
mutex	ubi/ubi.h	/^	struct rw_semaphore mutex;$/;"	m	struct:ubi_ltree_entry	typeref:struct:ubi_ltree_entry::rw_semaphore
my_fmemopen	mtd-utils/ubi-utils/src/pfi2bin.c	/^my_fmemopen (void *buf, size_t size, const char *opentype)$/;"	f	file:
my_malloc	mtd-utils/fec.c	/^my_malloc(int sz, char *err_string)$/;"	f	file:
my_sub_mtd	maps/ipaq-flash.c	/^static struct mtd_info *my_sub_mtd[MAX_IPAQ_CS] = {$/;"	v	typeref:struct:mtd_info	file:
my_ubi_mkvol	mtd-utils/ubi-utils/src/libpfiflash.c	/^my_ubi_mkvol(int devno, int s, pfi_ubi_t u,$/;"	f	file:
my_ubi_rmvol	mtd-utils/ubi-utils/src/libpfiflash.c	/^my_ubi_rmvol(int devno, uint32_t id,$/;"	f	file:
myargs	mtd-utils/ubi-utils/src/bin2nand.c	/^typedef struct myargs {$/;"	s	file:
myargs	mtd-utils/ubi-utils/src/bin2nand.c	/^} myargs;$/;"	t	typeref:struct:myargs	file:
myargs	mtd-utils/ubi-utils/src/mkbootenv.c	/^typedef struct myargs {$/;"	s	file:
myargs	mtd-utils/ubi-utils/src/mkbootenv.c	/^} myargs;$/;"	t	typeref:struct:myargs	file:
myargs	mtd-utils/ubi-utils/src/nand2bin.c	/^static struct args myargs = {$/;"	v	typeref:struct:args	file:
myargs	mtd-utils/ubi-utils/src/pddcustomize.c	/^typedef struct myargs {$/;"	s	file:
myargs	mtd-utils/ubi-utils/src/pddcustomize.c	/^} myargs;$/;"	t	typeref:struct:myargs	file:
myargs	mtd-utils/ubi-utils/src/pfi2bin.c	/^typedef struct myargs {$/;"	s	file:
myargs	mtd-utils/ubi-utils/src/pfi2bin.c	/^} myargs;$/;"	t	typeref:struct:myargs	file:
myargs	mtd-utils/ubi-utils/src/pfiflash.c	/^typedef struct myargs {$/;"	s	file:
myargs	mtd-utils/ubi-utils/src/pfiflash.c	/^} myargs;$/;"	t	typeref:struct:myargs	file:
myargs	mtd-utils/ubi-utils/src/ubigen.c	/^typedef struct myargs {$/;"	s	file:
myargs	mtd-utils/ubi-utils/src/ubigen.c	/^} myargs;$/;"	t	typeref:struct:myargs	file:
myargs	mtd-utils/ubi-utils/src/ubimirror.c	/^typedef struct myargs {$/;"	s	file:
myargs	mtd-utils/ubi-utils/src/ubimirror.c	/^} myargs;$/;"	t	typeref:struct:myargs	file:
mymtd	maps/alchemy-flash.c	/^static struct mtd_info *mymtd;$/;"	v	typeref:struct:mtd_info	file:
mymtd	maps/ceiva.c	/^static struct mtd_info *mymtd;$/;"	v	typeref:struct:mtd_info	file:
mymtd	maps/cfi_flagadm.c	/^static struct mtd_info *mymtd;$/;"	v	typeref:struct:mtd_info	file:
mymtd	maps/dbox2-flash.c	/^static struct mtd_info *mymtd;$/;"	v	typeref:struct:mtd_info	file:
mymtd	maps/dilnetpc.c	/^static struct mtd_info *mymtd;$/;"	v	typeref:struct:mtd_info	file:
mymtd	maps/edb7312.c	/^static struct mtd_info *mymtd;$/;"	v	typeref:struct:mtd_info	file:
mymtd	maps/fortunet.c	/^	struct mtd_info		*mymtd;$/;"	m	struct:map_region	typeref:struct:map_region::mtd_info	file:
mymtd	maps/h720x-flash.c	/^static struct mtd_info *mymtd;$/;"	v	typeref:struct:mtd_info	file:
mymtd	maps/ipaq-flash.c	/^static struct mtd_info *mymtd;$/;"	v	typeref:struct:mtd_info	file:
mymtd	maps/l440gx.c	/^static struct mtd_info *mymtd;$/;"	v	typeref:struct:mtd_info	file:
mymtd	maps/mbx860.c	/^static struct mtd_info *mymtd;$/;"	v	typeref:struct:mtd_info	file:
mymtd	maps/netsc520.c	/^static struct mtd_info *mymtd;$/;"	v	typeref:struct:mtd_info	file:
mymtd	maps/pnc2000.c	/^static struct mtd_info *mymtd;$/;"	v	typeref:struct:mtd_info	file:
mymtd	maps/rpxlite.c	/^static struct mtd_info *mymtd;$/;"	v	typeref:struct:mtd_info	file:
mymtd	maps/sc520cdp.c	/^static struct mtd_info *mymtd[NUM_FLASH_BANKS];$/;"	v	typeref:struct:mtd_info	file:
mymtd	maps/scx200_docflash.c	/^static struct mtd_info *mymtd;$/;"	v	typeref:struct:mtd_info	file:
mymtd	maps/sharpsl-flash.c	/^static struct mtd_info *mymtd;$/;"	v	typeref:struct:mtd_info	file:
mymtd	maps/ts5500_flash.c	/^static struct mtd_info *mymtd;$/;"	v	typeref:struct:mtd_info	file:
n	mtd-utils/fec.c	/^    int k, n ;		\/* parameters of the code *\/$/;"	m	struct:fec_parms	file:
n	mtd-utils/ubi-utils/new-utils/src/dictionary.h	/^	int				n ;		\/** Number of entries in dictionary *\/$/;"	m	struct:_dictionary_
n_sectors	devices/m25p80.c	/^	u16		n_sectors;$/;"	m	struct:flash_info	file:
name	afs.c	/^	char name[16];		\/* Null terminated                       *\/$/;"	m	struct:image_info_struct	file:
name	chips/jedec_probe.c	/^	const char *name;$/;"	m	struct:amd_flash_info	file:
name	devices/m25p80.c	/^	char		*name;$/;"	m	struct:flash_info	file:
name	devices/mtd_dataflash.c	/^	char			name[24];$/;"	m	struct:dataflash	file:
name	maps/sa1100-flash.c	/^	char name[16];$/;"	m	struct:sa_subdev_info	file:
name	maps/sun_uflash.c	/^	const char		*name;	\/* device name *\/$/;"	m	struct:uflash_dev	file:
name	mtd-utils/compr.h	/^	char *name;$/;"	m	struct:jffs2_compressor
name	mtd-utils/include/linux/jffs2.h	/^	uint8_t name[0];$/;"	m	struct:jffs2_raw_dirent
name	mtd-utils/include/mtd/ubi-header.h	/^	uint8_t  name[UBI_VOL_NAME_MAX+1];$/;"	m	struct:ubi_vtbl_record
name	mtd-utils/include/mtd/ubi-user.h	/^	char name[UBI_MAX_VOLUME_NAME + 1];$/;"	m	struct:ubi_mkvol_req
name	mtd-utils/jffs-dump.c	/^	char *name;$/;"	m	struct:jffs_file	file:
name	mtd-utils/jffs2reader.c	/^	char name[256];$/;"	m	struct:dir	file:
name	mtd-utils/mkfs.jffs2.c	/^	char *name;					\/* Name of this directory (think basename) *\/$/;"	m	struct:filesystem_entry	file:
name	mtd-utils/summary.h	/^	uint8_t name[0];	\/* dirent name *\/$/;"	m	struct:jffs2_sum_dirent_flash
name	mtd-utils/summary.h	/^	uint8_t name[0];	\/* dirent name *\/$/;"	m	struct:jffs2_sum_dirent_mem
name	mtd-utils/tests/fs-tests/integrity/integck.c	/^	char *name;$/;"	m	struct:dir_info	file:
name	mtd-utils/tests/fs-tests/integrity/integck.c	/^	char *name;$/;"	m	struct:file_info	file:
name	mtd-utils/tests/fs-tests/stress/atoms/gcd_hupper.c	/^	char *name;$/;"	m	struct:gcd_pid	file:
name	mtd-utils/ubi-utils/inc/libubi.h	/^	char name[UBI_VOL_NAME_MAX + 1];$/;"	m	struct:ubi_vol_info
name	mtd-utils/ubi-utils/inc/libubi.h	/^	const char *name;$/;"	m	struct:ubi_mkvol_request
name	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	char name[UBI_VOL_NAME_MAX + 1];$/;"	m	struct:ubi_vol_info
name	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	const char *name;$/;"	m	struct:ubi_mkvol_request
name	mtd-utils/ubi-utils/new-utils/include/libubigen.h	/^	const char *name;$/;"	m	struct:ubigen_vol_info
name	mtd-utils/ubi-utils/new-utils/src/ubimkvol.c	/^	const char *name;$/;"	m	struct:args	file:
name	mtd-utils/ubi-utils/src/pfi.c	/^	const char *name;$/;"	m	struct:key_descriptor	file:
name	redboot.c	/^    unsigned char name[16];      \/\/ Null terminated name$/;"	m	struct:fis_image_desc	file:
name	ubi/build.c	/^	char name[MTD_PARAM_LEN_MAX];$/;"	m	struct:mtd_dev_param	file:
name	ubi/ubi-media.h	/^	__u8    name[UBI_VOL_NAME_MAX+1];$/;"	m	struct:ubi_vtbl_record
name	ubi/ubi.h	/^	char name[UBI_VOL_NAME_MAX+1];$/;"	m	struct:ubi_volume
name	ubi/ubiblk.h	/^	char *name;$/;"	m	struct:ubi_blktrans_ops
name_crc	mtd-utils/include/linux/jffs2.h	/^	jint32_t name_crc;$/;"	m	struct:jffs2_raw_dirent
name_len	mtd-utils/include/linux/jffs2.h	/^	uint8_t name_len;$/;"	m	struct:jffs2_raw_xattr
name_len	mtd-utils/include/mtd/ubi-header.h	/^	uint16_t name_len;$/;"	m	struct:ubi_vtbl_record
name_len	mtd-utils/include/mtd/ubi-user.h	/^	int16_t name_len;$/;"	m	struct:ubi_mkvol_req
name_len	mtd-utils/mkfs.jffs2.c	/^	int name_len;$/;"	m	struct:xattr_entry	file:
name_len	mtd-utils/ubi-utils/new-utils/include/libubigen.h	/^	int name_len;$/;"	m	struct:ubigen_vol_info
name_len	ubi/ubi-media.h	/^	__be16  name_len;$/;"	m	struct:ubi_vtbl_record
name_len	ubi/ubi.h	/^	int name_len;$/;"	m	struct:ubi_volume
names	mtd-utils/ubi-utils/src/reader.h	/^	char	 **names;$/;"	m	struct:pfi_ubi
names_size	mtd-utils/ubi-utils/src/reader.h	/^	uint32_t names_size;$/;"	m	struct:pfi_ubi
nand	nand/cafe_nand.c	/^	struct nand_chip nand;$/;"	m	struct:cafe_priv	typeref:struct:cafe_priv::nand_chip	file:
nand-objs	nand/Makefile	/^nand-objs := nand_base.o nand_bbt.o$/;"	m
nand_base_exit	nand/nand_base.c	/^module_exit(nand_base_exit);$/;"	v
nand_base_exit	nand/nand_base.c	/^static void __exit nand_base_exit(void)$/;"	f	file:
nand_base_init	nand/nand_base.c	/^module_init(nand_base_init);$/;"	v
nand_base_init	nand/nand_base.c	/^static int __init nand_base_init(void)$/;"	f	file:
nand_block_bad	nand/nand_base.c	/^static int nand_block_bad(struct mtd_info *mtd, loff_mtd_t ofs, int getchip)$/;"	f	file:
nand_block_checkbad	nand/nand_base.c	/^static int nand_block_checkbad(struct mtd_info *mtd, loff_mtd_t ofs, int getchip,$/;"	f	file:
nand_block_isbad	nand/nand_base.c	/^static int nand_block_isbad(struct mtd_info *mtd, loff_mtd_t offs)$/;"	f	file:
nand_block_markbad	nand/nand_base.c	/^static int nand_block_markbad(struct mtd_info *mtd, loff_mtd_t ofs)$/;"	f	file:
nand_calculate_ecc	mtd-utils/ubi-utils/src/nandecc.c	/^int nand_calculate_ecc(const uint8_t *dat, uint8_t *ecc_code)$/;"	f
nand_calculate_ecc	nand/nand_ecc.c	/^EXPORT_SYMBOL(nand_calculate_ecc);$/;"	v
nand_calculate_ecc	nand/nand_ecc.c	/^int nand_calculate_ecc(struct mtd_info *mtd, const u_char *dat,$/;"	f
nand_check_wp	nand/nand_base.c	/^static int nand_check_wp(struct mtd_info *mtd)$/;"	f	file:
nand_chip	nand/at91_nand.c	/^	struct nand_chip	nand_chip;$/;"	m	struct:at91_nand_host	typeref:struct:at91_nand_host::nand_chip	file:
nand_chips	nand/jz4750_nand.c	/^static int nand_chips = 1;  \/* Number of nand chips to be scanned *\/$/;"	v	file:
nand_command	nand/nand_base.c	/^static void nand_command(struct mtd_info *mtd, unsigned int command,$/;"	f	file:
nand_command_lp	nand/nand_base.c	/^static void nand_command_lp(struct mtd_info *mtd, unsigned int command,$/;"	f	file:
nand_correct_data	mtd-utils/ubi-utils/src/nandcorr.c	/^int nand_correct_data(uint8_t *dat, const uint8_t *read_ecc,$/;"	f
nand_correct_data	nand/nand_ecc.c	/^EXPORT_SYMBOL(nand_correct_data);$/;"	v
nand_correct_data	nand/nand_ecc.c	/^int nand_correct_data(struct mtd_info *mtd, u_char *dat,$/;"	f
nand_cs_off	nand/cmx270_nand.c	/^static void nand_cs_off(void)$/;"	f	file:
nand_cs_on	nand/cmx270_nand.c	/^static inline void nand_cs_on(void)$/;"	f	file:
nand_default_bbt	nand/nand_bbt.c	/^EXPORT_SYMBOL(nand_default_bbt);$/;"	v
nand_default_bbt	nand/nand_bbt.c	/^int nand_default_bbt(struct mtd_info *mtd)$/;"	f
nand_default_block_markbad	nand/nand_base.c	/^static int nand_default_block_markbad(struct mtd_info *mtd, loff_mtd_t ofs)$/;"	f	file:
nand_dma_chan	nand/jz4750_nand.c	/^static char nand_dma_chan;	\/* automatically select a free channel *\/$/;"	v	file:
nand_dma_irq	nand/jz4750_nand.c	/^static irqreturn_t nand_dma_irq(int irq, void *dev_id)$/;"	f	file:
nand_do_read_oob	nand/nand_base.c	/^static int nand_do_read_oob(struct mtd_info *mtd, loff_mtd_t from,$/;"	f	file:
nand_do_read_ops	nand/nand_base.c	/^static int nand_do_read_ops(struct mtd_info *mtd, loff_mtd_t from,$/;"	f	file:
nand_do_write_oob	nand/nand_base.c	/^static int nand_do_write_oob(struct mtd_info *mtd, loff_mtd_t to,$/;"	f	file:
nand_do_write_ops	nand/nand_base.c	/^static int nand_do_write_ops(struct mtd_info *mtd, loff_mtd_t to,$/;"	f	file:
nand_ecc_precalc_table	mtd-utils/ubi-utils/src/nandecc.c	/^static const uint8_t nand_ecc_precalc_table[] = {$/;"	v	file:
nand_ecc_precalc_table	nand/nand_ecc.c	/^static const u_char nand_ecc_precalc_table[] = {$/;"	v	file:
nand_ecclayout	mtd-utils/include/mtd/mtd-abi.h	/^struct nand_ecclayout {$/;"	s
nand_ecclayout_t	mtd-utils/include/mtd/mtd-user.h	/^typedef struct nand_ecclayout nand_ecclayout_t;$/;"	t	typeref:struct:nand_ecclayout
nand_erase	nand/nand_base.c	/^static int nand_erase(struct mtd_info *mtd, struct erase_info *instr)$/;"	f	file:
nand_erase_nand	nand/nand_base.c	/^int nand_erase_nand(struct mtd_info *mtd, struct erase_info *instr,$/;"	f
nand_fill_oob	nand/nand_base.c	/^static uint8_t *nand_fill_oob(struct nand_chip *chip, uint8_t *oob,$/;"	f	file:
nand_flash_ids	nand/nand_ids.c	/^EXPORT_SYMBOL(nand_flash_ids);$/;"	v
nand_flash_ids	nand/nand_ids.c	/^struct nand_flash_dev nand_flash_ids[] = {$/;"	v	typeref:struct:nand_flash_dev
nand_get_device	nand/nand_base.c	/^nand_get_device(struct nand_chip *chip, struct mtd_info *mtd, int new_state)$/;"	f	file:
nand_get_flash_type	nand/nand_base.c	/^static struct nand_flash_dev *nand_get_flash_type(struct mtd_info *mtd,$/;"	f	file:
nand_hw_eccoob	nand/s3c2410.c	/^static struct nand_ecclayout nand_hw_eccoob = {$/;"	v	typeref:struct:nand_ecclayout	file:
nand_isbad_bbt	nand/nand_bbt.c	/^int nand_isbad_bbt(struct mtd_info *mtd, loff_mtd_t offs, int allowbbt)$/;"	f
nand_led_trigger	nand/nand_base.c	/^DEFINE_LED_TRIGGER(nand_led_trigger);$/;"	v
nand_manuf_ids	nand/nand_ids.c	/^EXPORT_SYMBOL(nand_manuf_ids);$/;"	v
nand_manuf_ids	nand/nand_ids.c	/^struct nand_manufacturers nand_manuf_ids[] = {$/;"	v	typeref:struct:nand_manufacturers
nand_memory_bbt	nand/nand_bbt.c	/^static inline int nand_memory_bbt(struct mtd_info *mtd, struct nand_bbt_descr *bd)$/;"	f	file:
nand_nce	nand/nand_base.c	/^u8 nand_nce; \/* indicates which chip select on JZSOC is used for current nand chip *\/$/;"	v
nand_oob_128	nand/nand_base.c	/^static struct nand_ecclayout nand_oob_128 = {$/;"	v	typeref:struct:nand_ecclayout	file:
nand_oob_16	nand/nand_base.c	/^static struct nand_ecclayout nand_oob_16 = {$/;"	v	typeref:struct:nand_ecclayout	file:
nand_oob_64	nand/nand_base.c	/^static struct nand_ecclayout nand_oob_64 = {$/;"	v	typeref:struct:nand_ecclayout	file:
nand_oob_8	nand/nand_base.c	/^static struct nand_ecclayout nand_oob_8 = {$/;"	v	typeref:struct:nand_ecclayout	file:
nand_oobfree	mtd-utils/include/mtd/mtd-abi.h	/^struct nand_oobfree {$/;"	s
nand_oobinfo	mtd-utils/include/mtd/mtd-abi.h	/^struct nand_oobinfo {$/;"	s
nand_oobinfo_t	mtd-utils/include/mtd/mtd-user.h	/^typedef struct nand_oobinfo nand_oobinfo_t;$/;"	t	typeref:struct:nand_oobinfo
nand_prog_wait_queue	nand/jz4750_nand.c	/^DECLARE_WAIT_QUEUE_HEAD(nand_prog_wait_queue);$/;"	v
nand_read	nand/nand_base.c	/^static int nand_read(struct mtd_info *mtd, loff_mtd_t from, size_mtd_t len,$/;"	f	file:
nand_read_buf	nand/nand_base.c	/^static void nand_read_buf(struct mtd_info *mtd, uint8_t *buf, int len)$/;"	f	file:
nand_read_buf16	nand/nand_base.c	/^static void nand_read_buf16(struct mtd_info *mtd, uint8_t *buf, int len)$/;"	f	file:
nand_read_byte	nand/nand_base.c	/^static uint8_t nand_read_byte(struct mtd_info *mtd)$/;"	f	file:
nand_read_byte16	nand/nand_base.c	/^static uint8_t nand_read_byte16(struct mtd_info *mtd)$/;"	f	file:
nand_read_oob	nand/nand_base.c	/^static int nand_read_oob(struct mtd_info *mtd, loff_mtd_t from,$/;"	f	file:
nand_read_oob_std	nand/nand_base.c	/^static int nand_read_oob_std(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_read_oob_std_planes	nand/jz4740_nand.c	/^static int nand_read_oob_std_planes(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_read_oob_std_planes	nand/jz4750_nand.c	/^static int nand_read_oob_std_planes(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_read_oob_syndrome	nand/nand_base.c	/^static int nand_read_oob_syndrome(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_read_page_hwecc	nand/nand_base.c	/^static int nand_read_page_hwecc(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_read_page_hwecc_bch	nand/jz4750_nand.c	/^static int nand_read_page_hwecc_bch(struct mtd_info *mtd, struct nand_chip *chip, uint8_t * buf)$/;"	f	file:
nand_read_page_hwecc_bch0	nand/jz4750_nand.c	/^static int nand_read_page_hwecc_bch0(struct mtd_info *mtd, struct nand_chip *chip, uint8_t * buf, u32 page)$/;"	f	file:
nand_read_page_hwecc_bch_cpu	nand/jz4750_nand.c	/^static int nand_read_page_hwecc_bch_cpu(struct mtd_info *mtd, struct nand_chip *chip, uint8_t * buf)$/;"	f	file:
nand_read_page_hwecc_bch_planes	nand/jz4750_nand.c	/^static int nand_read_page_hwecc_bch_planes(struct mtd_info *mtd, struct nand_chip *chip, uint8_t * buf)$/;"	f	file:
nand_read_page_hwecc_bch_planes_cpu	nand/jz4750_nand.c	/^static int nand_read_page_hwecc_bch_planes_cpu(struct mtd_info *mtd, struct nand_chip *chip, uint8_t * buf)$/;"	f	file:
nand_read_page_hwecc_rs	nand/nand_base.c	/^static int nand_read_page_hwecc_rs(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_read_page_hwecc_rs_planes	nand/jz4740_nand.c	/^static int nand_read_page_hwecc_rs_planes(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_read_page_raw	nand/nand_base.c	/^static int nand_read_page_raw(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_read_page_swecc	nand/nand_base.c	/^static int nand_read_page_swecc(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_read_page_syndrome	nand/nand_base.c	/^static int nand_read_page_syndrome(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_read_wait_queue	nand/jz4750_nand.c	/^DECLARE_WAIT_QUEUE_HEAD(nand_read_wait_queue);$/;"	v
nand_read_word	nand/nand_base.c	/^static u16 nand_read_word(struct mtd_info *mtd)$/;"	f	file:
nand_release	nand/nand_base.c	/^EXPORT_SYMBOL_GPL(nand_release);$/;"	v
nand_release	nand/nand_base.c	/^void nand_release(struct mtd_info *mtd)$/;"	f
nand_release_device	nand/nand_base.c	/^static void nand_release_device(struct mtd_info *mtd)$/;"	f	file:
nand_resume	nand/nand_base.c	/^static void nand_resume(struct mtd_info *mtd)$/;"	f	file:
nand_scan	nand/nand_base.c	/^EXPORT_SYMBOL_GPL(nand_scan);$/;"	v
nand_scan	nand/nand_base.c	/^int nand_scan(struct mtd_info *mtd, int maxchips)$/;"	f
nand_scan_bbt	nand/nand_bbt.c	/^EXPORT_SYMBOL(nand_scan_bbt);$/;"	v
nand_scan_bbt	nand/nand_bbt.c	/^int nand_scan_bbt(struct mtd_info *mtd, struct nand_bbt_descr *bd)$/;"	f
nand_scan_ident	nand/nand_base.c	/^EXPORT_SYMBOL_GPL(nand_scan_ident);$/;"	v
nand_scan_ident	nand/nand_base.c	/^int nand_scan_ident(struct mtd_info *mtd, int maxchips)$/;"	f
nand_scan_tail	nand/nand_base.c	/^EXPORT_SYMBOL_GPL(nand_scan_tail);$/;"	v
nand_scan_tail	nand/nand_base.c	/^int nand_scan_tail(struct mtd_info *mtd)$/;"	f
nand_select_chip	nand/nand_base.c	/^static void nand_select_chip(struct mtd_info *mtd, int chipnr)$/;"	f	file:
nand_set_defaults	nand/nand_base.c	/^static void nand_set_defaults(struct nand_chip *chip, int busw)$/;"	f	file:
nand_status	nand/jz4750_nand.c	/^static volatile u8 nand_status;$/;"	v	file:
nand_suspend	nand/nand_base.c	/^static int nand_suspend(struct mtd_info *mtd)$/;"	f	file:
nand_sw_bch_ops	nand/nand_base.c	/^int nand_sw_bch_ops(struct mtd_info *mtd, u8 *oobdata, int ops)$/;"	f
nand_sync	nand/nand_base.c	/^static void nand_sync(struct mtd_info *mtd)$/;"	f	file:
nand_trans_result	mtd-utils/ubi-utils/src/nandecc.c	/^static void nand_trans_result(uint8_t reg2, uint8_t reg3,$/;"	f	file:
nand_transfer_oob	nand/nand_base.c	/^static uint8_t *nand_transfer_oob(struct nand_chip *chip, uint8_t *oob,$/;"	f	file:
nand_update_bbt	nand/nand_bbt.c	/^int nand_update_bbt(struct mtd_info *mtd, loff_mtd_t offs)$/;"	f
nand_verify_buf	nand/nand_base.c	/^static int nand_verify_buf(struct mtd_info *mtd, const uint8_t *buf, int len)$/;"	f	file:
nand_verify_buf16	nand/nand_base.c	/^static int nand_verify_buf16(struct mtd_info *mtd, const uint8_t *buf, int len)$/;"	f	file:
nand_wait	nand/nand_base.c	/^static int nand_wait(struct mtd_info *mtd, struct nand_chip *chip)$/;"	f	file:
nand_wait_ready	nand/nand_base.c	/^EXPORT_SYMBOL_GPL(nand_wait_ready);$/;"	v
nand_wait_ready	nand/nand_base.c	/^void nand_wait_ready(struct mtd_info *mtd)$/;"	f
nand_width	nand/au1550nd.c	/^static int nand_width = 1;	\/* default x8 *\/$/;"	v	file:
nand_write	nand/nand_base.c	/^static int nand_write(struct mtd_info *mtd, loff_mtd_t to, size_mtd_t len,$/;"	f	file:
nand_write_buf	nand/nand_base.c	/^static void nand_write_buf(struct mtd_info *mtd, const uint8_t *buf, int len)$/;"	f	file:
nand_write_buf16	nand/nand_base.c	/^static void nand_write_buf16(struct mtd_info *mtd, const uint8_t *buf, int len)$/;"	f	file:
nand_write_oob	nand/nand_base.c	/^static int nand_write_oob(struct mtd_info *mtd, loff_mtd_t to,$/;"	f	file:
nand_write_oob_std	nand/nand_base.c	/^static int nand_write_oob_std(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_write_oob_std_planes	nand/jz4740_nand.c	/^static int nand_write_oob_std_planes(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_write_oob_std_planes	nand/jz4750_nand.c	/^static int nand_write_oob_std_planes(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_write_oob_syndrome	nand/nand_base.c	/^static int nand_write_oob_syndrome(struct mtd_info *mtd,$/;"	f	file:
nand_write_page	nand/nand_base.c	/^static int nand_write_page(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_write_page_hwecc	nand/nand_base.c	/^static void nand_write_page_hwecc(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_write_page_hwecc_bch	nand/jz4750_nand.c	/^static void nand_write_page_hwecc_bch(struct mtd_info *mtd, struct nand_chip *chip, const uint8_t * buf)$/;"	f	file:
nand_write_page_hwecc_bch0	nand/jz4750_nand.c	/^static void nand_write_page_hwecc_bch0(struct mtd_info *mtd, struct nand_chip *chip, const uint8_t * buf, u8 cmd_pgprog)$/;"	f	file:
nand_write_page_hwecc_bch_cpu	nand/jz4750_nand.c	/^static void nand_write_page_hwecc_bch_cpu(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_write_page_hwecc_bch_planes	nand/jz4750_nand.c	/^static void nand_write_page_hwecc_bch_planes(struct mtd_info *mtd, struct nand_chip *chip, const uint8_t * buf)$/;"	f	file:
nand_write_page_hwecc_bch_planes_cpu	nand/jz4750_nand.c	/^static void nand_write_page_hwecc_bch_planes_cpu(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_write_page_hwecc_planes	nand/jz4740_nand.c	/^static void nand_write_page_hwecc_planes(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_write_page_raw	nand/nand_base.c	/^static void nand_write_page_raw(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_write_page_swecc	nand/nand_base.c	/^static void nand_write_page_swecc(struct mtd_info *mtd, struct nand_chip *chip,$/;"	f	file:
nand_write_page_syndrome	nand/nand_base.c	/^static void nand_write_page_syndrome(struct mtd_info *mtd,$/;"	f	file:
nandsim	nand/nandsim.c	/^struct nandsim {$/;"	s	file:
nandsim_loaded	mtd-utils/load_nandsim.sh	/^function nandsim_loaded()$/;"	f
nandsim_operations	nand/nandsim.c	/^static struct nandsim_operations {$/;"	s	file:
nandsim_regs	nand/nandsim.c	/^	struct nandsim_regs {$/;"	s	struct:nandsim	file:
nandsin_geometry	nand/nandsim.c	/^	struct nandsin_geometry {$/;"	s	struct:nandsim	file:
nbparts	nand/nandsim.c	/^	unsigned int nbparts;$/;"	m	struct:nandsim	file:
nchksum	mtd-utils/jffs-dump.c	/^	uint16_t nchksum;    \/* Checksum for the name.  *\/$/;"	m	struct:jffs_raw_inode	file:
ndfc_calculate_ecc	nand/ndfc.c	/^static int ndfc_calculate_ecc(struct mtd_info *mtd,$/;"	f	file:
ndfc_chip_driver	nand/ndfc.c	/^static struct platform_driver ndfc_chip_driver = {$/;"	v	typeref:struct:platform_driver	file:
ndfc_chip_init	nand/ndfc.c	/^static void ndfc_chip_init(struct ndfc_nand_mtd *mtd)$/;"	f	file:
ndfc_chip_probe	nand/ndfc.c	/^static int ndfc_chip_probe(struct platform_device *pdev)$/;"	f	file:
ndfc_chip_remove	nand/ndfc.c	/^static int ndfc_chip_remove(struct platform_device *pdev)$/;"	f	file:
ndfc_control	nand/ndfc.c	/^	struct nand_hw_control	ndfc_control;$/;"	m	struct:ndfc_controller	typeref:struct:ndfc_controller::nand_hw_control	file:
ndfc_controller	nand/ndfc.c	/^struct ndfc_controller {$/;"	s	file:
ndfc_ctrl	nand/ndfc.c	/^static struct ndfc_controller ndfc_ctrl;$/;"	v	typeref:struct:ndfc_controller	file:
ndfc_enable_hwecc	nand/ndfc.c	/^static void ndfc_enable_hwecc(struct mtd_info *mtd, int mode)$/;"	f	file:
ndfc_hwcontrol	nand/ndfc.c	/^static void ndfc_hwcontrol(struct mtd_info *mtd, int cmd, unsigned int ctrl)$/;"	f	file:
ndfc_mtd	nand/ndfc.c	/^static struct ndfc_nand_mtd ndfc_mtd[NDFC_MAX_BANKS];$/;"	v	typeref:struct:ndfc_nand_mtd	file:
ndfc_nand_driver	nand/ndfc.c	/^static struct platform_driver ndfc_nand_driver = {$/;"	v	typeref:struct:platform_driver	file:
ndfc_nand_exit	nand/ndfc.c	/^module_exit(ndfc_nand_exit);$/;"	v
ndfc_nand_exit	nand/ndfc.c	/^static void __exit ndfc_nand_exit(void)$/;"	f	file:
ndfc_nand_init	nand/ndfc.c	/^module_init(ndfc_nand_init);$/;"	v
ndfc_nand_init	nand/ndfc.c	/^static int __init ndfc_nand_init(void)$/;"	f	file:
ndfc_nand_mtd	nand/ndfc.c	/^struct ndfc_nand_mtd {$/;"	s	file:
ndfc_nand_probe	nand/ndfc.c	/^static int ndfc_nand_probe(struct platform_device *pdev)$/;"	f	file:
ndfc_nand_remove	nand/ndfc.c	/^static int ndfc_nand_remove(struct platform_device *pdev)$/;"	f	file:
ndfc_read_buf	nand/ndfc.c	/^static void ndfc_read_buf(struct mtd_info *mtd, uint8_t *buf, int len)$/;"	f	file:
ndfc_ready	nand/ndfc.c	/^static int ndfc_ready(struct mtd_info *mtd)$/;"	f	file:
ndfc_select_chip	nand/ndfc.c	/^static void ndfc_select_chip(struct mtd_info *mtd, int chip)$/;"	f	file:
ndfc_verify_buf	nand/ndfc.c	/^static int ndfc_verify_buf(struct mtd_info *mtd, const uint8_t *buf, int len)$/;"	f	file:
ndfc_write_buf	nand/ndfc.c	/^static void ndfc_write_buf(struct mtd_info *mtd, const uint8_t *buf, int len)$/;"	f	file:
ndfcbase	nand/ndfc.c	/^	void __iomem		*ndfcbase;$/;"	m	struct:ndfc_controller	file:
netsc520_map	maps/netsc520.c	/^static struct map_info netsc520_map = {$/;"	v	typeref:struct:map_info	file:
nettel_amd_map	maps/nettel.c	/^static struct map_info nettel_amd_map = {$/;"	v	typeref:struct:map_info	file:
nettel_amd_partitions	maps/nettel.c	/^static struct mtd_partition nettel_amd_partitions[] = {$/;"	v	typeref:struct:mtd_partition	file:
nettel_cleanup	maps/nettel.c	/^module_exit(nettel_cleanup);$/;"	v
nettel_cleanup	maps/nettel.c	/^static void __exit nettel_cleanup(void)$/;"	f	file:
nettel_init	maps/nettel.c	/^module_init(nettel_init);$/;"	v
nettel_init	maps/nettel.c	/^static int __init nettel_init(void)$/;"	f	file:
nettel_intel_map	maps/nettel.c	/^static struct map_info nettel_intel_map = {$/;"	v	typeref:struct:map_info	file:
nettel_intel_partitions	maps/nettel.c	/^static struct mtd_partition nettel_intel_partitions[] = {$/;"	v	typeref:struct:mtd_partition	file:
nettel_mmcrp	maps/nettel.c	/^static void *nettel_mmcrp = NULL;$/;"	v	file:
nettel_notifier_block	maps/nettel.c	/^static struct notifier_block nettel_notifier_block = {$/;"	v	typeref:struct:notifier_block	file:
nettel_reboot_notifier	maps/nettel.c	/^static int nettel_reboot_notifier(struct notifier_block *nb, unsigned long val, void *v)$/;"	f	file:
new_entry	mtd-utils/ubi-utils/src/hashmap.c	/^new_entry(const char* key, const char* value)$/;"	f	file:
new_par	maps/sc520cdp.c	/^	unsigned long new_par;$/;"	m	struct:sc520_par_table	file:
new_phys_block	mtdblock-jz.c	/^	int new_phys_block;$/;"	m	struct:mtdblk_dev	file:
newpart	cmdlinepart.c	/^static struct mtd_partition * newpart(char *s,$/;"	f	file:
newstats	mtd-utils/nandtest.c	/^struct mtd_ecc_stats oldstats, newstats;$/;"	v	typeref:struct:
next	cmdlinepart.c	/^	struct cmdline_mtd_partition *next;$/;"	m	struct:cmdline_mtd_partition	typeref:struct:cmdline_mtd_partition::cmdline_mtd_partition	file:
next	devices/ms02-nv.h	/^	struct mtd_info *next;$/;"	m	struct:ms02nv_private	typeref:struct:ms02nv_private::mtd_info
next	devices/slram.c	/^	struct slram_mtd_list *next;$/;"	m	struct:slram_mtd_list	typeref:struct:slram_mtd_list::slram_mtd_list	file:
next	mtd-utils/compr.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::list_head
next	mtd-utils/jffs2reader.c	/^	struct dir *next;$/;"	m	struct:dir	typeref:struct:dir::dir	file:
next	mtd-utils/mkfs.jffs2.c	/^	struct filesystem_entry *next;	\/* Only relevant to non-directories *\/$/;"	m	struct:filesystem_entry	typeref:struct:filesystem_entry::filesystem_entry	file:
next	mtd-utils/mkfs.jffs2.c	/^	struct xattr_entry *next;$/;"	m	struct:xattr_entry	typeref:struct:xattr_entry::xattr_entry	file:
next	mtd-utils/summary.h	/^	union jffs2_sum_mem *next;$/;"	m	struct:jffs2_sum_dirent_mem	typeref:union:jffs2_sum_dirent_mem::jffs2_sum_mem
next	mtd-utils/summary.h	/^	union jffs2_sum_mem *next;$/;"	m	struct:jffs2_sum_inode_mem	typeref:union:jffs2_sum_inode_mem::jffs2_sum_mem
next	mtd-utils/summary.h	/^	union jffs2_sum_mem *next;$/;"	m	struct:jffs2_sum_unknown_mem	typeref:union:jffs2_sum_unknown_mem::jffs2_sum_mem
next	mtd-utils/summary.h	/^	union jffs2_sum_mem *next;$/;"	m	struct:jffs2_sum_xattr_mem	typeref:union:jffs2_sum_xattr_mem::jffs2_sum_mem
next	mtd-utils/summary.h	/^	union jffs2_sum_mem *next;$/;"	m	struct:jffs2_sum_xref_mem	typeref:union:jffs2_sum_xref_mem::jffs2_sum_mem
next	mtd-utils/tests/fs-tests/integrity/integck.c	/^	struct dir_entry_info *next;$/;"	m	struct:dir_entry_info	typeref:struct:dir_entry_info::dir_entry_info	file:
next	mtd-utils/tests/fs-tests/integrity/integck.c	/^	struct fd_info *next;$/;"	m	struct:fd_info	typeref:struct:fd_info::fd_info	file:
next	mtd-utils/tests/fs-tests/integrity/integck.c	/^	struct open_file_info *next;$/;"	m	struct:open_file_info	typeref:struct:open_file_info::open_file_info	file:
next	mtd-utils/tests/fs-tests/integrity/integck.c	/^	struct write_info *next;$/;"	m	struct:write_info	typeref:struct:write_info::write_info	file:
next	mtd-utils/tests/fs-tests/stress/atoms/gcd_hupper.c	/^	struct gcd_pid *next;$/;"	m	struct:gcd_pid	typeref:struct:gcd_pid::gcd_pid	file:
next	mtd-utils/tests/fs-tests/utils/fstest_monitor.c	/^	struct child_info *next;$/;"	m	struct:child_info	typeref:struct:child_info::child_info	file:
next	mtd-utils/tests/ubi-tests/integ.c	/^	struct open_volume_fd *next;$/;"	m	struct:open_volume_fd	typeref:struct:open_volume_fd::open_volume_fd	file:
next	mtd-utils/tests/ubi-tests/integ.c	/^	struct volume_fd *next;$/;"	m	struct:volume_fd	typeref:struct:volume_fd::volume_fd	file:
next	mtd-utils/tests/ubi-tests/integ.c	/^	struct volume_info *next;$/;"	m	struct:volume_info	typeref:struct:volume_info::volume_info	file:
next	mtd-utils/tests/ubi-tests/integ.c	/^	struct write_info *next;$/;"	m	struct:write_info	typeref:struct:write_info::write_info	file:
next	mtd-utils/ubi-utils/src/hashmap.c	/^	hashentry_t next;$/;"	m	struct:hashentry	file:
next	mtd-utils/ubi-utils/src/list.h	/^	list_t next;$/;"	m	struct:node
next	mtd-utils/ubi-utils/src/unubi_analyze.h	/^	struct eb_info *next;$/;"	m	struct:eb_info	typeref:struct:eb_info::eb_info
next	redboot.c	/^	struct fis_list *next;$/;"	m	struct:fis_list	typeref:struct:fis_list::fis_list	file:
nextEUN	mtd-utils/nftldump.c	/^static unsigned short nextEUN(unsigned short curEUN)$/;"	f	file:
next_seed	mtd-utils/tests/ubi-tests/integ.c	/^static unsigned long next_seed = 1;$/;"	v	file:
next_sqnum	ubi/eba.c	/^static unsigned long long next_sqnum(struct ubi_device *ubi)$/;"	f	file:
nextcount	mtdoops.c	/^	int nextcount;$/;"	m	struct:mtdoops_context	file:
nextdoc	nand/diskonchip.c	/^	struct mtd_info *nextdoc;$/;"	m	struct:doc_priv	typeref:struct:doc_priv::mtd_info	file:
nextpage	mtdoops.c	/^	int nextpage;$/;"	m	struct:mtdoops_context	file:
nftl-objs	Makefile	/^nftl-objs		:= nftlcore.o nftlmount.o$/;"	m
nftl_add_mtd	nftlcore.c	/^static void nftl_add_mtd(struct mtd_blktrans_ops *tr, struct mtd_info *mtd)$/;"	f	file:
nftl_bci	mtd-utils/include/mtd/nftl-user.h	/^struct nftl_bci {$/;"	s
nftl_getgeo	nftlcore.c	/^static int nftl_getgeo(struct mtd_blktrans_dev *dev,  struct hd_geometry *geo)$/;"	f	file:
nftl_oob	mtd-utils/include/mtd/nftl-user.h	/^struct nftl_oob {$/;"	s
nftl_partscan	nand/diskonchip.c	/^static inline int __init nftl_partscan(struct mtd_info *mtd, struct mtd_partition *parts)$/;"	f	file:
nftl_read_oob	nftlcore.c	/^int nftl_read_oob(struct mtd_info *mtd, loff_t offs, size_t len,$/;"	f
nftl_readblock	nftlcore.c	/^static int nftl_readblock(struct mtd_blktrans_dev *mbd, unsigned long block,$/;"	f	file:
nftl_remove_dev	nftlcore.c	/^static void nftl_remove_dev(struct mtd_blktrans_dev *dev)$/;"	f	file:
nftl_scan_bbt	nand/diskonchip.c	/^static int __init nftl_scan_bbt(struct mtd_info *mtd)$/;"	f	file:
nftl_tr	nftlcore.c	/^static struct mtd_blktrans_ops nftl_tr = {$/;"	v	typeref:struct:mtd_blktrans_ops	file:
nftl_uci	mtd-utils/include/mtd/nftl-user.h	/^union nftl_uci {$/;"	u
nftl_uci0	mtd-utils/include/mtd/nftl-user.h	/^struct nftl_uci0 {$/;"	s
nftl_uci1	mtd-utils/include/mtd/nftl-user.h	/^struct nftl_uci1 {$/;"	s
nftl_uci2	mtd-utils/include/mtd/nftl-user.h	/^struct nftl_uci2 {$/;"	s
nftl_write	nftlcore.c	/^static int nftl_write(struct mtd_info *mtd, loff_t offs, size_t len,$/;"	f	file:
nftl_write_oob	nftlcore.c	/^int nftl_write_oob(struct mtd_info *mtd, loff_t offs, size_t len,$/;"	f
nftl_writeblock	nftlcore.c	/^static int nftl_writeblock(struct mtd_blktrans_dev *mbd, unsigned long block,$/;"	f	file:
nftlmountrev	nftlmount.c	/^char nftlmountrev[]="$Revision: 1.41 $";$/;"	v
nlen	mtd-utils/ubi-utils/new-utils/src/ubimkvol.c	/^	int nlen;$/;"	m	struct:args	file:
nlink	mtd-utils/jffs-dump.c	/^	uint8_t nlink;       \/* Number of links.  *\/$/;"	m	struct:jffs_raw_inode	file:
no_autopart	nand/diskonchip.c	/^static int no_autopart = 0;$/;"	v	file:
no_ecc_failures	nand/diskonchip.c	/^static int no_ecc_failures = 0;$/;"	v	file:
no_space_error	mtd-utils/tests/fs-tests/integrity/integck.c	/^	int no_space_error; \/* File has incurred a ENOSPC error *\/$/;"	m	struct:file_info	file:
node	maps/pcmciamtd.c	/^	dev_node_t	node;		\/* device node *\/$/;"	m	struct:pcmciamtd_dev	file:
node	mtd-utils/tests/ubi-tests/io_basic.c	/^const char *node;$/;"	v
node	mtd-utils/tests/ubi-tests/io_paral.c	/^const char *node;$/;"	v
node	mtd-utils/tests/ubi-tests/io_read.c	/^const char *node;$/;"	v
node	mtd-utils/tests/ubi-tests/io_update.c	/^const char *node;$/;"	v
node	mtd-utils/tests/ubi-tests/mkvol_bad.c	/^const char *node;$/;"	v
node	mtd-utils/tests/ubi-tests/mkvol_basic.c	/^const char *node;$/;"	v
node	mtd-utils/tests/ubi-tests/mkvol_paral.c	/^const char *node;$/;"	v
node	mtd-utils/tests/ubi-tests/rsvol.c	/^const char *node;$/;"	v
node	mtd-utils/ubi-utils/new-utils/src/ubiattach.c	/^	const char *node;$/;"	m	struct:args	file:
node	mtd-utils/ubi-utils/new-utils/src/ubicrcvol.c	/^	const char *node;$/;"	m	struct:args	file:
node	mtd-utils/ubi-utils/new-utils/src/ubidetach.c	/^	const char *node;$/;"	m	struct:args	file:
node	mtd-utils/ubi-utils/new-utils/src/ubidumpvol.c	/^	const char *node;$/;"	m	struct:args	file:
node	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	/^	const char *node;$/;"	m	struct:args	file:
node	mtd-utils/ubi-utils/new-utils/src/ubimkvol.c	/^	const char *node;$/;"	m	struct:args	file:
node	mtd-utils/ubi-utils/new-utils/src/ubinfo.c	/^	const char *node;$/;"	m	struct:args	file:
node	mtd-utils/ubi-utils/new-utils/src/ubirmvol.c	/^	const char *node;$/;"	m	struct:args	file:
node	mtd-utils/ubi-utils/new-utils/src/ubiupdatevol.c	/^	const char *node;$/;"	m	struct:args	file:
node	mtd-utils/ubi-utils/src/list.h	/^struct node {$/;"	s
node_crc	mtd-utils/include/linux/jffs2.h	/^	jint32_t node_crc; 	\/* node crc *\/$/;"	m	struct:jffs2_raw_summary
node_crc	mtd-utils/include/linux/jffs2.h	/^	jint32_t node_crc;   \/* CRC for the raw inode (excluding data)  *\/$/;"	m	struct:jffs2_raw_inode
node_crc	mtd-utils/include/linux/jffs2.h	/^	jint32_t node_crc;$/;"	m	struct:jffs2_raw_dirent
node_crc	mtd-utils/include/linux/jffs2.h	/^	jint32_t node_crc;$/;"	m	struct:jffs2_raw_xattr
node_crc	mtd-utils/include/linux/jffs2.h	/^	jint32_t node_crc;$/;"	m	struct:jffs2_raw_xref
nodetype	mtd-utils/include/linux/jffs2.h	/^	jint16_t nodetype;	\/* = JFFS2_NODETYPE_XATTR *\/$/;"	m	struct:jffs2_raw_xattr
nodetype	mtd-utils/include/linux/jffs2.h	/^	jint16_t nodetype;	\/* = JFFS2_NODETYPE_XREF *\/$/;"	m	struct:jffs2_raw_xref
nodetype	mtd-utils/include/linux/jffs2.h	/^	jint16_t nodetype;	\/* == JFFS2_NODETYPE_DIRENT *\/$/;"	m	struct:jffs2_raw_dirent
nodetype	mtd-utils/include/linux/jffs2.h	/^	jint16_t nodetype; 	\/* = JFFS2_NODETYPE_SUMMARY *\/$/;"	m	struct:jffs2_raw_summary
nodetype	mtd-utils/include/linux/jffs2.h	/^	jint16_t nodetype;   \/* == JFFS2_NODETYPE_INODE *\/$/;"	m	struct:jffs2_raw_inode
nodetype	mtd-utils/include/linux/jffs2.h	/^	jint16_t nodetype;$/;"	m	struct:jffs2_unknown_node
nodetype	mtd-utils/summary.h	/^	jint16_t nodetype;	\/* == JFFS2_NODETYPE_XATR *\/$/;"	m	struct:jffs2_sum_xattr_flash
nodetype	mtd-utils/summary.h	/^	jint16_t nodetype;	\/* == JFFS2_NODETYPE_XREF *\/$/;"	m	struct:jffs2_sum_xref_flash
nodetype	mtd-utils/summary.h	/^	jint16_t nodetype;	\/* == JFFS_NODETYPE_DIRENT *\/$/;"	m	struct:jffs2_sum_dirent_flash
nodetype	mtd-utils/summary.h	/^	jint16_t nodetype;	\/* == JFFS_NODETYPE_DIRENT *\/$/;"	m	struct:jffs2_sum_dirent_mem
nodetype	mtd-utils/summary.h	/^	jint16_t nodetype;	\/* node type *\/$/;"	m	struct:jffs2_sum_inode_flash
nodetype	mtd-utils/summary.h	/^	jint16_t nodetype;	\/* node type *\/$/;"	m	struct:jffs2_sum_inode_mem
nodetype	mtd-utils/summary.h	/^	jint16_t nodetype;	\/* node type *\/$/;"	m	struct:jffs2_sum_unknown_flash
nodetype	mtd-utils/summary.h	/^	jint16_t nodetype;	\/* node type *\/$/;"	m	struct:jffs2_sum_unknown_mem
nodetype	mtd-utils/summary.h	/^	jint16_t nodetype;$/;"	m	struct:jffs2_sum_xattr_mem
nodetype	mtd-utils/summary.h	/^	jint16_t nodetype;$/;"	m	struct:jffs2_sum_xref_mem
noecc	mtd-utils/nanddump.c	/^int	noecc;			\/\/ don't error correct$/;"	v
noecc	mtd-utils/nanddump_vfat.c	/^int	noecc;			\/\/ don't error correct$/;"	v
noecc	mtd-utils/nandwrite.c	/^int	noecc = 0;$/;"	v
noecc	mtd-utils/nandwrite_mlc.c	/^int	noecc = 0;$/;"	v
non_region_erase	mtd-utils/flash_erase.c	/^int non_region_erase(int Fd, int start, int count, int unlock)$/;"	f
none_oobinfo	mtd-utils/nanddump.c	/^struct nand_oobinfo none_oobinfo = {$/;"	v	typeref:struct:nand_oobinfo
none_oobinfo	mtd-utils/nanddump_vfat.c	/^struct nand_oobinfo none_oobinfo = {$/;"	v	typeref:struct:nand_oobinfo
none_oobinfo	mtd-utils/nandwrite.c	/^struct nand_oobinfo none_oobinfo = {$/;"	v	typeref:struct:nand_oobinfo
none_oobinfo	mtd-utils/nandwrite_mlc.c	/^struct nand_oobinfo none_oobinfo = {$/;"	v	typeref:struct:nand_oobinfo
none_stat_compr_blocks	mtd-utils/compr.c	/^static uint32_t none_stat_compr_blocks=0,none_stat_decompr_blocks=0,none_stat_compr_size=0;$/;"	v	file:
none_stat_compr_size	mtd-utils/compr.c	/^static uint32_t none_stat_compr_blocks=0,none_stat_decompr_blocks=0,none_stat_compr_size=0;$/;"	v	file:
none_stat_decompr_blocks	mtd-utils/compr.c	/^static uint32_t none_stat_compr_blocks=0,none_stat_decompr_blocks=0,none_stat_compr_size=0;$/;"	v	file:
norm_index	mtd-utils/ubi-utils/src/unubi_analyze.c	/^norm_index(uint32_t item, uint32_t *array, size_t length)$/;"	f
normsg	mtd-utils/ubi-utils/new-utils/src/common.h	40;"	d
normsg_cont	mtd-utils/ubi-utils/new-utils/src/common.h	43;"	d
normsg_cont	mtd-utils/ubi-utils/new-utils/src/common.h	46;"	d
notifier	mtdchar.c	/^static struct mtd_notifier notifier = {$/;"	v	typeref:struct:mtd_notifier	file:
novtbl	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	/^	unsigned int novtbl:1;$/;"	m	struct:args	file:
npstates	nand/nandsim.c	/^	uint16_t npstates;      \/* number of previous states saved *\/$/;"	m	struct:nandsim	file:
nr_blocks	mtd-utils/mcast_image.h	/^	uint32_t nr_blocks;$/;"	m	struct:image_pkt_hdr
nr_data	nand/cafe_nand.c	/^	int nr_data;$/;"	m	struct:cafe_priv	file:
nr_mtd_parts	maps/h720x-flash.c	/^static int                   nr_mtd_parts;$/;"	v	file:
nr_partitions	nand/jz4740_nand.c	/^int nr_partitions; \/* Number of partitions *\/$/;"	v
nr_partitions	nand/jz4750_nand.c	/^int nr_partitions; \/* Number of partitions *\/$/;"	v
nr_partitions	nand/sharpsl.c	/^static int nr_partitions;$/;"	v	file:
nr_parts	maps/intel_vr_nor.c	/^	int nr_parts;$/;"	m	struct:vr_nor_mtd	file:
nr_parts	maps/physmap.c	/^	int			nr_parts;$/;"	m	struct:physmap_flash_info	file:
nr_parts	maps/pxa2xx-flash.c	/^	int			nr_parts;$/;"	m	struct:pxa2xx_flash_info	file:
nr_parts	maps/sa1100-flash.c	/^	unsigned int		nr_parts;$/;"	m	struct:sa_info	file:
nr_parts	nand/plat_nand.c	/^	int			nr_parts;$/;"	m	struct:plat_nand_data	file:
nr_pkts	mtd-utils/mcast_image.h	/^	uint16_t nr_pkts;$/;"	m	struct:image_pkt_hdr
nr_pkts	mtd-utils/recv_image.c	/^	int nr_pkts;$/;"	m	struct:eraseblock	file:
nrbits	inftlcore.c	/^static int nrbits(unsigned int val, int bitcount)$/;"	f	file:
ns_cleanup_module	nand/nandsim.c	/^module_exit(ns_cleanup_module);$/;"	v
ns_cleanup_module	nand/nandsim.c	/^static void __exit ns_cleanup_module(void)$/;"	f	file:
ns_device_ready	nand/nandsim.c	/^static int ns_device_ready(struct mtd_info *mtd)$/;"	f	file:
ns_hwcontrol	nand/nandsim.c	/^static void ns_hwcontrol(struct mtd_info *mtd, int cmd, unsigned int bitmask)$/;"	f	file:
ns_init_module	nand/nandsim.c	/^module_init(ns_init_module);$/;"	v
ns_init_module	nand/nandsim.c	/^static int __init ns_init_module(void)$/;"	f	file:
ns_lines_status	nand/nandsim.c	/^        struct ns_lines_status {$/;"	s	struct:nandsim	file:
ns_mem	nand/nandsim.c	/^union ns_mem {$/;"	u	file:
ns_nand_read_buf	nand/nandsim.c	/^static void ns_nand_read_buf(struct mtd_info *mtd, u_char *buf, int len)$/;"	f	file:
ns_nand_read_byte	nand/nandsim.c	/^static u_char ns_nand_read_byte(struct mtd_info *mtd)$/;"	f	file:
ns_nand_read_word	nand/nandsim.c	/^static uint16_t ns_nand_read_word(struct mtd_info *mtd)$/;"	f	file:
ns_nand_verify_buf	nand/nandsim.c	/^static int ns_nand_verify_buf(struct mtd_info *mtd, const u_char *buf, int len)$/;"	f	file:
ns_nand_write_buf	nand/nandsim.c	/^static void ns_nand_write_buf(struct mtd_info *mtd, const u_char *buf, int len)$/;"	f	file:
ns_nand_write_byte	nand/nandsim.c	/^static void ns_nand_write_byte(struct mtd_info *mtd, u_char byte)$/;"	f	file:
ns_verify_buf	nand/nandsim.c	/^static u_char ns_verify_buf[NS_LARGEST_PAGE_SIZE];$/;"	v	file:
nsize	mtd-utils/include/linux/jffs2.h	/^	uint8_t nsize;$/;"	m	struct:jffs2_raw_dirent
nsize	mtd-utils/jffs-dump.c	/^	uint8_t nsize;       \/* Name length.  *\/$/;"	m	struct:jffs_raw_inode	file:
nsize	mtd-utils/jffs2reader.c	/^	uint8_t nsize;$/;"	m	struct:dir	file:
nsize	mtd-utils/summary.h	/^	uint8_t nsize;		\/* dirent name size *\/$/;"	m	struct:jffs2_sum_dirent_flash
nsize	mtd-utils/summary.h	/^	uint8_t nsize;		\/* dirent name size *\/$/;"	m	struct:jffs2_sum_dirent_mem
nsmtd	nand/nandsim.c	/^static struct mtd_info *nsmtd;$/;"	v	typeref:struct:mtd_info	file:
num	mtd-utils/ubi-utils/new-utils/include/libmtd.h	/^	int num;$/;"	m	struct:mtd_info
num	mtd-utils/ubi-utils/src/peb.h	/^	uint32_t num;		\/* Physical eraseblock number$/;"	m	struct:peb
num	mtd-utils/ubi-utils/src/pfi.c	/^		uint32_t num;$/;"	m	union:pfi_header::__anon8	file:
num	nand/nandsim.c	/^		uint     num;     \/* number of bytes which must be processed *\/$/;"	m	struct:nandsim::nandsim_regs	file:
num_banks	maps/tqm8xxl.c	/^static unsigned long num_banks;$/;"	v	file:
num_keys	mtd-utils/ubi-utils/src/pfi.c	/^	num_keys,$/;"	e	enum:key_id	file:
num_parts	cmdlinepart.c	/^	int num_parts;$/;"	m	struct:cmdline_mtd_partition	file:
num_subdev	maps/sa1100-flash.c	/^	int			num_subdev;$/;"	m	struct:sa_info	file:
num_subdev	mtdconcat.c	/^	int num_subdev;$/;"	m	struct:mtd_concat	file:
number_of_entries	mtd-utils/tests/fs-tests/integrity/integck.c	/^	unsigned number_of_entries;$/;"	m	struct:dir_info	file:
numblocks	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t numblocks;		\/* Number of blocks in this region *\/$/;"	m	struct:region_info_user
nums	maps/sbc8240.c	/^	int nums;$/;"	m	struct:mtd_part_def	file:
nums	maps/tqm8xxl.c	/^	int nums;$/;"	m	struct:mtd_part_def	file:
numtimings	nand/cafe_nand.c	/^static unsigned int numtimings;$/;"	v	file:
nw_en_write	maps/dc21285.c	/^static void nw_en_write(void)$/;"	f	file:
nw_en_write	maps/dc21285.c	54;"	d	file:
nxstate	nand/nandsim.c	/^	uint32_t nxstate;       \/* next expected state *\/$/;"	m	struct:nandsim	file:
obsolete_probe	maps/physmap_of.c	/^static struct mtd_info * __devinit obsolete_probe(struct of_device *dev,$/;"	f	file:
ocotea_large_map	maps/ocotea.c	/^static struct map_info ocotea_large_map = {$/;"	v	typeref:struct:map_info	file:
ocotea_large_partitions	maps/ocotea.c	/^static struct mtd_partition ocotea_large_partitions[] = {$/;"	v	typeref:struct:mtd_partition	file:
ocotea_small_map	maps/ocotea.c	/^static struct map_info ocotea_small_map = {$/;"	v	typeref:struct:map_info	file:
ocotea_small_partitions	maps/ocotea.c	/^static struct mtd_partition ocotea_small_partitions[] = {$/;"	v	typeref:struct:mtd_partition	file:
oct5066_copy_from	maps/octagon-5066.c	/^static void oct5066_copy_from(struct map_info *map, void *to, unsigned long from, ssize_t len)$/;"	f	file:
oct5066_copy_to	maps/octagon-5066.c	/^static void oct5066_copy_to(struct map_info *map, unsigned long to, const void *from, ssize_t len)$/;"	f	file:
oct5066_map	maps/octagon-5066.c	/^static struct map_info oct5066_map[2] = {$/;"	v	typeref:struct:map_info	file:
oct5066_mtd	maps/octagon-5066.c	/^static struct mtd_info *oct5066_mtd[2] = {NULL, NULL};$/;"	v	typeref:struct:mtd_info	file:
oct5066_page	maps/octagon-5066.c	/^static inline void oct5066_page(struct map_info *map, unsigned long ofs)$/;"	f	file:
oct5066_read8	maps/octagon-5066.c	/^static map_word oct5066_read8(struct map_info *map, unsigned long ofs)$/;"	f	file:
oct5066_write8	maps/octagon-5066.c	/^static void oct5066_write8(struct map_info *map, map_word d, unsigned long adr)$/;"	f	file:
odir_path	mtd-utils/ubi-utils/src/unubi.c	/^	char *odir_path;$/;"	m	struct:args	file:
of_flash	maps/physmap_of.c	/^struct of_flash {$/;"	s	file:
of_flash_driver	maps/physmap_of.c	/^static struct of_platform_driver of_flash_driver = {$/;"	v	typeref:struct:of_platform_driver	file:
of_flash_exit	maps/physmap_of.c	/^module_exit(of_flash_exit);$/;"	v
of_flash_exit	maps/physmap_of.c	/^static void __exit of_flash_exit(void)$/;"	f	file:
of_flash_init	maps/physmap_of.c	/^module_init(of_flash_init);$/;"	v
of_flash_init	maps/physmap_of.c	/^static int __init of_flash_init(void)$/;"	f	file:
of_flash_match	maps/physmap_of.c	/^static struct of_device_id of_flash_match[] = {$/;"	v	typeref:struct:of_device_id	file:
of_flash_probe	maps/physmap_of.c	/^static int __devinit of_flash_probe(struct of_device *dev,$/;"	f	file:
of_flash_remove	maps/physmap_of.c	/^static int of_flash_remove(struct of_device *dev)$/;"	f	file:
ofd	mtd-utils/nftldump.c	/^static int fd, ofd = -1;;$/;"	v	file:
off	nand/nandsim.c	/^		uint     off;     \/* fixed page offset *\/$/;"	m	struct:nandsim::nandsim_regs	file:
offset	maps/pcmciamtd.c	/^	unsigned int	offset;		\/* offset into card the window currently points at *\/$/;"	m	struct:pcmciamtd_dev	file:
offset	mtd-utils/include/linux/jffs2.h	/^	jint32_t offset;     \/* Where to begin to write.  *\/$/;"	m	struct:jffs2_raw_inode
offset	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t offset;$/;"	m	struct:nand_oobfree
offset	mtd-utils/include/mtd/mtd-abi.h	/^	uint64_t offset;		\/* At which this region starts,$/;"	m	struct:region_info_user
offset	mtd-utils/jffs-dump.c	/^	uint32_t offset;     \/* Where to begin to write.  *\/$/;"	m	struct:jffs_raw_inode	file:
offset	mtd-utils/summary.h	/^	jint32_t offset;	\/* offset of the summary node in the jeb *\/$/;"	m	struct:jffs2_sum_marker
offset	mtd-utils/summary.h	/^	jint32_t offset;	\/* offset on jeb *\/$/;"	m	struct:jffs2_sum_inode_flash
offset	mtd-utils/summary.h	/^	jint32_t offset;	\/* offset on jeb *\/$/;"	m	struct:jffs2_sum_inode_mem
offset	mtd-utils/summary.h	/^	jint32_t offset;	\/* offset on jeb *\/$/;"	m	struct:jffs2_sum_xattr_flash
offset	mtd-utils/summary.h	/^	jint32_t offset;	\/* offset on jeb *\/$/;"	m	struct:jffs2_sum_xref_flash
offset	mtd-utils/summary.h	/^	jint32_t offset;	\/* ofset on jeb *\/$/;"	m	struct:jffs2_sum_dirent_flash
offset	mtd-utils/summary.h	/^	jint32_t offset;	\/* ofset on jeb *\/$/;"	m	struct:jffs2_sum_dirent_mem
offset	mtd-utils/summary.h	/^	jint32_t offset;$/;"	m	struct:jffs2_sum_xattr_mem
offset	mtd-utils/summary.h	/^	jint32_t offset;$/;"	m	struct:jffs2_sum_xref_mem
offset	mtd-utils/tests/fs-tests/integrity/integck.c	/^	off_t offset; \/* Where in the file the data was written *\/$/;"	m	struct:write_info	file:
offset	mtd-utils/tests/ubi-tests/integ.c	/^	off64_t offset; \/* Offset within volume *\/$/;"	m	struct:erase_block_info	file:
offset	mtd-utils/tests/ubi-tests/integ.c	/^	off64_t offset; \/* Offset within volume *\/$/;"	m	struct:write_info	file:
offset	mtdpart.c	/^	u_int64_t offset;$/;"	m	struct:mtd_part	file:
offset	rfd_ftl.c	/^	u_long offset;$/;"	m	struct:block	file:
offset_within_block	mtd-utils/tests/ubi-tests/integ.c	/^	int offset_within_block; \/* Offset within erase block *\/$/;"	m	struct:write_info	file:
offsetof	mtd-utils/rbtree.h	134;"	d
ok_cnt	mtd-utils/ubi-utils/new-utils/include/libscan.h	/^	int ok_cnt;$/;"	m	struct:ubi_scan_info
old_phys_block	mtdblock-jz.c	/^	int old_phys_block;$/;"	m	struct:mtdblk_dev	file:
older	mtd-utils/ubi-utils/src/unubi_analyze.h	/^	struct eb_info *older;$/;"	m	struct:eb_info	typeref:struct:eb_info::eb_info
oldstats	mtd-utils/nandtest.c	/^struct mtd_ecc_stats oldstats, newstats;$/;"	v	typeref:struct:mtd_ecc_stats
omap_set_vpp	maps/omap_nor.c	/^static void omap_set_vpp(struct map_info *map, int enable)$/;"	f	file:
omap_toto_map_flash	maps/omap-toto-flash.c	/^static struct map_info omap_toto_map_flash = {$/;"	v	typeref:struct:map_info	file:
omap_toto_mtd_cleanup	maps/omap-toto-flash.c	/^module_exit(omap_toto_mtd_cleanup);$/;"	v
omap_toto_mtd_cleanup	maps/omap-toto-flash.c	/^static void  __exit omap_toto_mtd_cleanup(void)$/;"	f	file:
omap_toto_mtd_init	maps/omap-toto-flash.c	/^int __init omap_toto_mtd_init(void)$/;"	f
omap_toto_mtd_init	maps/omap-toto-flash.c	/^module_init(omap_toto_mtd_init);$/;"	v
omapflash_driver	maps/omap_nor.c	/^static struct platform_driver omapflash_driver = {$/;"	v	typeref:struct:platform_driver	file:
omapflash_exit	maps/omap_nor.c	/^module_exit(omapflash_exit);$/;"	v
omapflash_exit	maps/omap_nor.c	/^static void __exit omapflash_exit(void)$/;"	f	file:
omapflash_info	maps/omap_nor.c	/^struct omapflash_info {$/;"	s	file:
omapflash_init	maps/omap_nor.c	/^module_init(omapflash_init);$/;"	v
omapflash_init	maps/omap_nor.c	/^static int __init omapflash_init(void)$/;"	f	file:
omapflash_probe	maps/omap_nor.c	/^static int __devinit omapflash_probe(struct platform_device *pdev)$/;"	f	file:
omapflash_remove	maps/omap_nor.c	/^static int __devexit omapflash_remove(struct platform_device *pdev)$/;"	f	file:
omitbad	mtd-utils/nanddump.c	/^int	omitbad;$/;"	v
omitbad	mtd-utils/nanddump_vfat.c	/^int	omitbad;$/;"	v
omitoob	mtd-utils/nanddump.c	/^int	omitoob;		\/\/ omit oob data$/;"	v
omitoob	mtd-utils/nanddump_vfat.c	/^int	omitoob;		\/\/ omit oob data$/;"	v
onenand	onenand/generic.c	/^	struct onenand_chip	onenand;$/;"	m	struct:onenand_info	typeref:struct:onenand_info::onenand_chip	file:
onenand	onenand/onenand_sim.c	/^	struct onenand_chip	onenand;$/;"	m	struct:onenand_info	typeref:struct:onenand_info::onenand_chip	file:
onenand-objs	onenand/Makefile	/^onenand-objs = onenand_base.o onenand_bbt.o$/;"	m
onenand_bbt_read_oob	onenand/onenand_base.c	/^int onenand_bbt_read_oob(struct mtd_info *mtd, loff_t from, $/;"	f
onenand_bbt_wait	onenand/onenand_base.c	/^static int onenand_bbt_wait(struct mtd_info *mtd, int state)$/;"	f	file:
onenand_block_address	onenand/onenand_base.c	/^static int onenand_block_address(struct onenand_chip *this, int block)$/;"	f	file:
onenand_block_isbad	onenand/onenand_base.c	/^static int onenand_block_isbad(struct mtd_info *mtd, loff_t ofs)$/;"	f	file:
onenand_block_isbad_nolock	onenand/onenand_base.c	/^static int onenand_block_isbad_nolock(struct mtd_info *mtd, loff_t ofs, int allowbbt)$/;"	f	file:
onenand_block_markbad	onenand/onenand_base.c	/^static int onenand_block_markbad(struct mtd_info *mtd, loff_t ofs)$/;"	f	file:
onenand_bootram_handle	onenand/onenand_sim.c	/^static void onenand_bootram_handle(struct onenand_chip *this, int cmd)$/;"	f	file:
onenand_buffer_address	onenand/onenand_base.c	/^static int onenand_buffer_address(int dataram1, int sectors, int count)$/;"	f	file:
onenand_bufferram_address	onenand/onenand_base.c	/^static int onenand_bufferram_address(struct onenand_chip *this, int block)$/;"	f	file:
onenand_bufferram_offset	onenand/onenand_base.c	/^static inline int onenand_bufferram_offset(struct mtd_info *mtd, int area)$/;"	f	file:
onenand_check_bufferram	onenand/onenand_base.c	/^static int onenand_check_bufferram(struct mtd_info *mtd, loff_t addr)$/;"	f	file:
onenand_check_features	onenand/onenand_base.c	/^static void onenand_check_features(struct mtd_info *mtd)$/;"	f	file:
onenand_check_lock_status	onenand/onenand_base.c	/^static void onenand_check_lock_status(struct onenand_chip *this)$/;"	f	file:
onenand_check_maf	onenand/onenand_base.c	/^static int onenand_check_maf(int manuf)$/;"	f	file:
onenand_check_overwrite	onenand/onenand_sim.c	/^static int onenand_check_overwrite(void *dest, void *src, size_t count)$/;"	f	file:
onenand_command	onenand/onenand_base.c	/^static int onenand_command(struct mtd_info *mtd, int cmd, loff_t addr, size_t len)$/;"	f	file:
onenand_command_handle	onenand/onenand_sim.c	/^static void onenand_command_handle(struct onenand_chip *this, int cmd)$/;"	f	file:
onenand_data_handle	onenand/onenand_sim.c	/^static void onenand_data_handle(struct onenand_chip *this, int cmd,$/;"	f	file:
onenand_default_bbt	onenand/onenand_bbt.c	/^EXPORT_SYMBOL(onenand_default_bbt);$/;"	v
onenand_default_bbt	onenand/onenand_bbt.c	/^int onenand_default_bbt(struct mtd_info *mtd)$/;"	f
onenand_default_block_markbad	onenand/onenand_base.c	/^static int onenand_default_block_markbad(struct mtd_info *mtd, loff_t ofs)$/;"	f	file:
onenand_do_lock_cmd	onenand/onenand_base.c	/^static int onenand_do_lock_cmd(struct mtd_info *mtd, loff_t ofs, size_t len, int cmd)$/;"	f	file:
onenand_erase	onenand/onenand_base.c	/^static int onenand_erase(struct mtd_info *mtd, struct erase_info *instr)$/;"	f	file:
onenand_fill_auto_oob	onenand/onenand_base.c	/^static int onenand_fill_auto_oob(struct mtd_info *mtd, u_char *oob_buf,$/;"	f	file:
onenand_flash	onenand/onenand_sim.c	/^struct onenand_flash {$/;"	s	file:
onenand_get_2x_blockpage	onenand/onenand_base.c	/^static int onenand_get_2x_blockpage(struct mtd_info *mtd, loff_t addr)$/;"	f	file:
onenand_get_device	onenand/onenand_base.c	/^static int onenand_get_device(struct mtd_info *mtd, int new_state)$/;"	f	file:
onenand_get_fact_prot_info	onenand/onenand_base.c	/^static int onenand_get_fact_prot_info(struct mtd_info *mtd,$/;"	f	file:
onenand_get_user_prot_info	onenand/onenand_base.c	/^static int onenand_get_user_prot_info(struct mtd_info *mtd,$/;"	f	file:
onenand_info	onenand/generic.c	/^struct onenand_info {$/;"	s	file:
onenand_info	onenand/onenand_sim.c	/^struct onenand_info {$/;"	s	file:
onenand_interrupt	onenand/onenand_base.c	/^static irqreturn_t onenand_interrupt(int irq, void *data)$/;"	f	file:
onenand_interrupt_wait	onenand/onenand_base.c	/^static int onenand_interrupt_wait(struct mtd_info *mtd, int state)$/;"	f	file:
onenand_invalidate_bufferram	onenand/onenand_base.c	/^static void onenand_invalidate_bufferram(struct mtd_info *mtd, loff_t addr,$/;"	f	file:
onenand_isbad_bbt	onenand/onenand_bbt.c	/^static int onenand_isbad_bbt(struct mtd_info *mtd, loff_t offs, int allowbbt)$/;"	f	file:
onenand_lock	onenand/onenand_base.c	/^static int onenand_lock(struct mtd_info *mtd, loff_t ofs, size_t len)$/;"	f	file:
onenand_lock_handle	onenand/onenand_sim.c	/^static void onenand_lock_handle(struct onenand_chip *this, int cmd)$/;"	f	file:
onenand_lock_user_prot_reg	onenand/onenand_base.c	/^static int onenand_lock_user_prot_reg(struct mtd_info *mtd, loff_t from,$/;"	f	file:
onenand_manuf_ids	onenand/onenand_base.c	/^static const struct onenand_manufacturers onenand_manuf_ids[] = {$/;"	v	typeref:struct:onenand_manufacturers	file:
onenand_memory_bbt	onenand/onenand_bbt.c	/^static inline int onenand_memory_bbt (struct mtd_info *mtd, struct nand_bbt_descr *bd)$/;"	f	file:
onenand_oob_32	onenand/onenand_base.c	/^static struct nand_ecclayout onenand_oob_32 = {$/;"	v	typeref:struct:nand_ecclayout	file:
onenand_oob_64	onenand/onenand_base.c	/^static struct nand_ecclayout onenand_oob_64 = {$/;"	v	typeref:struct:nand_ecclayout	file:
onenand_otp_walk	onenand/onenand_base.c	/^static int onenand_otp_walk(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
onenand_page_address	onenand/onenand_base.c	/^static int onenand_page_address(int page, int sector)$/;"	f	file:
onenand_print_device_info	onenand/onenand_base.c	/^static void onenand_print_device_info(int device, int version)$/;"	f	file:
onenand_probe	onenand/onenand_base.c	/^static int onenand_probe(struct mtd_info *mtd)$/;"	f	file:
onenand_read	onenand/onenand_base.c	/^static int onenand_read(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
onenand_read_bufferram	onenand/onenand_base.c	/^static int onenand_read_bufferram(struct mtd_info *mtd, int area,$/;"	f	file:
onenand_read_fact_prot_reg	onenand/onenand_base.c	/^static int onenand_read_fact_prot_reg(struct mtd_info *mtd, loff_t from,$/;"	f	file:
onenand_read_oob	onenand/onenand_base.c	/^static int onenand_read_oob(struct mtd_info *mtd, loff_t from,$/;"	f	file:
onenand_read_oob_nolock	onenand/onenand_base.c	/^static int onenand_read_oob_nolock(struct mtd_info *mtd, loff_t from,$/;"	f	file:
onenand_read_ops_nolock	onenand/onenand_base.c	/^static int onenand_read_ops_nolock(struct mtd_info *mtd, loff_t from,$/;"	f	file:
onenand_read_user_prot_reg	onenand/onenand_base.c	/^static int onenand_read_user_prot_reg(struct mtd_info *mtd, loff_t from,$/;"	f	file:
onenand_readw	onenand/onenand_base.c	/^static unsigned short onenand_readw(void __iomem *addr)$/;"	f	file:
onenand_release	onenand/onenand_base.c	/^EXPORT_SYMBOL_GPL(onenand_release);$/;"	v
onenand_release	onenand/onenand_base.c	/^void onenand_release(struct mtd_info *mtd)$/;"	f
onenand_release_device	onenand/onenand_base.c	/^static void onenand_release_device(struct mtd_info *mtd)$/;"	f	file:
onenand_resume	onenand/onenand_base.c	/^static void onenand_resume(struct mtd_info *mtd)$/;"	f	file:
onenand_scan	onenand/onenand_base.c	/^EXPORT_SYMBOL_GPL(onenand_scan);$/;"	v
onenand_scan	onenand/onenand_base.c	/^int onenand_scan(struct mtd_info *mtd, int maxchips)$/;"	f
onenand_scan_bbt	onenand/onenand_bbt.c	/^EXPORT_SYMBOL(onenand_scan_bbt);$/;"	v
onenand_scan_bbt	onenand/onenand_bbt.c	/^int onenand_scan_bbt(struct mtd_info *mtd, struct nand_bbt_descr *bd)$/;"	f
onenand_setup_wait	onenand/onenand_base.c	/^static void onenand_setup_wait(struct mtd_info *mtd)$/;"	f	file:
onenand_sim_exit	onenand/onenand_sim.c	/^module_exit(onenand_sim_exit);$/;"	v
onenand_sim_exit	onenand/onenand_sim.c	/^static void __exit onenand_sim_exit(void)$/;"	f	file:
onenand_sim_init	onenand/onenand_sim.c	/^module_init(onenand_sim_init);$/;"	v
onenand_sim_init	onenand/onenand_sim.c	/^static int __init onenand_sim_init(void)$/;"	f	file:
onenand_suspend	onenand/onenand_base.c	/^static int onenand_suspend(struct mtd_info *mtd)$/;"	f	file:
onenand_sync	onenand/onenand_base.c	/^static void onenand_sync(struct mtd_info *mtd)$/;"	f	file:
onenand_sync_read_bufferram	onenand/onenand_base.c	/^static int onenand_sync_read_bufferram(struct mtd_info *mtd, int area,$/;"	f	file:
onenand_transfer_auto_oob	onenand/onenand_base.c	/^static int onenand_transfer_auto_oob(struct mtd_info *mtd, uint8_t *buf, int column,$/;"	f	file:
onenand_try_interrupt_wait	onenand/onenand_base.c	/^static int onenand_try_interrupt_wait(struct mtd_info *mtd, int state)$/;"	f	file:
onenand_unlock	onenand/onenand_base.c	/^static int onenand_unlock(struct mtd_info *mtd, loff_t ofs, size_t len)$/;"	f	file:
onenand_unlock_all	onenand/onenand_base.c	/^static int onenand_unlock_all(struct mtd_info *mtd)$/;"	f	file:
onenand_update_bufferram	onenand/onenand_base.c	/^static void onenand_update_bufferram(struct mtd_info *mtd, loff_t addr,$/;"	f	file:
onenand_update_interrupt	onenand/onenand_sim.c	/^static void onenand_update_interrupt(struct onenand_chip *this, int cmd)$/;"	f	file:
onenand_verify	onenand/onenand_base.c	/^static int onenand_verify(struct mtd_info *mtd, const u_char *buf, loff_t addr, size_t len)$/;"	f	file:
onenand_verify	onenand/onenand_base.c	1270;"	d	file:
onenand_verify_oob	onenand/onenand_base.c	/^static int onenand_verify_oob(struct mtd_info *mtd, const u_char *buf, loff_t to)$/;"	f	file:
onenand_verify_oob	onenand/onenand_base.c	1271;"	d	file:
onenand_wait	onenand/onenand_base.c	/^static int onenand_wait(struct mtd_info *mtd, int state)$/;"	f	file:
onenand_write	onenand/onenand_base.c	/^static int onenand_write(struct mtd_info *mtd, loff_t to, size_t len,$/;"	f	file:
onenand_write_bufferram	onenand/onenand_base.c	/^static int onenand_write_bufferram(struct mtd_info *mtd, int area,$/;"	f	file:
onenand_write_oob	onenand/onenand_base.c	/^static int onenand_write_oob(struct mtd_info *mtd, loff_t to,$/;"	f	file:
onenand_write_oob_nolock	onenand/onenand_base.c	/^static int onenand_write_oob_nolock(struct mtd_info *mtd, loff_t to,$/;"	f	file:
onenand_write_ops_nolock	onenand/onenand_base.c	/^static int onenand_write_ops_nolock(struct mtd_info *mtd, loff_t to,$/;"	f	file:
onenand_write_user_prot_reg	onenand/onenand_base.c	/^static int onenand_write_user_prot_reg(struct mtd_info *mtd, loff_t from,$/;"	f	file:
onenand_writew	onenand/onenand_base.c	/^static void onenand_writew(unsigned short value, void __iomem *addr)$/;"	f	file:
onenand_writew	onenand/onenand_sim.c	/^static void onenand_writew(unsigned short value, void __iomem * addr)$/;"	f	file:
oob	mtd-utils/nftldump.c	/^static struct mtd_oob_buf oob = {0, 16, (unsigned char *)&oobbuf};$/;"	v	typeref:struct:mtd_oob_buf	file:
oob	nand/jz4750_nand.c	/^	u8 *oob;$/;"	m	struct:buf_be_corrected	file:
oob_file	mtd-utils/ubi-utils/src/nand2bin.c	/^	const char *oob_file;$/;"	m	struct:args	file:
oobavail	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t oobavail;$/;"	m	struct:nand_ecclayout
oobbuf	mtd-utils/nanddump.c	/^unsigned char oobbuf[256];$/;"	v
oobbuf	mtd-utils/nanddump_vfat.c	/^unsigned char oobbuf[256];$/;"	v
oobbuf	mtd-utils/nandwrite.c	/^unsigned char oobbuf[MAX_OOB_SIZE];$/;"	v
oobbuf	mtd-utils/nftldump.c	/^static struct nftl_oob oobbuf;$/;"	v	typeref:struct:nftl_oob	file:
oobfree	mtd-utils/include/mtd/mtd-abi.h	/^	struct nand_oobfree oobfree[MTD_MAX_OOBFREE_ENTRIES];$/;"	m	struct:nand_ecclayout	typeref:struct:nand_ecclayout::nand_oobfree
oobfree	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t oobfree[8][2];$/;"	m	struct:nand_oobinfo
ooblength	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t ooblength;  $/;"	m	struct:mtd_page_buf
oobptr	mtd-utils/include/mtd/mtd-abi.h	/^	unsigned char __user *oobptr;$/;"	m	struct:mtd_page_buf
oobreadbuf	mtd-utils/nandwrite.c	/^unsigned char oobreadbuf[MAX_OOB_SIZE];$/;"	v
oobreadbuf	mtd-utils/nandwrite_mlc.c	/^unsigned char oobreadbuf[MAX_OOB_SIZE];$/;"	v
oobshift	nand/nandsim.c	/^		uint oobshift;      \/* bits number in OOB size *\/$/;"	m	struct:nandsim::nandsin_geometry	file:
oobsize	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t oobsize;   \/\/ Amount of OOB data per block (e.g. 16)$/;"	m	struct:mtd_info_user
oobsize	mtd-utils/jffs2dump.c	/^int	oobsize;		\/\/ Size of oob chunks, when oob data is inside the binary image$/;"	v
oobsz	nand/nandsim.c	/^		uint oobsz;         \/* page OOB area size, bytes *\/$/;"	m	struct:nandsim::nandsin_geometry	file:
oops_buf	mtdoops.c	/^	void *oops_buf;$/;"	m	struct:mtdoops_context	file:
oops_cxt	mtdoops.c	/^} oops_cxt;$/;"	v	typeref:struct:mtdoops_context	file:
oops_pages	mtdoops.c	/^	int oops_pages;$/;"	m	struct:mtdoops_context	file:
op	nand/nandsim.c	/^	uint32_t *op;           \/* current operation, NULL operations isn't known yet  *\/$/;"	m	struct:nandsim	file:
open	ubi/ubiblk.h	/^	int (*open)(struct inode *i, struct file *f);$/;"	m	struct:ubi_blktrans_ops
open_cfg_file	mtd-utils/ubi-utils/perl/mkpfi	/^sub open_cfg_file($) {$/;"	s
open_error	mtd-utils/ubi-utils/src/libubimirror.c	/^	open_error = -7,$/;"	e	enum:__anon7	file:
open_file_add	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void open_file_add(struct fd_info *fdi)$/;"	f	file:
open_file_info	mtd-utils/tests/fs-tests/integrity/integck.c	/^struct open_file_info \/* We keep a list of open files *\/$/;"	s	file:
open_file_remove	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void open_file_remove(struct fd_info *fdi)$/;"	f	file:
open_files	mtd-utils/tests/fs-tests/integrity/integck.c	/^static struct open_file_info *open_files = NULL; \/* We keep a list of$/;"	v	typeref:struct:open_file_info	file:
open_files_count	mtd-utils/tests/fs-tests/integrity/integck.c	/^static size_t open_files_count = 0;$/;"	v	file:
open_io_handle	mtd-utils/ubi-utils/src/pfi2bin.c	/^open_io_handle(myargs *args, io_t io)$/;"	f	file:
open_mtd_device	ubi/build.c	/^static struct mtd_info * __init open_mtd_device(const char *mtd_dev)$/;"	f	file:
open_volume	mtd-utils/tests/ubi-tests/integ.c	/^static struct volume_fd *open_volume(struct volume_info *vol)$/;"	f	file:
open_volume_count	mtd-utils/tests/ubi-tests/integ.c	/^static size_t open_volume_count = 0;$/;"	v	file:
open_volume_fd	mtd-utils/tests/ubi-tests/integ.c	/^struct open_volume_fd$/;"	s	file:
open_volumes	mtd-utils/tests/ubi-tests/integ.c	/^static struct open_volume_fd *open_volumes;$/;"	v	typeref:struct:open_volume_fd	file:
operate_on_an_open_file	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void operate_on_an_open_file(void)$/;"	f	file:
operate_on_dir	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void operate_on_dir(struct dir_info *dir)$/;"	f	file:
operate_on_entry	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void operate_on_entry(struct dir_entry_info *entry)$/;"	f	file:
operate_on_erase_block	mtd-utils/tests/ubi-tests/integ.c	/^static void operate_on_erase_block(struct erase_block_info *erase_block, int fd)$/;"	f	file:
operate_on_file	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void operate_on_file(struct file_info *file)$/;"	f	file:
operate_on_open_file	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void operate_on_open_file(struct fd_info *fdi)$/;"	f	file:
operate_on_open_volume	mtd-utils/tests/ubi-tests/integ.c	/^static void operate_on_open_volume(struct volume_fd *vol_fd)$/;"	f	file:
operate_on_ubi_device	mtd-utils/tests/ubi-tests/integ.c	/^static void operate_on_ubi_device(struct ubi_device_info *ubi_device)$/;"	f	file:
operate_on_volume	mtd-utils/tests/ubi-tests/integ.c	/^static void operate_on_volume(struct volume_info *vol)$/;"	f	file:
operation_count	mtd-utils/tests/fs-tests/integrity/integck.c	/^static uint64_t operation_count = 0; \/* Number of operations used to fill$/;"	v	file:
ops	nand/nandsim.c	/^} ops[NS_OPER_NUM] = {$/;"	v	typeref:struct:nandsim_operations	file:
options	mtd-utils/ubi-utils/src/bin2nand.c	/^	char **options;			\/* [STRING...] *\/$/;"	m	struct:myargs	file:
options	mtd-utils/ubi-utils/src/mkbootenv.c	/^	char **options;			\/* [STRING...] *\/$/;"	m	struct:myargs	file:
options	mtd-utils/ubi-utils/src/nand2bin.c	/^	char **options;		\/* [STRING...] *\/$/;"	m	struct:args	file:
options	mtd-utils/ubi-utils/src/pddcustomize.c	/^	char **options;		\/* [STRING...] *\/$/;"	m	struct:myargs	file:
options	mtd-utils/ubi-utils/src/pfi2bin.c	/^	char **options;			\/* [STRING...] *\/$/;"	m	struct:myargs	file:
options	mtd-utils/ubi-utils/src/pfiflash.c	/^	char **options;		\/* [STRING...] *\/$/;"	m	struct:myargs	file:
options	mtd-utils/ubi-utils/src/ubigen.c	/^	char **options;			\/* [STRING...] *\/$/;"	m	struct:myargs	file:
options	mtd-utils/ubi-utils/src/ubimirror.c	/^	char **options;		\/* [STRING...] *\/$/;"	m	struct:myargs	file:
options	mtd-utils/ubi-utils/src/unubi.c	/^	char **options;$/;"	m	struct:args	file:
options	nand/nandsim.c	/^	uint32_t options;       \/* chip's characteristic bits *\/$/;"	m	struct:nandsim	file:
optionsstr	mtd-utils/ubi-utils/new-utils/src/ubiattach.c	/^static const char *optionsstr =$/;"	v	file:
optionsstr	mtd-utils/ubi-utils/new-utils/src/ubicrc32.c	/^static const char *optionsstr =$/;"	v	file:
optionsstr	mtd-utils/ubi-utils/new-utils/src/ubicrcvol.c	/^static const char *optionsstr =$/;"	v	file:
optionsstr	mtd-utils/ubi-utils/new-utils/src/ubidetach.c	/^static const char *optionsstr =$/;"	v	file:
optionsstr	mtd-utils/ubi-utils/new-utils/src/ubidumpvol.c	/^static const char *optionsstr =$/;"	v	file:
optionsstr	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	/^static const char *optionsstr =$/;"	v	file:
optionsstr	mtd-utils/ubi-utils/new-utils/src/ubimkvol.c	/^static const char *optionsstr =$/;"	v	file:
optionsstr	mtd-utils/ubi-utils/new-utils/src/ubinfo.c	/^static const char *optionsstr =$/;"	v	file:
optionsstr	mtd-utils/ubi-utils/new-utils/src/ubinize.c	/^static const char *optionsstr =$/;"	v	file:
optionsstr	mtd-utils/ubi-utils/new-utils/src/ubirmvol.c	/^static const char *optionsstr =$/;"	v	file:
optionsstr	mtd-utils/ubi-utils/new-utils/src/ubiupdatevol.c	/^static const char *optionsstr =$/;"	v	file:
optionsstr	mtd-utils/ubi-utils/src/bin2nand.c	/^static const char *optionsstr =$/;"	v	file:
optionsstr	mtd-utils/ubi-utils/src/mkbootenv.c	/^static const char *optionsstr =$/;"	v	file:
optionsstr	mtd-utils/ubi-utils/src/nand2bin.c	/^static const char *optionsstr =$/;"	v	file:
optionsstr	mtd-utils/ubi-utils/src/pddcustomize.c	/^static const char *optionsstr =$/;"	v	file:
optionsstr	mtd-utils/ubi-utils/src/pfi2bin.c	/^static const char *optionsstr =$/;"	v	file:
optionsstr	mtd-utils/ubi-utils/src/pfiflash.c	/^static const char *optionsstr =$/;"	v	file:
optionsstr	mtd-utils/ubi-utils/src/ubigen.c	/^static const char *optionsstr =$/;"	v	file:
optionsstr	mtd-utils/ubi-utils/src/ubimirror.c	/^static const char *optionsstr =$/;"	v	file:
optionsstr	mtd-utils/ubi-utils/src/unubi.c	/^static const char *optionsstr =$/;"	v	file:
orph	mtd-utils/tests/fs-tests/simple/orph.c	/^void orph(void)$/;"	f
orph_get_description	mtd-utils/tests/fs-tests/simple/orph.c	/^const char *orph_get_description(void)$/;"	f
orph_get_title	mtd-utils/tests/fs-tests/simple/orph.c	/^const char *orph_get_title(void)$/;"	f
os_partitions	onenand/onenand_sim.c	/^static struct mtd_partition os_partitions[] = {$/;"	v	typeref:struct:mtd_partition	file:
otp_info	mtd-utils/include/mtd/mtd-abi.h	/^struct otp_info {$/;"	s
otp_op_t	chips/cfi_cmdset_0001.c	/^typedef int (*otp_op_t)(struct map_info *map, struct flchip *chip,$/;"	t	file:
otp_op_t	onenand/onenand_base.c	/^typedef int (*otp_op_t)(struct mtd_info *mtd, loff_t form, size_t len,$/;"	t	file:
otp_select_filemode	mtdchar.c	/^static int otp_select_filemode(struct mtd_file_info *mfi, int mode)$/;"	f	file:
otp_select_filemode	mtdchar.c	367;"	d	file:
out_fd	mtd-utils/mkfs.jffs2.c	/^static int out_fd = -1;$/;"	v	file:
out_fd	mtd-utils/sumtool.c	/^static int out_fd = -1;$/;"	v	file:
out_fd	mtd-utils/ubi-utils/new-utils/src/ubinize.c	/^	int out_fd;$/;"	m	struct:args	file:
out_filename	mtd-utils/rfddump.c	/^	const char *out_filename;$/;"	m	struct:rfd	file:
out_ofs	mtd-utils/mkfs.jffs2.c	/^static int out_ofs = 0;$/;"	v	file:
output_cycle	nand/nandsim.c	/^static uint output_cycle   = CONFIG_NANDSIM_OUTPUT_CYCLE;$/;"	v	file:
output_file	mtd-utils/ubi-utils/src/nand2bin.c	/^	const char *output_file;$/;"	m	struct:args	file:
override_ec	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	/^	unsigned int override_ec:1;$/;"	m	struct:args	file:
overridesize	nand/nandsim.c	/^static unsigned int overridesize = 0;$/;"	v	file:
owner	ubi/ubiblk.h	/^	struct module *owner;$/;"	m	struct:ubi_blktrans_ops	typeref:struct:ubi_blktrans_ops::module
p_dev	maps/pcmciamtd.c	/^	struct pcmcia_device	*p_dev;$/;"	m	struct:pcmciamtd_dev	typeref:struct:pcmciamtd_dev::pcmcia_device	file:
p_nand	nand/au1550nd.c	/^static void __iomem *p_nand;$/;"	v	file:
pad	mtd-utils/mkfs.jffs2.c	/^static void pad(int req)$/;"	f	file:
pad	mtd-utils/nandwrite.c	/^int	pad = 0;$/;"	v
pad	mtd-utils/nandwrite_mlc.c	/^int	pad = 0;$/;"	v
pad	mtd-utils/sumtool.c	/^static void pad(int req)$/;"	f	file:
pad_block_if_less_than	mtd-utils/mkfs.jffs2.c	/^static inline void pad_block_if_less_than(int req)$/;"	f	file:
pad_block_if_less_than	mtd-utils/sumtool.c	/^static inline void pad_block_if_less_than(int req,int plus)$/;"	f	file:
pad_fs_size	mtd-utils/mkfs.jffs2.c	/^static int pad_fs_size = 0;$/;"	v	file:
padblock	mtd-utils/mkfs.jffs2.c	/^static void padblock(void)$/;"	f	file:
padded	mtd-utils/include/linux/jffs2.h	/^	jint32_t padded;	\/* sum of the size of padding nodes *\/$/;"	m	struct:jffs2_raw_summary
padding	mtd-utils/include/mtd/ubi-header.h	/^	uint8_t  padding[23];$/;"	m	struct:ubi_vtbl_record
padding	mtd-utils/include/mtd/ubi-user.h	/^	uint8_t padding[12];$/;"	m	struct:ubi_attach_req
padding	mtd-utils/include/mtd/ubi-user.h	/^	uint8_t padding[7];$/;"	m	struct:ubi_leb_change_req
padding	mtd-utils/ubi-utils/src/bin2nand.c	/^	size_t padding;$/;"	m	struct:myargs	file:
padding	ubi/ubi-media.h	/^	__u8    padding[23];$/;"	m	struct:ubi_vtbl_record
padding1	mtd-utils/include/mtd/ubi-header.h	/^	uint8_t  padding1[3];$/;"	m	struct:ubi_ec_hdr
padding1	mtd-utils/include/mtd/ubi-header.h	/^	uint8_t  padding1[4];$/;"	m	struct:ubi_vid_hdr
padding1	mtd-utils/include/mtd/ubi-user.h	/^	int8_t padding1;$/;"	m	struct:ubi_mkvol_req
padding1	ubi/ubi-media.h	/^	__u8    padding1[3];$/;"	m	struct:ubi_ec_hdr
padding1	ubi/ubi-media.h	/^	__u8    padding1[4];$/;"	m	struct:ubi_vid_hdr
padding2	mtd-utils/include/mtd/ubi-header.h	/^	uint8_t  padding2[12];$/;"	m	struct:ubi_vid_hdr
padding2	mtd-utils/include/mtd/ubi-header.h	/^	uint8_t  padding2[36];$/;"	m	struct:ubi_ec_hdr
padding2	mtd-utils/include/mtd/ubi-user.h	/^	int8_t padding2[4];$/;"	m	struct:ubi_mkvol_req
padding2	ubi/ubi-media.h	/^	__u8    padding2[12];$/;"	m	struct:ubi_vid_hdr
padding2	ubi/ubi-media.h	/^	__u8    padding2[36];$/;"	m	struct:ubi_ec_hdr
padto	mtd-utils/sumtool.c	/^static int padto = 0;				\/* pad the output with 0xFF to the end of the final eraseblock *\/$/;"	v	file:
padword	mtd-utils/mkfs.jffs2.c	/^static inline void padword(void)$/;"	f	file:
padword	mtd-utils/sumtool.c	/^static inline void padword()$/;"	f	file:
page_addr	nand/cafe_nand.c	/^	int page_addr;$/;"	m	struct:cafe_priv	file:
page_cache_data	mtdblock-jz.c	/^	unsigned char *page_cache_data;$/;"	m	struct:mtdblk_dev	file:
page_in_window	maps/sbc_gxx.c	/^static volatile int page_in_window = -1; \/\/ Current page in window.$/;"	v	file:
page_n_dev	maps/octagon-5066.c	/^static volatile char page_n_dev = 0;$/;"	v	file:
page_no	nand/nandsim.c	/^	unsigned int page_no;$/;"	m	struct:grave_page	file:
page_no	nand/nandsim.c	/^	unsigned int page_no;$/;"	m	struct:weak_page	file:
page_num	mtdblock-jz.c	/^	unsigned long page_num;$/;"	m	struct:mtdblk_dev	file:
page_offset	devices/mtd_dataflash.c	/^	unsigned short		page_offset;	\/* offset in flash address *\/$/;"	m	struct:dataflash	file:
page_offset_state	mtdblock-jz.c	/^	unsigned char *page_offset_state;$/;"	m	struct:mtdblk_dev	file:
page_read	devices/block2mtd.c	/^static struct page *page_read(struct address_space *mapping, int index)$/;"	f	file:
page_size	devices/mtd_dataflash.c	/^	unsigned int		page_size;	\/* of bytes per page *\/$/;"	m	struct:dataflash	file:
page_size	mtd-utils/mkfs.jffs2.c	/^int page_size = -1;$/;"	v
page_state	mtdblock-jz.c	/^	unsigned char *page_state;$/;"	m	struct:mtdblk_dev	file:
page_sts	ubi/ubiblk.h	/^	unsigned char *page_sts;$/;"	m	struct:ubiblk_dev
pagemask	nand/alauda.c	/^	u32			pagemask;$/;"	m	struct:alauda	file:
pages	nand/nandsim.c	/^	union ns_mem *pages;$/;"	m	struct:nandsim	typeref:union:nandsim::ns_mem	file:
pageshift	nand/alauda.c	/^	u8	pageshift;	\/* 1<<pageshift page size *\/$/;"	m	struct:alauda_card	file:
pagesize	mtd-utils/ubi-utils/scripts/Makefile	/^pagesize	?= 2048$/;"	m
pagesize	mtd-utils/ubi-utils/src/bin2nand.c	/^	size_t pagesize;$/;"	m	struct:myargs	file:
pagesize	mtd-utils/ubi-utils/src/nand2bin.c	/^	size_t pagesize;$/;"	m	struct:args	file:
par_table	maps/sc520cdp.c	/^static const struct sc520_par_table par_table[NUM_FLASH_BANKS] =$/;"	v	typeref:struct:sc520_par_table	file:
param_sanity_check	mtd-utils/ubi-utils/new-utils/src/ubimkvol.c	/^static int param_sanity_check(void)$/;"	f	file:
param_sanity_check	mtd-utils/ubi-utils/new-utils/src/ubirmvol.c	/^static int param_sanity_check(void)$/;"	f	file:
paranoid_check_all_ff	ubi/io.c	/^static int paranoid_check_all_ff(struct ubi_device *ubi, int pnum, int offset,$/;"	f	file:
paranoid_check_all_ff	ubi/io.c	109;"	d	file:
paranoid_check_ec	ubi/wl.c	/^static int paranoid_check_ec(struct ubi_device *ubi, int pnum, int ec)$/;"	f	file:
paranoid_check_ec	ubi/wl.c	200;"	d	file:
paranoid_check_ec_hdr	ubi/io.c	/^static int paranoid_check_ec_hdr(const struct ubi_device *ubi, int pnum,$/;"	f	file:
paranoid_check_ec_hdr	ubi/io.c	106;"	d	file:
paranoid_check_in_wl_tree	ubi/wl.c	/^static int paranoid_check_in_wl_tree(struct ubi_wl_entry *e,$/;"	f	file:
paranoid_check_in_wl_tree	ubi/wl.c	201;"	d	file:
paranoid_check_not_bad	ubi/io.c	/^static int paranoid_check_not_bad(const struct ubi_device *ubi, int pnum)$/;"	f	file:
paranoid_check_not_bad	ubi/io.c	104;"	d	file:
paranoid_check_peb_ec_hdr	ubi/io.c	/^static int paranoid_check_peb_ec_hdr(const struct ubi_device *ubi, int pnum)$/;"	f	file:
paranoid_check_peb_ec_hdr	ubi/io.c	105;"	d	file:
paranoid_check_peb_vid_hdr	ubi/io.c	/^static int paranoid_check_peb_vid_hdr(const struct ubi_device *ubi, int pnum)$/;"	f	file:
paranoid_check_peb_vid_hdr	ubi/io.c	107;"	d	file:
paranoid_check_si	ubi/scan.c	/^static int paranoid_check_si(struct ubi_device *ubi, struct ubi_scan_info *si)$/;"	f	file:
paranoid_check_si	ubi/scan.c	51;"	d	file:
paranoid_check_vid_hdr	ubi/io.c	/^static int paranoid_check_vid_hdr(const struct ubi_device *ubi, int pnum,$/;"	f	file:
paranoid_check_vid_hdr	ubi/io.c	108;"	d	file:
paranoid_check_volume	ubi/vmt.c	/^static void paranoid_check_volume(struct ubi_device *ubi, int vol_id)$/;"	f	file:
paranoid_check_volumes	ubi/vmt.c	/^static void paranoid_check_volumes(struct ubi_device *ubi)$/;"	f	file:
paranoid_check_volumes	ubi/vmt.c	33;"	d	file:
paranoid_vtbl_check	ubi/vtbl.c	/^static void paranoid_vtbl_check(const struct ubi_device *ubi)$/;"	f	file:
paranoid_vtbl_check	ubi/vtbl.c	67;"	d	file:
parent	mtd-utils/mkfs.jffs2.c	/^	struct filesystem_entry *parent;	\/* Parent directory *\/$/;"	m	struct:filesystem_entry	typeref:struct:filesystem_entry::filesystem_entry	file:
parent	mtd-utils/tests/fs-tests/integrity/integck.c	/^	struct dir_info *parent; \/* Parent directory *\/$/;"	m	struct:file_info	typeref:struct:file_info::dir_info	file:
parent	mtd-utils/tests/fs-tests/integrity/integck.c	/^	struct dir_info *parent; \/* Parent directory or null$/;"	m	struct:dir_info	typeref:struct:dir_info::dir_info	file:
parityPerField	mtd-utils/include/mtd/inftl-user.h	/^	uint8_t parityPerField;$/;"	m	struct:inftl_unithead1
parityPerField	mtd-utils/include/mtd/inftl-user.h	/^	uint8_t parityPerField;$/;"	m	struct:inftl_unithead2
parse_afs_partitions	afs.c	/^static int parse_afs_partitions(struct mtd_info *mtd,$/;"	f	file:
parse_badblocks	nand/nandsim.c	/^static int parse_badblocks(struct nandsim *ns, struct mtd_info *mtd)$/;"	f	file:
parse_cmdline	devices/slram.c	/^static int parse_cmdline(char *devname, char *szstart, char *szlength)$/;"	f	file:
parse_cmdline_partitions	cmdlinepart.c	/^static int parse_cmdline_partitions(struct mtd_info *master,$/;"	f	file:
parse_command_line	mtd-utils/tests/fs-tests/utils/fstest_monitor.c	/^int parse_command_line(char *cmdline, int *pargc, char ***pargv)$/;"	f
parse_command_line	mtd-utils/ubi-utils/perl/mkpfi	/^sub parse_command_line($) {$/;"	s
parse_device_table	mtd-utils/mkfs.jffs2.c	/^static int parse_device_table(struct filesystem_entry *root, FILE * file)$/;"	f	file:
parse_err	devices/block2mtd.c	369;"	d	file:
parse_err	devices/phram.c	230;"	d	file:
parse_gravepages	nand/nandsim.c	/^static int parse_gravepages(void)$/;"	f	file:
parse_image	mtd-utils/mkfs.jffs2.c	/^void parse_image(){$/;"	f
parse_index_number	mtd-utils/tests/fs-tests/stress/atoms/gcd_hupper.c	/^int parse_index_number(const char *name)$/;"	f
parse_mtd_partitions	mtdpart.c	/^EXPORT_SYMBOL_GPL(parse_mtd_partitions);$/;"	v
parse_mtd_partitions	mtdpart.c	/^int parse_mtd_partitions(struct mtd_info *master, const char **types,$/;"	f
parse_name	devices/phram.c	/^static int parse_name(char **pname, const char *token)$/;"	f	file:
parse_num	devices/block2mtd.c	/^static int parse_num(size_t *num, const char *token)$/;"	f	file:
parse_num32	devices/phram.c	/^static int parse_num32(uint32_t *num32, const char *token)$/;"	f	file:
parse_obsolete_partitions	maps/physmap_of.c	/^static int parse_obsolete_partitions(struct of_device *dev,$/;"	f	file:
parse_opt	mtd-utils/ubi-utils/new-utils/src/ubiattach.c	/^static int parse_opt(int argc, char * const argv[])$/;"	f	file:
parse_opt	mtd-utils/ubi-utils/new-utils/src/ubicrc32.c	/^static int parse_opt(int argc, char * const argv[])$/;"	f	file:
parse_opt	mtd-utils/ubi-utils/new-utils/src/ubicrcvol.c	/^static int parse_opt(int argc, char * const argv[])$/;"	f	file:
parse_opt	mtd-utils/ubi-utils/new-utils/src/ubidetach.c	/^static int parse_opt(int argc, char * const argv[])$/;"	f	file:
parse_opt	mtd-utils/ubi-utils/new-utils/src/ubidumpvol.c	/^static int parse_opt(int argc, char * const argv[])$/;"	f	file:
parse_opt	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	/^static int parse_opt(int argc, char * const argv[])$/;"	f	file:
parse_opt	mtd-utils/ubi-utils/new-utils/src/ubimkvol.c	/^static int parse_opt(int argc, char * const argv[])$/;"	f	file:
parse_opt	mtd-utils/ubi-utils/new-utils/src/ubinfo.c	/^static int parse_opt(int argc, char * const argv[])$/;"	f	file:
parse_opt	mtd-utils/ubi-utils/new-utils/src/ubinize.c	/^static int parse_opt(int argc, char * const argv[])$/;"	f	file:
parse_opt	mtd-utils/ubi-utils/new-utils/src/ubirmvol.c	/^static int parse_opt(int argc, char * const argv[])$/;"	f	file:
parse_opt	mtd-utils/ubi-utils/new-utils/src/ubiupdatevol.c	/^static int parse_opt(int argc, char * const argv[])$/;"	f	file:
parse_opt	mtd-utils/ubi-utils/src/bin2nand.c	/^parse_opt(int argc, char **argv, myargs *args)$/;"	f	file:
parse_opt	mtd-utils/ubi-utils/src/mkbootenv.c	/^parse_opt(int argc, char **argv, myargs *args)$/;"	f	file:
parse_opt	mtd-utils/ubi-utils/src/nand2bin.c	/^static int parse_opt(int argc, char **argv, struct args *args)$/;"	f	file:
parse_opt	mtd-utils/ubi-utils/src/pddcustomize.c	/^parse_opt(int argc, char **argv, myargs *args)$/;"	f	file:
parse_opt	mtd-utils/ubi-utils/src/pfi2bin.c	/^parse_opt(int argc, char **argv, myargs *args)$/;"	f	file:
parse_opt	mtd-utils/ubi-utils/src/pfiflash.c	/^parse_opt(int argc, char **argv, myargs *args)$/;"	f	file:
parse_opt	mtd-utils/ubi-utils/src/ubigen.c	/^parse_opt(int argc, char **argv, myargs *args)$/;"	f	file:
parse_opt	mtd-utils/ubi-utils/src/ubimirror.c	/^parse_opt(int argc, char **argv, myargs *args)$/;"	f	file:
parse_opt	mtd-utils/ubi-utils/src/unubi.c	/^parse_opt(int argc, char **argv, struct args *args)$/;"	f	file:
parse_partitions	maps/physmap_of.c	/^static int __devinit parse_partitions(struct of_flash *info,$/;"	f	file:
parse_partitions	maps/physmap_of.c	143;"	d	file:
parse_redboot_partitions	redboot.c	/^static int parse_redboot_partitions(struct mtd_info *master,$/;"	f	file:
parse_weakblocks	nand/nandsim.c	/^static int parse_weakblocks(void)$/;"	f	file:
parse_weakpages	nand/nandsim.c	/^static int parse_weakpages(void)$/;"	f	file:
parsed_parts	maps/ceiva.c	/^static struct mtd_partition *parsed_parts;$/;"	v	typeref:struct:mtd_partition	file:
parsed_parts	maps/ipaq-flash.c	/^static struct mtd_partition *parsed_parts;$/;"	v	typeref:struct:mtd_partition	file:
parsed_parts	maps/mpc1211.c	/^static struct mtd_partition *parsed_parts;$/;"	v	typeref:struct:mtd_partition	file:
parsed_parts	maps/omap-toto-flash.c	/^static struct mtd_partition *parsed_parts;$/;"	v	typeref:struct:mtd_partition	file:
parsed_parts	maps/solutionengine.c	/^static struct mtd_partition *parsed_parts;$/;"	v	typeref:struct:mtd_partition	file:
part_banks	maps/tqm8xxl.c	/^static struct mtd_part_def part_banks[FLASH_BANK_MAX];$/;"	v	typeref:struct:mtd_part_def	file:
part_bits	ubi/ubiblk.h	/^	int part_bits;$/;"	m	struct:ubi_blktrans_ops
part_block_isbad	mtdpart.c	/^static int part_block_isbad (struct mtd_info *mtd, loff_mtd_t ofs)$/;"	f	file:
part_block_markbad	mtdpart.c	/^static int part_block_markbad (struct mtd_info *mtd, loff_mtd_t ofs)$/;"	f	file:
part_erase	mtdpart.c	/^static int part_erase (struct mtd_info *mtd, struct erase_info *instr)$/;"	f	file:
part_get_fact_prot_info	mtdpart.c	/^static int part_get_fact_prot_info (struct mtd_info *mtd,$/;"	f	file:
part_get_user_prot_info	mtdpart.c	/^static int part_get_user_prot_info (struct mtd_info *mtd,$/;"	f	file:
part_lock	mtdpart.c	/^static int part_lock (struct mtd_info *mtd, loff_mtd_t ofs, size_mtd_t len)$/;"	f	file:
part_lock_user_prot_reg	mtdpart.c	/^static int part_lock_user_prot_reg (struct mtd_info *mtd, loff_mtd_t from, size_mtd_t len)$/;"	f	file:
part_point	mtdpart.c	/^static int part_point (struct mtd_info *mtd, loff_mtd_t from, size_mtd_t len,$/;"	f	file:
part_probe_types	maps/physmap.c	/^static const char *part_probe_types[] = { "cmdlinepart", "RedBoot", NULL };$/;"	v	file:
part_probes	maps/ipaq-flash.c	/^static const char *part_probes[] = { "cmdlinepart", "RedBoot", NULL };$/;"	v	file:
part_probes	maps/omap_nor.c	/^static const char *part_probes[] = { \/* "RedBoot", *\/ "cmdlinepart", NULL };$/;"	v	file:
part_probes	maps/sa1100-flash.c	/^static const char *part_probes[] = { "cmdlinepart", "RedBoot", NULL };$/;"	v	file:
part_probes	nand/at91_nand.c	/^const char *part_probes[] = { "cmdlinepart", NULL };$/;"	v
part_probes	nand/cmx270_nand.c	/^const char *part_probes[] = { "cmdlinepart", NULL };$/;"	v
part_probes	nand/edb7312.c	/^const char *part_probes[] = { "cmdlinepart", NULL };$/;"	v
part_probes	nand/ppchameleonevb.c	/^const char *part_probes[] = { "cmdlinepart", NULL };$/;"	v
part_probes	nand/sharpsl.c	/^const char *part_probes[] = { "cmdlinepart", NULL };$/;"	v
part_probes	nand/ts7250.c	/^static const char *part_probes[] = { "cmdlinepart", NULL };$/;"	v	file:
part_probes	onenand/generic.c	/^static const char *part_probes[] = { "cmdlinepart", NULL,  };$/;"	v	file:
part_probes_evb	nand/ppchameleonevb.c	/^const char *part_probes_evb[] = { "cmdlinepart", NULL };$/;"	v
part_read	mtdpart.c	/^static int part_read (struct mtd_info *mtd, loff_mtd_t from, size_mtd_t len,$/;"	f	file:
part_read_fact_prot_reg	mtdpart.c	/^static int part_read_fact_prot_reg (struct mtd_info *mtd, loff_mtd_t from, size_mtd_t len,$/;"	f	file:
part_read_oob	mtdpart.c	/^static int part_read_oob(struct mtd_info *mtd, loff_mtd_t from,$/;"	f	file:
part_read_user_prot_reg	mtdpart.c	/^static int part_read_user_prot_reg (struct mtd_info *mtd, loff_mtd_t from, size_mtd_t len,$/;"	f	file:
part_resume	mtdpart.c	/^static void part_resume(struct mtd_info *mtd)$/;"	f	file:
part_suspend	mtdpart.c	/^static int part_suspend(struct mtd_info *mtd)$/;"	f	file:
part_sync	mtdpart.c	/^static void part_sync(struct mtd_info *mtd)$/;"	f	file:
part_unlock	mtdpart.c	/^static int part_unlock (struct mtd_info *mtd, loff_mtd_t ofs, size_mtd_t len)$/;"	f	file:
part_unpoint	mtdpart.c	/^static void part_unpoint (struct mtd_info *mtd, u_char *addr, loff_mtd_t from, size_mtd_t len)$/;"	f	file:
part_write	mtdpart.c	/^static int part_write (struct mtd_info *mtd, loff_mtd_t to, size_mtd_t len,$/;"	f	file:
part_write_oob	mtdpart.c	/^static int part_write_oob(struct mtd_info *mtd, loff_mtd_t to,$/;"	f	file:
part_write_user_prot_reg	mtdpart.c	/^static int part_write_user_prot_reg (struct mtd_info *mtd, loff_mtd_t from, size_mtd_t len,$/;"	f	file:
part_writev	mtdpart.c	/^static int part_writev (struct mtd_info *mtd,  const struct kvec *vecs,$/;"	f	file:
partition	rfd_ftl.c	/^struct partition {$/;"	s	file:
partition_info	maps/dbox2-flash.c	/^static struct mtd_partition partition_info[]= {$/;"	v	typeref:struct:mtd_partition	file:
partition_info	maps/dilnetpc.c	/^static struct mtd_partition partition_info[]=$/;"	v	typeref:struct:mtd_partition	file:
partition_info	maps/mbx860.c	/^static struct mtd_partition partition_info[]={$/;"	v	typeref:struct:mtd_partition	file:
partition_info	maps/netsc520.c	/^static struct mtd_partition partition_info[]={$/;"	v	typeref:struct:mtd_partition	file:
partition_info	maps/sbc_gxx.c	/^static struct mtd_partition partition_info[]={$/;"	v	typeref:struct:mtd_partition	file:
partition_info	maps/scx200_docflash.c	/^static struct mtd_partition partition_info[] = {$/;"	v	typeref:struct:mtd_partition	file:
partition_info	nand/ams-delta.c	/^static struct mtd_partition partition_info[] = {$/;"	v	typeref:struct:mtd_partition	file:
partition_info	nand/au1550nd.c	/^static const struct mtd_partition partition_info[] = {$/;"	v	typeref:struct:mtd_partition	file:
partition_info	nand/cmx270_nand.c	/^static struct mtd_partition partition_info[] = {$/;"	v	typeref:struct:mtd_partition	file:
partition_info	nand/edb7312.c	/^static struct mtd_partition partition_info[] = {$/;"	v	typeref:struct:mtd_partition	file:
partition_info	nand/excite_nandflash.c	/^static const struct mtd_partition partition_info[] = {$/;"	v	typeref:struct:mtd_partition	file:
partition_info	nand/h1910.c	/^static struct mtd_partition partition_info[] = {$/;"	v	typeref:struct:mtd_partition	file:
partition_info	nand/jz4730_nand.c	/^static struct mtd_partition partition_info[] = {$/;"	v	typeref:struct:mtd_partition	file:
partition_info	nand/jz4740_nand.c	/^struct mtd_partition partition_info[] = {$/;"	v	typeref:struct:mtd_partition
partition_info	nand/jz4750_nand.c	/^struct mtd_partition partition_info[] = {$/;"	v	typeref:struct:mtd_partition
partition_info	nand/rtc_from4.c	/^static const struct mtd_partition partition_info[] = {$/;"	v	typeref:struct:mtd_partition	file:
partition_info	nand/spia.c	/^static const struct mtd_partition partition_info[] = {$/;"	v	typeref:struct:mtd_partition	file:
partition_info128	nand/ts7250.c	/^static struct mtd_partition partition_info128[] = {$/;"	v	typeref:struct:mtd_partition	file:
partition_info128k	nand/autcpu12.c	/^static struct mtd_partition partition_info128k[] = {$/;"	v	typeref:struct:mtd_partition	file:
partition_info16k	nand/autcpu12.c	/^static struct mtd_partition partition_info16k[] = {$/;"	v	typeref:struct:mtd_partition	file:
partition_info32	nand/ts7250.c	/^static struct mtd_partition partition_info32[] = {$/;"	v	typeref:struct:mtd_partition	file:
partition_info32M	nand/toto.c	/^static struct mtd_partition partition_info32M[] = {$/;"	v	typeref:struct:mtd_partition	file:
partition_info32k	nand/autcpu12.c	/^static struct mtd_partition partition_info32k[] = {$/;"	v	typeref:struct:mtd_partition	file:
partition_info64M	nand/toto.c	/^static struct mtd_partition partition_info64M[] = {$/;"	v	typeref:struct:mtd_partition	file:
partition_info64k	nand/autcpu12.c	/^static struct mtd_partition partition_info64k[] = {$/;"	v	typeref:struct:mtd_partition	file:
partition_info_evb	nand/ppchameleonevb.c	/^static struct mtd_partition partition_info_evb[] = {$/;"	v	typeref:struct:mtd_partition	file:
partition_info_hi	nand/ppchameleonevb.c	/^static struct mtd_partition partition_info_hi[] = {$/;"	v	typeref:struct:mtd_partition	file:
partition_info_me	nand/ppchameleonevb.c	/^static struct mtd_partition partition_info_me[] = {$/;"	v	typeref:struct:mtd_partition	file:
partition_reserved_badblocks	nand/jz4730_nand.c	/^static int partition_reserved_badblocks[]= {$/;"	v	file:
partition_reserved_badblocks	nand/jz4730_nand.c	/^static int partition_reserved_badblocks[]={$/;"	v	file:
partition_reserved_badblocks	nand/jz4740_nand.c	/^static int partition_reserved_badblocks[] = {$/;"	v	file:
partition_reserved_badblocks	nand/jz4750_nand.c	/^static int partition_reserved_badblocks[] = {$/;"	v	file:
partition_t	ftl.c	/^typedef struct partition_t {$/;"	s	file:
partition_t	ftl.c	/^} partition_t;$/;"	t	typeref:struct:partition_t	file:
partitioned	devices/m25p80.c	/^	unsigned		partitioned:1;$/;"	m	struct:m25p	file:
partitioned	devices/mtd_dataflash.c	/^	unsigned		partitioned:1;$/;"	m	struct:dataflash	file:
partitions	cmdlinepart.c	/^static struct cmdline_mtd_partition *partitions;$/;"	v	typeref:struct:cmdline_mtd_partition	file:
partitions	maps/bast-flash.c	/^	struct mtd_partition	*partitions;$/;"	m	struct:bast_flash_info	typeref:struct:bast_flash_info::mtd_partition	file:
partitions	maps/ixp2000.c	/^	struct		mtd_partition *partitions;$/;"	m	struct:ixp2000_flash_info	typeref:struct:ixp2000_flash_info::mtd_partition	file:
partitions	maps/ixp4xx.c	/^	struct mtd_partition *partitions;$/;"	m	struct:ixp4xx_flash_info	typeref:struct:ixp4xx_flash_info::mtd_partition	file:
partitions	maps/plat-ram.c	/^	struct mtd_partition	*partitions;$/;"	m	struct:platram_info	typeref:struct:platram_info::mtd_partition	file:
partitions	nand/nandsim.c	/^	struct mtd_partition partitions[MAX_MTD_DEVICES];$/;"	m	struct:nandsim	typeref:struct:nandsim::mtd_partition	file:
parts	cmdlinepart.c	/^	struct mtd_partition *parts;$/;"	m	struct:cmdline_mtd_partition	typeref:struct:cmdline_mtd_partition::mtd_partition	file:
parts	maps/fortunet.c	/^	struct mtd_partition	parts[MAX_NUM_PARTITIONS];$/;"	m	struct:map_region	typeref:struct:map_region::mtd_partition	file:
parts	maps/integrator-flash.c	/^	struct mtd_partition	*parts;$/;"	m	struct:armflash_info	typeref:struct:armflash_info::mtd_partition	file:
parts	maps/omap_nor.c	/^	struct mtd_partition	*parts;$/;"	m	struct:omapflash_info	typeref:struct:omapflash_info::mtd_partition	file:
parts	maps/physmap.c	/^	struct mtd_partition	*parts;$/;"	m	struct:physmap_flash_info	typeref:struct:physmap_flash_info::mtd_partition	file:
parts	maps/physmap_of.c	/^	struct mtd_partition	*parts;$/;"	m	struct:of_flash	typeref:struct:of_flash::mtd_partition	file:
parts	maps/pxa2xx-flash.c	/^	struct mtd_partition	*parts;$/;"	m	struct:pxa2xx_flash_info	typeref:struct:pxa2xx_flash_info::mtd_partition	file:
parts	maps/sa1100-flash.c	/^	struct mtd_partition	*parts;$/;"	m	struct:sa_info	typeref:struct:sa_info::mtd_partition	file:
parts	nand/nandsim.c	/^static unsigned long parts[MAX_MTD_DEVICES];$/;"	v	file:
parts	nand/plat_nand.c	/^	struct mtd_partition	*parts;$/;"	m	struct:plat_nand_data	typeref:struct:plat_nand_data::mtd_partition	file:
parts	onenand/generic.c	/^	struct mtd_partition	*parts;$/;"	m	struct:onenand_info	typeref:struct:onenand_info::mtd_partition	file:
parts	onenand/onenand_sim.c	/^	struct mtd_partition	*parts;$/;"	m	struct:onenand_info	typeref:struct:onenand_info::mtd_partition	file:
parts_name	maps/fortunet.c	/^	char			parts_name[MAX_NUM_PARTITIONS][MAX_NAME_SIZE];$/;"	m	struct:map_region	file:
parts_num	nand/nandsim.c	/^static unsigned int parts_num;$/;"	v	file:
passed	mtd-utils/ubi-utils/scripts/jffs2_test.sh	/^passed ()$/;"	f
passed	mtd-utils/ubi-utils/scripts/ubi_jffs2_test.sh	/^passed ()$/;"	f
passed	mtd-utils/ubi-utils/scripts/ubi_test.sh	/^passed ()$/;"	f
passed	mtd-utils/ubi-utils/scripts/ubi_tools_test.sh	/^passed ()$/;"	f
path	mtd-utils/mkfs.jffs2.c	/^	char *path;					\/* Path of this directory (think dirname) *\/$/;"	m	struct:filesystem_entry	file:
patterns	ubi/io.c	/^static uint8_t patterns[] = {0xa5, 0x5a, 0x0};$/;"	v	file:
pcmcia_copy_from	maps/pcmciamtd.c	/^static void pcmcia_copy_from(struct map_info *map, void *to, unsigned long from, ssize_t len)$/;"	f	file:
pcmcia_copy_from_remap	maps/pcmciamtd.c	/^static void pcmcia_copy_from_remap(struct map_info *map, void *to, unsigned long from, ssize_t len)$/;"	f	file:
pcmcia_copy_to	maps/pcmciamtd.c	/^static void pcmcia_copy_to(struct map_info *map, unsigned long to, const void *from, ssize_t len)$/;"	f	file:
pcmcia_copy_to_remap	maps/pcmciamtd.c	/^static void pcmcia_copy_to_remap(struct map_info *map, unsigned long to, const void *from, ssize_t len)$/;"	f	file:
pcmcia_map	maps/pcmciamtd.c	/^	struct map_info	pcmcia_map;$/;"	m	struct:pcmciamtd_dev	typeref:struct:pcmciamtd_dev::map_info	file:
pcmcia_read16	maps/pcmciamtd.c	/^static map_word pcmcia_read16(struct map_info *map, unsigned long ofs)$/;"	f	file:
pcmcia_read16_remap	maps/pcmciamtd.c	/^static map_word pcmcia_read16_remap(struct map_info *map, unsigned long ofs)$/;"	f	file:
pcmcia_read8	maps/pcmciamtd.c	/^static map_word pcmcia_read8(struct map_info *map, unsigned long ofs)$/;"	f	file:
pcmcia_read8_remap	maps/pcmciamtd.c	/^static map_word pcmcia_read8_remap(struct map_info *map, unsigned long ofs)$/;"	f	file:
pcmcia_write16	maps/pcmciamtd.c	/^static void pcmcia_write16(struct map_info *map, u16 d, unsigned long adr)$/;"	f	file:
pcmcia_write16_remap	maps/pcmciamtd.c	/^static void pcmcia_write16_remap(struct map_info *map, map_word d, unsigned long adr)$/;"	f	file:
pcmcia_write8	maps/pcmciamtd.c	/^static void pcmcia_write8(struct map_info *map, u8 d, unsigned long adr)$/;"	f	file:
pcmcia_write8_remap	maps/pcmciamtd.c	/^static void pcmcia_write8_remap(struct map_info *map, map_word d, unsigned long adr)$/;"	f	file:
pcmciamtd_config	maps/pcmciamtd.c	/^static int pcmciamtd_config(struct pcmcia_device *link)$/;"	f	file:
pcmciamtd_detach	maps/pcmciamtd.c	/^static void pcmciamtd_detach(struct pcmcia_device *link)$/;"	f	file:
pcmciamtd_dev	maps/pcmciamtd.c	/^struct pcmciamtd_dev {$/;"	s	file:
pcmciamtd_driver	maps/pcmciamtd.c	/^static struct pcmcia_driver pcmciamtd_driver = {$/;"	v	typeref:struct:pcmcia_driver	file:
pcmciamtd_ids	maps/pcmciamtd.c	/^static struct pcmcia_device_id pcmciamtd_ids[] = {$/;"	v	typeref:struct:pcmcia_device_id	file:
pcmciamtd_probe	maps/pcmciamtd.c	/^static int pcmciamtd_probe(struct pcmcia_device *link)$/;"	f	file:
pcmciamtd_release	maps/pcmciamtd.c	/^static void pcmciamtd_release(struct pcmcia_device *link)$/;"	f	file:
pcmciamtd_resume	maps/pcmciamtd.c	/^static int pcmciamtd_resume(struct pcmcia_device *dev)$/;"	f	file:
pcmciamtd_set_vpp	maps/pcmciamtd.c	/^static void pcmciamtd_set_vpp(struct map_info *map, int on)$/;"	f	file:
pcmciamtd_suspend	maps/pcmciamtd.c	/^static int pcmciamtd_suspend(struct pcmcia_device *dev)$/;"	f	file:
pdata	maps/plat-ram.c	/^	struct platdata_mtd_ram	*pdata;$/;"	m	struct:platram_info	typeref:struct:platram_info::platdata_mtd_ram	file:
pdd_data	mtd-utils/ubi-utils/src/reader.h	/^struct pdd_data {$/;"	s
pdd_data_t	mtd-utils/ubi-utils/src/reader.h	/^typedef struct pdd_data *pdd_data_t;$/;"	t	typeref:struct:pdd_data
pdd_func_t	mtd-utils/ubi-utils/src/bootenv.h	/^typedef int(*pdd_func_t)(bootenv_t, bootenv_t, bootenv_t*,$/;"	t
pdd_funcs	mtd-utils/ubi-utils/src/libpfiflash.c	/^static pdd_func_t pdd_funcs[PDD_HANDLING_NUM]  =$/;"	v	file:
pdd_handling	mtd-utils/ubi-utils/src/pfiflash.c	/^	pdd_handling_t pdd_handling;$/;"	m	struct:myargs	file:
pdd_handling_t	mtd-utils/ubi-utils/src/pfiflash.h	/^typedef enum pdd_handling_t$/;"	g
pdd_handling_t	mtd-utils/ubi-utils/src/pfiflash.h	/^} pdd_handling_t; \/**< Possible PDD handle algorithms. *\/$/;"	t	typeref:enum:pdd_handling_t
pdd_txt	mtd-utils/ubi-utils/scripts/Makefile	/^pdd_txt		?= pdd.txt$/;"	m
pdev	maps/amd76xrom.c	/^	struct pci_dev *pdev;$/;"	m	struct:amd76xrom_window	typeref:struct:amd76xrom_window::pci_dev	file:
pdev	maps/ck804xrom.c	/^	struct pci_dev *pdev;$/;"	m	struct:ck804xrom_window	typeref:struct:ck804xrom_window::pci_dev	file:
pdev	maps/esb2rom.c	/^	struct pci_dev *pdev;$/;"	m	struct:esb2rom_window	typeref:struct:esb2rom_window::pci_dev	file:
pdev	maps/ichxrom.c	/^	struct pci_dev *pdev;$/;"	m	struct:ichxrom_window	typeref:struct:ichxrom_window::pci_dev	file:
pdev	nand/cafe_nand.c	/^	struct pci_dev *pdev;$/;"	m	struct:cafe_priv	typeref:struct:cafe_priv::pci_dev	file:
peb	mtd-utils/ubi-utils/src/peb.h	/^struct peb {$/;"	s
peb_buf1	ubi/ubi.h	/^	void *peb_buf1;$/;"	m	struct:ubi_device
peb_buf2	ubi/ubi.h	/^	void *peb_buf2;$/;"	m	struct:ubi_device
peb_cmp	mtd-utils/ubi-utils/src/peb.c	/^peb_cmp(peb_t eb_1, peb_t eb_2)$/;"	f
peb_count	ubi/ubi.h	/^	int peb_count;$/;"	m	struct:ubi_device
peb_dump	mtd-utils/ubi-utils/src/peb.c	/^void peb_dump(FILE* fp_out, peb_t peb)$/;"	f
peb_fill	mtd-utils/ubi-utils/src/peb.c	/^peb_fill(peb_t peb, uint8_t* buf, size_t buf_size)$/;"	f
peb_free	mtd-utils/ubi-utils/src/peb.c	/^peb_free(peb_t* peb)$/;"	f
peb_new	mtd-utils/ubi-utils/src/peb.c	/^peb_new(uint32_t eb_num, uint32_t eb_size, peb_t *peb)$/;"	f
peb_size	mtd-utils/ubi-utils/new-utils/include/libubigen.h	/^	int peb_size;$/;"	m	struct:ubigen_info
peb_size	mtd-utils/ubi-utils/new-utils/src/ubinize.c	/^	int peb_size;$/;"	m	struct:args	file:
peb_size	ubi/ubi.h	/^	int peb_size;$/;"	m	struct:ubi_device
peb_t	mtd-utils/ubi-utils/src/peb.h	/^typedef struct peb *peb_t;$/;"	t	typeref:struct:peb
peb_write	mtd-utils/ubi-utils/src/peb.c	/^peb_write(FILE* fp_out, peb_t peb)$/;"	f
perror_msg	mtd-utils/mkfs.jffs2.c	/^static void perror_msg(const char *s, ...)$/;"	f	file:
perror_msg_and_die	mtd-utils/mkfs.jffs2.c	/^static void perror_msg_and_die(const char *s, ...)$/;"	f	file:
perror_msg_and_die	mtd-utils/sumtool.c	/^static void perror_msg_and_die(const char *s, ...)$/;"	f	file:
pfi2bin	mtd-utils/ubi-utils/scripts/Makefile	/^pfi2bin		= pfi2bin -v$/;"	m
pfi_getnumber	mtd-utils/ubi-utils/src/pfi.h	/^pfi_getnumber(pfi_header head, const char *key)$/;"	f
pfi_header	mtd-utils/ubi-utils/src/pfi.c	/^struct pfi_header {$/;"	s	file:
pfi_header	mtd-utils/ubi-utils/src/pfi.h	/^typedef struct pfi_header *pfi_header;$/;"	t	typeref:struct:pfi_header
pfi_header_destroy	mtd-utils/ubi-utils/src/pfi.c	/^int pfi_header_destroy (pfi_header *head)$/;"	f
pfi_header_dump	mtd-utils/ubi-utils/src/pfi.c	/^int pfi_header_dump (FILE *out, pfi_header head __attribute__((__unused__)))$/;"	f
pfi_header_getnumber	mtd-utils/ubi-utils/src/pfi.c	/^int pfi_header_getnumber (pfi_header head,$/;"	f
pfi_header_getstring	mtd-utils/ubi-utils/src/pfi.c	/^int pfi_header_getstring (pfi_header head,$/;"	f
pfi_header_init	mtd-utils/ubi-utils/src/pfi.c	/^int pfi_header_init (pfi_header *head)$/;"	f
pfi_header_read	mtd-utils/ubi-utils/src/pfi.c	/^int pfi_header_read (FILE *in, pfi_header head)$/;"	f
pfi_header_setnumber	mtd-utils/ubi-utils/src/pfi.c	/^int pfi_header_setnumber (pfi_header head,$/;"	f
pfi_header_setvalue	mtd-utils/ubi-utils/src/pfi.c	/^int pfi_header_setvalue (pfi_header head,$/;"	f
pfi_header_write	mtd-utils/ubi-utils/src/pfi.c	/^int pfi_header_write (FILE *out, pfi_header head)$/;"	f
pfi_raw	mtd-utils/ubi-utils/src/reader.h	/^struct pfi_raw {$/;"	s
pfi_raw_t	mtd-utils/ubi-utils/src/reader.h	/^typedef struct pfi_raw	*pfi_raw_t;$/;"	t	typeref:struct:pfi_raw
pfi_read	mtd-utils/ubi-utils/src/pfi.c	/^int pfi_read (FILE *in, pfi_read_func func, void *priv_data)$/;"	f
pfi_read_func	mtd-utils/ubi-utils/src/pfi.h	/^typedef int (* pfi_read_func)(FILE *in, pfi_header hdr, void *priv_data);$/;"	t
pfi_ubi	mtd-utils/ubi-utils/src/reader.h	/^struct pfi_ubi {$/;"	s
pfi_ubi_dynamic	mtd-utils/ubi-utils/src/reader.h	/^	enum { pfi_ubi_dynamic, pfi_ubi_static } type;$/;"	e	enum:pfi_ubi::__anon6
pfi_ubi_static	mtd-utils/ubi-utils/src/reader.h	/^	enum { pfi_ubi_dynamic, pfi_ubi_static } type;$/;"	e	enum:pfi_ubi::__anon6
pfi_ubi_t	mtd-utils/ubi-utils/src/reader.h	/^typedef struct pfi_ubi	*pfi_ubi_t;$/;"	t	typeref:struct:pfi_ubi
pfiflash	mtd-utils/ubi-utils/src/libpfiflash.c	/^pfiflash(FILE* pfi, int complete, int seqnum, pdd_handling_t pdd_handling,$/;"	f
pfiflash_advanced	mtd-utils/ubi-utils/scripts/ubi_tools_test.sh	/^pfiflash_advanced ()$/;"	f
pfiflash_basic	mtd-utils/ubi-utils/scripts/ubi_tools_test.sh	/^pfiflash_basic ()$/;"	f
pfiflash_err	mtd-utils/ubi-utils/src/pfiflash_error.h	/^enum pfiflash_err {$/;"	g
pfiflash_with_options	mtd-utils/ubi-utils/src/libpfiflash.c	/^pfiflash_with_options(FILE* pfi, int complete, int seqnum, int compare,$/;"	f
pgaddrbytes	nand/nandsim.c	/^		uint pgaddrbytes;   \/* bytes per page address *\/$/;"	m	struct:nandsim::nandsin_geometry	file:
pgnum	nand/nandsim.c	/^		uint pgnum;         \/* total number of pages *\/$/;"	m	struct:nandsim::nandsin_geometry	file:
pgsec	nand/nandsim.c	/^		uint pgsec;         \/* number of pages per sector *\/$/;"	m	struct:nandsim::nandsin_geometry	file:
pgshift	nand/nandsim.c	/^		uint pgshift;       \/* bits number in page size *\/$/;"	m	struct:nandsim::nandsin_geometry	file:
pgsz	nand/nandsim.c	/^		uint pgsz;          \/* NAND flash page size, bytes *\/$/;"	m	struct:nandsim::nandsin_geometry	file:
pgszoob	nand/nandsim.c	/^		uint pgszoob;       \/* page size including OOB , bytes*\/$/;"	m	struct:nandsim::nandsin_geometry	file:
phram_erase	devices/phram.c	/^static int phram_erase(struct mtd_info *mtd, struct erase_info *instr)$/;"	f	file:
phram_mtd_list	devices/phram.c	/^struct phram_mtd_list {$/;"	s	file:
phram_point	devices/phram.c	/^static int phram_point(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
phram_read	devices/phram.c	/^static int phram_read(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
phram_setup	devices/phram.c	/^static int phram_setup(const char *val, struct kernel_param *kp)$/;"	f	file:
phram_unpoint	devices/phram.c	/^static void phram_unpoint(struct mtd_info *mtd, u_char *addr, loff_t from,$/;"	f	file:
phram_write	devices/phram.c	/^static int phram_write(struct mtd_info *mtd, loff_t to, size_t len,$/;"	f	file:
phys	maps/amd76xrom.c	/^	unsigned long phys;$/;"	m	struct:amd76xrom_window	file:
phys	maps/ck804xrom.c	/^	unsigned long phys;$/;"	m	struct:ck804xrom_window	file:
phys	maps/esb2rom.c	/^	unsigned long phys;$/;"	m	struct:esb2rom_window	file:
phys	maps/ichxrom.c	/^	unsigned long phys;$/;"	m	struct:ichxrom_window	file:
phys_addr	mtd-utils/ubi-utils/src/unubi_analyze.h	/^	uint32_t phys_addr;$/;"	m	struct:eb_info
phys_block	mtd-utils/ubi-utils/src/unubi_analyze.h	/^	int phys_block;$/;"	m	struct:eb_info
physadr	nand/diskonchip.c	/^	unsigned long physadr;$/;"	m	struct:doc_priv	file:
physmap_configure	maps/physmap.c	/^void physmap_configure(unsigned long addr, unsigned long size,$/;"	f
physmap_exit	maps/physmap.c	/^module_exit(physmap_exit);$/;"	v
physmap_exit	maps/physmap.c	/^static void __exit physmap_exit(void)$/;"	f	file:
physmap_flash	maps/physmap.c	/^static struct platform_device physmap_flash = {$/;"	v	typeref:struct:platform_device	file:
physmap_flash_data	maps/physmap.c	/^static struct physmap_flash_data physmap_flash_data = {$/;"	v	typeref:struct:physmap_flash_data	file:
physmap_flash_driver	maps/physmap.c	/^static struct platform_driver physmap_flash_driver = {$/;"	v	typeref:struct:platform_driver	file:
physmap_flash_info	maps/physmap.c	/^struct physmap_flash_info {$/;"	s	file:
physmap_flash_probe	maps/physmap.c	/^static int physmap_flash_probe(struct platform_device *dev)$/;"	f	file:
physmap_flash_remove	maps/physmap.c	/^static int physmap_flash_remove(struct platform_device *dev)$/;"	f	file:
physmap_flash_resource	maps/physmap.c	/^static struct resource physmap_flash_resource = {$/;"	v	typeref:struct:resource	file:
physmap_flash_resume	maps/physmap.c	/^static int physmap_flash_resume(struct platform_device *dev)$/;"	f	file:
physmap_flash_shutdown	maps/physmap.c	/^static void physmap_flash_shutdown(struct platform_device *dev)$/;"	f	file:
physmap_flash_suspend	maps/physmap.c	/^static int physmap_flash_suspend(struct platform_device *dev, pm_message_t state)$/;"	f	file:
physmap_init	maps/physmap.c	/^module_init(physmap_init);$/;"	v
physmap_init	maps/physmap.c	/^static int __init physmap_init(void)$/;"	f	file:
physmap_set_partitions	maps/physmap.c	/^void physmap_set_partitions(struct mtd_partition *parts, int num_parts)$/;"	f
pid	mtd-utils/tests/fs-tests/stress/atoms/gcd_hupper.c	/^	int pid;$/;"	m	struct:gcd_pid	file:
pid	mtd-utils/tests/fs-tests/utils/fstest_monitor.c	/^	pid_t pid;$/;"	m	struct:child_info	file:
pino	mtd-utils/include/linux/jffs2.h	/^	jint32_t pino;$/;"	m	struct:jffs2_raw_dirent
pino	mtd-utils/jffs-dump.c	/^	uint32_t pino;     \/* Parent's inode number.  *\/$/;"	m	struct:jffs_raw_inode	file:
pino	mtd-utils/summary.h	/^	jint32_t pino;		\/* parent inode *\/$/;"	m	struct:jffs2_sum_dirent_flash
pino	mtd-utils/summary.h	/^	jint32_t pino;		\/* parent inode *\/$/;"	m	struct:jffs2_sum_dirent_mem
pkt_delay	mtd-utils/serve_image.c	/^int pkt_delay;$/;"	v
pkt_indices	mtd-utils/recv_image.c	/^	int *pkt_indices;$/;"	m	struct:eraseblock	file:
pkt_nr	mtd-utils/mcast_image.h	/^	uint16_t pkt_nr;$/;"	m	struct:image_pkt_hdr
pkt_sequence	mtd-utils/mcast_image.h	/^	uint32_t pkt_sequence;$/;"	m	struct:image_pkt_hdr
pl_chip	nand/ndfc.c	/^	struct platform_nand_chip	*pl_chip;$/;"	m	struct:ndfc_nand_mtd	typeref:struct:ndfc_nand_mtd::platform_nand_chip	file:
plat	maps/integrator-flash.c	/^	struct flash_platform_data *plat;$/;"	m	struct:armflash_info	typeref:struct:armflash_info::flash_platform_data	file:
plat	maps/sa1100-flash.c	/^	struct flash_platform_data *plat;$/;"	m	struct:sa_subdev_info	typeref:struct:sa_subdev_info::flash_platform_data	file:
plat_nand_data	nand/plat_nand.c	/^struct plat_nand_data {$/;"	s	file:
plat_nand_driver	nand/plat_nand.c	/^static struct platform_driver plat_nand_driver = {$/;"	v	typeref:struct:platform_driver	file:
plat_nand_exit	nand/plat_nand.c	/^module_exit(plat_nand_exit);$/;"	v
plat_nand_exit	nand/plat_nand.c	/^static void __exit plat_nand_exit(void)$/;"	f	file:
plat_nand_init	nand/plat_nand.c	/^module_init(plat_nand_init);$/;"	v
plat_nand_init	nand/plat_nand.c	/^static int __init plat_nand_init(void)$/;"	f	file:
plat_nand_probe	nand/plat_nand.c	/^static int __init plat_nand_probe(struct platform_device *pdev)$/;"	f	file:
plat_nand_remove	nand/plat_nand.c	/^static int __devexit plat_nand_remove(struct platform_device *pdev)$/;"	f	file:
platform	nand/bf5xx_nand.c	/^	struct bf5xx_nand_platform	*platform;$/;"	m	struct:bf5xx_nand_info	typeref:struct:bf5xx_nand_info::bf5xx_nand_platform	file:
platform	nand/s3c2410.c	/^	struct s3c2410_platform_nand	*platform;$/;"	m	struct:s3c2410_nand_info	typeref:struct:s3c2410_nand_info::s3c2410_platform_nand	file:
platram_driver	maps/plat-ram.c	/^static struct platform_driver platram_driver = {$/;"	v	typeref:struct:platform_driver	file:
platram_exit	maps/plat-ram.c	/^module_exit(platram_exit);$/;"	v
platram_exit	maps/plat-ram.c	/^static void __exit platram_exit(void)$/;"	f	file:
platram_info	maps/plat-ram.c	/^struct platram_info {$/;"	s	file:
platram_init	maps/plat-ram.c	/^module_init(platram_init);$/;"	v
platram_init	maps/plat-ram.c	/^static int __init platram_init(void)$/;"	f	file:
platram_probe	maps/plat-ram.c	/^static int platram_probe(struct platform_device *pdev)$/;"	f	file:
platram_remove	maps/plat-ram.c	/^static int platram_remove(struct platform_device *pdev)$/;"	f	file:
platram_setrw	maps/plat-ram.c	/^static inline void platram_setrw(struct platram_info *info, int to)$/;"	f	file:
pmc551_erase	devices/pmc551.c	/^static int pmc551_erase(struct mtd_info *mtd, struct erase_info *instr)$/;"	f	file:
pmc551_point	devices/pmc551.c	/^static int pmc551_point(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
pmc551_read	devices/pmc551.c	/^static int pmc551_read(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
pmc551_unpoint	devices/pmc551.c	/^static void pmc551_unpoint(struct mtd_info *mtd, u_char * addr, loff_t from,$/;"	f	file:
pmc551_write	devices/pmc551.c	/^static int pmc551_write(struct mtd_info *mtd, loff_t to, size_t len,$/;"	f	file:
pmc551list	devices/pmc551.c	/^static struct mtd_info *pmc551list;$/;"	v	typeref:struct:mtd_info	file:
pnc_map	maps/pnc2000.c	/^static struct map_info pnc_map = {$/;"	v	typeref:struct:map_info	file:
pnc_partitions	maps/pnc2000.c	/^static struct mtd_partition pnc_partitions[3] = {$/;"	v	typeref:struct:mtd_partition	file:
pnum	ubi/scan.h	/^	int pnum;$/;"	m	struct:ubi_scan_leb
pnum	ubi/ubi.h	/^		struct rb_root pnum;$/;"	m	struct:ubi_device::__anon25	typeref:struct:ubi_device::__anon25::rb_root
pnum	ubi/ubi.h	/^	int pnum;$/;"	m	struct:ubi_wl_entry
popcount8	nand/alauda.c	/^static int popcount8(u8 c)$/;"	f	file:
port	nand/alauda.c	/^	u8			port;$/;"	m	struct:alauda	file:
posix_acl_xattr_entry	mtd-utils/include/mtd/jffs2-user.h	/^struct posix_acl_xattr_entry {$/;"	s
posix_acl_xattr_header	mtd-utils/include/mtd/jffs2-user.h	/^struct posix_acl_xattr_header {$/;"	s
ppchameleon_device_ready	nand/ppchameleonevb.c	/^static int ppchameleon_device_ready(struct mtd_info *minfo)$/;"	f	file:
ppchameleon_fio_pbase	nand/ppchameleonevb.c	/^static unsigned long ppchameleon_fio_pbase = CFG_NAND0_PADDR;$/;"	v	file:
ppchameleon_hwcontrol	nand/ppchameleonevb.c	/^static void ppchameleon_hwcontrol(struct mtd_info *mtdinfo, int cmd,$/;"	f	file:
ppchameleon_mtd	nand/ppchameleonevb.c	/^static struct mtd_info *ppchameleon_mtd = NULL;$/;"	v	typeref:struct:mtd_info	file:
ppchameleonevb_cleanup	nand/ppchameleonevb.c	/^module_exit(ppchameleonevb_cleanup);$/;"	v
ppchameleonevb_cleanup	nand/ppchameleonevb.c	/^static void __exit ppchameleonevb_cleanup(void)$/;"	f	file:
ppchameleonevb_device_ready	nand/ppchameleonevb.c	/^static int ppchameleonevb_device_ready(struct mtd_info *minfo)$/;"	f	file:
ppchameleonevb_fio_pbase	nand/ppchameleonevb.c	/^static unsigned long ppchameleonevb_fio_pbase = CFG_NAND1_PADDR;$/;"	v	file:
ppchameleonevb_hwcontrol	nand/ppchameleonevb.c	/^static void ppchameleonevb_hwcontrol(struct mtd_info *mtdinfo, int cmd,$/;"	f	file:
ppchameleonevb_init	nand/ppchameleonevb.c	/^module_init(ppchameleonevb_init);$/;"	v
ppchameleonevb_init	nand/ppchameleonevb.c	/^static int __init ppchameleonevb_init(void)$/;"	f	file:
ppchameleonevb_mtd	nand/ppchameleonevb.c	/^static struct mtd_info *ppchameleonevb_mtd = NULL;$/;"	v	typeref:struct:mtd_info	file:
prepare_xfer	ftl.c	/^static int prepare_xfer(partition_t *part, int i)$/;"	f	file:
prepend_elem	mtd-utils/ubi-utils/src/list.c	/^prepend_elem(info_t e, list_t l)$/;"	f
pretty_print	mtd-utils/nanddump.c	/^int	pretty_print;		\/\/ print nice in ascii$/;"	v
pretty_print	mtd-utils/nanddump_vfat.c	/^int	pretty_print;		\/\/ print nice in ascii$/;"	v
prev	mtd-utils/compr.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::
prev	mtd-utils/mkfs.jffs2.c	/^	struct filesystem_entry *prev;	\/* Only relevant to non-directories *\/$/;"	m	struct:filesystem_entry	typeref:struct:filesystem_entry::filesystem_entry	file:
prevUnitNo	mtd-utils/include/mtd/inftl-user.h	/^	uint16_t prevUnitNo;$/;"	m	struct:inftl_unithead1
prevUnitNo	mtd-utils/include/mtd/inftl-user.h	/^	uint16_t prevUnitNo;$/;"	m	struct:inftl_unithead2
printHelp	mtd-utils/tests/checkfs/checkfs.c	/^void printHelp(char **argv)$/;"	f
print_all	mtd-utils/ubi-utils/src/hashmap.c	/^print_all(hashentry_t l)$/;"	f	file:
print_bad_eraseblocks	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	/^static void print_bad_eraseblocks(const struct mtd_info *mtd,$/;"	f	file:
print_cfi_ident	chips/cfi_probe.c	/^static void print_cfi_ident(struct cfi_ident *cfip)$/;"	f	file:
print_dev_info	mtd-utils/ubi-utils/new-utils/src/ubinfo.c	/^static int print_dev_info(libubi_t libubi, int dev_num, int all)$/;"	f	file:
print_general_info	mtd-utils/ubi-utils/new-utils/src/ubinfo.c	/^static int print_general_info(libubi_t libubi, int all)$/;"	f	file:
print_size	mtd-utils/ftl_check.c	/^static void print_size(u_int s)$/;"	f	file:
print_size	mtd-utils/ftl_format.c	/^static void print_size(u_int s)$/;"	f	file:
print_vol_info	mtd-utils/ubi-utils/new-utils/src/ubinfo.c	/^static int print_vol_info(libubi_t libubi, int dev_num, int vol_id)$/;"	f	file:
printdir	mtd-utils/jffs2reader.c	/^void printdir(char *o, size_t size, struct dir *d, char *path, int recurse)$/;"	f
printk	mtd-utils/compr.h	43;"	d
printsize	mtd-utils/mtd_debug.c	/^void printsize (u_int32_t x)$/;"	f
priority	mtd-utils/compr.h	/^	int priority;             \/* used by prirority comr. mode *\/$/;"	m	struct:jffs2_compressor
probe	maps/scx200_docflash.c	/^static int probe = 0;		\/* Don't autoprobe *\/$/;"	v	file:
probes	maps/bast-flash.c	/^static const char *probes[] = { "RedBoot", "cmdlinepart", NULL };$/;"	v	file:
probes	maps/ceiva.c	/^static const char *probes[] = { "cmdlinepart", "RedBoot", NULL };$/;"	v	file:
probes	maps/dc21285.c	/^static const char *probes[] = { "RedBoot", "cmdlinepart", NULL };$/;"	v	file:
probes	maps/edb7312.c	/^static const char *probes[] = { "RedBoot", "cmdlinepart", NULL };$/;"	v	file:
probes	maps/h720x-flash.c	/^static const char *probes[] = { "cmdlinepart", NULL };$/;"	v	file:
probes	maps/impa7.c	/^static const char *probes[] = { "cmdlinepart", NULL };$/;"	v	file:
probes	maps/integrator-flash.c	/^static const char *probes[] = { "cmdlinepart", "RedBoot", "afs", NULL };$/;"	v	file:
probes	maps/ixp4xx.c	/^static const char *probes[] = { "RedBoot", "cmdlinepart", NULL };$/;"	v	file:
probes	maps/pxa2xx-flash.c	/^static const char *probes[] = { "RedBoot", "cmdlinepart", NULL };$/;"	v	file:
probes	maps/solutionengine.c	/^static const char *probes[] = { "RedBoot", "cmdlinepart", NULL };$/;"	v	file:
proc_mtd	mtdcore.c	/^static struct proc_dir_entry *proc_mtd;$/;"	v	typeref:struct:proc_dir_entry	file:
processCmdLine	mtd-utils/tests/checkfs/checkfs.c	/^void processCmdLine(int argc, char **argv)$/;"	f
process_buffer	mtd-utils/mkfs.jffs2.c	/^void process_buffer(int inp_size) {$/;"	f
process_config	mtd-utils/ubi-utils/perl/mkpfi	/^sub process_config($) {$/;"	s
process_eb	ubi/scan.c	/^static int process_eb(struct ubi_device *ubi, struct ubi_scan_info *si, int pnum)$/;"	f	file:
process_func_t	mtd-utils/ubi-utils/src/list.h	/^typedef void (*process_func_t)(info_t);$/;"	t
process_key_value	mtd-utils/ubi-utils/src/pddcustomize.c	/^process_key_value(bootenv_t env_in, bootenv_t env)$/;"	f	file:
process_keys	mtd-utils/ubi-utils/perl/mkpfi	/^sub process_keys($$$) {$/;"	s
process_lvol	ubi/vtbl.c	/^static struct ubi_vtbl_record *process_lvol(struct ubi_device *ubi,$/;"	f	file:
process_options	mtd-utils/flash_eraseall.c	/^void process_options (int argc, char *argv[])$/;"	f
process_options	mtd-utils/jffs2dump.c	/^void process_options (int argc, char *argv[])$/;"	f
process_options	mtd-utils/nanddump.c	/^void process_options (int argc, char *argv[])$/;"	f
process_options	mtd-utils/nanddump_vfat.c	/^void process_options (int argc, char *argv[])$/;"	f
process_options	mtd-utils/nandwrite.c	/^void process_options (int argc, char *argv[])$/;"	f
process_options	mtd-utils/nandwrite_mlc.c	/^void process_options (int argc, char *argv[])$/;"	f
process_options	mtd-utils/rfddump.c	/^void process_options(int argc, char *argv[], struct rfd *rfd)$/;"	f
process_options	mtd-utils/rfdformat.c	/^void process_options(int argc, char *argv[], const char **mtd_filename)$/;"	f
process_options	mtd-utils/sumtool.c	/^void process_options (int argc, char **argv)$/;"	f
process_page	mtd-utils/ubi-utils/src/bin2nand.c	/^process_page(uint8_t* buf, size_t pagesize,$/;"	f	file:
process_page	mtd-utils/ubi-utils/src/nand2bin.c	/^static int process_page(uint8_t* buf, uint8_t *oobbuf, size_t pagesize)$/;"	f	file:
process_raw_volumes	mtd-utils/ubi-utils/src/libpfiflash.c	/^process_raw_volumes(FILE* pfi, list_t pfi_raws, const char* rawdev,$/;"	f	file:
process_section	mtd-utils/ubi-utils/perl/mkpfi	/^sub process_section($$$$$$) {$/;"	s
process_ubi_volumes	mtd-utils/ubi-utils/src/libpfiflash.c	/^process_ubi_volumes(FILE* pfi, int seqnum, list_t pfi_ubis,$/;"	f	file:
produce_free_peb	ubi/wl.c	/^static int produce_free_peb(struct ubi_device *ubi)$/;"	f	file:
prog_buf	nand/jz4750_nand.c	/^u8 *prog_buf, *read_buf;$/;"	v
prog_page	nand/nandsim.c	/^static int prog_page(struct nandsim *ns, int num)$/;"	f	file:
program_name	mtd-utils/tests/fs-tests/lib/tests.c	/^char *program_name = "unknown";$/;"	v
programm_delay	nand/nandsim.c	/^static uint programm_delay = CONFIG_NANDSIM_PROGRAMM_DELAY;$/;"	v	file:
prot	ubi/ubi.h	/^	} prot;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::__anon25
prot_tree_add	ubi/wl.c	/^static void prot_tree_add(struct ubi_device *ubi, struct ubi_wl_entry *e,$/;"	f	file:
prot_tree_del	ubi/wl.c	/^static int prot_tree_del(struct ubi_device *ubi, int pnum)$/;"	f	file:
protection_trees_destroy	ubi/wl.c	/^static void protection_trees_destroy(struct ubi_device *ubi)$/;"	f	file:
pstates	nand/nandsim.c	/^	uint32_t pstates[NS_MAX_PREVSTATES]; \/* previous states *\/$/;"	m	struct:nandsim	file:
ptr	mtd-utils/include/mtd/mtd-abi.h	/^	unsigned char __user *ptr;$/;"	m	struct:mtd_oob_buf
ptr_data	mtd-utils/ubi-utils/src/libubigen.c	/^	uint8_t* ptr_data;	\/* Pointer to data region in buf *\/$/;"	m	struct:ubi_info	file:
ptr_ec_hdr	mtd-utils/ubi-utils/src/libubigen.c	/^	uint8_t* ptr_ec_hdr;	\/* Pointer to EC hdr in buf *\/$/;"	m	struct:ubi_info	file:
ptr_vid_hdr	mtd-utils/ubi-utils/src/libubigen.c	/^	uint8_t* ptr_vid_hdr;	\/* Pointer to VID hdr in buf *\/$/;"	m	struct:ubi_info	file:
push_pfi_data	mtd-utils/ubi-utils/perl/mkpfi	/^sub push_pfi_data($$$$$) {$/;"	s
put_chip	chips/cfi_cmdset_0001.c	/^static void put_chip(struct map_info *map, struct flchip *chip, unsigned long adr)$/;"	f	file:
put_chip	chips/cfi_cmdset_0002.c	/^static void put_chip(struct map_info *map, struct flchip *chip, unsigned long adr)$/;"	f	file:
put_mtd_device	mtdcore.c	/^EXPORT_SYMBOL_GPL(put_mtd_device);$/;"	v
put_mtd_device	mtdcore.c	/^void put_mtd_device(struct mtd_info *mtd)$/;"	f
putblock	mtd-utils/jffs2reader.c	/^void putblock(char *b, size_t bsize, size_t * rsize,$/;"	f
putdir	mtd-utils/jffs2reader.c	/^struct dir *putdir(struct dir *dd, struct jffs2_raw_dirent *n)$/;"	f
pval_nand_cmd_pgprog	nand/jz4750_nand.c	/^static u8 *pval_nand_cmd_pgprog; \/* for sending 0x11 or 0x10 when programing*\/$/;"	v	file:
pval_nand_ddr	nand/jz4750_nand.c	/^static u32 *pval_nand_ddr;$/;"	v	file:
pxa2xx_flash_driver	maps/pxa2xx-flash.c	/^static struct device_driver pxa2xx_flash_driver = {$/;"	v	typeref:struct:device_driver	file:
pxa2xx_flash_info	maps/pxa2xx-flash.c	/^struct pxa2xx_flash_info {$/;"	s	file:
pxa2xx_flash_probe	maps/pxa2xx-flash.c	/^static int __init pxa2xx_flash_probe(struct device *dev)$/;"	f	file:
pxa2xx_flash_remove	maps/pxa2xx-flash.c	/^static int __exit pxa2xx_flash_remove(struct device *dev)$/;"	f	file:
pxa2xx_flash_resume	maps/pxa2xx-flash.c	/^static int pxa2xx_flash_resume(struct device *dev)$/;"	f	file:
pxa2xx_flash_resume	maps/pxa2xx-flash.c	171;"	d	file:
pxa2xx_flash_shutdown	maps/pxa2xx-flash.c	/^static void pxa2xx_flash_shutdown(struct device *dev)$/;"	f	file:
pxa2xx_flash_shutdown	maps/pxa2xx-flash.c	172;"	d	file:
pxa2xx_flash_suspend	maps/pxa2xx-flash.c	/^static int pxa2xx_flash_suspend(struct device *dev, pm_message_t state)$/;"	f	file:
pxa2xx_flash_suspend	maps/pxa2xx-flash.c	170;"	d	file:
pxa2xx_map_inval_cache	maps/pxa2xx-flash.c	/^static void pxa2xx_map_inval_cache(struct map_info *map, unsigned long from,$/;"	f	file:
qry_present	chips/cfi_probe.c	/^static int __xipram qry_present(struct map_info *map, __u32 base,$/;"	f	file:
queue_lock	mtd_blkdevs.c	/^	spinlock_t queue_lock;$/;"	m	struct:mtd_blkcore_priv	file:
queue_lock	ubi/bdev.c	/^	spinlock_t queue_lock;$/;"	m	struct:ubi_blkcore_priv	file:
quiet	mtd-utils/flash_eraseall.c	/^static int quiet;		\/* true -- don't output progress *\/$/;"	v	file:
quiet	mtd-utils/nandwrite.c	/^int	quiet = 0;$/;"	v
quiet	mtd-utils/nandwrite_mlc.c	/^int	quiet = 0;$/;"	v
quiet	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	/^	unsigned int quiet:1;$/;"	m	struct:args	file:
r	mtd-utils/include/linux/jffs2.h	/^	struct jffs2_raw_xref r;$/;"	m	union:jffs2_node_union	typeref:struct:jffs2_node_union::jffs2_raw_xref
r	mtd-utils/summary.h	/^	struct jffs2_sum_xref_flash r;$/;"	m	union:jffs2_sum_flash	typeref:struct:jffs2_sum_flash::jffs2_sum_xref_flash
r	mtd-utils/summary.h	/^	struct jffs2_sum_xref_mem r;$/;"	m	union:jffs2_sum_mem	typeref:struct:jffs2_sum_mem::jffs2_sum_xref_mem
ram_erase	devices/mtdram.c	/^static int ram_erase(struct mtd_info *mtd, struct erase_info *instr)$/;"	f	file:
ram_point	devices/mtdram.c	/^static int ram_point(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
ram_read	devices/mtdram.c	/^static int ram_read(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
ram_unpoint	devices/mtdram.c	/^static void ram_unpoint(struct mtd_info *mtd, u_char * addr, loff_t from,$/;"	f	file:
ram_write	devices/mtdram.c	/^static int ram_write(struct mtd_info *mtd, loff_t to, size_t len,$/;"	f	file:
random_offset	mtd-utils/tests/fs-tests/integrity/integck.c	/^	off_t random_offset; \/* Call rand() this number of times first *\/$/;"	m	struct:write_info	file:
random_seed	mtd-utils/tests/fs-tests/integrity/integck.c	/^	unsigned random_seed; \/* Seed for rand() to create random data *\/$/;"	m	struct:write_info	file:
random_seed	mtd-utils/tests/ubi-tests/integ.c	/^	int random_seed;$/;"	m	struct:write_info	file:
raw_dev	mtd-utils/ubi-utils/src/pfiflash.c	/^	const char *raw_dev;$/;"	m	struct:myargs	file:
raw_writes	mtd-utils/tests/fs-tests/integrity/integck.c	/^	struct write_info *raw_writes;$/;"	m	struct:file_info	typeref:struct:file_info::write_info	file:
rb	ubi/scan.h	/^		struct rb_node rb;$/;"	m	union:ubi_scan_leb::__anon20	typeref:struct:ubi_scan_leb::__anon20::rb_node
rb	ubi/scan.h	/^	struct rb_node rb;$/;"	m	struct:ubi_scan_volume	typeref:struct:ubi_scan_volume::rb_node
rb	ubi/ubi.h	/^	struct rb_node rb;$/;"	m	struct:ubi_ltree_entry	typeref:struct:ubi_ltree_entry::rb_node
rb	ubi/ubi.h	/^	struct rb_node rb;$/;"	m	struct:ubi_wl_entry	typeref:struct:ubi_wl_entry::rb_node
rb_aec	ubi/wl.c	/^	struct rb_node rb_aec;$/;"	m	struct:ubi_wl_prot_entry	typeref:struct:ubi_wl_prot_entry::rb_node	file:
rb_color	mtd-utils/rbtree.h	117;"	d
rb_entry	mtd-utils/rbtree.h	140;"	d
rb_erase	mtd-utils/rbtree.c	/^void rb_erase(struct rb_node *node, struct rb_root *root)$/;"	f
rb_first	mtd-utils/rbtree.c	/^struct rb_node *rb_first(struct rb_root *root)$/;"	f
rb_insert_color	mtd-utils/rbtree.c	/^void rb_insert_color(struct rb_node *node, struct rb_root *root)$/;"	f
rb_is_black	mtd-utils/rbtree.h	119;"	d
rb_is_red	mtd-utils/rbtree.h	118;"	d
rb_last	mtd-utils/rbtree.c	/^struct rb_node *rb_last(struct rb_root *root)$/;"	f
rb_left	mtd-utils/rbtree.h	/^	struct rb_node *rb_left;$/;"	m	struct:rb_node	typeref:struct:rb_node::rb_node
rb_link_node	mtd-utils/rbtree.h	/^static inline void rb_link_node(struct rb_node * node, struct rb_node * parent,$/;"	f
rb_next	mtd-utils/rbtree.c	/^struct rb_node *rb_next(struct rb_node *node)$/;"	f
rb_node	mtd-utils/rbtree.h	/^	struct rb_node *rb_node;$/;"	m	struct:rb_root	typeref:struct:rb_root::rb_node
rb_node	mtd-utils/rbtree.h	/^struct rb_node$/;"	s
rb_parent	mtd-utils/rbtree.h	116;"	d
rb_parent_color	mtd-utils/rbtree.h	/^	unsigned long  rb_parent_color;$/;"	m	struct:rb_node
rb_pnum	ubi/wl.c	/^	struct rb_node rb_pnum;$/;"	m	struct:ubi_wl_prot_entry	typeref:struct:ubi_wl_prot_entry::rb_node	file:
rb_prev	mtd-utils/rbtree.c	/^struct rb_node *rb_prev(struct rb_node *node)$/;"	f
rb_replace_node	mtd-utils/rbtree.c	/^void rb_replace_node(struct rb_node *victim, struct rb_node *new,$/;"	f
rb_right	mtd-utils/rbtree.h	/^	struct rb_node *rb_right;$/;"	m	struct:rb_node	typeref:struct:rb_node::rb_node
rb_root	mtd-utils/rbtree.h	/^struct rb_root$/;"	s
rb_set_black	mtd-utils/rbtree.h	121;"	d
rb_set_color	mtd-utils/rbtree.h	/^static inline void rb_set_color(struct rb_node *rb, int color)$/;"	f
rb_set_parent	mtd-utils/rbtree.h	/^static inline void rb_set_parent(struct rb_node *rb, struct rb_node *p)$/;"	f
rb_set_red	mtd-utils/rbtree.h	120;"	d
rd_buffer	mtd-utils/ubi-utils/src/bootenv.c	/^rd_buffer(bootenv_t env, const char *buf, size_t size)$/;"	f	file:
rdonly	mtd-utils/ubi-utils/new-utils/include/libmtd.h	/^	unsigned int rdonly:1;$/;"	m	struct:mtd_info
read32	devices/lart.c	/^static __u32 read32 (__u32 offset)$/;"	f	file:
read8	devices/lart.c	/^static __u8 read8 (__u32 offset)$/;"	f	file:
read_abs_bbt	nand/nand_bbt.c	/^static int read_abs_bbt(struct mtd_info *mtd, uint8_t *buf, struct nand_bbt_descr *td, int chip)$/;"	f	file:
read_abs_bbts	nand/nand_bbt.c	/^static int read_abs_bbts(struct mtd_info *mtd, uint8_t *buf,$/;"	f	file:
read_bbt	nand/nand_bbt.c	/^static int read_bbt(struct mtd_info *mtd, uint8_t *buf, int page, int num,$/;"	f	file:
read_bootenv	mtd-utils/ubi-utils/src/pddcustomize.c	/^read_bootenv(const char* file, bootenv_t env)$/;"	f	file:
read_bootenv_volume	mtd-utils/ubi-utils/src/libpfiflash.c	/^read_bootenv_volume(int devno, uint32_t id, bootenv_t bootenv_old,$/;"	f	file:
read_buf	nand/jz4750_nand.c	/^u8 *prog_buf, *read_buf;$/;"	v
read_buffer	mtd-utils/tests/ubi-tests/integ.c	/^static unsigned char *read_buffer = NULL;$/;"	v	file:
read_cache	ubi/ubiblk.h	/^	unsigned char *read_cache;$/;"	m	struct:ubiblk_dev
read_cache_state	ubi/ubiblk.h	/^	enum { STATE_UNUSED, STATE_USED } read_cache_state, write_cache_state;$/;"	m	struct:ubiblk_dev	typeref:enum:ubiblk_dev::__anon26
read_data	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^static int read_data(const char *file, void *buf, int buf_len)$/;"	f	file:
read_error	mtd-utils/ubi-utils/src/libubimirror.c	/^	read_error = -4,$/;"	e	enum:__anon7	file:
read_error	nand/nandsim.c	/^static int read_error(unsigned int page_no)$/;"	f	file:
read_int	mtd-utils/ubi-utils/src/libubi.c	/^static int read_int(const char *file, int *value)$/;"	f	file:
read_major	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^static int read_major(const char *file, int *major, int *minor)$/;"	f	file:
read_page	nand/nandsim.c	/^static void read_page(struct nandsim *ns, int num)$/;"	f	file:
read_pdd_data	mtd-utils/ubi-utils/src/reader.c	/^read_pdd_data(FILE* fp_pdd, pdd_data_t* pdd_data,$/;"	f
read_pfi_headers	mtd-utils/ubi-utils/src/reader.c	/^read_pfi_headers(list_t *pfi_raws, list_t *pfi_ubis, FILE* fp_pfi,$/;"	f
read_pfi_raw	mtd-utils/ubi-utils/src/reader.c	/^read_pfi_raw(pfi_header pfi_hd, FILE* fp_pfi __unused, pfi_raw_t* pfi_raw,$/;"	f
read_pfi_ubi	mtd-utils/ubi-utils/src/reader.c	/^read_pfi_ubi(pfi_header pfi_hd, FILE* fp_pfi __unused, pfi_ubi_t* pfi_ubi,$/;"	f
read_physical_sector	ssfdc.c	/^static int read_physical_sector(struct mtd_info *mtd, uint8_t *sect_buf,$/;"	f	file:
read_positive_int	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^static int read_positive_int(const char *file, int *value)$/;"	f	file:
read_positive_ll	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^static int read_positive_ll(const char *file, long long *value)$/;"	f	file:
read_pri_intelext	chips/cfi_cmdset_0001.c	/^read_pri_intelext(struct map_info *map, __u16 adr)$/;"	f	file:
read_procfile	mtd-utils/ubi-utils/src/error.c	/^read_procfile(FILE *fp_out, const char *procfile)$/;"	f
read_raw_oob	ssfdc.c	/^static int read_raw_oob(struct mtd_info *mtd, loff_t offs, uint8_t *buf)$/;"	f	file:
read_section	mtd-utils/ubi-utils/new-utils/src/ubinize.c	/^static int read_section(const char *sname, struct ubigen_vol_info *vi,$/;"	f	file:
read_sr	devices/m25p80.c	/^static int read_sr(struct m25p *flash)$/;"	f	file:
read_val16	mtd-utils/jffs-dump.c	/^static uint16_t read_val16(uint16_t *adr)$/;"	f	file:
read_val32	mtd-utils/jffs-dump.c	/^static uint32_t read_val32(uint32_t *adr)$/;"	f	file:
readbuf	mtd-utils/nanddump.c	/^unsigned char readbuf[8192];$/;"	v
readbuf	mtd-utils/nanddump_vfat.c	/^unsigned char readbuf[8192];$/;"	v
readbuf	mtd-utils/nftl_format.c	/^unsigned char *readbuf;$/;"	v
readers	ubi/ubi.h	/^	int readers;$/;"	m	struct:ubi_volume
readonly	ubi/ubiblk.h	/^	int readonly;$/;"	m	struct:ubi_blktrans_dev
reads_done	nand/nandsim.c	/^	unsigned int reads_done;$/;"	m	struct:grave_page	file:
readsect	ubi/ubiblk.h	/^	int (*readsect)(struct ubi_blktrans_dev *dev,$/;"	m	struct:ubi_blktrans_ops
ready	mtdoops.c	/^	int ready;$/;"	m	struct:mtdoops_context	file:
rebuild_volume	mtd-utils/ubi-utils/src/unubi.c	/^rebuild_volume(FILE * fpin, uint32_t *vol_id, struct eb_info **head,$/;"	f	file:
recalccrc	mtd-utils/jffs2dump.c	/^int	recalccrc;		\/\/ recalc name and data crc's on endian conversion$/;"	v
reclaim_block	ftl.c	/^static int reclaim_block(partition_t *part)$/;"	f	file:
reclaim_block	rfd_ftl.c	/^static int reclaim_block(struct partition *part, u_long *old_sector)$/;"	f	file:
recover_peb	ubi/eba.c	/^static int recover_peb(struct ubi_device *ubi, int pnum, int vol_id, int lnum,$/;"	f	file:
recursive_add_host_directory	mtd-utils/mkfs.jffs2.c	/^static struct filesystem_entry *recursive_add_host_directory($/;"	f	file:
recursive_populate_directory	mtd-utils/mkfs.jffs2.c	/^static void recursive_populate_directory(struct filesystem_entry *dir)$/;"	f	file:
redboot_checksum	redboot.c	/^static inline int redboot_checksum(struct fis_image_desc *img)$/;"	f	file:
redboot_parser	redboot.c	/^static struct mtd_part_parser redboot_parser = {$/;"	v	typeref:struct:mtd_part_parser	file:
redboot_parser_exit	redboot.c	/^module_exit(redboot_parser_exit);$/;"	v
redboot_parser_exit	redboot.c	/^static void __exit redboot_parser_exit(void)$/;"	f	file:
redboot_parser_init	redboot.c	/^module_init(redboot_parser_init);$/;"	v
redboot_parser_init	redboot.c	/^static int __init redboot_parser_init(void)$/;"	f	file:
redwood_flash_map	maps/redwood.c	/^struct map_info redwood_flash_map = {$/;"	v	typeref:struct:map_info
redwood_flash_partitions	maps/redwood.c	/^static struct mtd_partition redwood_flash_partitions[] = {$/;"	v	typeref:struct:mtd_partition	file:
redwood_mtd	maps/redwood.c	/^static struct mtd_info *redwood_mtd;$/;"	v	typeref:struct:mtd_info	file:
ref_count	ubi/ubi.h	/^	int ref_count;$/;"	m	struct:ubi_device
ref_count	ubi/ubi.h	/^	int ref_count;$/;"	m	struct:ubi_volume
regdebug	nand/cafe_nand.c	/^static int regdebug = 0;$/;"	v	file:
region_erase	mtd-utils/flash_erase.c	/^int region_erase(int Fd, int start, int count, int unlock, int regcount)$/;"	f
region_fail	maps/scb2_flash.c	/^static int region_fail;$/;"	v	file:
region_info_t	mtd-utils/include/mtd/mtd-user.h	/^typedef struct region_info_user region_info_t;$/;"	t	typeref:struct:region_info_user
region_info_user	mtd-utils/include/mtd/mtd-abi.h	/^struct region_info_user {$/;"	s
regionindex	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t regionindex;$/;"	m	struct:region_info_user
regions	chips/jedec_probe.c	/^	const ulong regions[6];$/;"	m	struct:amd_flash_info	file:
register_device	devices/phram.c	/^static int register_device(char *name, unsigned long start, unsigned long len)$/;"	f	file:
register_device	devices/slram.c	/^static int register_device(char *name, unsigned long start, unsigned long length)$/;"	f	file:
register_mtd_blktrans	mtd_blkdevs.c	/^EXPORT_SYMBOL_GPL(register_mtd_blktrans);$/;"	v
register_mtd_blktrans	mtd_blkdevs.c	/^int register_mtd_blktrans(struct mtd_blktrans_ops *tr)$/;"	f
register_mtd_chip_driver	chips/chipreg.c	/^EXPORT_SYMBOL(register_mtd_chip_driver);$/;"	v
register_mtd_chip_driver	chips/chipreg.c	/^void register_mtd_chip_driver(struct mtd_chip_driver *drv)$/;"	f
register_mtd_parser	mtdpart.c	/^EXPORT_SYMBOL_GPL(register_mtd_parser);$/;"	v
register_mtd_parser	mtdpart.c	/^int register_mtd_parser(struct mtd_part_parser *p)$/;"	f
register_mtd_user	mtdcore.c	/^EXPORT_SYMBOL_GPL(register_mtd_user);$/;"	v
register_mtd_user	mtdcore.c	/^void register_mtd_user (struct mtd_notifier *new)$/;"	f
register_ubi_blktrans	ubi/bdev.c	/^EXPORT_SYMBOL_GPL(register_ubi_blktrans);$/;"	v
register_ubi_blktrans	ubi/bdev.c	/^int register_ubi_blktrans(struct ubi_blktrans_ops *tr)$/;"	f
register_vol_user	ubi/build.c	/^EXPORT_SYMBOL_GPL(register_vol_user);$/;"	v
register_vol_user	ubi/build.c	/^void register_vol_user(struct vol_notifier *new)$/;"	f
registered	mtdpart.c	/^	int registered;$/;"	m	struct:mtd_part	file:
regs	nand/excite_nandflash.c	/^	void __iomem *regs;$/;"	m	struct:excite_nand_drvdata	file:
regs	nand/nandsim.c	/^	} regs;$/;"	m	struct:nandsim	typeref:struct:nandsim::nandsim_regs	file:
regs	nand/s3c2410.c	/^	void __iomem			*regs;$/;"	m	struct:s3c2410_nand_info	file:
release	ubi/ubiblk.h	/^	int (*release)(struct ubi_blktrans_dev *dev);$/;"	m	struct:ubi_blktrans_ops
release_nanddoc	nand/diskonchip.c	/^static void release_nanddoc(void)$/;"	f	file:
reload_ubi	mtd-utils/tests/ubi-tests/integ.c	/^static void reload_ubi(void)$/;"	f	file:
remap_window	maps/pcmciamtd.c	/^static caddr_t remap_window(struct map_info *map, unsigned long to)$/;"	f	file:
remove	ubi/ubi.h	/^	void (*remove)(struct ubi_volume *vol);$/;"	m	struct:vol_notifier
remove_all	mtd-utils/ubi-utils/src/hashmap.c	/^remove_all(hashentry_t l, size_t* entries)$/;"	f	file:
remove_all	mtd-utils/ubi-utils/src/list.c	/^remove_all(free_func_t free_func, list_t l)$/;"	f
remove_all_volumes	mtd-utils/tests/ubi-tests/integ.c	/^static int remove_all_volumes(void)$/;"	f	file:
remove_entry	mtd-utils/tests/fs-tests/stress/atoms/rndrm99.c	/^int64_t remove_entry(void)$/;"	f
remove_entry	mtd-utils/ubi-utils/src/hashmap.c	/^remove_entry(hashentry_t l, const char* key, size_t* entries)$/;"	f	file:
remove_head	mtd-utils/ubi-utils/src/list.c	/^remove_head(list_t l)$/;"	f
remove_lf	mtd-utils/ubi-utils/src/bootenv.c	/^remove_lf(char *line, size_t size, FILE* fp)$/;"	f	file:
remove_spaces	mtd-utils/ubi-utils/perl/mkpfi	/^sub remove_spaces($$$) {$/;"	s
remove_vol	ubi/ubiblk.h	/^	void (*remove_vol)(struct ubi_blktrans_dev *dev);$/;"	m	struct:ubi_blktrans_ops
rename	mtd-utils/jffs-dump.c	/^	uint8_t rename : 1;  \/* Is this a special rename?  *\/$/;"	m	struct:jffs_raw_inode	file:
replace_num	mtd-utils/ubi-utils/perl/mkpfi	/^sub replace_num($$$) {$/;"	s
replace_type	mtd-utils/ubi-utils/perl/mkpfi	/^sub replace_type($$$) {$/;"	s
reqopts	nand/nandsim.c	/^	uint32_t reqopts;  \/* options which are required to perform the operation *\/$/;"	m	struct:nandsim_operations	file:
res	maps/ceiva.c	/^	struct resource *res;$/;"	m	struct:clps_info	typeref:struct:clps_info::resource	file:
res	maps/integrator-flash.c	/^	struct resource		*res;$/;"	m	struct:armflash_info	typeref:struct:armflash_info::resource	file:
res	maps/ixp2000.c	/^	struct		resource *res;$/;"	m	struct:ixp2000_flash_info	typeref:struct:ixp2000_flash_info::resource	file:
res	maps/ixp4xx.c	/^	struct resource *res;$/;"	m	struct:ixp4xx_flash_info	typeref:struct:ixp4xx_flash_info::resource	file:
res	maps/physmap.c	/^	struct resource		*res;$/;"	m	struct:physmap_flash_info	typeref:struct:physmap_flash_info::resource	file:
res	maps/physmap_of.c	/^	struct resource		*res;$/;"	m	struct:of_flash	typeref:struct:of_flash::resource	file:
resend	mtd-utils/mcast_image.h	/^	uint32_t resend;$/;"	m	struct:image_pkt_hdr
reserved_block	rfd_ftl.c	/^	int reserved_block;		\/* block next up for reclaim *\/$/;"	m	struct:partition	file:
reserved_pebs	mtd-utils/include/mtd/ubi-header.h	/^	uint32_t reserved_pebs;$/;"	m	struct:ubi_vtbl_record
reserved_pebs	ubi/ubi-media.h	/^	__be32  reserved_pebs;$/;"	m	struct:ubi_vtbl_record
reserved_pebs	ubi/ubi.h	/^	int reserved_pebs;$/;"	m	struct:ubi_volume
resolvedirent	mtd-utils/jffs2reader.c	/^struct jffs2_raw_dirent *resolvedirent(char *o, size_t size,$/;"	f
resolveinode	mtd-utils/jffs2reader.c	/^struct jffs2_raw_dirent *resolveinode(char *o, size_t size, uint32_t ino)$/;"	f
resolvename	mtd-utils/jffs2reader.c	/^struct jffs2_raw_dirent *resolvename(char *o, size_t size, uint32_t pino,$/;"	f
resolvepath	mtd-utils/jffs2reader.c	/^struct jffs2_raw_dirent *resolvepath(char *o, size_t size, uint32_t ino,$/;"	f
resolvepath0	mtd-utils/jffs2reader.c	/^struct jffs2_raw_dirent *resolvepath0(char *o, size_t size, uint32_t ino,$/;"	f
resource	devices/ms02-nv.h	/^	} resource;$/;"	m	struct:ms02nv_private	typeref:struct:ms02nv_private::__anon18
result	mtd-utils/tests/fs-tests/utils/fstest_monitor.c	/^int result = 0;$/;"	v
revoke_exclusive	ubi/cdev.c	/^static void revoke_exclusive(struct ubi_volume_desc *desc, int mode)$/;"	f	file:
revtext	mtd-utils/mkfs.jffs2.c	/^static char *revtext = "1.60";$/;"	v	file:
revtext	mtd-utils/sumtool.c	/^static char *revtext = "$Revision: 1.1.1.1 $";$/;"	v	file:
rfd	mtd-utils/rfddump.c	/^struct rfd {$/;"	s	file:
rfd_ftl_add_mtd	rfd_ftl.c	/^static void rfd_ftl_add_mtd(struct mtd_blktrans_ops *tr, struct mtd_info *mtd)$/;"	f	file:
rfd_ftl_getgeo	rfd_ftl.c	/^static int rfd_ftl_getgeo(struct mtd_blktrans_dev *dev, struct hd_geometry *geo)$/;"	f	file:
rfd_ftl_readsect	rfd_ftl.c	/^static int rfd_ftl_readsect(struct mtd_blktrans_dev *dev, u_long sector, char *buf)$/;"	f	file:
rfd_ftl_remove_dev	rfd_ftl.c	/^static void rfd_ftl_remove_dev(struct mtd_blktrans_dev *dev)$/;"	f	file:
rfd_ftl_tr	rfd_ftl.c	/^struct mtd_blktrans_ops rfd_ftl_tr = {$/;"	v	typeref:struct:mtd_blktrans_ops
rfd_ftl_writesect	rfd_ftl.c	/^static int rfd_ftl_writesect(struct mtd_blktrans_dev *dev, u_long sector, char *buf)$/;"	f	file:
rmdir00	mtd-utils/tests/fs-tests/stress/atoms/rmdir00.c	/^void rmdir00(void)$/;"	f
rmdir00_get_description	mtd-utils/tests/fs-tests/stress/atoms/rmdir00.c	/^const char *rmdir00_get_description(void)$/;"	f
rmdir00_get_title	mtd-utils/tests/fs-tests/stress/atoms/rmdir00.c	/^const char *rmdir00_get_title(void)$/;"	f
rndrm00	mtd-utils/tests/fs-tests/stress/atoms/rndrm00.c	/^void rndrm00(void)$/;"	f
rndrm00_get_description	mtd-utils/tests/fs-tests/stress/atoms/rndrm00.c	/^const char *rndrm00_get_description(void)$/;"	f
rndrm00_get_title	mtd-utils/tests/fs-tests/stress/atoms/rndrm00.c	/^const char *rndrm00_get_title(void)$/;"	f
rndrm99	mtd-utils/tests/fs-tests/stress/atoms/rndrm99.c	/^void rndrm99(void)$/;"	f
rndrm99_get_description	mtd-utils/tests/fs-tests/stress/atoms/rndrm99.c	/^const char *rndrm99_get_description(void)$/;"	f
rndrm99_get_title	mtd-utils/tests/fs-tests/stress/atoms/rndrm99.c	/^const char *rndrm99_get_title(void)$/;"	f
rndwrite00	mtd-utils/tests/fs-tests/stress/atoms/rndwrite00.c	/^void rndwrite00(void)$/;"	f
rndwrite00_get_description	mtd-utils/tests/fs-tests/stress/atoms/rndwrite00.c	/^const char *rndwrite00_get_description(void)$/;"	f
rndwrite00_get_title	mtd-utils/tests/fs-tests/stress/atoms/rndwrite00.c	/^const char *rndwrite00_get_title(void)$/;"	f
ro_mode	ubi/ubi.h	/^	int ro_mode;$/;"	m	struct:ubi_device
rom_probe_types	maps/physmap.c	/^static const char *rom_probe_types[] = { "cfi_probe", "jedec_probe", "map_rom", NULL };$/;"	v	file:
root	ubi/scan.h	/^	struct rb_root root;$/;"	m	struct:ubi_scan_volume	typeref:struct:ubi_scan_volume::rb_root
root_directory_name	mtd-utils/jffs-dump.c	/^char *root_directory_name = NULL;$/;"	v
root_ms02nv_mtd	devices/ms02-nv.c	/^static struct mtd_info *root_ms02nv_mtd;$/;"	v	typeref:struct:mtd_info	file:
rootdir	mtd-utils/mkfs.jffs2.c	/^static char *rootdir = default_rootdir;$/;"	v	file:
rootfs_bin	mtd-utils/ubi-utils/scripts/Makefile	/^rootfs_bin	?= test_rootfs.bin$/;"	m
rootok	mtd-utils/tests/fs-tests/lib/tests.c	/^static int rootok = 0;$/;"	v	file:
row	nand/nandsim.c	/^		uint     row;     \/* the page number *\/$/;"	m	struct:nandsim::nandsim_regs	file:
rptwear	nand/nandsim.c	/^static unsigned int rptwear = 0;$/;"	v	file:
rptwear_cnt	nand/nandsim.c	/^static unsigned int rptwear_cnt = 0;$/;"	v	file:
rpxlite_map	maps/rpxlite.c	/^static struct map_info rpxlite_map = {$/;"	v	typeref:struct:map_info	file:
rq	mtd_blkdevs.c	/^	struct request_queue *rq;$/;"	m	struct:mtd_blkcore_priv	typeref:struct:mtd_blkcore_priv::request_queue	file:
rq	ubi/bdev.c	/^	struct request_queue *rq;$/;"	m	struct:ubi_blkcore_priv	typeref:struct:ubi_blkcore_priv::request_queue	file:
rr_map	maps/pmcmsp-ramroot.c	/^struct map_info rr_map = {$/;"	v	typeref:struct:map_info
rr_mtd	maps/pmcmsp-ramroot.c	/^static struct mtd_info *rr_mtd;$/;"	v	typeref:struct:mtd_info	file:
rs	nand/cafe_nand.c	/^	struct rs_control *rs;$/;"	m	struct:cafe_priv	typeref:struct:cafe_priv::rs_control	file:
rs_decoder	nand/diskonchip.c	/^static struct rs_control *rs_decoder;$/;"	v	typeref:struct:rs_control	file:
rs_decoder	nand/rtc_from4.c	/^static struct rs_control *rs_decoder;$/;"	v	typeref:struct:rs_control	file:
rsize	mtd-utils/jffs-dump.c	/^	uint32_t rsize;      \/* How much are going to be replaced?  *\/$/;"	m	struct:jffs_raw_inode	file:
rsrc	maps/amd76xrom.c	/^	struct resource rsrc;$/;"	m	struct:amd76xrom_map_info	typeref:struct:amd76xrom_map_info::resource	file:
rsrc	maps/amd76xrom.c	/^	struct resource rsrc;$/;"	m	struct:amd76xrom_window	typeref:struct:amd76xrom_window::resource	file:
rsrc	maps/ck804xrom.c	/^	struct resource rsrc;$/;"	m	struct:ck804xrom_map_info	typeref:struct:ck804xrom_map_info::resource	file:
rsrc	maps/ck804xrom.c	/^	struct resource rsrc;$/;"	m	struct:ck804xrom_window	typeref:struct:ck804xrom_window::resource	file:
rsrc	maps/esb2rom.c	/^	struct resource rsrc;$/;"	m	struct:esb2rom_map_info	typeref:struct:esb2rom_map_info::resource	file:
rsrc	maps/esb2rom.c	/^	struct resource rsrc;$/;"	m	struct:esb2rom_window	typeref:struct:esb2rom_window::resource	file:
rsrc	maps/ichxrom.c	/^	struct resource rsrc;$/;"	m	struct:ichxrom_map_info	typeref:struct:ichxrom_map_info::resource	file:
rsrc	maps/ichxrom.c	/^	struct resource rsrc;$/;"	m	struct:ichxrom_window	typeref:struct:ichxrom_window::resource	file:
rsvd_bytes	mtd-utils/ubi-utils/inc/libubi.h	/^	long long rsvd_bytes;$/;"	m	struct:ubi_vol_info
rsvd_bytes	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	long long rsvd_bytes;$/;"	m	struct:ubi_vol_info
rsvd_ebs	mtd-utils/ubi-utils/inc/libubi.h	/^	int rsvd_ebs;$/;"	m	struct:ubi_vol_info
rsvd_lebs	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int rsvd_lebs;$/;"	m	struct:ubi_vol_info
rsvd_pebs	ubi/ubi.h	/^	int rsvd_pebs;$/;"	m	struct:ubi_device
rtc_from4_bbt_main_descr	nand/rtc_from4.c	/^static struct nand_bbt_descr rtc_from4_bbt_main_descr = {$/;"	v	typeref:struct:nand_bbt_descr	file:
rtc_from4_bbt_mirror_descr	nand/rtc_from4.c	/^static struct nand_bbt_descr rtc_from4_bbt_mirror_descr = {$/;"	v	typeref:struct:nand_bbt_descr	file:
rtc_from4_calculate_ecc	nand/rtc_from4.c	/^static void rtc_from4_calculate_ecc(struct mtd_info *mtd, const u_char *dat, u_char *ecc_code)$/;"	f	file:
rtc_from4_cleanup	nand/rtc_from4.c	/^module_exit(rtc_from4_cleanup);$/;"	v
rtc_from4_cleanup	nand/rtc_from4.c	/^static void __exit rtc_from4_cleanup(void)$/;"	f	file:
rtc_from4_correct_data	nand/rtc_from4.c	/^static int rtc_from4_correct_data(struct mtd_info *mtd, const u_char *buf, u_char *ecc1, u_char *ecc2)$/;"	f	file:
rtc_from4_enable_hwecc	nand/rtc_from4.c	/^static void rtc_from4_enable_hwecc(struct mtd_info *mtd, int mode)$/;"	f	file:
rtc_from4_errstat	nand/rtc_from4.c	/^static int rtc_from4_errstat(struct mtd_info *mtd, struct nand_chip *this,$/;"	f	file:
rtc_from4_fio_base	nand/rtc_from4.c	/^static void __iomem *rtc_from4_fio_base = (void *)P2SEGADDR(RTC_FROM4_FIO_BASE);$/;"	v	file:
rtc_from4_hwcontrol	nand/rtc_from4.c	/^static void rtc_from4_hwcontrol(struct mtd_info *mtd, int cmd,$/;"	f	file:
rtc_from4_init	nand/rtc_from4.c	/^module_init(rtc_from4_init);$/;"	v
rtc_from4_init	nand/rtc_from4.c	/^static int __init rtc_from4_init(void)$/;"	f	file:
rtc_from4_mtd	nand/rtc_from4.c	/^static struct mtd_info *rtc_from4_mtd = NULL;$/;"	v	typeref:struct:mtd_info	file:
rtc_from4_nand_device_ready	nand/rtc_from4.c	/^static int rtc_from4_nand_device_ready(struct mtd_info *mtd)$/;"	f	file:
rtc_from4_nand_oobinfo	nand/rtc_from4.c	/^static struct nand_ecclayout rtc_from4_nand_oobinfo = {$/;"	v	typeref:struct:nand_ecclayout	file:
rtc_from4_nand_select_chip	nand/rtc_from4.c	/^static void rtc_from4_nand_select_chip(struct mtd_info *mtd, int chip)$/;"	f	file:
run_pdf	mtd-utils/tests/fs-tests/stress/atoms/pdfrun.c	/^void run_pdf(void)$/;"	f
run_pdf_get_description	mtd-utils/tests/fs-tests/stress/atoms/pdfrun.c	/^const char *run_pdf_get_description(void)$/;"	f
run_pdf_get_title	mtd-utils/tests/fs-tests/stress/atoms/pdfrun.c	/^const char *run_pdf_get_title(void)$/;"	f
s	mtd-utils/include/linux/jffs2.h	/^	struct jffs2_raw_summary s;$/;"	m	union:jffs2_node_union	typeref:struct:jffs2_node_union::jffs2_raw_summary
s3c2410_nand_add_partition	nand/s3c2410.c	/^static int s3c2410_nand_add_partition(struct s3c2410_nand_info *info,$/;"	f	file:
s3c2410_nand_calculate_ecc	nand/s3c2410.c	/^static int s3c2410_nand_calculate_ecc(struct mtd_info *mtd, const u_char *dat, u_char *ecc_code)$/;"	f	file:
s3c2410_nand_correct_data	nand/s3c2410.c	/^static int s3c2410_nand_correct_data(struct mtd_info *mtd, u_char *dat,$/;"	f	file:
s3c2410_nand_devready	nand/s3c2410.c	/^static int s3c2410_nand_devready(struct mtd_info *mtd)$/;"	f	file:
s3c2410_nand_driver	nand/s3c2410.c	/^static struct platform_driver s3c2410_nand_driver = {$/;"	v	typeref:struct:platform_driver	file:
s3c2410_nand_enable_hwecc	nand/s3c2410.c	/^static void s3c2410_nand_enable_hwecc(struct mtd_info *mtd, int mode)$/;"	f	file:
s3c2410_nand_exit	nand/s3c2410.c	/^module_exit(s3c2410_nand_exit);$/;"	v
s3c2410_nand_exit	nand/s3c2410.c	/^static void __exit s3c2410_nand_exit(void)$/;"	f	file:
s3c2410_nand_hwcontrol	nand/s3c2410.c	/^static void s3c2410_nand_hwcontrol(struct mtd_info *mtd, int cmd,$/;"	f	file:
s3c2410_nand_info	nand/s3c2410.c	/^struct s3c2410_nand_info {$/;"	s	file:
s3c2410_nand_init	nand/s3c2410.c	/^module_init(s3c2410_nand_init);$/;"	v
s3c2410_nand_init	nand/s3c2410.c	/^static int __init s3c2410_nand_init(void)$/;"	f	file:
s3c2410_nand_init_chip	nand/s3c2410.c	/^static void s3c2410_nand_init_chip(struct s3c2410_nand_info *info,$/;"	f	file:
s3c2410_nand_inithw	nand/s3c2410.c	/^static int s3c2410_nand_inithw(struct s3c2410_nand_info *info,$/;"	f	file:
s3c2410_nand_mtd	nand/s3c2410.c	/^struct s3c2410_nand_mtd {$/;"	s	file:
s3c2410_nand_mtd_toinfo	nand/s3c2410.c	/^static struct s3c2410_nand_info *s3c2410_nand_mtd_toinfo(struct mtd_info *mtd)$/;"	f	file:
s3c2410_nand_mtd_toours	nand/s3c2410.c	/^static struct s3c2410_nand_mtd *s3c2410_nand_mtd_toours(struct mtd_info *mtd)$/;"	f	file:
s3c2410_nand_probe	nand/s3c2410.c	/^static int s3c2410_nand_probe(struct platform_device *dev)$/;"	f	file:
s3c2410_nand_read_buf	nand/s3c2410.c	/^static void s3c2410_nand_read_buf(struct mtd_info *mtd, u_char *buf, int len)$/;"	f	file:
s3c2410_nand_remove	nand/s3c2410.c	/^static int s3c2410_nand_remove(struct platform_device *pdev)$/;"	f	file:
s3c2410_nand_select_chip	nand/s3c2410.c	/^static void s3c2410_nand_select_chip(struct mtd_info *mtd, int chip)$/;"	f	file:
s3c2410_nand_write_buf	nand/s3c2410.c	/^static void s3c2410_nand_write_buf(struct mtd_info *mtd, const u_char *buf, int len)$/;"	f	file:
s3c2412_nand_calculate_ecc	nand/s3c2410.c	/^static int s3c2412_nand_calculate_ecc(struct mtd_info *mtd, const u_char *dat, u_char *ecc_code)$/;"	f	file:
s3c2412_nand_devready	nand/s3c2410.c	/^static int s3c2412_nand_devready(struct mtd_info *mtd)$/;"	f	file:
s3c2412_nand_driver	nand/s3c2410.c	/^static struct platform_driver s3c2412_nand_driver = {$/;"	v	typeref:struct:platform_driver	file:
s3c2412_nand_enable_hwecc	nand/s3c2410.c	/^static void s3c2412_nand_enable_hwecc(struct mtd_info *mtd, int mode)$/;"	f	file:
s3c2412_nand_probe	nand/s3c2410.c	/^static int s3c2412_nand_probe(struct platform_device *dev)$/;"	f	file:
s3c2440_nand_calculate_ecc	nand/s3c2410.c	/^static int s3c2440_nand_calculate_ecc(struct mtd_info *mtd, const u_char *dat, u_char *ecc_code)$/;"	f	file:
s3c2440_nand_devready	nand/s3c2410.c	/^static int s3c2440_nand_devready(struct mtd_info *mtd)$/;"	f	file:
s3c2440_nand_driver	nand/s3c2410.c	/^static struct platform_driver s3c2440_nand_driver = {$/;"	v	typeref:struct:platform_driver	file:
s3c2440_nand_enable_hwecc	nand/s3c2410.c	/^static void s3c2440_nand_enable_hwecc(struct mtd_info *mtd, int mode)$/;"	f	file:
s3c2440_nand_hwcontrol	nand/s3c2410.c	/^static void s3c2440_nand_hwcontrol(struct mtd_info *mtd, int cmd,$/;"	f	file:
s3c2440_nand_probe	nand/s3c2410.c	/^static int s3c2440_nand_probe(struct platform_device *dev)$/;"	f	file:
s3c2440_nand_read_buf	nand/s3c2410.c	/^static void s3c2440_nand_read_buf(struct mtd_info *mtd, u_char *buf, int len)$/;"	f	file:
s3c2440_nand_write_buf	nand/s3c2410.c	/^static void s3c2440_nand_write_buf(struct mtd_info *mtd, const u_char *buf, int len)$/;"	f	file:
s3c24xx_nand_probe	nand/s3c2410.c	/^static int s3c24xx_nand_probe(struct platform_device *pdev,$/;"	f	file:
s3c24xx_nand_resume	nand/s3c2410.c	/^static int s3c24xx_nand_resume(struct platform_device *dev)$/;"	f	file:
s3c24xx_nand_resume	nand/s3c2410.c	837;"	d	file:
s3c24xx_nand_suspend	nand/s3c2410.c	/^static int s3c24xx_nand_suspend(struct platform_device *dev, pm_message_t pm)$/;"	f	file:
s3c24xx_nand_suspend	nand/s3c2410.c	836;"	d	file:
s3c_cpu_type	nand/s3c2410.c	/^enum s3c_cpu_type {$/;"	g	file:
s3c_nand_calc_rate	nand/s3c2410.c	/^static int s3c_nand_calc_rate(int wanted, unsigned long clk, int max)$/;"	f	file:
sa1100_destroy	maps/sa1100-flash.c	/^static void sa1100_destroy(struct sa_info *info, struct flash_platform_data *plat)$/;"	f	file:
sa1100_destroy_subdev	maps/sa1100-flash.c	/^static void sa1100_destroy_subdev(struct sa_subdev_info *subdev)$/;"	f	file:
sa1100_mtd_driver	maps/sa1100-flash.c	/^static struct platform_driver sa1100_mtd_driver = {$/;"	v	typeref:struct:platform_driver	file:
sa1100_mtd_exit	maps/sa1100-flash.c	/^module_exit(sa1100_mtd_exit);$/;"	v
sa1100_mtd_exit	maps/sa1100-flash.c	/^static void __exit sa1100_mtd_exit(void)$/;"	f	file:
sa1100_mtd_init	maps/sa1100-flash.c	/^module_init(sa1100_mtd_init);$/;"	v
sa1100_mtd_init	maps/sa1100-flash.c	/^static int __init sa1100_mtd_init(void)$/;"	f	file:
sa1100_mtd_probe	maps/sa1100-flash.c	/^static int __init sa1100_mtd_probe(struct platform_device *pdev)$/;"	f	file:
sa1100_mtd_remove	maps/sa1100-flash.c	/^static int __exit sa1100_mtd_remove(struct platform_device *pdev)$/;"	f	file:
sa1100_mtd_resume	maps/sa1100-flash.c	/^static int sa1100_mtd_resume(struct platform_device *dev)$/;"	f	file:
sa1100_mtd_resume	maps/sa1100-flash.c	447;"	d	file:
sa1100_mtd_shutdown	maps/sa1100-flash.c	/^static void sa1100_mtd_shutdown(struct platform_device *dev)$/;"	f	file:
sa1100_mtd_shutdown	maps/sa1100-flash.c	448;"	d	file:
sa1100_mtd_suspend	maps/sa1100-flash.c	/^static int sa1100_mtd_suspend(struct platform_device *dev, pm_message_t state)$/;"	f	file:
sa1100_mtd_suspend	maps/sa1100-flash.c	446;"	d	file:
sa1100_probe_subdev	maps/sa1100-flash.c	/^static int sa1100_probe_subdev(struct sa_subdev_info *subdev, struct resource *res)$/;"	f	file:
sa1100_set_vpp	maps/sa1100-flash.c	/^static void sa1100_set_vpp(struct map_info *map, int on)$/;"	f	file:
sa1100_setup_mtd	maps/sa1100-flash.c	/^sa1100_setup_mtd(struct platform_device *pdev, struct flash_platform_data *plat)$/;"	f	file:
sa_info	maps/sa1100-flash.c	/^struct sa_info {$/;"	s	file:
sa_subdev_info	maps/sa1100-flash.c	/^struct sa_subdev_info {$/;"	s	file:
safe_open	mtd-utils/flashcp.c	/^static int safe_open (const char *pathname,int flags)$/;"	f	file:
safe_read	mtd-utils/flashcp.c	/^static void safe_read (int fd,const char *filename,void *buf,size_t count,bool verbose)$/;"	f	file:
safe_rewind	mtd-utils/flashcp.c	/^static void safe_rewind (int fd,const char *filename)$/;"	f	file:
save_file	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void save_file(int fd, struct file_info *file)$/;"	f	file:
sb	mtd-utils/mkfs.jffs2.c	/^	struct stat sb;				\/* Stores directory permissions and whatnot *\/$/;"	m	struct:filesystem_entry	typeref:struct:filesystem_entry::stat	file:
sbc8240_fs_partitions	maps/sbc8240.c	/^static struct mtd_partition sbc8240_fs_partitions [] = {$/;"	v	typeref:struct:mtd_partition	file:
sbc8240_map	maps/sbc8240.c	/^static struct map_info sbc8240_map[2] = {$/;"	v	typeref:struct:map_info	file:
sbc8240_mtd	maps/sbc8240.c	/^static struct mtd_info *sbc8240_mtd[NUM_FLASH_BANKS];$/;"	v	typeref:struct:mtd_info	file:
sbc8240_part_banks	maps/sbc8240.c	/^static struct mtd_part_def sbc8240_part_banks[NUM_FLASH_BANKS];$/;"	v	typeref:struct:mtd_part_def	file:
sbc8240_uboot_partitions	maps/sbc8240.c	/^static struct mtd_partition sbc8240_uboot_partitions [] = {$/;"	v	typeref:struct:mtd_partition	file:
sbc82xx_flash_map	maps/wr_sbc82xx_flash.c	/^struct map_info sbc82xx_flash_map[3] = {$/;"	v	typeref:struct:map_info
sbc_gxx_copy_from	maps/sbc_gxx.c	/^static void sbc_gxx_copy_from(struct map_info *map, void *to, unsigned long from, ssize_t len)$/;"	f	file:
sbc_gxx_copy_to	maps/sbc_gxx.c	/^static void sbc_gxx_copy_to(struct map_info *map, unsigned long to, const void *from, ssize_t len)$/;"	f	file:
sbc_gxx_map	maps/sbc_gxx.c	/^static struct map_info sbc_gxx_map = {$/;"	v	typeref:struct:map_info	file:
sbc_gxx_page	maps/sbc_gxx.c	/^static inline void sbc_gxx_page(struct map_info *map, unsigned long ofs)$/;"	f	file:
sbc_gxx_read8	maps/sbc_gxx.c	/^static map_word sbc_gxx_read8(struct map_info *map, unsigned long ofs)$/;"	f	file:
sbc_gxx_write8	maps/sbc_gxx.c	/^static void sbc_gxx_write8(struct map_info *map, map_word d, unsigned long adr)$/;"	f	file:
sbcmtd	maps/wr_sbc82xx_flash.c	/^static struct mtd_info *sbcmtd[3];$/;"	v	typeref:struct:mtd_info	file:
sbcmtd_parts	maps/wr_sbc82xx_flash.c	/^static struct mtd_partition *sbcmtd_parts[3];$/;"	v	typeref:struct:mtd_partition	file:
sc520_par_table	maps/sc520cdp.c	/^struct sc520_par_table$/;"	s	file:
sc520cdp_map	maps/sc520cdp.c	/^static struct map_info sc520cdp_map[] = {$/;"	v	typeref:struct:map_info	file:
sc520cdp_setup_par	maps/sc520cdp.c	/^static void sc520cdp_setup_par(void)$/;"	f	file:
scan_agand_pattern	nand/nand_bbt.c	/^static uint8_t scan_agand_pattern[] = { 0x1C, 0x71, 0xC7, 0x1C, 0x71, 0xC7 };$/;"	v	file:
scan_block_fast	nand/nand_bbt.c	/^static int scan_block_fast(struct mtd_info *mtd, struct nand_bbt_descr *bd,$/;"	f	file:
scan_block_full	nand/nand_bbt.c	/^static int scan_block_full(struct mtd_info *mtd, struct nand_bbt_descr *bd,$/;"	f	file:
scan_ff_pattern	nand/nand_bbt.c	/^static uint8_t scan_ff_pattern[] = { 0xff, 0xff };$/;"	v	file:
scan_ff_pattern	nand/sharpsl.c	/^static uint8_t scan_ff_pattern[] = { 0xff, 0xff };$/;"	v	file:
scan_ff_pattern	onenand/onenand_bbt.c	/^static uint8_t scan_ff_pattern[] = { 0xff, 0xff };$/;"	v	file:
scan_header	ftl.c	/^static int scan_header(partition_t *part)$/;"	f	file:
scan_header	rfd_ftl.c	/^static int scan_header(struct partition *part)$/;"	f	file:
scan_read_raw	nand/nand_bbt.c	/^static int scan_read_raw(struct mtd_info *mtd, uint8_t *buf, loff_mtd_t offs,$/;"	f	file:
scan_res	nand/s3c2410.c	/^	int				scan_res;$/;"	m	struct:s3c2410_nand_mtd	file:
scan_write_bbt	nand/nand_bbt.c	/^static int scan_write_bbt(struct mtd_info *mtd, loff_mtd_t offs, size_mtd_t len,$/;"	f	file:
scb2_fixup_mtd	maps/scb2_flash.c	/^scb2_fixup_mtd(struct mtd_info *mtd)$/;"	f	file:
scb2_flash_driver	maps/scb2_flash.c	/^static struct pci_driver scb2_flash_driver = {$/;"	v	typeref:struct:pci_driver	file:
scb2_flash_exit	maps/scb2_flash.c	/^module_exit(scb2_flash_exit);$/;"	v
scb2_flash_exit	maps/scb2_flash.c	/^scb2_flash_exit(void)$/;"	f	file:
scb2_flash_init	maps/scb2_flash.c	/^module_init(scb2_flash_init);$/;"	v
scb2_flash_init	maps/scb2_flash.c	/^scb2_flash_init(void)$/;"	f	file:
scb2_flash_pci_ids	maps/scb2_flash.c	/^static struct pci_device_id scb2_flash_pci_ids[] = {$/;"	v	typeref:struct:pci_device_id	file:
scb2_flash_probe	maps/scb2_flash.c	/^scb2_flash_probe(struct pci_dev *dev, const struct pci_device_id *ent)$/;"	f	file:
scb2_flash_remove	maps/scb2_flash.c	/^scb2_flash_remove(struct pci_dev *dev)$/;"	f	file:
scb2_ioaddr	maps/scb2_flash.c	/^static void __iomem *scb2_ioaddr;$/;"	v	file:
scb2_map	maps/scb2_flash.c	/^static struct map_info scb2_map = {$/;"	v	typeref:struct:map_info	file:
scb2_mtd	maps/scb2_flash.c	/^static struct mtd_info *scb2_mtd;$/;"	v	typeref:struct:mtd_info	file:
schedule_erase	ubi/wl.c	/^static int schedule_erase(struct ubi_device *ubi, struct ubi_wl_entry *e,$/;"	f	file:
schedule_ubi_work	ubi/wl.c	/^static void schedule_ubi_work(struct ubi_device *ubi, struct ubi_work *wrk)$/;"	f	file:
scrub	ubi/scan.h	/^	int scrub;$/;"	m	struct:ubi_scan_leb
scrub	ubi/ubi.h	/^	struct rb_root scrub;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::rb_root
scx200_docflash_map	maps/scx200_docflash.c	/^static struct map_info scx200_docflash_map = {$/;"	v	typeref:struct:map_info	file:
search_bbt	nand/nand_bbt.c	/^static int search_bbt(struct mtd_info *mtd, uint8_t *buf, struct nand_bbt_descr *td)$/;"	f	file:
search_comp	mtd-utils/tests/fs-tests/integrity/integck.c	/^static int search_comp(const void *pa, const void *pb)$/;"	f	file:
search_read_bbts	nand/nand_bbt.c	/^static int search_read_bbts(struct mtd_info *mtd, uint8_t * buf, struct nand_bbt_descr *td, struct nand_bbt_descr *md)$/;"	f	file:
sec	ssfdc.c	/^	unsigned char sec;$/;"	m	struct:__anon4	file:
secaddrbytes	nand/nandsim.c	/^		uint secaddrbytes;  \/* bytes per sector address *\/$/;"	m	struct:nandsim::nandsin_geometry	file:
second_id_byte	nand/nandsim.c	/^static uint second_id_byte = CONFIG_NANDSIM_SECOND_ID_BYTE;$/;"	v	file:
secshift	nand/nandsim.c	/^		uint secshift;      \/* bits number in sector size *\/$/;"	m	struct:nandsim::nandsin_geometry	file:
secsz	nand/nandsim.c	/^		uint32_t secsz;     \/* flash sector (erase block) size, bytes *\/$/;"	m	struct:nandsim::nandsin_geometry	file:
secszoob	nand/nandsim.c	/^		uint secszoob;      \/* sector size including OOB, bytes *\/$/;"	m	struct:nandsim::nandsin_geometry	file:
sector_count	mtd-utils/rfddump.c	/^	int sector_count;$/;"	m	struct:rfd	file:
sector_count	rfd_ftl.c	/^	u_int sector_count;		\/* sectors in translated disk *\/$/;"	m	struct:partition	file:
sector_map	mtd-utils/rfddump.c	/^	int *sector_map;$/;"	m	struct:rfd	file:
sector_map	rfd_ftl.c	/^	u_long *sector_map;$/;"	m	struct:partition	file:
sector_size	devices/m25p80.c	/^	unsigned	sector_size;$/;"	m	struct:flash_info	file:
sectors	ssfdc.c	/^	unsigned char sectors;$/;"	m	struct:ssfdcr_record	file:
sed	mtd-utils/ubi-utils/scripts/Makefile	/^sed		= sed$/;"	m
seed	mtd-utils/nandtest.c	/^int seed;$/;"	v
seek_error	mtd-utils/ubi-utils/src/libubimirror.c	/^	seek_error = -2,$/;"	e	enum:__anon7	file:
sel_bit	nand/s3c2410.c	/^	int				sel_bit;$/;"	m	struct:s3c2410_nand_info	file:
sel_reg	nand/s3c2410.c	/^	void __iomem			*sel_reg;$/;"	m	struct:s3c2410_nand_info	file:
send_pwrdn_ok	mtd-utils/tests/checkfs/checkfs.c	/^void send_pwrdn_ok(void){$/;"	f
seqnum	mtd-utils/ubi-utils/src/pfiflash.c	/^	int seqnum;$/;"	m	struct:myargs	file:
set	nand/s3c2410.c	/^	struct s3c2410_nand_set		*set;$/;"	m	struct:s3c2410_nand_mtd	typeref:struct:s3c2410_nand_mtd::s3c2410_nand_set	file:
set_bam_entry	ftl.c	/^static int set_bam_entry(partition_t *part, u_int32_t log_addr,$/;"	f	file:
set_default	mtd-utils/ubi-utils/perl/mkpfi	/^sub set_default($$$$) {$/;"	s
set_random_data	mtd-utils/tests/ubi-tests/integ.c	/^static void set_random_data(unsigned seed, unsigned char *buf, int size)$/;"	f	file:
set_update_marker	ubi/upd.c	/^static int set_update_marker(struct ubi_device *ubi, struct ubi_volume *vol)$/;"	f	file:
setcsc	maps/dilnetpc.c	/^static inline void setcsc(int reg, unsigned char data)$/;"	f	file:
setpcc	maps/dilnetpc.c	/^static inline void setpcc(int reg, unsigned char data)$/;"	f	file:
setupSerial	mtd-utils/tests/checkfs/checkfs.c	/^int setupSerial (const char *dev) {$/;"	f
setup_cleanmarker	mtd-utils/sumtool.c	/^void setup_cleanmarker()$/;"	f
setup_wear_reporting	nand/nandsim.c	/^static int setup_wear_reporting(struct mtd_info *mtd)$/;"	f	file:
setvpp	maps/pcmciamtd.c	/^static int setvpp;$/;"	v	file:
sharpsl_akita_bbt	nand/sharpsl.c	/^static struct nand_bbt_descr sharpsl_akita_bbt = {$/;"	v	typeref:struct:nand_bbt_descr	file:
sharpsl_bbt	nand/sharpsl.c	/^static struct nand_bbt_descr sharpsl_bbt = {$/;"	v	typeref:struct:nand_bbt_descr	file:
sharpsl_io_base	nand/sharpsl.c	/^static void __iomem *sharpsl_io_base;$/;"	v	file:
sharpsl_map	maps/sharpsl-flash.c	/^struct map_info sharpsl_map = {$/;"	v	typeref:struct:map_info
sharpsl_mtd	nand/sharpsl.c	/^static struct mtd_info *sharpsl_mtd = NULL;$/;"	v	typeref:struct:mtd_info	file:
sharpsl_nand_calculate_ecc	nand/sharpsl.c	/^static int sharpsl_nand_calculate_ecc(struct mtd_info *mtd, const u_char * dat, u_char * ecc_code)$/;"	f	file:
sharpsl_nand_cleanup	nand/sharpsl.c	/^module_exit(sharpsl_nand_cleanup);$/;"	v
sharpsl_nand_cleanup	nand/sharpsl.c	/^static void __exit sharpsl_nand_cleanup(void)$/;"	f	file:
sharpsl_nand_default_partition_info	nand/sharpsl.c	/^static struct mtd_partition sharpsl_nand_default_partition_info[] = {$/;"	v	typeref:struct:mtd_partition	file:
sharpsl_nand_dev_ready	nand/sharpsl.c	/^static int sharpsl_nand_dev_ready(struct mtd_info *mtd)$/;"	f	file:
sharpsl_nand_enable_hwecc	nand/sharpsl.c	/^static void sharpsl_nand_enable_hwecc(struct mtd_info *mtd, int mode)$/;"	f	file:
sharpsl_nand_hwcontrol	nand/sharpsl.c	/^static void sharpsl_nand_hwcontrol(struct mtd_info *mtd, int cmd,$/;"	f	file:
sharpsl_nand_init	nand/sharpsl.c	/^module_init(sharpsl_nand_init);$/;"	v
sharpsl_nand_init	nand/sharpsl.c	/^static int __init sharpsl_nand_init(void)$/;"	f	file:
sharpsl_partitions	maps/sharpsl-flash.c	/^static struct mtd_partition sharpsl_partitions[1] = {$/;"	v	typeref:struct:mtd_partition	file:
sharpsl_phys_base	nand/sharpsl.c	/^static int sharpsl_phys_base = 0x0C000000;$/;"	v	file:
short_options	mtd-utils/sumtool.c	/^static const char *short_options = "o:i:e:hvVblnc:p";$/;"	v	file:
show_firmware_partition	nand/diskonchip.c	/^static int show_firmware_partition = 0;$/;"	v	file:
show_header	mtd-utils/docfdisk.c	/^void show_header(int mhoffs) {$/;"	f
showinfo	mtd-utils/mtd_debug.c	/^int showinfo (int fd)$/;"	f
showusage	mtd-utils/flashcp.c	/^static void showusage (const char *progname,bool error)$/;"	f	file:
showusage	mtd-utils/ftl_check.c	/^void showusage(char *pname)$/;"	f
showusage	mtd-utils/mtd_debug.c	/^void showusage (const char *progname)$/;"	f
shrink	mtd-utils/tests/fs-tests/integrity/integck.c	/^static int shrink = 0; \/* Should we try to shrink files and directories *\/$/;"	v	file:
shuffle	mtd-utils/fec.c	/^shuffle(gf *pkt[], int index[], int k)$/;"	f	file:
shuffle_freq	ftl.c	/^static int shuffle_freq = 50;$/;"	v	file:
side	mtd-utils/ubi-utils/src/pddcustomize.c	/^	int side;$/;"	m	struct:myargs	file:
side	mtd-utils/ubi-utils/src/ubimirror.c	/^	int side;$/;"	m	struct:myargs	file:
signal_handler	mtd-utils/tests/fs-tests/utils/fstest_monitor.c	/^void signal_handler(int signum)$/;"	f
signature	afs.c	/^	u32 signature;		\/* 'Magic' number proves it's a footer   *\/$/;"	m	struct:footer_struct	file:
simple_map_copy_from	maps/map_funcs.c	/^static void __xipram simple_map_copy_from(struct map_info *map, void *to, unsigned long from, ssize_t len)$/;"	f	file:
simple_map_copy_to	maps/map_funcs.c	/^static void __xipram simple_map_copy_to(struct map_info *map, unsigned long to, const void *from, ssize_t len)$/;"	f	file:
simple_map_init	maps/map_funcs.c	/^EXPORT_SYMBOL(simple_map_init);$/;"	v
simple_map_init	maps/map_funcs.c	/^void simple_map_init(struct map_info *map)$/;"	f
simple_map_read	maps/map_funcs.c	/^static map_word __xipram simple_map_read(struct map_info *map, unsigned long ofs)$/;"	f	file:
simple_map_write	maps/map_funcs.c	/^static void __xipram simple_map_write(struct map_info *map, const map_word datum, unsigned long ofs)$/;"	f	file:
single_erase_cmd	nand/nand_base.c	/^static void single_erase_cmd(struct mtd_info *mtd, int page)$/;"	f	file:
single_erase_cmd_planes	nand/jz4740_nand.c	/^static void single_erase_cmd_planes(struct mtd_info *mtd, int global_page)$/;"	f	file:
single_erase_cmd_planes	nand/jz4750_nand.c	/^static void single_erase_cmd_planes(struct mtd_info *mtd, int global_page)$/;"	f	file:
size	devices/ms02-nv.h	/^	size_t size;$/;"	m	struct:ms02nv_private
size	maps/amd76xrom.c	/^	unsigned long size;$/;"	m	struct:amd76xrom_window	file:
size	maps/ceiva.c	/^	unsigned long size;$/;"	m	struct:clps_info	file:
size	maps/ck804xrom.c	/^	unsigned long size;$/;"	m	struct:ck804xrom_window	file:
size	maps/esb2rom.c	/^	unsigned long size;$/;"	m	struct:esb2rom_window	file:
size	maps/ichxrom.c	/^	unsigned long size;$/;"	m	struct:ichxrom_window	file:
size	maps/scx200_docflash.c	/^static unsigned size = 0x1000000; \/* 16 MiB the whole ISA address space *\/$/;"	v	file:
size	mtd-utils/include/mtd/mtd-abi.h	/^	uint64_t size;	 \/\/ Total size of the MTD$/;"	m	struct:mtd_info_user
size	mtd-utils/tests/fs-tests/integrity/integck.c	/^	size_t size; \/* Number of bytes written *\/$/;"	m	struct:write_info	file:
size	mtd-utils/tests/ubi-tests/integ.c	/^	int size;$/;"	m	struct:write_info	file:
size	mtd-utils/ubi-utils/new-utils/include/libmtd.h	/^	long long size;$/;"	m	struct:mtd_info
size	mtd-utils/ubi-utils/new-utils/src/dictionary.h	/^	int				size ;	\/** Storage size *\/$/;"	m	struct:_dictionary_
size	mtd-utils/ubi-utils/new-utils/src/ubicrcvol.c	/^	long long size;$/;"	m	struct:args	file:
size	mtd-utils/ubi-utils/src/peb.h	/^	uint32_t size;		\/* Data Size (equals physical$/;"	m	struct:peb
size	mtd-utils/ubi-utils/src/reader.h	/^	uint32_t size;$/;"	m	struct:pfi_ubi
size	redboot.c	/^    uint32_t	  size;          \/\/ Length of image$/;"	m	struct:fis_image_desc	file:
size	ssfdc.c	/^	unsigned long size;$/;"	m	struct:__anon4	file:
size	ubi/ubiblk.h	/^	unsigned long size;$/;"	m	struct:ubi_blktrans_dev
size_mtd_t	mtd-utils/include/mtd/mtd-abi.h	/^typedef unsigned long long size_mtd_t;$/;"	t
size_ptr	mtd-utils/tests/fs-tests/stress/atoms/rndrm99.c	/^int64_t *size_ptr = 0;$/;"	v
skip_blks	mtd-utils/ubi-utils/src/libubigen.c	/^skip_blks(ubi_info_t u, uint32_t blks)$/;"	f	file:
skip_raw_volumes	mtd-utils/ubi-utils/src/libpfiflash.c	/^skip_raw_volumes(FILE* pfi, list_t pfi_raws,$/;"	f	file:
skipbbt	nand/cafe_nand.c	/^static int skipbbt = 0;$/;"	v	file:
slram_erase	devices/slram.c	/^static int slram_erase(struct mtd_info *mtd, struct erase_info *instr)$/;"	f	file:
slram_mtd_list	devices/slram.c	/^typedef struct slram_mtd_list {$/;"	s	file:
slram_mtd_list_t	devices/slram.c	/^} slram_mtd_list_t;$/;"	t	typeref:struct:slram_mtd_list	file:
slram_mtdlist	devices/slram.c	/^static slram_mtd_list_t *slram_mtdlist = NULL;$/;"	v	file:
slram_point	devices/slram.c	/^static int slram_point(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
slram_priv	devices/slram.c	/^typedef struct slram_priv {$/;"	s	file:
slram_priv_t	devices/slram.c	/^} slram_priv_t;$/;"	t	typeref:struct:slram_priv	file:
slram_read	devices/slram.c	/^static int slram_read(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f	file:
slram_unpoint	devices/slram.c	/^static void slram_unpoint(struct mtd_info *mtd, u_char *addr, loff_t from, size_t len)$/;"	f	file:
slram_write	devices/slram.c	/^static int slram_write(struct mtd_info *mtd, loff_t to, size_t len,$/;"	f	file:
smallflash_parts	maps/wr_sbc82xx_flash.c	/^static struct mtd_partition smallflash_parts[] = {$/;"	v	typeref:struct:mtd_partition	file:
smallpage_flashbased	nand/nand_bbt.c	/^static struct nand_bbt_descr smallpage_flashbased = {$/;"	v	typeref:struct:nand_bbt_descr	file:
smallpage_memorybased	nand/nand_bbt.c	/^static struct nand_bbt_descr smallpage_memorybased = {$/;"	v	typeref:struct:nand_bbt_descr	file:
snprintf	mtd-utils/mkfs.jffs2.c	/^inline int snprintf(char *str, size_t n, const char *fmt, ...)$/;"	f
soleng_eprom_map	maps/solutionengine.c	/^struct map_info soleng_eprom_map = {$/;"	v	typeref:struct:map_info
soleng_flash_map	maps/solutionengine.c	/^struct map_info soleng_flash_map = {$/;"	v	typeref:struct:map_info
sort_comp	mtd-utils/tests/fs-tests/integrity/integck.c	/^static int sort_comp(const void *pa, const void *pb)$/;"	f	file:
sort_key_vector	mtd-utils/ubi-utils/src/hashmap.c	/^sort_key_vector(const char** a, size_t size)$/;"	f	file:
spare	mtd-utils/jffs-dump.c	/^	uint8_t spare : 6;   \/* For future use.  *\/$/;"	m	struct:jffs_raw_inode	file:
spareUnits	mtd-utils/include/mtd/inftl-user.h	/^	__u32 spareUnits;$/;"	m	struct:INFTLPartition
spi	devices/m25p80.c	/^	struct spi_device	*spi;$/;"	m	struct:m25p	typeref:struct:m25p::spi_device	file:
spi	devices/mtd_dataflash.c	/^	struct spi_device	*spi;$/;"	m	struct:dataflash	typeref:struct:dataflash::spi_device	file:
spia_cleanup	nand/spia.c	/^module_exit(spia_cleanup);$/;"	v
spia_cleanup	nand/spia.c	/^static void __exit spia_cleanup(void)$/;"	f	file:
spia_fio_base	nand/spia.c	/^static int spia_fio_base = SPIA_FIO_BASE;$/;"	v	file:
spia_hwcontrol	nand/spia.c	/^static void spia_hwcontrol(struct mtd_info *mtd, int cmd)$/;"	f	file:
spia_init	nand/spia.c	/^module_init(spia_init);$/;"	v
spia_init	nand/spia.c	/^static int __init spia_init(void)$/;"	f	file:
spia_io_base	nand/spia.c	/^static int spia_io_base = SPIA_IO_BASE;$/;"	v	file:
spia_mtd	nand/spia.c	/^static struct mtd_info *spia_mtd = NULL;$/;"	v	typeref:struct:mtd_info	file:
spia_peddr	nand/spia.c	/^static int spia_peddr = SPIA_PEDDR;$/;"	v	file:
spia_pedr	nand/spia.c	/^static int spia_pedr = SPIA_PEDR;$/;"	v	file:
spl_bin	mtd-utils/ubi-utils/scripts/Makefile	/^spl_bin		?= test_u-boot.bin$/;"	m
split_blocks	mtd-utils/ubi-utils/src/nand2bin.c	/^	int split_blocks;$/;"	m	struct:args	file:
split_blocks	mtd-utils/ubi-utils/src/nand2bin.c	/^static int split_blocks(struct args *args, FILE *in_fp)$/;"	f	file:
sqnum	mtd-utils/include/mtd/ubi-header.h	/^	uint64_t sqnum;$/;"	m	struct:ubi_vid_hdr
sqnum	ubi/scan.h	/^	unsigned long long sqnum;$/;"	m	struct:ubi_scan_leb
sqnum	ubi/ubi-media.h	/^	__be64  sqnum;$/;"	m	struct:ubi_vid_hdr
squash_perms	mtd-utils/mkfs.jffs2.c	/^static int squash_perms = 0;$/;"	v	file:
squash_uids	mtd-utils/mkfs.jffs2.c	/^static int squash_uids = 0;$/;"	v	file:
sram_mtd	maps/autcpu12-nvram.c	/^static struct mtd_info *sram_mtd;$/;"	v	typeref:struct:mtd_info	file:
sram_mtd	maps/cdb89712.c	/^static struct mtd_info *sram_mtd;$/;"	v	typeref:struct:mtd_info	file:
ssfdc_cache	udc_cache.c	/^static SSFDC__LB_CACHE ssfdc_cache[CACHE_MAX_NUM];$/;"	v	file:
ssfdcr_add_mtd	ssfdc.c	/^static void ssfdcr_add_mtd(struct mtd_blktrans_ops *tr, struct mtd_info *mtd)$/;"	f	file:
ssfdcr_getgeo	ssfdc.c	/^static int ssfdcr_getgeo(struct mtd_blktrans_dev *dev,  struct hd_geometry *geo)$/;"	f	file:
ssfdcr_readsect	ssfdc.c	/^static int ssfdcr_readsect(struct mtd_blktrans_dev *dev,$/;"	f	file:
ssfdcr_record	ssfdc.c	/^struct ssfdcr_record {$/;"	s	file:
ssfdcr_remove_dev	ssfdc.c	/^static void ssfdcr_remove_dev(struct mtd_blktrans_dev *dev)$/;"	f	file:
ssfdcr_tr	ssfdc.c	/^static struct mtd_blktrans_ops ssfdcr_tr = {$/;"	v	typeref:struct:mtd_blktrans_ops	file:
start	devices/slram.c	/^	u_char *start;$/;"	m	struct:slram_priv	file:
start	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t start;      \/\/page start address$/;"	m	struct:mtd_page_buf
start	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t start;$/;"	m	struct:mtd_oob_buf
start	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t start;$/;"	m	struct:otp_info
start	mtd-utils/include/mtd/mtd-abi.h	/^	uint64_t start;$/;"	m	struct:erase_info_user
start_addr	mtd-utils/nanddump.c	/^unsigned long	start_addr;	\/\/ start address$/;"	v
start_addr	mtd-utils/nanddump_vfat.c	/^unsigned long	start_addr;	\/\/ start address$/;"	v
start_scan_addr	maps/tqm8xxl.c	/^static void __iomem *start_scan_addr;$/;"	v	file:
starts	mtd-utils/ubi-utils/src/reader.h	/^	uint32_t *starts;$/;"	m	struct:pfi_raw
starts_size	mtd-utils/ubi-utils/src/reader.h	/^	uint32_t starts_size;$/;"	m	struct:pfi_raw
stat_compr_blocks	mtd-utils/compr.h	/^	uint32_t stat_compr_blocks;$/;"	m	struct:jffs2_compressor
stat_compr_new_size	mtd-utils/compr.h	/^	uint32_t stat_compr_new_size;$/;"	m	struct:jffs2_compressor
stat_compr_orig_size	mtd-utils/compr.h	/^	uint32_t stat_compr_orig_size;$/;"	m	struct:jffs2_compressor
stat_decompr_blocks	mtd-utils/compr.h	/^	uint32_t stat_decompr_blocks;$/;"	m	struct:jffs2_compressor
state	chips/fwh_lock.h	/^	flstate_t state;$/;"	m	struct:fwh_xxlock_thunk
state	ftl.c	/^	u_int16_t		state;$/;"	m	struct:partition_t::xfer_info_t	file:
state	ftl.c	/^    u_int32_t		state;$/;"	m	struct:partition_t	file:
state	nand/nandsim.c	/^	uint32_t state;         \/* current chip state *\/$/;"	m	struct:nandsim	file:
state	rfd_ftl.c	/^	} state;$/;"	m	struct:block	typeref:enum:block::__anon2	file:
stateidx	nand/nandsim.c	/^	uint16_t stateidx;      \/* current state index *\/$/;"	m	struct:nandsim	file:
states	nand/nandsim.c	/^	uint32_t states[NS_OPER_STATES]; \/* operation's states *\/$/;"	m	struct:nandsim_operations	file:
static_partitions	maps/edb7312.c	/^static struct mtd_partition static_partitions[3] =$/;"	v	typeref:struct:mtd_partition	file:
static_partitions	maps/impa7.c	/^static struct mtd_partition static_partitions[] =$/;"	v	typeref:struct:mtd_partition	file:
status	nand/nandsim.c	/^		u_char   status;  \/* the status register *\/$/;"	m	struct:nandsim::nandsim_regs	file:
str	maps/amd76xrom.c	24;"	d	file:
str	maps/ichxrom.c	22;"	d	file:
str	mtd-utils/ubi-utils/src/pfi.c	/^		char *str;$/;"	m	union:pfi_header::__anon8	file:
str_to_num	mtd-utils/ubi-utils/src/nand2bin.c	/^static uint32_t str_to_num(char *str)$/;"	f	file:
str_to_num	mtd-utils/ubi-utils/src/unubi.c	/^str_to_num(char *str)$/;"	f	file:
stress_1	mtd-utils/tests/fs-tests/stress/atoms/stress_1.c	/^void stress_1(void)$/;"	f
stress_1_get_description	mtd-utils/tests/fs-tests/stress/atoms/stress_1.c	/^const char *stress_1_get_description(void)$/;"	f
stress_1_get_title	mtd-utils/tests/fs-tests/stress/atoms/stress_1.c	/^const char *stress_1_get_title(void)$/;"	f
stress_2	mtd-utils/tests/fs-tests/stress/atoms/stress_2.c	/^void stress_2(void)$/;"	f
stress_2_get_description	mtd-utils/tests/fs-tests/stress/atoms/stress_2.c	/^const char *stress_2_get_description(void)$/;"	f
stress_2_get_title	mtd-utils/tests/fs-tests/stress/atoms/stress_2.c	/^const char *stress_2_get_title(void)$/;"	f
stress_3	mtd-utils/tests/fs-tests/stress/atoms/stress_3.c	/^void stress_3(void)$/;"	f
stress_3_get_description	mtd-utils/tests/fs-tests/stress/atoms/stress_3.c	/^const char *stress_3_get_description(void)$/;"	f
stress_3_get_title	mtd-utils/tests/fs-tests/stress/atoms/stress_3.c	/^const char *stress_3_get_title(void)$/;"	f
string	mtd-utils/mkfs.jffs2.c	/^	char *string;$/;"	m	struct:__anon17	file:
strlwc	mtd-utils/ubi-utils/new-utils/src/libiniparser.c	/^static char * strlwc(const char * s)$/;"	f	file:
strstrip	mtd-utils/ubi-utils/new-utils/src/libiniparser.c	/^static char * strstrip(char * s)$/;"	f	file:
subdev	maps/sa1100-flash.c	/^	struct sa_subdev_info	subdev[0];$/;"	m	struct:sa_info	typeref:struct:sa_info::sa_subdev_info	file:
subdev	mtdconcat.c	/^	struct mtd_info **subdev;$/;"	m	struct:mtd_concat	typeref:struct:mtd_concat::mtd_info	file:
subpage_shift	ubi/ubiblk.c	/^static unsigned short subpage_shift; $/;"	v	file:
subpage_size	mtd-utils/ubi-utils/new-utils/include/libmtd.h	/^	int subpage_size;$/;"	m	struct:mtd_info
subpage_size	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	/^	int subpage_size;$/;"	m	struct:args	file:
subpage_size	mtd-utils/ubi-utils/new-utils/src/ubinize.c	/^	int subpage_size;$/;"	m	struct:args	file:
subpage_sts	ubi/ubiblk.h	/^	unsigned char *subpage_sts;$/;"	m	struct:ubiblk_dev
sum	mtd-utils/include/linux/jffs2.h	/^	jint32_t sum[0]; 	\/* inode summary info *\/$/;"	m	struct:jffs2_raw_summary
sum_collected	mtd-utils/sumtool.c	/^static struct jffs2_summary *sum_collected = NULL;$/;"	v	typeref:struct:jffs2_summary	file:
sum_crc	mtd-utils/include/linux/jffs2.h	/^	jint32_t sum_crc;	\/* summary information crc *\/$/;"	m	struct:jffs2_raw_summary
sum_list_head	mtd-utils/summary.h	/^	union jffs2_sum_mem *sum_list_head;$/;"	m	struct:jffs2_summary	typeref:union:jffs2_summary::jffs2_sum_mem
sum_list_tail	mtd-utils/summary.h	/^	union jffs2_sum_mem *sum_list_tail;$/;"	m	struct:jffs2_summary	typeref:union:jffs2_summary::jffs2_sum_mem
sum_num	mtd-utils/include/linux/jffs2.h	/^	jint32_t sum_num;	\/* number of sum entries*\/$/;"	m	struct:jffs2_raw_summary
sum_num	mtd-utils/summary.h	/^	uint32_t sum_num;$/;"	m	struct:jffs2_summary
sum_padded	mtd-utils/summary.h	/^	uint32_t sum_padded;$/;"	m	struct:jffs2_summary
sum_size	mtd-utils/summary.h	/^	uint32_t sum_size;$/;"	m	struct:jffs2_summary
superh_se_partitions	maps/solutionengine.c	/^static struct mtd_partition superh_se_partitions[] = {$/;"	v	typeref:struct:mtd_partition	file:
svme182_map	maps/dmv182.c	/^static struct map_info svme182_map = {$/;"	v	typeref:struct:map_info	file:
svme182_partitions	maps/dmv182.c	/^static struct mtd_partition svme182_partitions[] = {$/;"	v	typeref:struct:mtd_partition	file:
swab16	mtd-utils/include/mtd_swab.h	6;"	d
swab32	mtd-utils/include/mtd_swab.h	10;"	d
swab64	mtd-utils/include/mtd_swab.h	17;"	d
switch_state	nand/nandsim.c	/^static void switch_state(struct nandsim *ns)$/;"	f	file:
switch_to_ready_state	nand/nandsim.c	/^static inline void switch_to_ready_state(struct nandsim *ns, u_char status)$/;"	f	file:
sync_erase	ubi/wl.c	/^static int sync_erase(struct ubi_device *ubi, struct ubi_wl_entry *e, int torture)$/;"	f	file:
sys_errmsg	mtd-utils/ubi-utils/new-utils/src/common.h	57;"	d
sysfs	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	/^	char *sysfs;$/;"	m	struct:libubi
sysfs	mtd-utils/ubi-utils/src/libubi_int.h	/^	char *sysfs;$/;"	m	struct:libubi
sysfs_ctrl	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	/^	char *sysfs_ctrl;$/;"	m	struct:libubi
sysfs_ubi	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	/^	char *sysfs_ubi;$/;"	m	struct:libubi
sysfs_ubi	mtd-utils/ubi-utils/src/libubi_int.h	/^	char *sysfs_ubi;$/;"	m	struct:libubi
t16	mtd-utils/include/mtd/jffs2-user.h	24;"	d
t32	mtd-utils/include/mtd/jffs2-user.h	25;"	d
t32_backwards	mtd-utils/jffs2dump.c	46;"	d	file:
tag	mtdblock-jz.c	/^	unsigned char tag;$/;"	m	struct:mtdblk_block_info	file:
tail	mtd-utils/ubi-utils/src/list.c	/^tail(list_t l)$/;"	f
target_endian	mtd-utils/flash_eraseall.c	/^int target_endian = __BYTE_ORDER;$/;"	v
target_endian	mtd-utils/jffs2dump.c	/^int	target_endian = __BYTE_ORDER;	\/\/ image endianess$/;"	v
target_endian	mtd-utils/mkfs.jffs2.c	/^int target_endian = __BYTE_ORDER;$/;"	v
target_endian	mtd-utils/sumtool.c	/^int target_endian = __BYTE_ORDER;$/;"	v
terminated	mtd-utils/tests/fs-tests/utils/fstest_monitor.c	/^	int terminated;$/;"	m	struct:child_info	file:
test_1	mtd-utils/tests/fs-tests/simple/test_1.c	/^void test_1(void)$/;"	f
test_1_get_description	mtd-utils/tests/fs-tests/simple/test_1.c	/^const char *test_1_get_description(void)$/;"	f
test_1_get_title	mtd-utils/tests/fs-tests/simple/test_1.c	/^const char *test_1_get_title(void)$/;"	f
test_2	mtd-utils/tests/fs-tests/simple/test_2.c	/^void test_2(void)$/;"	f
test_2_get_description	mtd-utils/tests/fs-tests/simple/test_2.c	/^const char *test_2_get_description(void)$/;"	f
test_2_get_title	mtd-utils/tests/fs-tests/simple/test_2.c	/^const char *test_2_get_title(void)$/;"	f
test_aligned	mtd-utils/tests/ubi-tests/io_basic.c	/^static int test_aligned(int type)$/;"	f	file:
test_basic	mtd-utils/tests/ubi-tests/io_basic.c	/^static int test_basic(int type)$/;"	f	file:
test_basic	mtd-utils/tests/ubi-tests/rsvol.c	/^static int test_basic(int type)$/;"	f	file:
test_gf	mtd-utils/fec.c	/^test_gf()$/;"	f
test_mkvol	mtd-utils/tests/ubi-tests/mkvol_bad.c	/^static int test_mkvol(void)$/;"	f	file:
test_read	mtd-utils/tests/ubi-tests/io_read.c	/^static int test_read(int type)$/;"	f	file:
test_read1	mtd-utils/tests/ubi-tests/io_read.c	/^static int test_read1(struct ubi_vol_info *vol_info)$/;"	f	file:
test_read2	mtd-utils/tests/ubi-tests/io_read.c	/^static int test_read2(const struct ubi_vol_info *vol_info, int len)$/;"	f	file:
test_read3	mtd-utils/tests/ubi-tests/io_read.c	/^static int test_read3(const struct ubi_vol_info *vol_info, int len, off_t off)$/;"	f	file:
test_rmvol	mtd-utils/tests/ubi-tests/mkvol_bad.c	/^static int test_rmvol(void)$/;"	f	file:
test_rsvol	mtd-utils/tests/ubi-tests/rsvol.c	/^static int test_rsvol(int type)$/;"	f	file:
test_rsvol1	mtd-utils/tests/ubi-tests/rsvol.c	/^static int test_rsvol1(struct ubi_vol_info *vol_info)$/;"	f	file:
test_static	mtd-utils/tests/ubi-tests/io_read.c	/^static int test_static(void)$/;"	f	file:
test_update	mtd-utils/tests/ubi-tests/io_update.c	/^static int test_update(int type)$/;"	f	file:
test_update1	mtd-utils/tests/ubi-tests/io_update.c	/^static int test_update1(struct ubi_vol_info *vol_info, int leb_change)$/;"	f	file:
tests_append_to_fragment_file	mtd-utils/tests/fs-tests/lib/tests.c	/^unsigned tests_append_to_fragment_file(unsigned file_number,$/;"	f
tests_cat_pid	mtd-utils/tests/fs-tests/lib/tests.c	/^void tests_cat_pid(char *buf, const char *name, pid_t pid)$/;"	f
tests_check_filled_file	mtd-utils/tests/fs-tests/lib/tests.c	/^void tests_check_filled_file(const char *file_name)$/;"	f
tests_check_filled_file_fd	mtd-utils/tests/fs-tests/lib/tests.c	/^void tests_check_filled_file_fd(int fd)$/;"	f
tests_check_fragment_file	mtd-utils/tests/fs-tests/lib/tests.c	/^void tests_check_fragment_file(unsigned file_number)$/;"	f
tests_check_fragment_file_fd	mtd-utils/tests/fs-tests/lib/tests.c	/^void tests_check_fragment_file_fd(unsigned file_number, int fd)$/;"	f
tests_check_test_file_system	mtd-utils/tests/fs-tests/lib/tests.c	/^void tests_check_test_file_system(void)$/;"	f
tests_clear_dir	mtd-utils/tests/fs-tests/lib/tests.c	/^void tests_clear_dir(const char *dir_name)$/;"	f
tests_close_flag	mtd-utils/tests/fs-tests/lib/tests.c	/^int tests_close_flag = 0;$/;"	v
tests_count_files_in_dir	mtd-utils/tests/fs-tests/lib/tests.c	/^unsigned tests_count_files_in_dir(const char *dir_name)$/;"	f
tests_create_entry	mtd-utils/tests/fs-tests/lib/tests.c	/^int64_t tests_create_entry(char *return_name)$/;"	f
tests_create_file	mtd-utils/tests/fs-tests/lib/tests.c	/^uint64_t tests_create_file(const char *file_name, uint64_t file_size)$/;"	f
tests_create_orphan	mtd-utils/tests/fs-tests/lib/tests.c	/^int tests_create_orphan(unsigned file_number)$/;"	f
tests_delete_file	mtd-utils/tests/fs-tests/lib/tests.c	/^void tests_delete_file(const char *file_name)$/;"	f
tests_delete_flag	mtd-utils/tests/fs-tests/lib/tests.c	/^int tests_delete_flag = 0;$/;"	v
tests_delete_fragment_file	mtd-utils/tests/fs-tests/lib/tests.c	/^void tests_delete_fragment_file(unsigned file_number)$/;"	f
tests_file_system_mount_dir	mtd-utils/tests/fs-tests/lib/tests.c	/^char *tests_file_system_mount_dir = TESTS_DEFAULT_FILE_SYSTEM_MOUNT_DIR;$/;"	v
tests_file_system_type	mtd-utils/tests/fs-tests/lib/tests.c	/^char *tests_file_system_type = TESTS_DEFAULT_FILE_SYSTEM_TYPE;$/;"	v
tests_fill_file	mtd-utils/tests/fs-tests/lib/tests.c	/^uint64_t tests_fill_file(int fd, uint64_t size)$/;"	f
tests_fill_fragment_file	mtd-utils/tests/fs-tests/lib/tests.c	/^unsigned tests_fill_fragment_file(unsigned file_number, int fd, unsigned size)$/;"	f
tests_fs_is_currfs	mtd-utils/tests/fs-tests/lib/tests.c	/^int tests_fs_is_currfs(void)$/;"	f
tests_fs_is_rootfs	mtd-utils/tests/fs-tests/lib/tests.c	/^int tests_fs_is_rootfs(void)$/;"	f
tests_get_args	mtd-utils/tests/fs-tests/lib/tests.c	/^int tests_get_args(int argc,$/;"	f
tests_get_big_file_size	mtd-utils/tests/fs-tests/lib/tests.c	/^uint64_t tests_get_big_file_size(unsigned numerator, unsigned denominator)$/;"	f
tests_get_free_space	mtd-utils/tests/fs-tests/lib/tests.c	/^uint64_t tests_get_free_space(void)$/;"	f
tests_get_mount_info	mtd-utils/tests/fs-tests/lib/tests.c	/^int tests_get_mount_info(struct mntent *info)$/;"	f
tests_get_total_space	mtd-utils/tests/fs-tests/lib/tests.c	/^uint64_t tests_get_total_space(void)$/;"	f
tests_hole_flag	mtd-utils/tests/fs-tests/lib/tests.c	/^int tests_hole_flag = 0;$/;"	v
tests_maybe_sync	mtd-utils/tests/fs-tests/lib/tests.c	/^void tests_maybe_sync(int fd)$/;"	f
tests_maybe_sync_flag	mtd-utils/tests/fs-tests/lib/tests.c	/^int tests_maybe_sync_flag(void)$/;"	f
tests_ok_to_sync	mtd-utils/tests/fs-tests/lib/tests.c	/^int tests_ok_to_sync = 0; \/* Whether to use fsync *\/$/;"	v
tests_overwite_fragment_file	mtd-utils/tests/fs-tests/lib/tests.c	/^unsigned tests_overwite_fragment_file(	unsigned file_number,$/;"	f
tests_random_no	mtd-utils/tests/fs-tests/lib/tests.c	/^size_t tests_random_no(size_t n)$/;"	f
tests_remount	mtd-utils/tests/fs-tests/lib/tests.c	/^void tests_remount(void)$/;"	f
tests_remove_entry	mtd-utils/tests/fs-tests/lib/tests.c	/^int64_t tests_remove_entry(void)$/;"	f
tests_repeat_parameter	mtd-utils/tests/fs-tests/lib/tests.c	/^int64_t tests_repeat_parameter = 0;$/;"	v
tests_size_parameter	mtd-utils/tests/fs-tests/lib/tests.c	/^int64_t tests_size_parameter = 0;$/;"	v
tests_sleep_parameter	mtd-utils/tests/fs-tests/lib/tests.c	/^int64_t tests_sleep_parameter = 0;$/;"	v
tests_sync_directory	mtd-utils/tests/fs-tests/lib/tests.c	/^void tests_sync_directory(const char *file_name)$/;"	f
tests_test	mtd-utils/tests/fs-tests/lib/tests.c	/^void tests_test(int test,const char *msg,const char *file,unsigned line)$/;"	f
tests_try_to_clear_dir	mtd-utils/tests/fs-tests/lib/tests.c	/^void tests_try_to_clear_dir(const char *dir_name)$/;"	f
tests_unlink_flag	mtd-utils/tests/fs-tests/lib/tests.c	/^int tests_unlink_flag = 0;$/;"	v
tests_write_filled_file	mtd-utils/tests/fs-tests/lib/tests.c	/^uint64_t tests_write_filled_file(int fd, off_t offset, uint64_t size)$/;"	f
tests_write_fragment_file	mtd-utils/tests/fs-tests/lib/tests.c	/^unsigned tests_write_fragment_file(unsigned file_number,$/;"	f
tgt	nand/excite_nandflash.c	/^	void __iomem *tgt;$/;"	m	struct:excite_nand_drvdata	file:
the_thread	mtd-utils/tests/ubi-tests/io_paral.c	/^static void * the_thread(void *ptr)$/;"	f	file:
the_thread	mtd-utils/tests/ubi-tests/mkvol_paral.c	/^static void * the_thread(void *ptr)$/;"	f	file:
third_id_byte	nand/nandsim.c	/^static uint third_id_byte  = CONFIG_NANDSIM_THIRD_ID_BYTE;$/;"	v	file:
this_mtd	maps/dmv182.c	/^static struct mtd_info *this_mtd;$/;"	v	typeref:struct:mtd_info	file:
thiscrc	mtd-utils/mcast_image.h	/^	uint32_t thiscrc;$/;"	m	struct:image_pkt_hdr
thislen	mtd-utils/mcast_image.h	/^	uint32_t thislen;$/;"	m	struct:image_pkt_hdr
thread	mtd_blkdevs.c	/^	struct task_struct *thread;$/;"	m	struct:mtd_blkcore_priv	typeref:struct:mtd_blkcore_priv::task_struct	file:
thread	ubi/bdev.c	/^	struct task_struct *thread;$/;"	m	struct:ubi_blkcore_priv	typeref:struct:ubi_blkcore_priv::task_struct	file:
thread_enabled	ubi/ubi.h	/^	int thread_enabled;$/;"	m	struct:ubi_device
ticks	mtd-utils/fec.c	/^    unsigned long ticks;$/;"	m	struct:timeval	file:
ticks	mtd-utils/fec.c	/^u_long ticks[10];	\/* vars for timekeeping *\/$/;"	v
timerActions	mtd-utils/tests/jittertest/JitterTest.c	/^enum timerActions$/;"	g	file:
timeval	mtd-utils/fec.c	/^struct timeval {$/;"	s	file:
timing	nand/cafe_nand.c	/^static int timing[3];$/;"	v	file:
to_nand_info	nand/bf5xx_nand.c	/^static struct bf5xx_nand_info *to_nand_info(struct platform_device *pdev)$/;"	f	file:
to_nand_info	nand/s3c2410.c	/^static struct s3c2410_nand_info *to_nand_info(struct platform_device *dev)$/;"	f	file:
to_nand_plat	nand/bf5xx_nand.c	/^static struct bf5xx_nand_platform *to_nand_plat(struct platform_device *pdev)$/;"	f	file:
to_nand_plat	nand/s3c2410.c	/^static struct s3c2410_platform_nand *to_nand_plat(struct platform_device *dev)$/;"	f	file:
to_ns	nand/s3c2410.c	177;"	d	file:
to_platram_info	maps/plat-ram.c	/^static inline struct platram_info *to_platram_info(struct platform_device *dev)$/;"	f	file:
top_dir	mtd-utils/tests/fs-tests/integrity/integck.c	/^static struct dir_info *top_dir = NULL; \/* Our top directory *\/$/;"	v	typeref:struct:dir_info	file:
top_of_data	mtd-utils/tests/ubi-tests/integ.c	/^	off64_t top_of_data;$/;"	m	struct:erase_block_info	file:
torture	ubi/wl.c	/^	int torture;$/;"	m	struct:ubi_work	file:
torture_peb	ubi/io.c	/^static int torture_peb(struct ubi_device *ubi, int pnum)$/;"	f	file:
total_blocks	rfd_ftl.c	/^	u_int total_blocks;		\/* number of erase units *\/$/;"	m	struct:partition	file:
total_bytes	mtd-utils/tests/ubi-tests/io_paral.c	/^int total_bytes;$/;"	v
total_bytes	mtd-utils/ubi-utils/inc/libubi.h	/^	long long total_bytes;$/;"	m	struct:ubi_dev_info
total_bytes	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	long long total_bytes;$/;"	m	struct:ubi_dev_info
total_ebs	mtd-utils/ubi-utils/inc/libubi.h	/^	int total_ebs;$/;"	m	struct:ubi_dev_info
total_lebs	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int total_lebs;$/;"	m	struct:ubi_dev_info
total_phys_block	mtdblock-jz.c	/^	int total_phys_block;$/;"	m	struct:mtdblk_zone_t	file:
total_size	devices/mtdram.c	/^static unsigned long total_size = CONFIG_MTDRAM_TOTAL_SIZE;$/;"	v	file:
total_space	mtd-utils/tests/ubi-tests/integ.c	/^static uint64_t total_space = 0;$/;"	v	file:
total_virt_block	mtdblock-jz.c	/^	int total_virt_block;$/;"	m	struct:mtdblk_zone_t	file:
total_wear	nand/nandsim.c	/^static unsigned long total_wear = 0;$/;"	v	file:
total_written	mtd-utils/tests/ubi-tests/integ.c	/^static uint64_t total_written = 0;$/;"	v	file:
totcrc	mtd-utils/mcast_image.h	/^	uint32_t totcrc;$/;"	m	struct:image_pkt_hdr
totlen	mtd-utils/include/linux/jffs2.h	/^	jint32_t totlen;     \/* Total length of this node (inc data, etc.) *\/$/;"	m	struct:jffs2_raw_inode
totlen	mtd-utils/include/linux/jffs2.h	/^	jint32_t totlen; \/* So we can skip over nodes we don't grok *\/$/;"	m	struct:jffs2_unknown_node
totlen	mtd-utils/include/linux/jffs2.h	/^	jint32_t totlen;$/;"	m	struct:jffs2_raw_dirent
totlen	mtd-utils/include/linux/jffs2.h	/^	jint32_t totlen;$/;"	m	struct:jffs2_raw_summary
totlen	mtd-utils/include/linux/jffs2.h	/^	jint32_t totlen;$/;"	m	struct:jffs2_raw_xattr
totlen	mtd-utils/include/linux/jffs2.h	/^	jint32_t totlen;$/;"	m	struct:jffs2_raw_xref
totlen	mtd-utils/summary.h	/^	jint32_t totlen;	\/* node length *\/$/;"	m	struct:jffs2_sum_xattr_flash
totlen	mtd-utils/summary.h	/^	jint32_t totlen;	\/* record length *\/$/;"	m	struct:jffs2_sum_dirent_flash
totlen	mtd-utils/summary.h	/^	jint32_t totlen;	\/* record length *\/$/;"	m	struct:jffs2_sum_dirent_mem
totlen	mtd-utils/summary.h	/^	jint32_t totlen; 	\/* record length *\/$/;"	m	struct:jffs2_sum_inode_flash
totlen	mtd-utils/summary.h	/^	jint32_t totlen; 	\/* record length *\/$/;"	m	struct:jffs2_sum_inode_mem
totlen	mtd-utils/summary.h	/^	jint32_t totlen;$/;"	m	struct:jffs2_sum_xattr_mem
toto_cleanup	nand/toto.c	/^module_exit(toto_cleanup);$/;"	v
toto_cleanup	nand/toto.c	/^static void __exit toto_cleanup(void)$/;"	f	file:
toto_flash_partitions	maps/omap-toto-flash.c	/^static struct mtd_partition toto_flash_partitions[] = {$/;"	v	typeref:struct:mtd_partition	file:
toto_hwcontrol	nand/toto.c	/^static void toto_hwcontrol(struct mtd_info *mtd, int cmd,$/;"	f	file:
toto_init	nand/toto.c	/^module_init(toto_init);$/;"	v
toto_init	nand/toto.c	/^static int __init toto_init(void)$/;"	f	file:
toto_io_base	nand/toto.c	/^static unsigned long toto_io_base = OMAP_FLASH_1_BASE;$/;"	v	file:
toto_mtd	nand/toto.c	/^static struct mtd_info *toto_mtd = NULL;$/;"	v	typeref:struct:mtd_info	file:
totsz	nand/nandsim.c	/^		uint32_t totsz;     \/* total flash size, bytes *\/$/;"	m	struct:nandsim::nandsin_geometry	file:
totszoob	nand/nandsim.c	/^		uint32_t totszoob;  \/* total flash size including OOB, bytes *\/$/;"	m	struct:nandsim::nandsin_geometry	file:
touched	mtd-utils/tests/ubi-tests/integ.c	/^	int touched; \/* Have we done anything at all with this erase block *\/$/;"	m	struct:erase_block_info	file:
tqm8xxl_fs_partitions	maps/tqm8xxl.c	/^static struct mtd_partition tqm8xxl_fs_partitions[] = {$/;"	v	typeref:struct:mtd_partition	file:
tqm8xxl_max_flash_size	maps/tqm8xxl.c	/^static unsigned long tqm8xxl_max_flash_size = 0x00800000;$/;"	v	file:
tqm8xxl_partitions	maps/tqm8xxl.c	/^static struct mtd_partition tqm8xxl_partitions[] = {$/;"	v	typeref:struct:mtd_partition	file:
tr	ubi/ubiblk.h	/^	struct ubi_blktrans_ops *tr;$/;"	m	struct:ubi_blktrans_dev	typeref:struct:ubi_blktrans_dev::ubi_blktrans_ops
translate	maps/pci.c	/^	unsigned long (*translate)(struct map_pci_info *map, unsigned long ofs);$/;"	m	struct:map_pci_info	file:
translate	maps/pci.c	/^	unsigned long (*translate)(struct map_pci_info *map, unsigned long ofs);$/;"	m	struct:mtd_pci_info	file:
translate_dev	mtd-utils/ubi-utils/new-utils/src/ubinfo.c	/^static int translate_dev(libubi_t libubi, const char *node)$/;"	f	file:
tree_destroy	ubi/wl.c	/^static void tree_destroy(struct rb_root *root)$/;"	f	file:
trgdev	maps/sc520cdp.c	/^	unsigned long trgdev;$/;"	m	struct:sc520_par_table	file:
true	mtd-utils/flashcp.c	45;"	d	file:
truncate	mtd-utils/ubi-utils/new-utils/src/ubidumpvol.c	/^	int truncate;$/;"	m	struct:args	file:
truncate	mtd-utils/ubi-utils/new-utils/src/ubiupdatevol.c	/^	int truncate;$/;"	m	struct:args	file:
truncate_volume	mtd-utils/ubi-utils/new-utils/src/ubiupdatevol.c	/^static int truncate_volume(libubi_t libubi)$/;"	f	file:
try_dword	nand/diskonchip.c	/^static int try_dword = 1;$/;"	v	file:
ts5500_map	maps/ts5500_flash.c	/^static struct map_info ts5500_map = {$/;"	v	typeref:struct:map_info	file:
ts5500_partitions	maps/ts5500_flash.c	/^static struct mtd_partition ts5500_partitions[] = {$/;"	v	typeref:struct:mtd_partition	file:
ts7250_cleanup	nand/ts7250.c	/^module_exit(ts7250_cleanup);$/;"	v
ts7250_cleanup	nand/ts7250.c	/^static void __exit ts7250_cleanup(void)$/;"	f	file:
ts7250_device_ready	nand/ts7250.c	/^static int ts7250_device_ready(struct mtd_info *mtd)$/;"	f	file:
ts7250_hwcontrol	nand/ts7250.c	/^static void ts7250_hwcontrol(struct mtd_info *mtd, int cmd, unsigned int ctrl)$/;"	f	file:
ts7250_init	nand/ts7250.c	/^module_init(ts7250_init);$/;"	v
ts7250_init	nand/ts7250.c	/^static int __init ts7250_init(void)$/;"	f	file:
ts7250_mtd	nand/ts7250.c	/^static struct mtd_info *ts7250_mtd = NULL;$/;"	v	typeref:struct:mtd_info	file:
tsunami_flash_copy_from	maps/tsunami_flash.c	/^static void tsunami_flash_copy_from($/;"	f	file:
tsunami_flash_copy_to	maps/tsunami_flash.c	/^static void tsunami_flash_copy_to($/;"	f	file:
tsunami_flash_map	maps/tsunami_flash.c	/^static struct map_info tsunami_flash_map = {$/;"	v	typeref:struct:map_info	file:
tsunami_flash_mtd	maps/tsunami_flash.c	/^static struct mtd_info *tsunami_flash_mtd;$/;"	v	typeref:struct:mtd_info	file:
tsunami_flash_read8	maps/tsunami_flash.c	/^static inline map_word tsunami_flash_read8(struct map_info *map, unsigned long offset)$/;"	f	file:
tsunami_flash_write8	maps/tsunami_flash.c	/^static void tsunami_flash_write8(struct map_info *map, map_word value, unsigned long offset)$/;"	f	file:
tv_after	mtd-utils/tests/fs-tests/stress/atoms/rndrm99.c	/^struct timeval tv_after;$/;"	v	typeref:struct:timeval
tv_before	mtd-utils/tests/fs-tests/stress/atoms/rndrm99.c	/^struct timeval tv_before;$/;"	v	typeref:struct:timeval
tx_rate	mtd-utils/serve_image.c	/^int tx_rate = 80000;$/;"	v
type	afs.c	/^	u32 type;		\/* Area type: ARM Image, SIB, customer   *\/$/;"	m	struct:footer_struct	file:
type	maps/sbc8240.c	/^	unsigned char *type;$/;"	m	struct:mtd_part_def	file:
type	maps/tqm8xxl.c	/^	unsigned char *type;$/;"	m	struct:mtd_part_def	file:
type	mtd-utils/include/linux/jffs2.h	/^	uint8_t type;$/;"	m	struct:jffs2_raw_dirent
type	mtd-utils/include/mtd/mtd-abi.h	/^	uint8_t type;$/;"	m	struct:mtd_info_user
type	mtd-utils/jffs2reader.c	/^	uint8_t type;$/;"	m	struct:dir	file:
type	mtd-utils/summary.h	/^	uint8_t type;		\/* dirent type *\/$/;"	m	struct:jffs2_sum_dirent_flash
type	mtd-utils/summary.h	/^	uint8_t type;		\/* dirent type *\/$/;"	m	struct:jffs2_sum_dirent_mem
type	mtd-utils/tests/fs-tests/integrity/integck.c	/^	char type; \/* f => file, d=> dir *\/$/;"	m	struct:dir_entry_info	file:
type	mtd-utils/ubi-utils/inc/libubi.h	/^	int type;$/;"	m	struct:ubi_vol_info
type	mtd-utils/ubi-utils/new-utils/include/libmtd.h	/^	int type;$/;"	m	struct:mtd_info
type	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int type;$/;"	m	struct:ubi_vol_info
type	mtd-utils/ubi-utils/new-utils/include/libubigen.h	/^	int type;$/;"	m	struct:ubigen_vol_info
type	mtd-utils/ubi-utils/src/reader.h	/^	enum { pfi_ubi_dynamic, pfi_ubi_static } type;$/;"	m	struct:pfi_ubi	typeref:enum:pfi_ubi::__anon6
type	mtd-utils/ubi-utils/src/ubigen.c	/^	uint8_t type;$/;"	m	struct:myargs	file:
type_str	mtd-utils/ubi-utils/new-utils/include/libmtd.h	/^	const char *type_str;$/;"	m	struct:mtd_info
u	mtd-utils/include/linux/jffs2.h	/^	struct jffs2_unknown_node u;$/;"	m	union:jffs2_node_union	typeref:struct:jffs2_node_union::jffs2_unknown_node
u	mtd-utils/include/mtd/inftl-user.h	/^	union inftl_uci u;$/;"	m	struct:inftl_oob	typeref:union:inftl_oob::inftl_uci
u	mtd-utils/include/mtd/nftl-user.h	/^	union nftl_uci u;$/;"	m	struct:nftl_oob	typeref:union:nftl_oob::nftl_uci
u	mtd-utils/summary.h	/^	struct jffs2_sum_unknown_flash u;$/;"	m	union:jffs2_sum_flash	typeref:struct:jffs2_sum_flash::jffs2_sum_unknown_flash
u	mtd-utils/summary.h	/^	struct jffs2_sum_unknown_mem u;$/;"	m	union:jffs2_sum_mem	typeref:struct:jffs2_sum_mem::jffs2_sum_unknown_mem
u	ubi/scan.h	/^	} u;$/;"	m	struct:ubi_scan_leb	typeref:union:ubi_scan_leb::__anon20
u_long	mtd-utils/fec.c	/^typedef unsigned long u_long ;$/;"	t	file:
u_short	mtd-utils/fec.c	/^typedef unsigned short u_short ;$/;"	t	file:
uaddr	chips/jedec_probe.c	/^	const __u8 uaddr[4];		\/* unlock addrs for 8, 16, 32, 64 *\/$/;"	m	struct:amd_flash_info	file:
uaddr	chips/jedec_probe.c	/^enum uaddr {$/;"	g	file:
uaddr	devices/ms02-nv.h	/^	u_char *uaddr;$/;"	m	struct:ms02nv_private
ubi	ubi/ubi.h	/^	struct ubi_device *ubi;$/;"	m	struct:ubi_volume	typeref:struct:ubi_volume::ubi_device
ubi_add_volume	ubi/vmt.c	/^int ubi_add_volume(struct ubi_device *ubi, struct ubi_volume *vol)$/;"	f
ubi_array	mtd-utils/tests/ubi-tests/integ.c	/^static struct ubi_device_info ubi_array[MAX_UBI_DEVICES];$/;"	v	typeref:struct:ubi_device_info	file:
ubi_assert	ubi/debug.h	27;"	d
ubi_assert	ubi/debug.h	30;"	d
ubi_attach_mtd	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^int ubi_attach_mtd(libubi_t desc, const char *node,$/;"	f
ubi_attach_mtd_dev	ubi/build.c	/^int ubi_attach_mtd_dev(struct mtd_info *mtd, int ubi_num, int vid_hdr_offset)$/;"	f
ubi_attach_req	mtd-utils/include/mtd/ubi-user.h	/^struct ubi_attach_req {$/;"	s
ubi_attach_request	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^struct ubi_attach_request$/;"	s
ubi_blkcore_priv	ubi/bdev.c	/^struct ubi_blkcore_priv {$/;"	s	file:
ubi_blktrans_dev	ubi/ubiblk.h	/^struct ubi_blktrans_dev {$/;"	s
ubi_blktrans_exit	ubi/bdev.c	/^module_exit(ubi_blktrans_exit); $/;"	v
ubi_blktrans_exit	ubi/bdev.c	/^static void __exit ubi_blktrans_exit(void)$/;"	f	file:
ubi_blktrans_ops	ubi/bdev.c	/^struct block_device_operations ubi_blktrans_ops = {$/;"	v	typeref:struct:block_device_operations
ubi_blktrans_ops	ubi/ubiblk.h	/^struct ubi_blktrans_ops {$/;"	s
ubi_blktrans_request	ubi/bdev.c	/^static void ubi_blktrans_request(struct request_queue *rq)$/;"	f	file:
ubi_blktrans_thread	ubi/bdev.c	/^static int ubi_blktrans_thread(void *arg)$/;"	f	file:
ubi_calc_data_len	ubi/misc.c	/^int ubi_calc_data_len(const struct ubi_device *ubi, const void *buf,$/;"	f
ubi_calculate_reserved	ubi/misc.c	/^void ubi_calculate_reserved(struct ubi_device *ubi)$/;"	f
ubi_cdev_ioctl	ubi/cdev.c	/^static int ubi_cdev_ioctl(struct inode *inode, struct file *file,$/;"	f	file:
ubi_cdev_operations	ubi/cdev.c	/^struct file_operations ubi_cdev_operations = {$/;"	v	typeref:struct:file_operations
ubi_change_vtbl_record	ubi/vtbl.c	/^int ubi_change_vtbl_record(struct ubi_device *ubi, int idx,$/;"	f
ubi_check_volume	ubi/misc.c	/^int ubi_check_volume(struct ubi_device *ubi, int vol_id)$/;"	f
ubi_class	ubi/build.c	/^struct class *ubi_class;$/;"	v	typeref:struct:class
ubi_close_blkdev	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_close_blkdev);$/;"	v
ubi_close_blkdev	ubi/kapi.c	/^void ubi_close_blkdev(struct ubi_volume_desc *desc)$/;"	f
ubi_close_volume	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_close_volume);$/;"	v
ubi_close_volume	ubi/kapi.c	/^void ubi_close_volume(struct ubi_volume_desc *desc)$/;"	f
ubi_create_gluebi	ubi/gluebi.c	/^int ubi_create_gluebi(struct ubi_device *ubi, struct ubi_volume *vol)$/;"	f
ubi_create_gluebi	ubi/ubi.h	469;"	d
ubi_create_volume	ubi/vmt.c	/^int ubi_create_volume(struct ubi_device *ubi, struct ubi_mkvol_req *req)$/;"	f
ubi_ctrl_cdev	ubi/build.c	/^static struct miscdevice ubi_ctrl_cdev = {$/;"	v	typeref:struct:miscdevice	file:
ubi_ctrl_cdev_operations	ubi/cdev.c	/^struct file_operations ubi_ctrl_cdev_operations = {$/;"	v	typeref:struct:file_operations
ubi_dbg_dump_ec_hdr	ubi/debug.c	/^void ubi_dbg_dump_ec_hdr(const struct ubi_ec_hdr *ec_hdr)$/;"	f
ubi_dbg_dump_ec_hdr	ubi/debug.h	68;"	d
ubi_dbg_dump_mkvol_req	ubi/debug.c	/^void ubi_dbg_dump_mkvol_req(const struct ubi_mkvol_req *req)$/;"	f
ubi_dbg_dump_mkvol_req	ubi/debug.h	74;"	d
ubi_dbg_dump_seb	ubi/debug.c	/^void ubi_dbg_dump_seb(const struct ubi_scan_leb *seb, int type)$/;"	f
ubi_dbg_dump_seb	ubi/debug.h	73;"	d
ubi_dbg_dump_stack	ubi/debug.h	46;"	d
ubi_dbg_dump_stack	ubi/debug.h	67;"	d
ubi_dbg_dump_sv	ubi/debug.c	/^void ubi_dbg_dump_sv(const struct ubi_scan_volume *sv)$/;"	f
ubi_dbg_dump_sv	ubi/debug.h	72;"	d
ubi_dbg_dump_vid_hdr	ubi/debug.c	/^void ubi_dbg_dump_vid_hdr(const struct ubi_vid_hdr *vid_hdr)$/;"	f
ubi_dbg_dump_vid_hdr	ubi/debug.h	69;"	d
ubi_dbg_dump_vol_info	ubi/debug.c	/^void ubi_dbg_dump_vol_info(const struct ubi_volume *vol)$/;"	f
ubi_dbg_dump_vol_info	ubi/debug.h	70;"	d
ubi_dbg_dump_vtbl_record	ubi/debug.c	/^void ubi_dbg_dump_vtbl_record(const struct ubi_vtbl_record *r, int idx)$/;"	f
ubi_dbg_dump_vtbl_record	ubi/debug.h	71;"	d
ubi_dbg_is_bitflip	ubi/debug.h	/^static inline int ubi_dbg_is_bitflip(void)$/;"	f
ubi_dbg_is_bitflip	ubi/debug.h	119;"	d
ubi_dbg_is_erase_failure	ubi/debug.h	/^static inline int ubi_dbg_is_erase_failure(void)$/;"	f
ubi_dbg_is_erase_failure	ubi/debug.h	149;"	d
ubi_dbg_is_write_failure	ubi/debug.h	/^static inline int ubi_dbg_is_write_failure(void)$/;"	f
ubi_dbg_is_write_failure	ubi/debug.h	134;"	d
ubi_destroy_gluebi	ubi/gluebi.c	/^int ubi_destroy_gluebi(struct ubi_volume *vol)$/;"	f
ubi_destroy_gluebi	ubi/ubi.h	470;"	d
ubi_detach_mtd	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^int ubi_detach_mtd(libubi_t desc, const char *node, int mtd_num)$/;"	f
ubi_detach_mtd_dev	ubi/build.c	/^int ubi_detach_mtd_dev(int ubi_num, int anyway)$/;"	f
ubi_dev	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	/^	char *ubi_dev;$/;"	m	struct:libubi
ubi_dev	mtd-utils/ubi-utils/src/libubi_int.h	/^	char *ubi_dev;$/;"	m	struct:libubi
ubi_dev_info	mtd-utils/ubi-utils/inc/libubi.h	/^struct ubi_dev_info$/;"	s
ubi_dev_info	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^struct ubi_dev_info$/;"	s
ubi_device	mtd-utils/tests/ubi-tests/integ.c	/^	struct ubi_device_info *ubi_device;$/;"	m	struct:volume_info	typeref:struct:volume_info::ubi_device_info	file:
ubi_device	ubi/ubi.h	/^struct ubi_device {$/;"	s
ubi_device_info	mtd-utils/tests/ubi-tests/integ.c	/^struct ubi_device_info$/;"	s	file:
ubi_devices	ubi/build.c	/^static struct ubi_device *ubi_devices[UBI_MAX_DEVICES];$/;"	v	typeref:struct:ubi_device	file:
ubi_devices_lock	ubi/build.c	/^EXPORT_SYMBOL_GPL(ubi_devices_lock);$/;"	v
ubi_devices_mutex	ubi/build.c	/^DEFINE_MUTEX(ubi_devices_mutex);$/;"	v
ubi_eba_atomic_leb_change	ubi/eba.c	/^int ubi_eba_atomic_leb_change(struct ubi_device *ubi, struct ubi_volume *vol,$/;"	f
ubi_eba_close	ubi/eba.c	/^void ubi_eba_close(const struct ubi_device *ubi)$/;"	f
ubi_eba_copy_leb	ubi/eba.c	/^int ubi_eba_copy_leb(struct ubi_device *ubi, int from, int to,$/;"	f
ubi_eba_init_scan	ubi/eba.c	/^int ubi_eba_init_scan(struct ubi_device *ubi, struct ubi_scan_info *si)$/;"	f
ubi_eba_read_leb	ubi/eba.c	/^int ubi_eba_read_leb(struct ubi_device *ubi, struct ubi_volume *vol, int lnum,$/;"	f
ubi_eba_unmap_leb	ubi/eba.c	/^int ubi_eba_unmap_leb(struct ubi_device *ubi, struct ubi_volume *vol,$/;"	f
ubi_eba_write_leb	ubi/eba.c	/^int ubi_eba_write_leb(struct ubi_device *ubi, struct ubi_volume *vol, int lnum,$/;"	f
ubi_eba_write_leb_st	ubi/eba.c	/^int ubi_eba_write_leb_st(struct ubi_device *ubi, struct ubi_volume *vol,$/;"	f
ubi_ec_hdr	mtd-utils/include/mtd/ubi-header.h	/^struct ubi_ec_hdr {$/;"	s
ubi_ec_hdr	ubi/ubi-media.h	/^struct ubi_ec_hdr {$/;"	s
ubi_err	ubi/ubi.h	58;"	d
ubi_error	mtd-utils/ubi-utils/src/libubimirror.c	/^	ubi_error = -6,$/;"	e	enum:__anon7	file:
ubi_exit	ubi/build.c	/^module_exit(ubi_exit);$/;"	v
ubi_exit	ubi/build.c	/^static void __exit ubi_exit(void)$/;"	f	file:
ubi_free_vid_hdr	ubi/ubi.h	/^static inline void ubi_free_vid_hdr(const struct ubi_device *ubi,$/;"	f
ubi_free_volume	ubi/vmt.c	/^void ubi_free_volume(struct ubi_device *ubi, struct ubi_volume *vol)$/;"	f
ubi_get_by_major	ubi/build.c	/^struct ubi_device *ubi_get_by_major(int major)$/;"	f
ubi_get_compat	ubi/eba.c	/^static int ubi_get_compat(const struct ubi_device *ubi, int vol_id)$/;"	f	file:
ubi_get_dev_info	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^int ubi_get_dev_info(libubi_t desc, const char *node, struct ubi_dev_info *info)$/;"	f
ubi_get_dev_info	mtd-utils/ubi-utils/src/libubi.c	/^int ubi_get_dev_info(libubi_t desc, const char *node, struct ubi_dev_info *info)$/;"	f
ubi_get_dev_info1	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^int ubi_get_dev_info1(libubi_t desc, int dev_num, struct ubi_dev_info *info)$/;"	f
ubi_get_dev_info1	mtd-utils/ubi-utils/src/libubi.c	/^int ubi_get_dev_info1(libubi_t desc, int dev_num, struct ubi_dev_info *info)$/;"	f
ubi_get_device	ubi/build.c	/^struct ubi_device *ubi_get_device(int ubi_num)$/;"	f
ubi_get_device_info	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_get_device_info);$/;"	v
ubi_get_device_info	ubi/kapi.c	/^int ubi_get_device_info(int ubi_num, struct ubi_device_info *di)$/;"	f
ubi_get_info	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^int ubi_get_info(libubi_t desc, struct ubi_info *info)$/;"	f
ubi_get_info	mtd-utils/ubi-utils/src/libubi.c	/^int ubi_get_info(libubi_t desc, struct ubi_info *info)$/;"	f
ubi_get_vol_info	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^int ubi_get_vol_info(libubi_t desc, const char *node, struct ubi_vol_info *info)$/;"	f
ubi_get_vol_info	mtd-utils/ubi-utils/src/libubi.c	/^int ubi_get_vol_info(libubi_t desc, const char *node, struct ubi_vol_info *info)$/;"	f
ubi_get_vol_info1	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^int ubi_get_vol_info1(libubi_t desc, int dev_num, int vol_id,$/;"	f
ubi_get_vol_info1	mtd-utils/ubi-utils/src/libubi.c	/^int ubi_get_vol_info1(libubi_t desc, int dev_num, int vol_id,$/;"	f
ubi_get_volume_info	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_get_volume_info);$/;"	v
ubi_get_volume_info	ubi/kapi.c	/^void ubi_get_volume_info(struct ubi_volume_desc *desc,$/;"	f
ubi_gluebi_updated	ubi/gluebi.c	/^void ubi_gluebi_updated(struct ubi_volume *vol)$/;"	f
ubi_gluebi_updated	ubi/ubi.h	471;"	d
ubi_info	mtd-utils/ubi-utils/inc/libubi.h	/^struct ubi_info$/;"	s
ubi_info	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^struct ubi_info$/;"	s
ubi_info	mtd-utils/ubi-utils/src/libubigen.c	/^struct ubi_info {$/;"	s	file:
ubi_info_t	mtd-utils/ubi-utils/src/ubigen.h	/^typedef struct ubi_info *ubi_info_t;$/;"	t	typeref:struct:ubi_info
ubi_init	ubi/build.c	/^module_init(ubi_init);$/;"	v
ubi_init	ubi/build.c	/^static int __init ubi_init(void)$/;"	f	file:
ubi_io_is_bad	ubi/io.c	/^int ubi_io_is_bad(const struct ubi_device *ubi, int pnum)$/;"	f
ubi_io_mark_bad	ubi/io.c	/^int ubi_io_mark_bad(const struct ubi_device *ubi, int pnum)$/;"	f
ubi_io_read	ubi/io.c	/^int ubi_io_read(const struct ubi_device *ubi, void *buf, int pnum, int offset,$/;"	f
ubi_io_read_data	ubi/ubi.h	/^static inline int ubi_io_read_data(const struct ubi_device *ubi, void *buf,$/;"	f
ubi_io_read_ec_hdr	ubi/io.c	/^int ubi_io_read_ec_hdr(struct ubi_device *ubi, int pnum,$/;"	f
ubi_io_read_vid_hdr	ubi/io.c	/^int ubi_io_read_vid_hdr(struct ubi_device *ubi, int pnum,$/;"	f
ubi_io_sync_erase	ubi/io.c	/^int ubi_io_sync_erase(struct ubi_device *ubi, int pnum, int torture)$/;"	f
ubi_io_write	ubi/io.c	/^int ubi_io_write(struct ubi_device *ubi, const void *buf, int pnum, int offset,$/;"	f
ubi_io_write_data	ubi/ubi.h	/^static inline int ubi_io_write_data(struct ubi_device *ubi, const void *buf,$/;"	f
ubi_io_write_ec_hdr	ubi/io.c	/^int ubi_io_write_ec_hdr(struct ubi_device *ubi, int pnum,$/;"	f
ubi_io_write_vid_hdr	ubi/io.c	/^int ubi_io_write_vid_hdr(struct ubi_device *ubi, int pnum,$/;"	f
ubi_is_mapped	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_is_mapped);$/;"	v
ubi_is_mapped	ubi/kapi.c	/^int ubi_is_mapped(struct ubi_volume_desc *desc, int lnum)$/;"	f
ubi_leb	mtd-utils/include/mtd/ubi-user.h	/^struct ubi_leb{$/;"	s
ubi_leb_change	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_leb_change);$/;"	v
ubi_leb_change	ubi/kapi.c	/^int ubi_leb_change(struct ubi_volume_desc *desc, int lnum, const void *buf,$/;"	f
ubi_leb_change_req	mtd-utils/include/mtd/ubi-user.h	/^struct ubi_leb_change_req {$/;"	s
ubi_leb_change_start	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^int ubi_leb_change_start(libubi_t desc, int fd, int lnum, int bytes, int dtype)$/;"	f
ubi_leb_erase	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_leb_erase);$/;"	v
ubi_leb_erase	ubi/kapi.c	/^int ubi_leb_erase(struct ubi_volume_desc *desc, int lnum)$/;"	f
ubi_leb_map	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_leb_map);$/;"	v
ubi_leb_map	ubi/kapi.c	/^int ubi_leb_map(struct ubi_volume_desc *desc, int lnum, int dtype)$/;"	f
ubi_leb_read	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_leb_read);$/;"	v
ubi_leb_read	ubi/kapi.c	/^int ubi_leb_read(struct ubi_volume_desc *desc, int lnum, char *buf, int offset,$/;"	f
ubi_leb_read_start	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^int ubi_leb_read_start(int fd,  struct ubi_leb *leb)$/;"	f
ubi_leb_unmap	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_leb_unmap);$/;"	v
ubi_leb_unmap	ubi/kapi.c	/^int ubi_leb_unmap(struct ubi_volume_desc *desc, int lnum)$/;"	f
ubi_leb_write	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_leb_write);$/;"	v
ubi_leb_write	ubi/kapi.c	/^int ubi_leb_write(struct ubi_volume_desc *desc, int lnum, const void *buf,$/;"	f
ubi_ltree_entry	ubi/ubi.h	/^struct ubi_ltree_entry {$/;"	s
ubi_major	mtd-utils/tests/ubi-tests/integ.c	/^static int ubi_major(const char *device_file_name)$/;"	f	file:
ubi_major2num	ubi/build.c	/^EXPORT_SYMBOL_GPL(ubi_major2num);$/;"	v
ubi_major2num	ubi/build.c	/^int ubi_major2num(int major)$/;"	f
ubi_mkvol	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^int ubi_mkvol(libubi_t desc, const char *node, struct ubi_mkvol_request *req)$/;"	f
ubi_mkvol	mtd-utils/ubi-utils/src/libubi.c	/^int ubi_mkvol(libubi_t desc, const char *node, struct ubi_mkvol_request *req)$/;"	f
ubi_mkvol_req	mtd-utils/include/mtd/ubi-user.h	/^struct ubi_mkvol_req {$/;"	s
ubi_mkvol_request	mtd-utils/ubi-utils/inc/libubi.h	/^struct ubi_mkvol_request$/;"	s
ubi_mkvol_request	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^struct ubi_mkvol_request$/;"	s
ubi_module_load_string	mtd-utils/tests/ubi-tests/integ.c	/^static const char *ubi_module_load_string;$/;"	v	file:
ubi_more_leb_change_data	ubi/upd.c	/^int ubi_more_leb_change_data(struct ubi_device *ubi, struct ubi_volume *vol,$/;"	f
ubi_more_update_data	ubi/upd.c	/^int ubi_more_update_data(struct ubi_device *ubi, struct ubi_volume *vol,$/;"	f
ubi_msg	ubi/ubi.h	53;"	d
ubi_mtd_param_parse	ubi/build.c	/^static int __init ubi_mtd_param_parse(const char *val, struct kernel_param *kp)$/;"	f	file:
ubi_name	ubi/ubi.h	/^	char ubi_name[sizeof(UBI_NAME_STR)+5];$/;"	m	struct:ubi_device
ubi_node_type	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^int ubi_node_type(libubi_t desc, const char *node)$/;"	f
ubi_num	mtd-utils/include/mtd/ubi-user.h	/^	int32_t ubi_num;$/;"	m	struct:ubi_attach_req
ubi_num	ubi/ubi.h	/^	int ubi_num;$/;"	m	struct:ubi_device
ubi_open_blkdev	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_open_blkdev);$/;"	v
ubi_open_blkdev	ubi/kapi.c	/^void ubi_open_blkdev(int ubi_num, int vol_id, int mode)$/;"	f
ubi_open_volume	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_open_volume);$/;"	v
ubi_open_volume	ubi/kapi.c	/^struct ubi_volume_desc *ubi_open_volume(int ubi_num, int vol_id, int mode)$/;"	f
ubi_open_volume_nm	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubi_open_volume_nm);$/;"	v
ubi_open_volume_nm	ubi/kapi.c	/^struct ubi_volume_desc *ubi_open_volume_nm(int ubi_num, const char *name,$/;"	f
ubi_put_device	ubi/build.c	/^void ubi_put_device(struct ubi_device *ubi)$/;"	f
ubi_rb_for_each_entry	ubi/ubi.h	532;"	d
ubi_read_bootenv	mtd-utils/ubi-utils/src/pddcustomize.c	/^ubi_read_bootenv(uint32_t devno, uint32_t id, bootenv_t env)$/;"	f	file:
ubi_read_volume_table	ubi/vtbl.c	/^int ubi_read_volume_table(struct ubi_device *ubi, struct ubi_scan_info *si)$/;"	f
ubi_remove_dev	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^int ubi_remove_dev(libubi_t desc, const char *node, int ubi_dev)$/;"	f
ubi_remove_volume	ubi/vmt.c	/^int ubi_remove_volume(struct ubi_volume_desc *desc)$/;"	f
ubi_resize_volume	ubi/vmt.c	/^int ubi_resize_volume(struct ubi_volume_desc *desc, int reserved_pebs)$/;"	f
ubi_rmvol	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^int ubi_rmvol(libubi_t desc, const char *node, int vol_id)$/;"	f
ubi_rmvol	mtd-utils/ubi-utils/src/libubi.c	/^int ubi_rmvol(libubi_t desc, const char *node, int vol_id)$/;"	f
ubi_ro_mode	ubi/ubi.h	/^static inline void ubi_ro_mode(struct ubi_device *ubi)$/;"	f
ubi_rsvol	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^int ubi_rsvol(libubi_t desc, const char *node, int vol_id, long long bytes)$/;"	f
ubi_rsvol	mtd-utils/ubi-utils/src/libubi.c	/^int ubi_rsvol(libubi_t desc, const char *node, int vol_id, long long bytes)$/;"	f
ubi_rsvol_req	mtd-utils/include/mtd/ubi-user.h	/^struct ubi_rsvol_req {$/;"	s
ubi_scan	mtd-utils/ubi-utils/new-utils/src/libscan.c	/^int ubi_scan(struct mtd_info *mtd, struct ubi_scan_info **info, int verbose)$/;"	f
ubi_scan	ubi/scan.c	/^struct ubi_scan_info *ubi_scan(struct ubi_device *ubi)$/;"	f
ubi_scan_add_used	ubi/scan.c	/^int ubi_scan_add_used(struct ubi_device *ubi, struct ubi_scan_info *si,$/;"	f
ubi_scan_destroy_si	ubi/scan.c	/^void ubi_scan_destroy_si(struct ubi_scan_info *si)$/;"	f
ubi_scan_erase_peb	ubi/scan.c	/^int ubi_scan_erase_peb(struct ubi_device *ubi, const struct ubi_scan_info *si,$/;"	f
ubi_scan_find_seb	ubi/scan.c	/^struct ubi_scan_leb *ubi_scan_find_seb(const struct ubi_scan_volume *sv,$/;"	f
ubi_scan_find_sv	ubi/scan.c	/^struct ubi_scan_volume *ubi_scan_find_sv(const struct ubi_scan_info *si,$/;"	f
ubi_scan_free	mtd-utils/ubi-utils/new-utils/src/libscan.c	/^void ubi_scan_free(struct ubi_scan_info *si)$/;"	f
ubi_scan_get_free_peb	ubi/scan.c	/^struct ubi_scan_leb *ubi_scan_get_free_peb(struct ubi_device *ubi,$/;"	f
ubi_scan_info	mtd-utils/ubi-utils/new-utils/include/libscan.h	/^struct ubi_scan_info$/;"	s
ubi_scan_info	ubi/scan.h	/^struct ubi_scan_info {$/;"	s
ubi_scan_leb	ubi/scan.h	/^struct ubi_scan_leb {$/;"	s
ubi_scan_move_to_list	ubi/scan.h	/^static inline void ubi_scan_move_to_list(struct ubi_scan_volume *sv,$/;"	f
ubi_scan_rm_volume	ubi/scan.c	/^void ubi_scan_rm_volume(struct ubi_scan_info *si, struct ubi_scan_volume *sv)$/;"	f
ubi_scan_volume	ubi/scan.h	/^struct ubi_scan_volume {$/;"	s
ubi_start_leb_change	ubi/upd.c	/^int ubi_start_leb_change(struct ubi_device *ubi, struct ubi_volume *vol,$/;"	f
ubi_start_update	ubi/upd.c	/^int ubi_start_update(struct ubi_device *ubi, struct ubi_volume *vol,$/;"	f
ubi_sysfs_close	ubi/build.c	/^static void ubi_sysfs_close(struct ubi_device *ubi)$/;"	f	file:
ubi_sysfs_init	ubi/build.c	/^static int ubi_sysfs_init(struct ubi_device *ubi)$/;"	f	file:
ubi_thread	ubi/wl.c	/^int ubi_thread(void *u)$/;"	f
ubi_unused	mtd-utils/ubi-utils/src/bootenv.c	36;"	d	file:
ubi_unused	mtd-utils/ubi-utils/src/config.h	26;"	d
ubi_unused	mtd-utils/ubi-utils/src/libpfiflash.c	/^static const char copyright [] ubi_unused =$/;"	v	file:
ubi_unused	mtd-utils/ubi-utils/src/libpfiflash.c	58;"	d	file:
ubi_update_process_t	mtd-utils/ubi-utils/src/libpfiflash.c	/^typedef enum ubi_update_process_t {$/;"	g	file:
ubi_update_process_t	mtd-utils/ubi-utils/src/libpfiflash.c	/^} ubi_update_process_t;$/;"	t	typeref:enum:ubi_update_process_t	file:
ubi_update_start	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^int ubi_update_start(libubi_t desc, int fd, long long bytes)$/;"	f
ubi_update_start	mtd-utils/ubi-utils/src/libubi.c	/^int ubi_update_start(libubi_t desc, int fd, long long bytes)$/;"	f
ubi_ver	mtd-utils/ubi-utils/new-utils/include/libubigen.h	/^	int ubi_ver;$/;"	m	struct:ubigen_info
ubi_ver	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	/^	int ubi_ver;$/;"	m	struct:args	file:
ubi_ver	mtd-utils/ubi-utils/new-utils/src/ubinize.c	/^	int ubi_ver;$/;"	m	struct:args	file:
ubi_version	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	/^	char *ubi_version;$/;"	m	struct:libubi
ubi_version	mtd-utils/ubi-utils/src/libubi_int.h	/^	char *ubi_version;$/;"	m	struct:libubi
ubi_version	ubi/build.c	/^static struct class_attribute ubi_version =$/;"	v	typeref:struct:class_attribute	file:
ubi_version_show	ubi/build.c	/^static ssize_t ubi_version_show(struct class *class, char *buf)$/;"	f	file:
ubi_vid_hdr	mtd-utils/include/mtd/ubi-header.h	/^struct ubi_vid_hdr {$/;"	s
ubi_vid_hdr	ubi/ubi-media.h	/^struct ubi_vid_hdr {$/;"	s
ubi_vol	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	/^	char *ubi_vol;$/;"	m	struct:libubi
ubi_vol	mtd-utils/ubi-utils/src/libubi_int.h	/^	char *ubi_vol;$/;"	m	struct:libubi
ubi_vol_cdev_operations	ubi/cdev.c	/^struct file_operations ubi_vol_cdev_operations = {$/;"	v	typeref:struct:file_operations
ubi_vol_info	mtd-utils/ubi-utils/inc/libubi.h	/^struct ubi_vol_info$/;"	s
ubi_vol_info	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^struct ubi_vol_info$/;"	s
ubi_volume	ubi/ubi.h	/^struct ubi_volume {$/;"	s
ubi_volume_desc	ubi/ubi.h	/^struct ubi_volume_desc {$/;"	s
ubi_vtbl_record	mtd-utils/include/mtd/ubi-header.h	/^struct ubi_vtbl_record {$/;"	s
ubi_vtbl_record	ubi/ubi-media.h	/^struct ubi_vtbl_record {$/;"	s
ubi_warn	ubi/ubi.h	55;"	d
ubi_wl_close	ubi/wl.c	/^void ubi_wl_close(struct ubi_device *ubi)$/;"	f
ubi_wl_entry	ubi/ubi.h	/^struct ubi_wl_entry {$/;"	s
ubi_wl_entry_slab	ubi/build.c	/^struct kmem_cache *ubi_wl_entry_slab;$/;"	v	typeref:struct:kmem_cache
ubi_wl_flush	ubi/wl.c	/^int ubi_wl_flush(struct ubi_device *ubi)$/;"	f
ubi_wl_get_peb	ubi/wl.c	/^int ubi_wl_get_peb(struct ubi_device *ubi, int dtype)$/;"	f
ubi_wl_init_scan	ubi/wl.c	/^int ubi_wl_init_scan(struct ubi_device *ubi, struct ubi_scan_info *si)$/;"	f
ubi_wl_prot_entry	ubi/wl.c	/^struct ubi_wl_prot_entry {$/;"	s	file:
ubi_wl_put_peb	ubi/wl.c	/^int ubi_wl_put_peb(struct ubi_device *ubi, int pnum, int torture)$/;"	f
ubi_wl_scrub_peb	ubi/wl.c	/^int ubi_wl_scrub_peb(struct ubi_device *ubi, int pnum)$/;"	f
ubi_work	ubi/wl.c	/^struct ubi_work {$/;"	s	file:
ubi_write	mtd-utils/ubi-utils/new-utils/src/ubiupdatevol.c	/^static int ubi_write(int fd, const void *buf, int len)$/;"	f	file:
ubi_write_bootenv	mtd-utils/ubi-utils/src/pddcustomize.c	/^ubi_write_bootenv(uint32_t devno, uint32_t id, bootenv_t env)$/;"	f	file:
ubi_zalloc_vid_hdr	ubi/ubi.h	/^ubi_zalloc_vid_hdr(const struct ubi_device *ubi, gfp_t gfp_flags)$/;"	f
ubiblk_add_vol_dev	ubi/ubiblk.c	/^void ubiblk_add_vol_dev(struct ubi_blktrans_ops *tr, struct ubi_volume *vol)$/;"	f
ubiblk_dev	ubi/ubiblk.h	/^struct ubiblk_dev {$/;"	s
ubiblk_eba_atomic_leb_change	ubi/eba.c	/^int ubiblk_eba_atomic_leb_change(struct ubi_device *ubi, struct ubi_volume *vol,$/;"	f
ubiblk_fill_writecache	ubi/eba.c	/^static int ubiblk_fill_writecache(struct ubiblk_dev *ubiblk)$/;"	f	file:
ubiblk_flush	ubi/ubiblk.c	/^static int ubiblk_flush(struct ubi_blktrans_dev *dev)$/;"	f	file:
ubiblk_flush_writecache	ubi/ubiblk.c	/^static int ubiblk_flush_writecache(struct ubiblk_dev *ubiblk)$/;"	f	file:
ubiblk_getgeo	ubi/ubiblk.c	/^static int ubiblk_getgeo(struct ubi_blktrans_dev *dev, struct hd_geometry *geo)$/;"	f	file:
ubiblk_init_vol	ubi/ubiblk.c	/^static int ubiblk_init_vol(int dev, struct ubi_volume_desc *uv)$/;"	f	file:
ubiblk_leb_change	ubi/kapi.c	/^EXPORT_SYMBOL_GPL(ubiblk_leb_change);$/;"	v
ubiblk_leb_change	ubi/kapi.c	/^int ubiblk_leb_change(struct ubiblk_dev *ubiblk)$/;"	f
ubiblk_open	ubi/ubiblk.c	/^static int ubiblk_open(struct inode *i, struct file *f )$/;"	f	file:
ubiblk_readsect	ubi/ubiblk.c	/^static int ubiblk_readsect(struct ubi_blktrans_dev *dev,$/;"	f	file:
ubiblk_release	ubi/ubiblk.c	/^static int ubiblk_release(struct ubi_blktrans_dev *ubd)$/;"	f	file:
ubiblk_remove_vol_dev	ubi/ubiblk.c	/^void ubiblk_remove_vol_dev(struct ubi_blktrans_dev *dev)$/;"	f
ubiblk_setup_writecache	ubi/ubiblk.c	/^static void ubiblk_setup_writecache(struct ubiblk_dev *ubiblk, int virt_block)$/;"	f	file:
ubiblk_tr	ubi/ubiblk.c	/^static struct ubi_blktrans_ops ubiblk_tr = {$/;"	v	typeref:struct:ubi_blktrans_ops	file:
ubiblk_writesect	ubi/ubiblk.c	/^static int ubiblk_writesect(struct ubi_blktrans_dev *dev,$/;"	f	file:
ubiblks	ubi/ubiblk.c	/^struct ubiblk_dev *ubiblks[UBI_MAX_VOLUMES];$/;"	v	typeref:struct:ubiblk_dev
ubigen	mtd-utils/ubi-utils/scripts/Makefile	/^ubigen		= ubigen$/;"	m
ubigen_action_t	mtd-utils/ubi-utils/src/ubigen.h	/^} ubigen_action_t;$/;"	t	typeref:enum:action
ubigen_add_volume	mtd-utils/ubi-utils/new-utils/src/libubigen.c	/^int ubigen_add_volume(const struct ubigen_info *ui,$/;"	f
ubigen_create	mtd-utils/ubi-utils/src/libubigen.c	/^ubigen_create(ubi_info_t* u, uint32_t vol_id, uint8_t vol_type,$/;"	f
ubigen_create_empty_vtbl	mtd-utils/ubi-utils/new-utils/src/libubigen.c	/^struct ubi_vtbl_record *ubigen_create_empty_vtbl(const struct ubigen_info *ui)$/;"	f
ubigen_destroy	mtd-utils/ubi-utils/src/libubigen.c	/^ubigen_destroy(ubi_info_t *u)$/;"	f
ubigen_get_leb_size	mtd-utils/ubi-utils/src/libubigen.c	/^ubigen_get_leb_size(ubi_info_t u, size_t* size)$/;"	f
ubigen_get_leb_total	mtd-utils/ubi-utils/src/libubigen.c	/^ubigen_get_leb_total(ubi_info_t u, size_t* total)$/;"	f
ubigen_info	mtd-utils/ubi-utils/new-utils/include/libubigen.h	/^struct ubigen_info$/;"	s
ubigen_info_init	mtd-utils/ubi-utils/new-utils/src/libubigen.c	/^void ubigen_info_init(struct ubigen_info *ui, int peb_size, int min_io_size,$/;"	f
ubigen_init	mtd-utils/ubi-utils/src/libubigen.c	/^ubigen_init(void)$/;"	f
ubigen_init_ec_hdr	mtd-utils/ubi-utils/new-utils/src/libubigen.c	/^void ubigen_init_ec_hdr(const struct ubigen_info *ui,$/;"	f
ubigen_set_lvol_rec	mtd-utils/ubi-utils/src/libubigen.c	/^ubigen_set_lvol_rec(ubi_info_t u, size_t reserved_bytes,$/;"	f
ubigen_vol_info	mtd-utils/ubi-utils/new-utils/include/libubigen.h	/^struct ubigen_vol_info$/;"	s
ubigen_write_broken_update	mtd-utils/ubi-utils/src/libubigen.c	/^ubigen_write_broken_update(ubi_info_t u, uint32_t blk)$/;"	f
ubigen_write_complete	mtd-utils/ubi-utils/src/libubigen.c	/^ubigen_write_complete(ubi_info_t u)$/;"	f
ubigen_write_layout_vol	mtd-utils/ubi-utils/new-utils/src/libubigen.c	/^int ubigen_write_layout_vol(const struct ubigen_info *ui, int peb1, int peb2,$/;"	f
ubigen_write_leb	mtd-utils/ubi-utils/src/libubigen.c	/^ubigen_write_leb(ubi_info_t u, ubigen_action_t action)$/;"	f
ubigen_write_volume	mtd-utils/ubi-utils/new-utils/src/libubigen.c	/^int ubigen_write_volume(const struct ubigen_info *ui,$/;"	f
ubimirror	mtd-utils/ubi-utils/src/libubimirror.c	/^int ubimirror(uint32_t devno, int seqnum, uint32_t *ids, ssize_t ids_size,$/;"	f
ubiutils_get_bytes	mtd-utils/ubi-utils/new-utils/src/common.c	/^long long ubiutils_get_bytes(const char *str)$/;"	f
ubiutils_print_bytes	mtd-utils/ubi-utils/new-utils/src/common.c	/^void ubiutils_print_bytes(long long bytes, int bracket)$/;"	f
ubiutils_print_text	mtd-utils/ubi-utils/new-utils/src/common.c	/^void ubiutils_print_text(FILE *stream, const char *text, int width)$/;"	f
uclinux_mtd_cleanup	maps/uclinux.c	/^module_exit(uclinux_mtd_cleanup);$/;"	v
uclinux_mtd_cleanup	maps/uclinux.c	/^void __exit uclinux_mtd_cleanup(void)$/;"	f
uclinux_mtd_init	maps/uclinux.c	/^int __init uclinux_mtd_init(void)$/;"	f
uclinux_mtd_init	maps/uclinux.c	/^module_init(uclinux_mtd_init);$/;"	v
uclinux_point	maps/uclinux.c	/^int uclinux_point(struct mtd_info *mtd, loff_t from, size_t len,$/;"	f
uclinux_ram_map	maps/uclinux.c	/^struct map_info uclinux_ram_map = {$/;"	v	typeref:struct:map_info
uclinux_ram_mtdinfo	maps/uclinux.c	/^struct mtd_info *uclinux_ram_mtdinfo;$/;"	v	typeref:struct:mtd_info
uclinux_romfs	maps/uclinux.c	/^struct mtd_partition uclinux_romfs[] = {$/;"	v	typeref:struct:mtd_partition
udc_flush_cache	mtdblock-jz.c	/^EXPORT_SYMBOL_GPL(udc_flush_cache);$/;"	v
udc_flush_cache	mtdblock-jz.c	/^void udc_flush_cache(struct mtdblk_dev *mtdblk)$/;"	f
udc_get_mtd	mtdblock-jz.c	/^EXPORT_SYMBOL_GPL(udc_get_mtd);$/;"	v
udc_get_mtd	mtdblock-jz.c	/^struct mtd_info *udc_get_mtd(void)$/;"	f
udc_get_mtdblk	mtdblock-jz.c	/^EXPORT_SYMBOL_GPL(udc_get_mtdblk);$/;"	v
udc_get_mtdblk	mtdblock-jz.c	/^struct mtdblk_dev *udc_get_mtdblk(void)$/;"	f
udc_mtdblock_readsect	mtdblock-jz.c	/^EXPORT_SYMBOL_GPL(udc_mtdblock_readsect);$/;"	v
udc_mtdblock_readsect	mtdblock-jz.c	/^int udc_mtdblock_readsect(struct mtdblk_dev *mtdblk,$/;"	f
udc_mtdblock_writesect	mtdblock-jz.c	/^EXPORT_SYMBOL_GPL(udc_mtdblock_writesect);$/;"	v
udc_mtdblock_writesect	mtdblock-jz.c	/^int udc_mtdblock_writesect(struct mtdblk_dev *mtdblk,$/;"	f
udc_read	udc_cache.c	/^EXPORT_SYMBOL_GPL(udc_read);$/;"	v
udc_read	udc_cache.c	/^int udc_read(unsigned long long offset, unsigned int len, unsigned char *buf)$/;"	f
udc_write	udc_cache.c	/^EXPORT_SYMBOL_GPL(udc_write);$/;"	v
udc_write	udc_cache.c	/^int udc_write(unsigned long long offset, unsigned int len, unsigned char *buf)$/;"	f
udev_wait	mtd-utils/ubi-utils/scripts/ubi_jffs2_test.sh	/^udev_wait ()$/;"	f
uflash_dev	maps/sun_uflash.c	/^struct uflash_dev {$/;"	s	file:
uflash_devinit	maps/sun_uflash.c	/^int uflash_devinit(struct linux_ebus_device *edev, struct device_node *dp)$/;"	f
uflash_driver	maps/sun_uflash.c	/^static struct of_platform_driver uflash_driver = {$/;"	v	typeref:struct:of_platform_driver	file:
uflash_exit	maps/sun_uflash.c	/^module_exit(uflash_exit);$/;"	v
uflash_exit	maps/sun_uflash.c	/^static void __exit uflash_exit(void)$/;"	f	file:
uflash_init	maps/sun_uflash.c	/^module_init(uflash_init);$/;"	v
uflash_init	maps/sun_uflash.c	/^static int __init uflash_init(void)$/;"	f	file:
uflash_map_templ	maps/sun_uflash.c	/^struct map_info uflash_map_templ = {$/;"	v	typeref:struct:map_info
uflash_match	maps/sun_uflash.c	/^static struct of_device_id uflash_match[] = {$/;"	v	typeref:struct:of_device_id	file:
uflash_probe	maps/sun_uflash.c	/^static int __devinit uflash_probe(struct of_device *dev, const struct of_device_id *match)$/;"	f	file:
uflash_remove	maps/sun_uflash.c	/^static int __devexit uflash_remove(struct of_device *dev)$/;"	f	file:
uid	mtd-utils/include/linux/jffs2.h	/^	jint16_t uid;        \/* The file's owner.  *\/$/;"	m	struct:jffs2_raw_inode
uid	mtd-utils/jffs-dump.c	/^	uint16_t uid;$/;"	m	struct:jffs_raw_inode	file:
uif_close	ubi/build.c	/^static void uif_close(struct ubi_device *ubi)$/;"	f	file:
uif_init	ubi/build.c	/^static int uif_init(struct ubi_device *ubi)$/;"	f	file:
unlock_addr	chips/jedec_probe.c	/^struct unlock_addr {$/;"	s	file:
unlock_addrs	chips/jedec_probe.c	/^static const struct unlock_addr  unlock_addrs[] = {$/;"	v	typeref:struct:unlock_addr	file:
unregister_devices	devices/phram.c	/^static void unregister_devices(void)$/;"	f	file:
unregister_devices	devices/slram.c	/^static void unregister_devices(void)$/;"	f	file:
unregister_mtd_chip_driver	chips/chipreg.c	/^EXPORT_SYMBOL(unregister_mtd_chip_driver);$/;"	v
unregister_mtd_chip_driver	chips/chipreg.c	/^void unregister_mtd_chip_driver(struct mtd_chip_driver *drv)$/;"	f
unregister_mtd_user	mtdcore.c	/^EXPORT_SYMBOL_GPL(unregister_mtd_user);$/;"	v
unregister_mtd_user	mtdcore.c	/^int unregister_mtd_user (struct mtd_notifier *old)$/;"	f
unregister_vol_user	ubi/build.c	/^EXPORT_SYMBOL_GPL(unregister_vol_user);$/;"	v
unregister_vol_user	ubi/build.c	/^int unregister_vol_user(struct vol_notifier *old)$/;"	f
unubi_analyze	mtd-utils/ubi-utils/src/unubi_analyze.c	/^unubi_analyze(struct eb_info **head, struct eb_info *first, const char *path)$/;"	f
unubi_analyze_ec_hdr	mtd-utils/ubi-utils/src/unubi_analyze.c	/^unubi_analyze_ec_hdr(struct eb_info *first, const char *path)$/;"	f
unubi_analyze_vid_hdr	mtd-utils/ubi-utils/src/unubi_analyze.c	/^unubi_analyze_vid_hdr(struct eb_info **head, const char *path)$/;"	f
unubi_volumes	mtd-utils/ubi-utils/src/unubi.c	/^unubi_volumes(FILE* fpin, uint32_t *vols, size_t vc, struct args *a)$/;"	f	file:
unused	mtd-utils/include/linux/jffs2.h	/^	uint8_t unused[2];$/;"	m	struct:jffs2_raw_dirent
unused	mtd-utils/include/mtd/nftl-user.h	/^	uint32_t unused;$/;"	m	struct:nftl_uci2
upd_buf	ubi/ubi.h	/^	void *upd_buf;$/;"	m	struct:ubi_volume
upd_bytes	ubi/ubi.h	/^	long long upd_bytes;$/;"	m	struct:ubi_volume
upd_ebs	ubi/ubi.h	/^	int upd_ebs;$/;"	m	struct:ubi_volume
upd_marker	mtd-utils/include/mtd/ubi-header.h	/^	uint8_t  upd_marker;$/;"	m	struct:ubi_vtbl_record
upd_marker	ubi/ubi-media.h	/^	__u8    upd_marker;$/;"	m	struct:ubi_vtbl_record
upd_marker	ubi/ubi.h	/^	unsigned int upd_marker:1;$/;"	m	struct:ubi_volume
upd_received	ubi/ubi.h	/^	long long upd_received;$/;"	m	struct:ubi_volume
update_block	mtd-utils/ubi-utils/src/ubigen.c	/^	uint32_t update_block;$/;"	m	struct:myargs	file:
update_error	mtd-utils/ubi-utils/src/libubimirror.c	/^	update_error = -5,$/;"	e	enum:__anon7	file:
update_test_data	mtd-utils/tests/fs-tests/integrity/integck.c	/^static void update_test_data(void)$/;"	f	file:
update_vol_patt	mtd-utils/tests/ubi-tests/common.h	55;"	d
update_volume	mtd-utils/ubi-utils/new-utils/src/ubiupdatevol.c	/^static int update_volume(libubi_t libubi, struct ubi_vol_info *vol_info)$/;"	f	file:
update_wear	nand/nandsim.c	/^static void update_wear(unsigned int erase_block_no)$/;"	f	file:
updating	ubi/ubi.h	/^	unsigned int updating:1;$/;"	m	struct:ubi_volume
urb	nand/alauda.c	/^	struct urb *urb[3];$/;"	m	struct:alauda_sg_request	typeref:struct:alauda_sg_request::urb	file:
usable_leb_size	mtd-utils/ubi-utils/new-utils/include/libubigen.h	/^	int usable_leb_size;$/;"	m	struct:ubigen_vol_info
usable_leb_size	ubi/ubi.h	/^	int usable_leb_size;$/;"	m	struct:ubi_volume
usage	mtd-utils/nandtest.c	/^void usage(void)$/;"	f
usage	mtd-utils/nftl_format.c	/^void usage(int rc)$/;"	f
usage	mtd-utils/ubi-utils/new-utils/src/ubiattach.c	/^static const char *usage =$/;"	v	file:
usage	mtd-utils/ubi-utils/new-utils/src/ubicrc32.c	/^static const char *usage =$/;"	v	file:
usage	mtd-utils/ubi-utils/new-utils/src/ubicrcvol.c	/^static const char *usage =$/;"	v	file:
usage	mtd-utils/ubi-utils/new-utils/src/ubidetach.c	/^static const char *usage =$/;"	v	file:
usage	mtd-utils/ubi-utils/new-utils/src/ubidumpvol.c	/^static const char *usage =$/;"	v	file:
usage	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	/^static const char *usage =$/;"	v	file:
usage	mtd-utils/ubi-utils/new-utils/src/ubimkvol.c	/^static const char *usage =$/;"	v	file:
usage	mtd-utils/ubi-utils/new-utils/src/ubinfo.c	/^static const char *usage =$/;"	v	file:
usage	mtd-utils/ubi-utils/new-utils/src/ubinize.c	/^static const char *usage =$/;"	v	file:
usage	mtd-utils/ubi-utils/new-utils/src/ubirmvol.c	/^static const char *usage =$/;"	v	file:
usage	mtd-utils/ubi-utils/new-utils/src/ubiupdatevol.c	/^static const char *usage =$/;"	v	file:
usage	mtd-utils/ubi-utils/src/bin2nand.c	/^static const char *usage =$/;"	v	file:
usage	mtd-utils/ubi-utils/src/mkbootenv.c	/^static const char *usage =$/;"	v	file:
usage	mtd-utils/ubi-utils/src/nand2bin.c	/^static const char *usage =$/;"	v	file:
usage	mtd-utils/ubi-utils/src/pddcustomize.c	/^static const char *usage =$/;"	v	file:
usage	mtd-utils/ubi-utils/src/pfi2bin.c	/^static const char *usage =$/;"	v	file:
usage	mtd-utils/ubi-utils/src/pfiflash.c	/^static const char *usage =$/;"	v	file:
usage	mtd-utils/ubi-utils/src/ubigen.c	/^static const char *usage =$/;"	v	file:
usage	mtd-utils/ubi-utils/src/ubimirror.c	/^static const char *usage =$/;"	v	file:
usage	mtd-utils/ubi-utils/src/unubi.c	/^static const char *usage =$/;"	v	file:
use_input_cleanmarker_size	mtd-utils/sumtool.c	/^static int use_input_cleanmarker_size = 1;	\/* use input file's cleanmarker size (default) *\/$/;"	v	file:
usecount	mtd-utils/compr.h	/^	int usecount;$/;"	m	struct:jffs2_compressor
usecount	ssfdc.c	/^	int usecount;$/;"	m	struct:ssfdcr_record	file:
used	ubi/ubi.h	/^	struct rb_root used;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::rb_root
used_block	mtdblock-jz.c	/^	unsigned int used_block;$/;"	m	struct:mtdblk_zone_t	file:
used_bytes	ubi/ubi.h	/^	long long used_bytes;$/;"	m	struct:ubi_volume
used_ebs	mtd-utils/include/mtd/ubi-header.h	/^	uint32_t used_ebs;$/;"	m	struct:ubi_vid_hdr
used_ebs	mtd-utils/ubi-utils/new-utils/include/libubigen.h	/^	int used_ebs;$/;"	m	struct:ubigen_vol_info
used_ebs	ubi/scan.h	/^	int used_ebs;$/;"	m	struct:ubi_scan_volume
used_ebs	ubi/ubi-media.h	/^	__be32  used_ebs;$/;"	m	struct:ubi_vid_hdr
used_ebs	ubi/ubi.h	/^	int used_ebs;$/;"	m	struct:ubi_volume
used_sectors	rfd_ftl.c	/^	int used_sectors;$/;"	m	struct:block	file:
usedma	nand/cafe_nand.c	/^static int usedma = 1;$/;"	v	file:
useecc	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t useecc;$/;"	m	struct:nand_oobinfo
user_ram	devices/ms02-nv.h	/^		struct resource *user_ram;$/;"	m	struct:ms02nv_private::__anon18	typeref:struct:ms02nv_private::__anon18::resource
usercompr	mtd-utils/include/linux/jffs2.h	/^	uint8_t usercompr;   \/* Compression algorithm requested by the user *\/$/;"	m	struct:jffs2_raw_inode
users	ubi/ubi.h	/^	int users;$/;"	m	struct:ubi_ltree_entry
ustrtoul	devices/block2mtd.c	/^static int ustrtoul(const char *cp, char **endp, unsigned int base)$/;"	f	file:
ustrtoul	devices/phram.c	/^static int ustrtoul(const char *cp, char **endp, unsigned int base)$/;"	f	file:
ustrtoul	mtd-utils/ubi-utils/src/ubigen.c	/^static int ustrtoul(const char *cp, char **endp, unsigned int base)$/;"	f	file:
ustrtoull	mtd-utils/ubi-utils/src/bin2nand.c	/^static int ustrtoull(const char *cp, char **endp, unsigned int base)$/;"	f	file:
uv	ubi/ubiblk.h	/^	struct ubi_volume_desc *uv;$/;"	m	struct:ubi_blktrans_dev	typeref:struct:ubi_blktrans_dev::ubi_volume_desc
uv	ubi/ubiblk.h	/^	struct ubi_volume_desc *uv;$/;"	m	struct:ubiblk_dev	typeref:struct:ubiblk_dev::ubi_volume_desc
v	mtd-utils/ubi-utils/src/libubigen.c	/^	struct ubi_vid_hdr* v;	\/* Volume ID header *\/$/;"	m	struct:ubi_info	typeref:struct:ubi_info::ubi_vid_hdr	file:
v16	mtd-utils/include/linux/jffs2.h	/^	uint16_t v16;$/;"	m	struct:__anon11
v32	mtd-utils/include/linux/jffs2.h	/^	uint32_t v32;$/;"	m	struct:__anon9
val	chips/fwh_lock.h	/^	enum fwh_lock_state val;$/;"	m	struct:fwh_xxlock_thunk	typeref:enum:fwh_xxlock_thunk::fwh_lock_state
val	mtd-utils/ubi-utils/new-utils/src/dictionary.h	/^	char 		**	val ;	\/** List of string values *\/$/;"	m	struct:_dictionary_
validate_ec_hdr	ubi/io.c	/^static int validate_ec_hdr(const struct ubi_device *ubi,$/;"	f	file:
validate_ubi_info	mtd-utils/ubi-utils/src/libubigen.c	/^validate_ubi_info(ubi_info_t u)$/;"	f	file:
validate_vid_hdr	ubi/io.c	/^static int validate_vid_hdr(const struct ubi_device *ubi,$/;"	f	file:
validate_vid_hdr	ubi/scan.c	/^static int validate_vid_hdr(const struct ubi_vid_hdr *vid_hdr,$/;"	f	file:
value	mtd-utils/ubi-utils/src/hashmap.c	/^	char* value;    \/* payload '0' term. str *\/$/;"	m	struct:hashentry	file:
value	mtd-utils/ubi-utils/src/pfi.c	/^	} value[num_keys];$/;"	m	struct:pfi_header	typeref:union:pfi_header::__anon8	file:
value_len	mtd-utils/include/linux/jffs2.h	/^	jint16_t value_len;$/;"	m	struct:jffs2_raw_xattr
value_len	mtd-utils/mkfs.jffs2.c	/^	int value_len;$/;"	m	struct:xattr_entry	file:
value_lookup	mtd-utils/ubi-utils/src/hashmap.c	/^value_lookup(hashentry_t l, const char* key)$/;"	f	file:
vbase	maps/ceiva.c	/^	void *vbase;$/;"	m	struct:clps_info	file:
vbr	ubi/ubiblk.h	/^	unsigned short vbr;            \/\/virt block number of read cache$/;"	m	struct:ubiblk_dev
vbw	ubi/ubiblk.h	/^	unsigned short vbw;           \/\/virt block number of write cache$/;"	m	struct:ubiblk_dev
vendorname	chips/cfi_probe.c	/^static char *vendorname(__u16 vendor)$/;"	f	file:
verbose	mtd-utils/jffs-dump.c	/^int verbose = 0;$/;"	v
verbose	mtd-utils/jffs2dump.c	/^int 	verbose;		\/\/ verbose output$/;"	v
verbose	mtd-utils/mkfs.jffs2.c	/^static int verbose = 0;$/;"	v	file:
verbose	mtd-utils/rfddump.c	/^	int verbose;$/;"	m	struct:rfd	file:
verbose	mtd-utils/sumtool.c	/^static int verbose = 0;$/;"	v	file:
verbose	mtd-utils/ubi-utils/new-utils/src/common.h	34;"	d
verbose	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	/^	unsigned int verbose:1;$/;"	m	struct:args	file:
verbose	mtd-utils/ubi-utils/new-utils/src/ubinize.c	/^	int verbose;$/;"	m	struct:args	file:
verbose	mtd-utils/ubi-utils/src/nand2bin.c	/^static int verbose = 0;$/;"	v	file:
verbose	mtd-utils/ubi-utils/src/pfi2bin.c	/^	int verbose;$/;"	m	struct:myargs	file:
verbose	mtd-utils/ubi-utils/src/pfiflash.c	/^	int verbose;$/;"	m	struct:myargs	file:
verbose	mtd-utils/ubi-utils/src/ubigen.c	/^	int verbose;$/;"	m	struct:myargs	file:
verify_mkvol_req	ubi/cdev.c	/^static int verify_mkvol_req(const struct ubi_device *ubi,$/;"	f	file:
verify_rsvol_req	ubi/cdev.c	/^static int verify_rsvol_req(const struct ubi_device *ubi,$/;"	f	file:
verror_msg	mtd-utils/mkfs.jffs2.c	/^static void verror_msg(const char *s, va_list p)$/;"	f	file:
verror_msg	mtd-utils/sumtool.c	/^static void verror_msg(const char *s, va_list p)$/;"	f	file:
version	mtd-utils/include/linux/jffs2.h	/^	jint32_t version;    \/* Version number.  *\/$/;"	m	struct:jffs2_raw_inode
version	mtd-utils/include/linux/jffs2.h	/^	jint32_t version;$/;"	m	struct:jffs2_raw_dirent
version	mtd-utils/include/linux/jffs2.h	/^	jint32_t version;$/;"	m	struct:jffs2_raw_xattr
version	mtd-utils/include/mtd/ubi-header.h	/^	uint8_t  version;$/;"	m	struct:ubi_ec_hdr
version	mtd-utils/include/mtd/ubi-header.h	/^	uint8_t  version;$/;"	m	struct:ubi_vid_hdr
version	mtd-utils/jffs-dump.c	/^	uint32_t version;  \/* Version number.  *\/$/;"	m	struct:jffs_raw_inode	file:
version	mtd-utils/summary.h	/^	jint32_t version;	\/* dirent version *\/$/;"	m	struct:jffs2_sum_dirent_flash
version	mtd-utils/summary.h	/^	jint32_t version;	\/* dirent version *\/$/;"	m	struct:jffs2_sum_dirent_mem
version	mtd-utils/summary.h	/^	jint32_t version;	\/* inode version *\/$/;"	m	struct:jffs2_sum_inode_flash
version	mtd-utils/summary.h	/^	jint32_t version;	\/* inode version *\/$/;"	m	struct:jffs2_sum_inode_mem
version	mtd-utils/summary.h	/^	jint32_t version;	\/* version number *\/$/;"	m	struct:jffs2_sum_xattr_flash
version	mtd-utils/summary.h	/^	jint32_t version;$/;"	m	struct:jffs2_sum_xattr_mem
version	mtd-utils/ubi-utils/inc/libubi.h	/^	int version;$/;"	m	struct:ubi_info
version	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int version;$/;"	m	struct:ubi_info
version	mtd-utils/ubi-utils/src/ubigen.c	/^	uint8_t version;$/;"	m	struct:myargs	file:
version	ubi/ubi-media.h	/^	__u8    version;$/;"	m	struct:ubi_ec_hdr
version	ubi/ubi-media.h	/^	__u8    version;$/;"	m	struct:ubi_vid_hdr
version_id	onenand/onenand_sim.c	/^static int version_id	= CONFIG_ONENAND_SIM_VERSION_ID;$/;"	v	file:
vfree	mtd-utils/compr.h	41;"	d
vid	mtd-utils/ubi-utils/src/unubi_analyze.h	/^	struct ubi_vid_hdr vid;$/;"	m	struct:eb_info	typeref:struct:eb_info::ubi_vid_hdr
vid_crc_ok	mtd-utils/ubi-utils/src/unubi_analyze.h	/^	int vid_crc_ok;$/;"	m	struct:eb_info
vid_hdr_aloffset	ubi/ubi.h	/^	int vid_hdr_aloffset;$/;"	m	struct:ubi_device
vid_hdr_alsize	ubi/ubi.h	/^	int vid_hdr_alsize;$/;"	m	struct:ubi_device
vid_hdr_offs	mtd-utils/ubi-utils/new-utils/include/libscan.h	/^	int vid_hdr_offs;$/;"	m	struct:ubi_scan_info
vid_hdr_offs	mtd-utils/ubi-utils/new-utils/include/libubigen.h	/^	int vid_hdr_offs;$/;"	m	struct:ubigen_info
vid_hdr_offs	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	/^	int vid_hdr_offs;$/;"	m	struct:args	file:
vid_hdr_offs	mtd-utils/ubi-utils/new-utils/src/ubinize.c	/^	int vid_hdr_offs;$/;"	m	struct:args	file:
vid_hdr_offs	ubi/build.c	/^	int vid_hdr_offs;$/;"	m	struct:mtd_dev_param	file:
vid_hdr_offset	mtd-utils/include/mtd/ubi-header.h	/^	uint32_t vid_hdr_offset;$/;"	m	struct:ubi_ec_hdr
vid_hdr_offset	mtd-utils/include/mtd/ubi-user.h	/^	int32_t vid_hdr_offset;$/;"	m	struct:ubi_attach_req
vid_hdr_offset	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int vid_hdr_offset;$/;"	m	struct:ubi_attach_request
vid_hdr_offset	mtd-utils/ubi-utils/src/reader.h	/^	uint32_t vid_hdr_offset;$/;"	m	struct:pdd_data
vid_hdr_offset	mtd-utils/ubi-utils/src/unubi.c	/^	size_t vid_hdr_offset;$/;"	m	struct:args	file:
vid_hdr_offset	ubi/ubi-media.h	/^	__be32  vid_hdr_offset;$/;"	m	struct:ubi_ec_hdr
vid_hdr_offset	ubi/ubi.h	/^	int vid_hdr_offset;$/;"	m	struct:ubi_device
vid_hdr_shift	ubi/ubi.h	/^	int vid_hdr_shift;$/;"	m	struct:ubi_device
vidh	ubi/scan.c	/^static struct ubi_vid_hdr *vidh;$/;"	v	typeref:struct:ubi_vid_hdr	file:
vidoffs	mtd-utils/ubi-utils/new-utils/src/ubiattach.c	/^	int vidoffs;$/;"	m	struct:args	file:
virt	maps/amd76xrom.c	/^	void __iomem *virt;$/;"	m	struct:amd76xrom_window	file:
virt	maps/ck804xrom.c	/^	void __iomem *virt;$/;"	m	struct:ck804xrom_window	file:
virt	maps/esb2rom.c	/^	void __iomem* virt;$/;"	m	struct:esb2rom_window	file:
virt	maps/ichxrom.c	/^	void __iomem* virt;$/;"	m	struct:ichxrom_window	file:
virt_block	mtdblock-jz.c	/^	int virt_block;$/;"	m	struct:mtdblk_dev	file:
virtadr	nand/diskonchip.c	/^	void __iomem *virtadr;$/;"	m	struct:doc_priv	file:
virtualUnitNo	mtd-utils/include/mtd/inftl-user.h	/^	uint16_t virtualUnitNo;$/;"	m	struct:inftl_unithead1
virtualUnitNo	mtd-utils/include/mtd/inftl-user.h	/^	uint16_t virtualUnitNo;$/;"	m	struct:inftl_unithead2
virtualUnits	mtd-utils/include/mtd/inftl-user.h	/^	__u32 virtualUnits;$/;"	m	struct:INFTLPartition
vmalloc	mtd-utils/compr.h	40;"	d
vmax301_copy_from	maps/vmax301.c	/^static void vmax301_copy_from(struct map_info *map, void *to, unsigned long from, ssize_t len)$/;"	f	file:
vmax301_copy_to	maps/vmax301.c	/^static void vmax301_copy_to(struct map_info *map, unsigned long to, const void *from, ssize_t len)$/;"	f	file:
vmax301_page	maps/vmax301.c	/^static inline void vmax301_page(struct map_info *map,$/;"	f	file:
vmax301_read8	maps/vmax301.c	/^static map_word vmax301_read8(struct map_info *map, unsigned long ofs)$/;"	f	file:
vmax301_write8	maps/vmax301.c	/^static void vmax301_write8(struct map_info *map, map_word d, unsigned long adr)$/;"	f	file:
vmax_map	maps/vmax301.c	/^static struct map_info vmax_map[2] = {$/;"	v	typeref:struct:map_info	file:
vmax_mtd	maps/vmax301.c	/^static struct mtd_info *vmax_mtd[2] = {NULL, NULL};$/;"	v	typeref:struct:mtd_info	file:
vmlinux_bin	mtd-utils/ubi-utils/scripts/Makefile	/^vmlinux_bin	?= test_vmlinux.bin$/;"	m
vol	mtd-utils/ubi-utils/src/ubimirror.c	/^	const char* vol[VOL_ARGS_MAX];	\/* comma separated list of src\/dst$/;"	m	struct:myargs	file:
vol	ubi/ubi.h	/^	struct ubi_volume *vol;$/;"	m	struct:ubi_volume_desc	typeref:struct:ubi_volume_desc::ubi_volume
vol_alignment	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	/^	char *vol_alignment;$/;"	m	struct:libubi
vol_alignment	mtd-utils/ubi-utils/src/libubi_int.h	/^	char *vol_alignment;$/;"	m	struct:libubi
vol_attribute_show	ubi/vmt.c	/^static ssize_t vol_attribute_show(struct device *dev,$/;"	f	file:
vol_cdev_direct_write	ubi/cdev.c	/^static ssize_t vol_cdev_direct_write(struct file *file, const char __user *buf,$/;"	f	file:
vol_cdev_direct_write	ubi/cdev.c	375;"	d	file:
vol_cdev_ioctl	ubi/cdev.c	/^static int vol_cdev_ioctl(struct inode *inode, struct file *file,$/;"	f	file:
vol_cdev_llseek	ubi/cdev.c	/^static loff_t vol_cdev_llseek(struct file *file, loff_t offset, int origin)$/;"	f	file:
vol_cdev_open	ubi/cdev.c	/^static int vol_cdev_open(struct inode *inode, struct file *file)$/;"	f	file:
vol_cdev_read	ubi/cdev.c	/^static ssize_t vol_cdev_read(struct file *file, __user char *buf, size_t count,$/;"	f	file:
vol_cdev_release	ubi/cdev.c	/^static int vol_cdev_release(struct inode *inode, struct file *file)$/;"	f	file:
vol_cdev_write	ubi/cdev.c	/^static ssize_t vol_cdev_write(struct file *file, const char __user *buf,$/;"	f	file:
vol_corrupted	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	/^	char *vol_corrupted;$/;"	m	struct:libubi
vol_corrupted	mtd-utils/ubi-utils/src/libubi_int.h	/^	char *vol_corrupted;$/;"	m	struct:libubi
vol_count	mtd-utils/ubi-utils/inc/libubi.h	/^	int vol_count;$/;"	m	struct:ubi_dev_info
vol_count	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int vol_count;$/;"	m	struct:ubi_dev_info
vol_count	ubi/ubi.h	/^	int vol_count;$/;"	m	struct:ubi_device
vol_data_bytes	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	/^	char *vol_data_bytes;$/;"	m	struct:libubi
vol_data_bytes	mtd-utils/ubi-utils/src/libubi_int.h	/^	char *vol_data_bytes;$/;"	m	struct:libubi
vol_dev	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	/^	char *vol_dev;$/;"	m	struct:libubi
vol_dev	mtd-utils/ubi-utils/src/libubi_int.h	/^	char *vol_dev;$/;"	m	struct:libubi
vol_eb_size	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	/^	char *vol_eb_size;$/;"	m	struct:libubi
vol_eb_size	mtd-utils/ubi-utils/src/libubi_int.h	/^	char *vol_eb_size;$/;"	m	struct:libubi
vol_fd	mtd-utils/tests/ubi-tests/integ.c	/^	struct volume_fd *vol_fd;$/;"	m	struct:open_volume_fd	typeref:struct:open_volume_fd::volume_fd	file:
vol_get_major	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^static int vol_get_major(struct libubi *lib, int dev_num, int vol_id,$/;"	f	file:
vol_get_used_bytes	mtd-utils/ubi-utils/src/libubimirror.c	/^int vol_get_used_bytes(int vol_fd, unsigned long long *bytes)$/;"	f
vol_id	mtd-utils/include/mtd/ubi-header.h	/^	uint32_t vol_id;$/;"	m	struct:ubi_vid_hdr
vol_id	mtd-utils/include/mtd/ubi-user.h	/^	int32_t vol_id;$/;"	m	struct:ubi_mkvol_req
vol_id	mtd-utils/include/mtd/ubi-user.h	/^	int32_t vol_id;$/;"	m	struct:ubi_rsvol_req
vol_id	mtd-utils/ubi-utils/inc/libubi.h	/^	int vol_id;$/;"	m	struct:ubi_mkvol_request
vol_id	mtd-utils/ubi-utils/inc/libubi.h	/^	int vol_id;$/;"	m	struct:ubi_vol_info
vol_id	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int vol_id;$/;"	m	struct:ubi_mkvol_request
vol_id	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int vol_id;$/;"	m	struct:ubi_vol_info
vol_id	mtd-utils/ubi-utils/new-utils/src/ubimkvol.c	/^	int vol_id;$/;"	m	struct:args	file:
vol_id	mtd-utils/ubi-utils/new-utils/src/ubinfo.c	/^	int vol_id;$/;"	m	struct:args	file:
vol_id	mtd-utils/ubi-utils/new-utils/src/ubirmvol.c	/^	int vol_id;$/;"	m	struct:args	file:
vol_id	ubi/scan.h	/^	int vol_id;$/;"	m	struct:ubi_scan_volume
vol_id	ubi/ubi-media.h	/^	__be32  vol_id;$/;"	m	struct:ubi_vid_hdr
vol_id	ubi/ubi.h	/^	int vol_id;$/;"	m	struct:ubi_ltree_entry
vol_id	ubi/ubi.h	/^	int vol_id;$/;"	m	struct:ubi_volume
vol_id2idx	ubi/ubi.h	/^static inline int vol_id2idx(const struct ubi_device *ubi, int vol_id)$/;"	f
vol_max_count	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	/^	char *vol_max_count;$/;"	m	struct:libubi
vol_max_count	mtd-utils/ubi-utils/src/libubi_int.h	/^	char *vol_max_count;$/;"	m	struct:libubi
vol_name	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	/^	char *vol_name;$/;"	m	struct:libubi
vol_name	mtd-utils/ubi-utils/src/libubi_int.h	/^	char *vol_name;$/;"	m	struct:libubi
vol_no	mtd-utils/ubi-utils/src/ubimirror.c	/^	int vol_no;			\/* index of current volume *\/$/;"	m	struct:myargs	file:
vol_node2nums	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^static int vol_node2nums(struct libubi *lib, const char *node, int *dev_num,$/;"	f	file:
vol_notifier	ubi/ubi.h	/^struct vol_notifier {$/;"	s
vol_read_data	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^static int vol_read_data(const char *patt, int dev_num, int vol_id, void *buf,$/;"	f	file:
vol_read_data	mtd-utils/ubi-utils/src/libubi.c	/^static int vol_read_data(const char *patt, int dev_num, int vol_id, void *buf,$/;"	f	file:
vol_read_int	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^static int vol_read_int(const char *patt, int dev_num, int vol_id, int *value)$/;"	f	file:
vol_read_int	mtd-utils/ubi-utils/src/libubi.c	/^static int vol_read_int(const char *patt, int dev_num, int vol_id, int *value)$/;"	f	file:
vol_read_ll	mtd-utils/ubi-utils/new-utils/src/libubi.c	/^static int vol_read_ll(const char *patt, int dev_num, int vol_id,$/;"	f	file:
vol_read_ll	mtd-utils/ubi-utils/src/libubi.c	/^static int vol_read_ll(const char *patt, int dev_num, int vol_id,$/;"	f	file:
vol_release	ubi/vmt.c	/^static void vol_release(struct device *dev)$/;"	f	file:
vol_rsvd_ebs	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	/^	char *vol_rsvd_ebs;$/;"	m	struct:libubi
vol_rsvd_ebs	mtd-utils/ubi-utils/src/libubi_int.h	/^	char *vol_rsvd_ebs;$/;"	m	struct:libubi
vol_split	mtd-utils/ubi-utils/src/unubi.c	/^	int vol_split;$/;"	m	struct:args	file:
vol_table	ubi/build.c	/^EXPORT_SYMBOL_GPL(vol_table);$/;"	v
vol_table	ubi/build.c	/^struct ubi_volume *vol_table[UBI_MAX_VOLUMES];$/;"	v	typeref:struct:ubi_volume
vol_table_mutex	ubi/build.c	/^DEFINE_MUTEX(vol_table_mutex);$/;"	v
vol_table_mutex	ubi/build.c	/^EXPORT_SYMBOL_GPL(vol_table_mutex);$/;"	v
vol_type	mtd-utils/include/mtd/ubi-header.h	/^	uint8_t  vol_type;$/;"	m	struct:ubi_vid_hdr
vol_type	mtd-utils/include/mtd/ubi-header.h	/^	uint8_t  vol_type;$/;"	m	struct:ubi_vtbl_record
vol_type	mtd-utils/include/mtd/ubi-user.h	/^	int8_t vol_type;$/;"	m	struct:ubi_mkvol_req
vol_type	mtd-utils/ubi-utils/inc/libubi.h	/^	int vol_type;$/;"	m	struct:ubi_mkvol_request
vol_type	mtd-utils/ubi-utils/new-utils/include/libubi.h	/^	int vol_type;$/;"	m	struct:ubi_mkvol_request
vol_type	mtd-utils/ubi-utils/new-utils/src/libubi_int.h	/^	char *vol_type;$/;"	m	struct:libubi
vol_type	mtd-utils/ubi-utils/new-utils/src/ubimkvol.c	/^	int vol_type;$/;"	m	struct:args	file:
vol_type	mtd-utils/ubi-utils/src/libubi_int.h	/^	char *vol_type;$/;"	m	struct:libubi
vol_type	ubi/scan.h	/^	int vol_type;$/;"	m	struct:ubi_scan_volume
vol_type	ubi/ubi-media.h	/^	__u8    vol_type;$/;"	m	struct:ubi_vid_hdr
vol_type	ubi/ubi-media.h	/^	__u8    vol_type;$/;"	m	struct:ubi_vtbl_record
vol_type	ubi/ubi.h	/^	int vol_type;$/;"	m	struct:ubi_volume
vols	mtd-utils/ubi-utils/src/unubi.c	/^	uint32_t *vols;$/;"	m	struct:args	file:
vols_found	ubi/scan.h	/^	int vols_found;$/;"	m	struct:ubi_scan_info
volume	mtd-utils/tests/ubi-tests/integ.c	/^	struct volume_info *volume;$/;"	m	struct:erase_block_info	typeref:struct:erase_block_info::volume_info	file:
volume	mtd-utils/tests/ubi-tests/integ.c	/^	struct volume_info *volume;$/;"	m	struct:volume_fd	typeref:struct:volume_fd::volume_info	file:
volume_fd	mtd-utils/tests/ubi-tests/integ.c	/^struct volume_fd$/;"	s	file:
volume_info	mtd-utils/tests/ubi-tests/integ.c	/^struct volume_info$/;"	s	file:
volume_sysfs_close	ubi/vmt.c	/^static void volume_sysfs_close(struct ubi_volume *vol)$/;"	f	file:
volume_sysfs_init	ubi/vmt.c	/^static int volume_sysfs_init(struct ubi_device *ubi, struct ubi_volume *vol)$/;"	f	file:
volumes	mtd-utils/tests/ubi-tests/integ.c	/^	struct volume_info *volumes;$/;"	m	struct:ubi_device_info	typeref:struct:ubi_device_info::volume_info	file:
volumes	ubi/scan.h	/^	struct rb_root volumes;$/;"	m	struct:ubi_scan_info	typeref:struct:ubi_scan_info::rb_root
volumes	ubi/ubi.h	/^	struct ubi_volume *volumes[UBI_MAX_VOLUMES+UBI_INT_VOL_COUNT];$/;"	m	struct:ubi_device	typeref:struct:ubi_device::ubi_volume
volumes_lock	ubi/ubi.h	/^	spinlock_t volumes_lock;$/;"	m	struct:ubi_device
volumes_mutex	ubi/ubi.h	/^	struct mutex volumes_mutex;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::mutex
vperror_msg	mtd-utils/mkfs.jffs2.c	/^static void vperror_msg(const char *s, va_list p)$/;"	f	file:
vperror_msg	mtd-utils/sumtool.c	/^static void vperror_msg(const char *s, va_list p)$/;"	f	file:
vpp	maps/pcmciamtd.c	/^	int		vpp;$/;"	m	struct:pcmciamtd_dev	file:
vpp	maps/pcmciamtd.c	/^static int vpp;$/;"	v	file:
vpp_counter	maps/dilnetpc.c	/^static int        vpp_counter = 0;$/;"	v	file:
vr_nor_destroy_maps	maps/intel_vr_nor.c	/^static void __devexit vr_nor_destroy_maps(struct vr_nor_mtd *p)$/;"	f	file:
vr_nor_destroy_mtd_setup	maps/intel_vr_nor.c	/^static void __devexit vr_nor_destroy_mtd_setup(struct vr_nor_mtd *p)$/;"	f	file:
vr_nor_destroy_partitions	maps/intel_vr_nor.c	/^static void __devexit vr_nor_destroy_partitions(struct vr_nor_mtd *p)$/;"	f	file:
vr_nor_init_maps	maps/intel_vr_nor.c	/^static int __devinit vr_nor_init_maps(struct vr_nor_mtd *p)$/;"	f	file:
vr_nor_init_partitions	maps/intel_vr_nor.c	/^static int __devinit vr_nor_init_partitions(struct vr_nor_mtd *p)$/;"	f	file:
vr_nor_mtd	maps/intel_vr_nor.c	/^struct vr_nor_mtd {$/;"	s	file:
vr_nor_mtd_exit	maps/intel_vr_nor.c	/^module_exit(vr_nor_mtd_exit);$/;"	v
vr_nor_mtd_exit	maps/intel_vr_nor.c	/^static void __exit vr_nor_mtd_exit(void)$/;"	f	file:
vr_nor_mtd_init	maps/intel_vr_nor.c	/^module_init(vr_nor_mtd_init);$/;"	v
vr_nor_mtd_init	maps/intel_vr_nor.c	/^static int __init vr_nor_mtd_init(void)$/;"	f	file:
vr_nor_mtd_setup	maps/intel_vr_nor.c	/^static int __devinit vr_nor_mtd_setup(struct vr_nor_mtd *p)$/;"	f	file:
vr_nor_pci_driver	maps/intel_vr_nor.c	/^static struct pci_driver vr_nor_pci_driver = {$/;"	v	typeref:struct:pci_driver	file:
vr_nor_pci_ids	maps/intel_vr_nor.c	/^static struct pci_device_id vr_nor_pci_ids[] = {$/;"	v	typeref:struct:pci_device_id	file:
vr_nor_pci_probe	maps/intel_vr_nor.c	/^vr_nor_pci_probe(struct pci_dev *dev, const struct pci_device_id *id)$/;"	f	file:
vr_nor_pci_remove	maps/intel_vr_nor.c	/^static void __devexit vr_nor_pci_remove(struct pci_dev *dev)$/;"	f	file:
vtbl	ubi/ubi.h	/^	struct ubi_vtbl_record *vtbl;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::ubi_vtbl_record
vtbl_check	ubi/vtbl.c	/^static int vtbl_check(const struct ubi_device *ubi,$/;"	f	file:
vtbl_size	mtd-utils/ubi-utils/new-utils/include/libubigen.h	/^	int vtbl_size;$/;"	m	struct:ubigen_info
vtbl_size	ubi/ubi.h	/^	int vtbl_size;$/;"	m	struct:ubi_device
vtbl_slots	ubi/ubi.h	/^	int vtbl_slots;$/;"	m	struct:ubi_device
wait_till_ready	devices/m25p80.c	/^static int wait_till_ready(struct m25p *flash)$/;"	f	file:
walnut_map	maps/walnut.c	/^static struct map_info walnut_map = {$/;"	v	typeref:struct:map_info	file:
walnut_partitions	maps/walnut.c	/^static struct mtd_partition walnut_partitions[] = {$/;"	v	typeref:struct:mtd_partition	file:
want_exit	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	/^static int want_exit(void)$/;"	f	file:
warn	maps/pcmciamtd.c	47;"	d	file:
warnmsg	mtd-utils/ubi-utils/new-utils/src/common.h	67;"	d
wbuf	mtd-utils/recv_image.c	/^	unsigned char wbuf[WBUF_SIZE];$/;"	m	struct:eraseblock	file:
wbuf_ofs	mtd-utils/recv_image.c	/^	int wbuf_ofs;$/;"	m	struct:eraseblock	file:
weak_block	nand/nandsim.c	/^struct weak_block {$/;"	s	file:
weak_page	nand/nandsim.c	/^struct weak_page {$/;"	s	file:
weakblocks	nand/nandsim.c	/^static char *weakblocks = NULL;$/;"	v	file:
weakpages	nand/nandsim.c	/^static char *weakpages = NULL;$/;"	v	file:
wear_eb_count	nand/nandsim.c	/^static unsigned int wear_eb_count = 0;$/;"	v	file:
wear_leveling_worker	ubi/wl.c	/^static int wear_leveling_worker(struct ubi_device *ubi, struct ubi_work *wrk,$/;"	f	file:
width	maps/ceiva.c	/^	int width;$/;"	m	struct:clps_info	file:
width	maps/scx200_docflash.c	/^static unsigned width = 8;	\/* Default to 8 bits wide *\/$/;"	v	file:
win_base	maps/pcmciamtd.c	/^	caddr_t		win_base;	\/* ioremapped address of PCMCIA window *\/$/;"	m	struct:pcmciamtd_dev	file:
win_size	maps/pcmciamtd.c	/^	unsigned int	win_size;	\/* size of window *\/$/;"	m	struct:pcmciamtd_dev	file:
win_size_bits	maps/amd76xrom.c	/^static uint win_size_bits;$/;"	v	file:
win_size_bits	maps/ck804xrom.c	/^static uint win_size_bits = 0;$/;"	v	file:
window_addr_physical	maps/fortunet.c	/^	int			window_addr_physical;$/;"	m	struct:map_region	file:
wl_lock	ubi/ubi.h	/^	spinlock_t wl_lock;$/;"	m	struct:ubi_device
wl_scheduled	ubi/ubi.h	/^	int wl_scheduled;$/;"	m	struct:ubi_device
wl_tree_add	ubi/wl.c	/^static void wl_tree_add(struct ubi_wl_entry *e, struct rb_root *root)$/;"	f	file:
word	nand/nandsim.c	/^	uint16_t *word;  \/* for 16-bit word access *\/$/;"	m	union:ns_mem	file:
word_sum	afs.c	/^static u32 word_sum(void *words, int num)$/;"	f	file:
work	mtdoops.c	/^	struct work_struct work;$/;"	m	struct:mtdoops_context	typeref:struct:mtdoops_context::work_struct	file:
work_sem	ubi/ubi.h	/^	struct rw_semaphore work_sem;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::rw_semaphore
works	ubi/ubi.h	/^	struct list_head works;$/;"	m	struct:ubi_device	typeref:struct:ubi_device::list_head
works_count	ubi/ubi.h	/^	int works_count;$/;"	m	struct:ubi_device
wp	nand/nandsim.c	/^                int wp;  \/* write Protect *\/$/;"	m	struct:nandsim::ns_lines_status	file:
write32	devices/lart.c	/^static void write32 (__u32 x,__u32 offset)$/;"	f	file:
write_bbt	nand/nand_bbt.c	/^static int write_bbt(struct mtd_info *mtd, uint8_t *buf,$/;"	f	file:
write_bootenv	mtd-utils/ubi-utils/src/pddcustomize.c	/^write_bootenv(const char* file, bootenv_t env)$/;"	f	file:
write_bootenv_volume	mtd-utils/ubi-utils/src/libpfiflash.c	/^write_bootenv_volume(int devno, uint32_t id, bootenv_t bootenv_old,$/;"	f	file:
write_buff_to_file	mtd-utils/sumtool.c	/^void write_buff_to_file()$/;"	f
write_buffer	mtd-utils/tests/fs-tests/lib/tests.c	/^static char write_buffer[WRITE_BUFFER_SIZE];$/;"	v	file:
write_buffer	mtd-utils/tests/fs-tests/stress/atoms/rndrm99.c	/^static char write_buffer[WRITE_BUFFER_SIZE];$/;"	v	file:
write_buffer	mtd-utils/tests/ubi-tests/integ.c	/^static unsigned char *write_buffer = NULL;$/;"	v	file:
write_cache	ubi/ubiblk.h	/^	unsigned char *write_cache;$/;"	m	struct:ubiblk_dev
write_cache_state	ubi/ubiblk.h	/^	enum { STATE_UNUSED, STATE_USED } read_cache_state, write_cache_state;$/;"	m	struct:ubiblk_dev	typeref:enum:ubiblk_dev::__anon26
write_cached_data	mtdblock.c	/^static int write_cached_data (struct mtdblk_dev *mtdblk)$/;"	f	file:
write_dirent	mtd-utils/mkfs.jffs2.c	/^static void write_dirent(struct filesystem_entry *e)$/;"	f	file:
write_dirent_to_buff	mtd-utils/sumtool.c	/^void write_dirent_to_buff(union jffs2_node_union *node)$/;"	f
write_dword	devices/lart.c	/^static inline int write_dword (__u32 offset,__u32 x)$/;"	f	file:
write_ec_hdr	mtd-utils/ubi-utils/src/libubigen.c	/^write_ec_hdr(ubi_info_t u)$/;"	f	file:
write_enable	devices/m25p80.c	/^static inline int write_enable(struct m25p *flash)$/;"	f	file:
write_error	mtd-utils/ubi-utils/src/libubimirror.c	/^	write_error = -3,$/;"	e	enum:__anon7	file:
write_error	nand/nandsim.c	/^static int write_error(unsigned int page_no)$/;"	f	file:
write_info	mtd-utils/tests/fs-tests/integrity/integck.c	/^struct write_info \/* Record of random data written into a file *\/$/;"	s	file:
write_info	mtd-utils/tests/ubi-tests/integ.c	/^struct write_info$/;"	s	file:
write_inode_to_buff	mtd-utils/sumtool.c	/^void write_inode_to_buff(union jffs2_node_union *node)$/;"	f
write_leb	ubi/upd.c	/^static int write_leb(struct ubi_device *ubi, struct ubi_volume *vol, int lnum,$/;"	f	file:
write_mutex	devices/block2mtd.c	/^	struct mutex write_mutex;$/;"	m	struct:block2mtd_dev	typeref:struct:block2mtd_dev::mutex	file:
write_normal_volume	mtd-utils/ubi-utils/src/libpfiflash.c	/^write_normal_volume(int devno, uint32_t id, size_t update_size, FILE* fp_in,$/;"	f	file:
write_out	nand/alauda.c	/^	unsigned int		write_out;$/;"	m	struct:alauda	file:
write_pipe	mtd-utils/mkfs.jffs2.c	/^static void write_pipe(struct filesystem_entry *e)$/;"	f	file:
write_regular_file	mtd-utils/mkfs.jffs2.c	/^static unsigned int write_regular_file(struct filesystem_entry *e)$/;"	f	file:
write_remaining_raw_ebs	mtd-utils/ubi-utils/src/pfi2bin.c	/^write_remaining_raw_ebs(pdd_data_t pdd, list_t raw_blocks, size_t *ebs_written,$/;"	f	file:
write_special_file	mtd-utils/mkfs.jffs2.c	/^static void write_special_file(struct filesystem_entry *e)$/;"	f	file:
write_symlink	mtd-utils/mkfs.jffs2.c	/^static void write_symlink(struct filesystem_entry *e)$/;"	f	file:
write_target	mtd-utils/ubi-utils/perl/mkpfi	/^sub write_target($$) {$/;"	s
write_to_erase_block	mtd-utils/tests/ubi-tests/integ.c	/^static int write_to_erase_block(struct erase_block_info *erase_block, int fd)$/;"	f	file:
write_to_output_stream	mtd-utils/ubi-utils/src/libubigen.c	/^write_to_output_stream(ubi_info_t u)$/;"	f	file:
write_ubi_volume_table	mtd-utils/ubi-utils/src/pfi2bin.c	/^write_ubi_volume_table(pdd_data_t pdd, list_t raw_pebs,$/;"	f	file:
write_val16	mtd-utils/jffs-dump.c	/^static void write_val16(uint16_t *adr, uint16_t val)$/;"	f	file:
write_val32	mtd-utils/jffs-dump.c	/^static void write_val32(uint32_t *adr, uint32_t val)$/;"	f	file:
write_vid_hdr	mtd-utils/ubi-utils/src/libubigen.c	/^write_vid_hdr(ubi_info_t u, ubigen_action_t action)$/;"	f	file:
write_xattr_entry	mtd-utils/mkfs.jffs2.c	/^static void write_xattr_entry(struct filesystem_entry *e)$/;"	f	file:
write_xattr_entry	mtd-utils/mkfs.jffs2.c	1300;"	d	file:
write_xattr_to_buff	mtd-utils/sumtool.c	/^void write_xattr_to_buff(union jffs2_node_union *node)$/;"	f
write_xref_to_buff	mtd-utils/sumtool.c	/^void write_xref_to_buff(union jffs2_node_union *node)$/;"	f
writebuf	mtd-utils/nandwrite.c	/^unsigned char writebuf[MAX_PAGE_SIZE];$/;"	v
writebuf	mtd-utils/nandwrite_mlc.c	/^unsigned char writebuf[MAX_PAGE_SIZE];$/;"	v
writebuf	mtd-utils/nftl_format.c	/^unsigned char *writebuf[4];$/;"	v
writecount	mtdoops.c	/^	int writecount;$/;"	m	struct:mtdoops_context	file:
writeoob	mtd-utils/nandwrite.c	/^int	writeoob = 0;$/;"	v
writeoob	mtd-utils/nandwrite_mlc.c	/^int	writeoob = 0;$/;"	v
writers	ubi/ubi.h	/^	int writers;$/;"	m	struct:ubi_volume
writes	mtd-utils/tests/fs-tests/integrity/integck.c	/^	struct write_info *writes; \/* Record accumulated writes to the file *\/$/;"	m	struct:file_info	typeref:struct:file_info::write_info	file:
writes	mtd-utils/tests/ubi-tests/integ.c	/^	struct write_info *writes;$/;"	m	struct:erase_block_info	typeref:struct:erase_block_info::write_info	file:
writes_done	nand/nandsim.c	/^	unsigned int writes_done;$/;"	m	struct:weak_page	file:
writesect	ubi/ubiblk.h	/^	int (*writesect)(struct ubi_blktrans_dev *dev,$/;"	m	struct:ubi_blktrans_ops
writesize	mtd-utils/include/mtd/mtd-abi.h	/^	uint32_t writesize;$/;"	m	struct:mtd_info_user
writevol_test	mtd-utils/ubi-utils/scripts/ubi_jffs2_test.sh	/^writevol_test ()$/;"	f
writevol_test	mtd-utils/ubi-utils/scripts/ubi_test.sh	/^writevol_test ()$/;"	f
x	mtd-utils/include/linux/jffs2.h	/^	struct jffs2_raw_xattr x;$/;"	m	union:jffs2_node_union	typeref:struct:jffs2_node_union::jffs2_raw_xattr
x	mtd-utils/summary.h	/^	struct jffs2_sum_xattr_flash x;$/;"	m	union:jffs2_sum_flash	typeref:struct:jffs2_sum_flash::jffs2_sum_xattr_flash
x	mtd-utils/summary.h	/^	struct jffs2_sum_xattr_mem x;$/;"	m	union:jffs2_sum_mem	typeref:struct:jffs2_sum_mem::jffs2_sum_xattr_mem
x86	mtd-utils/ubi-utils/src/pddcustomize.c	/^	int x86;		\/* X86 host, use files for testing *\/$/;"	m	struct:myargs	file:
xattr_entry	mtd-utils/mkfs.jffs2.c	/^typedef struct xattr_entry {$/;"	s	file:
xattr_entry_t	mtd-utils/mkfs.jffs2.c	/^} xattr_entry_t;$/;"	t	typeref:struct:xattr_entry	file:
xcalloc	mtd-utils/mkfs.jffs2.c	/^extern void *xcalloc(size_t nmemb, size_t size)$/;"	f
xfer_info_t	ftl.c	/^    struct xfer_info_t {$/;"	s	struct:partition_t	file:
xfopen	mtd-utils/mkfs.jffs2.c	/^static FILE *xfopen(const char *path, const char *mode)$/;"	f	file:
xid	mtd-utils/include/linux/jffs2.h	/^	jint32_t xid;		\/* XATTR identifier number *\/$/;"	m	struct:jffs2_raw_xattr
xid	mtd-utils/include/linux/jffs2.h	/^	jint32_t xid;		\/* XATTR identifier number *\/$/;"	m	struct:jffs2_raw_xref
xid	mtd-utils/mkfs.jffs2.c	/^	uint32_t xid;$/;"	m	struct:xattr_entry	file:
xid	mtd-utils/summary.h	/^	jint32_t xid;		\/* xattr identifier *\/$/;"	m	struct:jffs2_sum_xattr_flash
xid	mtd-utils/summary.h	/^	jint32_t xid;$/;"	m	struct:jffs2_sum_xattr_mem
xip_allowed	chips/cfi_probe.c	39;"	d	file:
xip_allowed	chips/cfi_probe.c	64;"	d	file:
xip_disable	chips/cfi_cmdset_0001.c	/^static void xip_disable(struct map_info *map, struct flchip *chip,$/;"	f	file:
xip_disable	chips/cfi_cmdset_0001.c	1071;"	d	file:
xip_disable	chips/cfi_cmdset_0002.c	/^static void xip_disable(struct map_info *map, struct flchip *chip,$/;"	f	file:
xip_disable	chips/cfi_cmdset_0002.c	796;"	d	file:
xip_disable	chips/cfi_probe.c	37;"	d	file:
xip_disable	chips/cfi_probe.c	63;"	d	file:
xip_disable_qry	chips/cfi_probe.c	53;"	d	file:
xip_disable_qry	chips/cfi_probe.c	66;"	d	file:
xip_enable	chips/cfi_cmdset_0001.c	/^static void __xipram xip_enable(struct map_info *map, struct flchip *chip,$/;"	f	file:
xip_enable	chips/cfi_cmdset_0001.c	1072;"	d	file:
xip_enable	chips/cfi_cmdset_0002.c	/^static void __xipram xip_enable(struct map_info *map, struct flchip *chip,$/;"	f	file:
xip_enable	chips/cfi_cmdset_0002.c	797;"	d	file:
xip_enable	chips/cfi_probe.c	46;"	d	file:
xip_enable	chips/cfi_probe.c	65;"	d	file:
xip_udelay	chips/cfi_cmdset_0002.c	/^static void __xipram xip_udelay(struct map_info *map, struct flchip *chip,$/;"	f	file:
xip_wait_for_operation	chips/cfi_cmdset_0001.c	/^static int __xipram xip_wait_for_operation($/;"	f	file:
xmalloc	mtd-utils/mkfs.jffs2.c	/^extern void *xmalloc(size_t size)$/;"	f
xname	mtd-utils/mkfs.jffs2.c	/^	char *xname;$/;"	m	struct:xattr_entry	file:
xprefix	mtd-utils/include/linux/jffs2.h	/^	uint8_t xprefix;$/;"	m	struct:jffs2_raw_xattr
xprefix	mtd-utils/mkfs.jffs2.c	/^	int xprefix;$/;"	m	struct:__anon17	file:
xprefix	mtd-utils/mkfs.jffs2.c	/^	int xprefix;$/;"	m	struct:xattr_entry	file:
xprefix_tbl	mtd-utils/mkfs.jffs2.c	/^} xprefix_tbl[] = {$/;"	v	typeref:struct:__anon17	file:
xreadlink	mtd-utils/mkfs.jffs2.c	/^extern char *xreadlink(const char *path)$/;"	f
xrealloc	mtd-utils/mkfs.jffs2.c	/^extern void *xrealloc(void *ptr, size_t size)$/;"	f
xseqno	mtd-utils/include/linux/jffs2.h	/^	jint32_t xseqno;	\/* xref sequencial number *\/$/;"	m	struct:jffs2_raw_xref
xstr	maps/amd76xrom.c	23;"	d	file:
xstr	maps/ichxrom.c	21;"	d	file:
xstrdup	mtd-utils/mkfs.jffs2.c	/^extern char *xstrdup(const char *s)$/;"	f
xstrdup	mtd-utils/ubi-utils/new-utils/src/dictionary.c	/^static char * xstrdup(char * s)$/;"	f	file:
xvalue	mtd-utils/mkfs.jffs2.c	/^	char *xvalue;$/;"	m	struct:xattr_entry	file:
yaffs_oobinfo	mtd-utils/nandwrite.c	/^struct nand_oobinfo yaffs_oobinfo = {$/;"	v	typeref:struct:nand_oobinfo
yaffs_oobinfo	mtd-utils/nandwrite_mlc.c	/^struct nand_oobinfo yaffs_oobinfo = {$/;"	v	typeref:struct:nand_oobinfo
yes	mtd-utils/ubi-utils/new-utils/src/ubiformat.c	/^	unsigned int yes:1;$/;"	m	struct:args	file:
zone	mtdblock-jz.c	/^	struct mtdblk_zone_t *zone;$/;"	m	struct:mtdblk_dev	typeref:struct:mtdblk_dev::mtdblk_zone_t	file:
